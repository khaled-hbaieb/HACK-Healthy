webpackHotUpdate(6,{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/administrator/components/createAPatient/createAPatient.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/administrator/components/createAPatient/createAPatient.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.regexp.to-string */ \"./node_modules/core-js/modules/es6.regexp.to-string.js\");\n/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.function.name */ \"./node_modules/core-js/modules/es6.function.name.js\");\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _models_patient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../models/patient */ \"./src/models/patient.js\");\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: \"createDoctor\",\n  data: function data() {\n    return {\n      fullName: \"\",\n      CIN: \"\",\n      fatherName: \"\",\n      fatherNumber: \"\",\n      motherName: \"\",\n      motherNumber: \"\",\n      dateOfBirth: \"\",\n      gender: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      password: \"\",\n      cpwd: \"\",\n      job: \"\",\n      address: \"\",\n      bloodType: \"\",\n      image: \"\",\n      bloodTypes: [\"O+\", \"O-\", \"A+\", \"A-\", \"B+\", \"B-\", \"AB+\", \"AB-\"],\n      allergyInputs: [{\n        id: \"allergy\",\n        type: \"text\",\n        name: \"allergies\",\n        placeholder: \"Enter The Allergy\"\n      }],\n      vaccinationInputs: [{\n        id: \"vaccination\",\n        type: \"text\",\n        name: \"vaccinations\",\n        placeholder: \"Enter The Vaccination\"\n      }],\n      successful: false\n    };\n  },\n  computed: {\n    loggedIn: function loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  methods: {\n    successUpload: function successUpload() {\n      this.$vs.notify({\n        color: \"success\",\n        title: \"Upload Success\",\n        text: this.name + \" Uploaded The image Successfully!\"\n      });\n    },\n    addAllergyInput: function addAllergyInput() {\n      this.allergyInputs.push({\n        id: \"allergy\",\n        type: \"text\",\n        name: \"allergies\",\n        placeholder: \"Enter The Allergy\"\n      });\n    },\n    addVaccinationInput: function addVaccinationInput() {\n      this.vaccinationInputs.push({\n        id: \"vaccination\",\n        type: \"text\",\n        name: \"vaccinations\",\n        placeholder: \"Enter The Vaccination\"\n      });\n    },\n    handleRegister: function handleRegister() {\n      var _this = this;\n\n      console.log(this.image);\n      var user;\n      user = new _models_patient__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.email, this.password, this.fullName, this.gender, this.dateOfBirth, this.CIN, this.phoneNumber, this.address, this.job, this.image);\n      this.$store.dispatch(\"auth/register\", {\n        user: user,\n        role: \"patient\"\n      }).then(function () {\n        _this.successful = true; // this.$router.push(\"/administrator/patients\");\n      }, function (error) {\n        _this.message = error.response && error.response.data || error.message || error.toString();\n        _this.successful = false;\n      });\n    } // });\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/administrator/components/createAPatient/createAPatient.vue?vue&type=script&lang=js&\n");

/***/ })

})