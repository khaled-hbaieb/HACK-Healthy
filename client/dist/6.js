((typeof self !== 'undefined' ? self : this)["webpackJsonp"] = (typeof self !== 'undefined' ? self : this)["webpackJsonp"] || []).push([[6],{

/***/ "./node_modules/@twilio/webrtc/lib/getstats.js":
/*!*****************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/getstats.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar flatMap = __webpack_require__(/*! ./util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").flatMap;\nvar guessBrowser = __webpack_require__(/*! ./util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").guessBrowser;\nvar guessBrowserVersion = __webpack_require__(/*! ./util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").guessBrowserVersion;\nvar getSdpFormat = __webpack_require__(/*! ./util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\").getSdpFormat;\n\nvar guess = guessBrowser();\nvar guessVersion = guessBrowserVersion();\nvar isChrome = guess === 'chrome';\nvar isFirefox = guess === 'firefox';\nvar isSafari = guess === 'safari';\n\nvar chromeMajorVersion = isChrome ? guessVersion.major : null;\n\nvar CHROME_LEGACY_MAX_AUDIO_LEVEL = 32767;\n\n/**\n * Get the standardized {@link RTCPeerConnection} statistics.\n * @param {RTCPeerConnection} peerConnection\n * @param {object} [options] - Used for testing\n * @returns {Promise.<StandardizedStatsResponse>}\n */\nfunction getStats(peerConnection, options) {\n  if (!(peerConnection && typeof peerConnection.getStats === 'function')) {\n    return Promise.reject(new Error('Given PeerConnection does not support getStats'));\n  }\n  return _getStats(peerConnection, options);\n}\n\n/**\n * getStats() implementation.\n * @param {RTCPeerConnection} peerConnection\n * @param {object} [options] - Used for testing\n * @returns {Promise.<StandardizedStatsResponse>}\n */\nfunction _getStats(peerConnection, options) {\n  var localAudioTracks = getTracks(peerConnection, 'audio', 'local');\n  var localVideoTracks = getTracks(peerConnection, 'video', 'local');\n  var remoteAudioTracks = getTracks(peerConnection, 'audio');\n  var remoteVideoTracks = getTracks(peerConnection, 'video');\n\n  var statsResponse = {\n    activeIceCandidatePair: null,\n    localAudioTrackStats: [],\n    localVideoTrackStats: [],\n    remoteAudioTrackStats: [],\n    remoteVideoTrackStats: []\n  };\n\n  var trackStatsPromises = flatMap([\n    [localAudioTracks, 'localAudioTrackStats', false],\n    [localVideoTracks, 'localVideoTrackStats', false],\n    [remoteAudioTracks, 'remoteAudioTrackStats', true],\n    [remoteVideoTracks, 'remoteVideoTrackStats', true]\n  ], function(triple) {\n    var tracks = triple[0];\n    var statsArrayName = triple[1];\n    var isRemote = triple[2];\n    return tracks.map(function(track) {\n      return getTrackStats(peerConnection, track, Object.assign({\n        isRemote: isRemote\n      }, options)).then(function(stats) {\n        stats.trackId = track.id;\n        statsResponse[statsArrayName].push(stats);\n      });\n    });\n  });\n\n  return Promise.all(trackStatsPromises).then(function() {\n    return getActiveIceCandidatePairStats(peerConnection, options);\n  }).then(function(activeIceCandidatePairStatsReport) {\n    statsResponse.activeIceCandidatePair = activeIceCandidatePairStatsReport;\n    return statsResponse;\n  });\n}\n\n/**\n * Generate the {@link StandardizedActiveIceCandidatePairStatsReport} for the\n * {@link RTCPeerConnection}.\n * @param {RTCPeerConnection} peerConnection\n * @param {object} [options]\n * @returns {Promise<StandardizedActiveIceCandidatePairStatsReport>}\n */\nfunction getActiveIceCandidatePairStats(peerConnection, options) {\n  options = options || {};\n\n  if (typeof options.testForChrome !== 'undefined' || isChrome\n    || typeof options.testForSafari  !== 'undefined' || isSafari) {\n    return peerConnection.getStats().then(\n      standardizeChromeOrSafariActiveIceCandidatePairStats);\n  }\n  if (typeof options.testForFirefox !== 'undefined' || isFirefox) {\n    return peerConnection.getStats().then(standardizeFirefoxActiveIceCandidatePairStats);\n  }\n  return Promise.reject(new Error('RTCPeerConnection#getStats() not supported'));\n}\n\n/**\n * Standardize the active RTCIceCandidate pair's statistics in Chrome or Safari.\n * @param {RTCStatsReport} stats\n * @returns {?StandardizedActiveIceCandidatePairStatsReport}\n */\nfunction standardizeChromeOrSafariActiveIceCandidatePairStats(stats) {\n  var activeCandidatePairStats = Array.from(stats.values()).find(function(stat) {\n    return stat.type === 'candidate-pair' && stat.nominated;\n  });\n\n  if (!activeCandidatePairStats) {\n    return null;\n  }\n\n  var activeLocalCandidateStats = stats.get(activeCandidatePairStats.localCandidateId);\n  var activeRemoteCandidateStats = stats.get(activeCandidatePairStats.remoteCandidateId);\n\n  var standardizedCandidateStatsKeys = [\n    { key: 'candidateType', type: 'string' },\n    { key: 'ip', type: 'string' },\n    { key: 'port', type: 'number' },\n    { key: 'priority', type: 'number' },\n    { key: 'protocol', type: 'string' },\n    { key: 'url', type: 'string' }\n  ];\n\n  var standardizedLocalCandidateStatsKeys = standardizedCandidateStatsKeys.concat([\n    { key: 'deleted', type: 'boolean' },\n    { key: 'relayProtocol', type: 'string' }\n  ]);\n\n  var standatdizedLocalCandidateStatsReport = activeLocalCandidateStats\n    ? standardizedLocalCandidateStatsKeys.reduce(function(report, keyInfo) {\n      report[keyInfo.key] = typeof activeLocalCandidateStats[keyInfo.key] === keyInfo.type\n        ? activeLocalCandidateStats[keyInfo.key]\n        : keyInfo.key === 'deleted' ? false : null;\n      return report;\n    }, {})\n    : null;\n\n  var standardizedRemoteCandidateStatsReport = activeRemoteCandidateStats\n    ? standardizedCandidateStatsKeys.reduce(function(report, keyInfo) {\n      report[keyInfo.key] = typeof activeRemoteCandidateStats[keyInfo.key] === keyInfo.type\n        ? activeRemoteCandidateStats[keyInfo.key]\n        : null;\n      return report;\n    }, {})\n    : null;\n\n  return [\n    { key: 'availableIncomingBitrate', type: 'number' },\n    { key: 'availableOutgoingBitrate', type: 'number' },\n    { key: 'bytesReceived', type: 'number' },\n    { key: 'bytesSent', type: 'number' },\n    { key: 'consentRequestsSent', type: 'number' },\n    { key: 'currentRoundTripTime', type: 'number' },\n    { key: 'lastPacketReceivedTimestamp', type: 'number' },\n    { key: 'lastPacketSentTimestamp', type: 'number' },\n    { key: 'nominated', type: 'boolean' },\n    { key: 'priority', type: 'number' },\n    { key: 'readable', type: 'boolean' },\n    { key: 'requestsReceived', type: 'number' },\n    { key: 'requestsSent', type: 'number' },\n    { key: 'responsesReceived', type: 'number' },\n    { key: 'responsesSent', type: 'number' },\n    { key: 'retransmissionsReceived', type: 'number' },\n    { key: 'retransmissionsSent', type: 'number' },\n    { key: 'state', type: 'string', fixup: function(state) { return state === 'inprogress' ? 'in-progress' : state; } },\n    { key: 'totalRoundTripTime', type: 'number' },\n    { key: 'transportId', type: 'string' },\n    { key: 'writable', type: 'boolean' }\n  ].reduce(function(report, keyInfo) {\n    report[keyInfo.key] = typeof activeCandidatePairStats[keyInfo.key] === keyInfo.type\n      ? (keyInfo.fixup ? keyInfo.fixup(activeCandidatePairStats[keyInfo.key]) : activeCandidatePairStats[keyInfo.key])\n      : null;\n    return report;\n  }, {\n    localCandidate: standatdizedLocalCandidateStatsReport,\n    remoteCandidate: standardizedRemoteCandidateStatsReport\n  });\n}\n\n/**\n * Standardize the active RTCIceCandidate pair's statistics in Firefox.\n * @param {RTCStatsReport} stats\n * @returns {?StandardizedActiveIceCandidatePairStatsReport}\n */\nfunction standardizeFirefoxActiveIceCandidatePairStats(stats) {\n  var activeCandidatePairStats = Array.from(stats.values()).find(function(stat) {\n    return stat.type === 'candidate-pair' && stat.nominated;\n  });\n\n  if (!activeCandidatePairStats) {\n    return null;\n  }\n\n  var activeLocalCandidateStats = stats.get(activeCandidatePairStats.localCandidateId);\n  var activeRemoteCandidateStats = stats.get(activeCandidatePairStats.remoteCandidateId);\n\n  var standardizedCandidateStatsKeys = [\n    { key: 'candidateType', type: 'string' },\n    { key: 'ip', ffKeys: ['address', 'ipAddress'], type: 'string' },\n    { key: 'port', ffKeys: ['portNumber'], type: 'number' },\n    { key: 'priority', type: 'number' },\n    { key: 'protocol', ffKeys: ['transport'], type: 'string' },\n    { key: 'url', type: 'string' }\n  ];\n\n  var standardizedLocalCandidateStatsKeys = standardizedCandidateStatsKeys.concat([\n    { key: 'deleted', type: 'boolean' },\n    { key: 'relayProtocol', type: 'string' }\n  ]);\n\n  var candidateTypes = {\n    host: 'host',\n    peerreflexive: 'prflx',\n    relayed: 'relay',\n    serverreflexive: 'srflx'\n  };\n\n  var standatdizedLocalCandidateStatsReport = activeLocalCandidateStats\n    ? standardizedLocalCandidateStatsKeys.reduce(function(report, keyInfo) {\n      var key = keyInfo.ffKeys && keyInfo.ffKeys.find(function(key) {\n        return key in activeLocalCandidateStats;\n      }) || keyInfo.key;\n      report[keyInfo.key] = typeof activeLocalCandidateStats[key] === keyInfo.type\n        ? key === 'candidateType'\n          ? candidateTypes[activeLocalCandidateStats[key]] || activeLocalCandidateStats[key]\n          : activeLocalCandidateStats[key]\n        : key === 'deleted' ? false : null;\n      return report;\n    }, {})\n    : null;\n\n  var standardizedRemoteCandidateStatsReport = activeRemoteCandidateStats\n    ? standardizedCandidateStatsKeys.reduce(function(report, keyInfo) {\n      var key = keyInfo.ffKeys && keyInfo.ffKeys.find(function(key) {\n        return key in activeRemoteCandidateStats;\n      }) || keyInfo.key;\n      report[keyInfo.key] = typeof activeRemoteCandidateStats[key] === keyInfo.type\n        ? key === 'candidateType'\n          ? candidateTypes[activeRemoteCandidateStats[key]] || activeRemoteCandidateStats[key]\n          : activeRemoteCandidateStats[key]\n        : null;\n      return report;\n    }, {})\n    : null;\n\n  return [\n    { key: 'availableIncomingBitrate', type: 'number' },\n    { key: 'availableOutgoingBitrate', type: 'number' },\n    { key: 'bytesReceived', type: 'number' },\n    { key: 'bytesSent', type: 'number' },\n    { key: 'consentRequestsSent', type: 'number' },\n    { key: 'currentRoundTripTime', type: 'number' },\n    { key: 'lastPacketReceivedTimestamp', type: 'number' },\n    { key: 'lastPacketSentTimestamp', type: 'number' },\n    { key: 'nominated', type: 'boolean' },\n    { key: 'priority', type: 'number' },\n    { key: 'readable', type: 'boolean' },\n    { key: 'requestsReceived', type: 'number' },\n    { key: 'requestsSent', type: 'number' },\n    { key: 'responsesReceived', type: 'number' },\n    { key: 'responsesSent', type: 'number' },\n    { key: 'retransmissionsReceived', type: 'number' },\n    { key: 'retransmissionsSent', type: 'number' },\n    { key: 'state', type: 'string' },\n    { key: 'totalRoundTripTime', type: 'number' },\n    { key: 'transportId', type: 'string' },\n    { key: 'writable', type: 'boolean' }\n  ].reduce(function(report, keyInfo) {\n    report[keyInfo.key] = typeof activeCandidatePairStats[keyInfo.key] === keyInfo.type\n      ? activeCandidatePairStats[keyInfo.key]\n      : null;\n    return report;\n  }, {\n    localCandidate: standatdizedLocalCandidateStatsReport,\n    remoteCandidate: standardizedRemoteCandidateStatsReport\n  });\n}\n\n/**\n * Get local/remote audio/video MediaStreamTracks.\n * @param {RTCPeerConnection} peerConnection - The RTCPeerConnection\n * @param {string} kind - 'audio' or 'video'\n * @param {string} [localOrRemote] - 'local' or 'remote'\n * @returns {Array<MediaStreamTrack>}\n */\nfunction getTracks(peerConnection, kind, localOrRemote) {\n  var getSendersOrReceivers = localOrRemote === 'local' ? 'getSenders' : 'getReceivers';\n  if (peerConnection[getSendersOrReceivers]) {\n    return peerConnection[getSendersOrReceivers]().map(function(senderOrReceiver) {\n      return senderOrReceiver.track;\n    }).filter(function(track) {\n      return track && track.kind === kind;\n    });\n  }\n  var getStreams = localOrRemote === 'local' ? 'getLocalStreams' : 'getRemoteStreams';\n  return flatMap(peerConnection[getStreams](), function(stream) {\n    var getTracks = kind === 'audio' ? 'getAudioTracks' : 'getVideoTracks';\n    return stream[getTracks]();\n  });\n}\n\n/**\n * Get the standardized statistics for a particular MediaStreamTrack.\n * @param {RTCPeerConnection} peerConnection\n * @param {MediaStreamTrack} track\n * @param {object} [options] - Used for testing\n * @returns {Promise.<StandardizedTrackStatsReport>}\n */\nfunction getTrackStats(peerConnection, track, options) {\n  options = options || {};\n\n  if (typeof options.testForChrome !== 'undefined' || isChrome) {\n    return chromeOrSafariGetTrackStats(peerConnection, track);\n  }\n  if (typeof options.testForFirefox  !== 'undefined' || isFirefox) {\n    return firefoxGetTrackStats(peerConnection, track, options.isRemote);\n  }\n  if (typeof options.testForSafari  !== 'undefined' || isSafari) {\n    if (typeof options.testForSafari  !== 'undefined' || getSdpFormat() === 'unified') {\n      return chromeOrSafariGetTrackStats(peerConnection, track);\n    }\n    // NOTE(syerrapragada): getStats() is not supported on\n    // Safari versions where plan-b is the SDP format\n    // due to this bug: https://bugs.webkit.org/show_bug.cgi?id=192601\n    return Promise.reject(new Error([\n      'getStats() is not supported on this version of Safari',\n      'due to this bug: https://bugs.webkit.org/show_bug.cgi?id=192601'\n    ].join(' ')));\n  }\n  return Promise.reject(new Error('RTCPeerConnection#getStats() not supported'));\n}\n\n/**\n * Get the standardized statistics for a particular MediaStreamTrack in Chrome or Safari.\n * @param {RTCPeerConnection} peerConnection\n * @param {MediaStreamTrack} track\n * @returns {Promise.<StandardizedTrackStatsReport>}\n */\nfunction chromeOrSafariGetTrackStats(peerConnection, track) {\n  return new Promise(function(resolve, reject) {\n    if (chromeMajorVersion && chromeMajorVersion < 67) {\n      peerConnection.getStats(function(response) {\n        resolve(standardizeChromeLegacyStats(response, track));\n      }, null, reject);\n      return;\n    }\n    peerConnection.getStats(track).then(function(response) {\n      resolve(standardizeChromeOrSafariStats(response));\n    }, reject);\n  });\n}\n\n/**\n * Get the standardized statistics for a particular MediaStreamTrack in Firefox.\n * @param {RTCPeerConnection} peerConnection\n * @param {MediaStreamTrack} track\n * @param {boolean} isRemote\n * @returns {Promise.<StandardizedTrackStatsReport>}\n */\nfunction firefoxGetTrackStats(peerConnection, track, isRemote) {\n  return new Promise(function(resolve, reject) {\n    peerConnection.getStats(track).then(function(response) {\n      resolve(standardizeFirefoxStats(response, isRemote));\n    }, reject);\n  });\n}\n\n/**\n * Standardize the MediaStreamTrack's legacy statistics in Chrome.\n * @param {RTCStatsResponse} response\n * @param {MediaStreamTrack} track\n * @returns {StandardizedTrackStatsReport}\n */\nfunction standardizeChromeLegacyStats(response, track) {\n  var ssrcReport = response.result().find(function(report) {\n    return report.type === 'ssrc' && report.stat('googTrackId') === track.id;\n  });\n\n  var standardizedStats = {};\n\n  if (ssrcReport) {\n    standardizedStats.timestamp = Math.round(Number(ssrcReport.timestamp));\n    standardizedStats = ssrcReport.names().reduce(function(stats, name) {\n      switch (name) {\n        case 'googCodecName':\n          stats.codecName = ssrcReport.stat(name);\n          break;\n        case 'googRtt':\n          stats.roundTripTime = Number(ssrcReport.stat(name));\n          break;\n        case 'googJitterReceived':\n          stats.jitter = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameWidthInput':\n          stats.frameWidthInput = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameHeightInput':\n          stats.frameHeightInput = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameWidthSent':\n          stats.frameWidthSent = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameHeightSent':\n          stats.frameHeightSent = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameWidthReceived':\n          stats.frameWidthReceived = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameHeightReceived':\n          stats.frameHeightReceived = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameRateInput':\n          stats.frameRateInput = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameRateSent':\n          stats.frameRateSent = Number(ssrcReport.stat(name));\n          break;\n        case 'googFrameRateReceived':\n          stats.frameRateReceived = Number(ssrcReport.stat(name));\n          break;\n        case 'ssrc':\n          stats[name] = ssrcReport.stat(name);\n          break;\n        case 'bytesReceived':\n        case 'bytesSent':\n        case 'packetsLost':\n        case 'packetsReceived':\n        case 'packetsSent':\n        case 'audioInputLevel':\n        case 'audioOutputLevel':\n          stats[name] = Number(ssrcReport.stat(name));\n          break;\n      }\n\n      return stats;\n    }, standardizedStats);\n  }\n\n  return standardizedStats;\n}\n\n/**\n * Standardize the MediaStreamTrack's statistics in Chrome or Safari.\n * @param {RTCStatsResponse} response\n * @returns {StandardizedTrackStatsReport}\n */\nfunction standardizeChromeOrSafariStats(response) {\n  var inbound = null;\n  var outbound = null;\n  var remoteInbound = null;\n  var remoteOutbound = null;\n  var track = null;\n  var codec = null;\n\n  response.forEach(function(stat) {\n    switch (stat.type) {\n      case 'inbound-rtp':\n        inbound = stat;\n        break;\n      case 'outbound-rtp':\n        outbound = stat;\n        break;\n      case 'track':\n        track = stat;\n        break;\n      case 'codec':\n        codec = stat;\n        break;\n      case 'remote-inbound-rtp':\n        remoteInbound = stat;\n        break;\n      case 'remote-outbound-rtp':\n        remoteOutbound = stat;\n        break;\n    }\n  });\n\n  var isRemote = track && track.remoteSource;\n  var standardizedStats = {};\n\n  // setup sources to look for stat\n  var statSources = [\n    isRemote ? inbound : outbound, // local rtp stats\n    track,\n    codec,\n    isRemote ? remoteOutbound : remoteInbound // remote trp stats\n  ];\n\n  function getStatValue(name) {\n    var sourceFound = statSources.find(function(statSource) {\n      return statSource && typeof statSource[name] !== 'undefined';\n    }) || null;\n\n    return sourceFound ? sourceFound[name] : null;\n  }\n\n  var ssrc = getStatValue('ssrc');\n  if (typeof ssrc === 'number') {\n    standardizedStats.ssrc = String(ssrc);\n  }\n\n  var timestamp = getStatValue('timestamp');\n  standardizedStats.timestamp = Math.round(timestamp);\n\n  var mimeType = getStatValue('mimeType');\n  if (typeof mimeType === 'string') {\n    mimeType = mimeType.split('/');\n    standardizedStats.codecName = mimeType[mimeType.length - 1];\n  }\n\n  var roundTripTime = getStatValue('roundTripTime');\n  if (typeof roundTripTime === 'number') {\n    standardizedStats.roundTripTime = Math.round(roundTripTime * 1000);\n  }\n\n  var jitter = getStatValue('jitter');\n  if (typeof jitter === 'number') {\n    standardizedStats.jitter = Math.round(jitter * 1000);\n  }\n\n  var frameWidth = getStatValue('frameWidth');\n  if (typeof frameWidth === 'number') {\n    if (isRemote) {\n      standardizedStats.frameWidthReceived = frameWidth;\n    } else {\n      standardizedStats.frameWidthSent = frameWidth;\n    }\n  }\n\n  var frameHeight = getStatValue('frameHeight');\n  if (typeof frameHeight === 'number') {\n    if (isRemote) {\n      standardizedStats.frameHeightReceived = frameHeight;\n    } else {\n      standardizedStats.frameHeightSent = frameHeight;\n    }\n  }\n\n  var framesPerSecond = getStatValue('framesPerSecond');\n  if (typeof framesPerSecond === 'number') {\n    standardizedStats.frameRateSent = framesPerSecond;\n  }\n\n  var bytesReceived = getStatValue('bytesReceived');\n  if (typeof bytesReceived === 'number') {\n    standardizedStats.bytesReceived = bytesReceived;\n  }\n\n  var bytesSent = getStatValue('bytesSent');\n  if (typeof bytesSent === 'number') {\n    standardizedStats.bytesSent = bytesSent;\n  }\n\n  var packetsLost = getStatValue('packetsLost');\n  if (typeof packetsLost === 'number') {\n    standardizedStats.packetsLost = packetsLost;\n  }\n\n  var packetsReceived = getStatValue('packetsReceived');\n  if (typeof packetsReceived === 'number') {\n    standardizedStats.packetsReceived = packetsReceived;\n  }\n\n  var packetsSent = getStatValue('packetsSent');\n  if (typeof packetsSent === 'number') {\n    standardizedStats.packetsSent = packetsSent;\n  }\n\n  var audioLevel = getStatValue('audioLevel');\n  if (typeof audioLevel === 'number') {\n    audioLevel = Math.round(audioLevel * CHROME_LEGACY_MAX_AUDIO_LEVEL);\n    if (isRemote) {\n      standardizedStats.audioOutputLevel = audioLevel;\n    } else {\n      standardizedStats.audioInputLevel = audioLevel;\n    }\n  }\n\n  return standardizedStats;\n}\n\n/**\n * Standardize the MediaStreamTrack's statistics in Firefox.\n * @param {RTCStatsReport} response\n * @param {boolean} isRemote\n * @returns {StandardizedTrackStatsReport}\n */\nfunction standardizeFirefoxStats(response, isRemote) {\n  // NOTE(mroberts): If getStats is called on a closed RTCPeerConnection,\n  // Firefox returns undefined instead of an RTCStatsReport. We workaround this\n  // here. See the following bug for more details:\n  //\n  //   https://bugzilla.mozilla.org/show_bug.cgi?id=1377225\n  //\n  response = response || new Map();\n\n  var inbound = null;\n  var outbound = null;\n\n  // NOTE(mmalavalli): Starting from Firefox 63, RTC{Inbound, Outbound}RTPStreamStats.isRemote\n  // will be deprecated, followed by its removal in Firefox 66. Also, trying to\n  // access members of the remote RTC{Inbound, Outbound}RTPStreamStats without\n  // using RTCStatsReport.get(remoteId) will trigger console warnings. So, we\n  // no longer depend on \"isRemote\", and we call RTCStatsReport.get(remoteId)\n  // to access the remote RTC{Inbound, Outbound}RTPStreamStats.\n  //\n  // Source: https://blog.mozilla.org/webrtc/getstats-isremote-65/\n  //\n  response.forEach(function(stat) {\n    if (stat.isRemote) {\n      return;\n    }\n    switch (stat.type) {\n      case 'inbound-rtp':\n        inbound = stat;\n        outbound = response.get(stat.remoteId);\n        break;\n      case 'outbound-rtp':\n        outbound = stat;\n        inbound = response.get(stat.remoteId);\n        break;\n    }\n  });\n\n  var first = isRemote ? inbound : outbound;\n  var second = isRemote ? outbound : inbound;\n\n  function getStatValue(name) {\n    if (first && typeof first[name] !== 'undefined') {\n      return first[name];\n    }\n    if (second && typeof second[name] !== 'undefined') {\n      return second[name];\n    }\n    return null;\n  }\n\n  var standardizedStats = {};\n  var timestamp = getStatValue('timestamp');\n  standardizedStats.timestamp = Math.round(timestamp);\n\n  var ssrc = getStatValue('ssrc');\n  if (typeof ssrc === 'number') {\n    standardizedStats.ssrc = String(ssrc);\n  }\n\n  var bytesSent = getStatValue('bytesSent');\n  if (typeof bytesSent === 'number') {\n    standardizedStats.bytesSent = bytesSent;\n  }\n\n  var packetsLost = getStatValue('packetsLost');\n  if (typeof packetsLost === 'number') {\n    standardizedStats.packetsLost = packetsLost;\n  }\n\n  var packetsSent = getStatValue('packetsSent');\n  if (typeof packetsSent === 'number') {\n    standardizedStats.packetsSent = packetsSent;\n  }\n\n  var roundTripTime = getStatValue('roundTripTime');\n  if (typeof roundTripTime === 'number') {\n    // roundTripTime is double - measured in seconds.\n    // https://www.w3.org/TR/webrtc-stats/#dom-rtcremoteinboundrtpstreamstats-roundtriptime\n    // cover it to milliseconds (and make it integer)\n    standardizedStats.roundTripTime = Math.round(roundTripTime * 1000);\n  }\n\n  var jitter = getStatValue('jitter');\n  if (typeof jitter === 'number') {\n    standardizedStats.jitter = Math.round(jitter * 1000);\n  }\n\n  var frameRateSent = getStatValue('framerateMean');\n  if (typeof frameRateSent === 'number') {\n    standardizedStats.frameRateSent = Math.round(frameRateSent);\n  }\n\n  var bytesReceived = getStatValue('bytesReceived');\n  if (typeof bytesReceived === 'number') {\n    standardizedStats.bytesReceived = bytesReceived;\n  }\n\n  var packetsReceived = getStatValue('packetsReceived');\n  if (typeof packetsReceived === 'number') {\n    standardizedStats.packetsReceived = packetsReceived;\n  }\n\n  var frameRateReceived = getStatValue('framerateMean');\n  if (typeof frameRateReceived === 'number') {\n    standardizedStats.frameRateReceived = Math.round(frameRateReceived);\n  }\n\n  return standardizedStats;\n}\n\n/**\n * Standardized RTCIceCandidate statistics.\n * @typedef {object} StandardizedIceCandidateStatsReport\n * @property {'host'|'prflx'|'relay'|'srflx'} candidateType\n * @property {string} ip\n * @property {number} port\n * @property {number} priority\n * @property {'tcp'|'udp'} protocol\n * @property {string} url\n */\n\n/**\n * Standardized local RTCIceCandidate statistics.\n * @typedef {StandardizedIceCandidateStatsReport} StandardizedLocalIceCandidateStatsReport\n * @property {boolean} [deleted=false]\n * @property {'tcp'|'tls'|'udp'} relayProtocol\n */\n\n/**\n * Standardized active RTCIceCandidate pair statistics.\n * @typedef {object} StandardizedActiveIceCandidatePairStatsReport\n * @property {number} availableIncomingBitrate\n * @property {number} availableOutgoingBitrate\n * @property {number} bytesReceived\n * @property {number} bytesSent\n * @property {number} consentRequestsSent\n * @property {number} currentRoundTripTime\n * @property {number} lastPacketReceivedTimestamp\n * @property {number} lastPacketSentTimestamp\n * @property {StandardizedLocalIceCandidateStatsReport} localCandidate\n * @property {boolean} nominated\n * @property {number} priority\n * @property {boolean} readable\n * @property {StandardizedIceCandidateStatsReport} remoteCandidate\n * @property {number} requestsReceived\n * @property {number} requestsSent\n * @property {number} responsesReceived\n * @property {number} responsesSent\n * @property {number} retransmissionsReceived\n * @property {number} retransmissionsSent\n * @property {'frozen'|'waiting'|'in-progress'|'failed'|'succeeded'} state\n * @property {number} totalRoundTripTime\n * @property {string} transportId\n * @property {boolean} writable\n */\n\n/**\n * Standardized {@link RTCPeerConnection} statistics.\n * @typedef {Object} StandardizedStatsResponse\n * @property {StandardizedActiveIceCandidatePairStatsReport} activeIceCandidatePair - Stats for active ICE candidate pair\n * @property Array<StandardizedTrackStatsReport> localAudioTrackStats - Stats for local audio MediaStreamTracks\n * @property Array<StandardizedTrackStatsReport> localVideoTrackStats - Stats for local video MediaStreamTracks\n * @property Array<StandardizedTrackStatsReport> remoteAudioTrackStats - Stats for remote audio MediaStreamTracks\n * @property Array<StandardizedTrackStatsReport> remoteVideoTrackStats - Stats for remote video MediaStreamTracks\n */\n\n/**\n * Standardized MediaStreamTrack statistics.\n * @typedef {Object} StandardizedTrackStatsReport\n * @property {string} trackId - MediaStreamTrack ID\n * @property {string} ssrc - SSRC of the MediaStreamTrack\n * @property {number} timestamp - The Unix timestamp in milliseconds\n * @property {string} [codecName] - Name of the codec used to encode the MediaStreamTrack's media\n * @property {number} [roundTripTime] - Round trip time in milliseconds\n * @property {number} [jitter] - Jitter in milliseconds\n * @property {number} [frameWidthInput] - Width in pixels of the local video MediaStreamTrack's captured frame\n * @property {number} [frameHeightInput] - Height in pixels of the local video MediaStreamTrack's captured frame\n * @property {number} [frameWidthSent] - Width in pixels of the local video MediaStreamTrack's encoded frame\n * @property {number} [frameHeightSent] - Height in pixels of the local video MediaStreamTrack's encoded frame\n * @property {number} [frameWidthReceived] - Width in pixels of the remote video MediaStreamTrack's received frame\n * @property {number} [frameHeightReceived] - Height in pixels of the remote video MediaStreamTrack's received frame\n * @property {number} [frameRateInput] - Captured frames per second of the local video MediaStreamTrack\n * @property {number} [frameRateSent] - Frames per second of the local video MediaStreamTrack's encoded video\n * @property {number} [frameRateReceived] - Frames per second of the remote video MediaStreamTrack's received video\n * @property {number} [bytesReceived] - Number of bytes of the remote MediaStreamTrack's media received\n * @property {number} [bytesSent] - Number of bytes of the local MediaStreamTrack's media sent\n * @property {number} [packetsLost] - Number of packets of the MediaStreamTrack's media lost\n * @property {number} [packetsReceived] - Number of packets of the remote MediaStreamTrack's media received\n * @property {number} [packetsSent] - Number of packets of the local MediaStreamTrack's media sent\n * @property {AudioLevel} [audioInputLevel] - The {@link AudioLevel} of the local audio MediaStreamTrack\n * @property {AudioLevel} [audioOutputLevel] - The {@link AudioLevel} of the remote video MediaStreamTrack\n */\n\nmodule.exports = getStats;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/getstats.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/getusermedia.js":
/*!*********************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/getusermedia.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals navigator */\n\n\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\nfunction getUserMedia(constraints) {\n  if (typeof navigator === 'object'\n    && typeof navigator.mediaDevices === 'object'\n    && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    constraints = constraints || { audio: true, video: true };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return Promise.reject(new Error('getUserMedia is not supported'));\n}\n\nmodule.exports = getUserMedia;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL2dldHVzZXJtZWRpYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AdHdpbGlvL3dlYnJ0Yy9saWIvZ2V0dXNlcm1lZGlhLmpzP2Q3ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBuYXZpZ2F0b3IgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIHZlcnkgc2ltaWxhciB0byA8Y29kZT5uYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYTwvY29kZT5cbiAqIGV4Y2VwdCB0aGF0IGlmIG5vIE1lZGlhU3RyZWFtQ29uc3RyYWludHMgYXJlIHByb3ZpZGVkLCB0aGVuIGJvdCBhdWRpbyBhbmQgdmlkZW9cbiAqIGFyZSByZXF1ZXN0ZWQuXG4gKiBAZnVuY3Rpb24gZ2V0VXNlck1lZGlhXG4gKiBAcGFyYW0ge01lZGlhU3RyZWFtQ29uc3RyYWludHN9IFtjb25zdHJhaW50cz17YXVkaW86dHJ1ZSx2aWRlbzp0cnVlfV0gLSB0aGVcbiAqICAgTWVkaWFTdHJlYW1Db25zdHJhaW50cyBvYmplY3Qgc3BlY2lmeWluZyB3aGF0IGtpbmQgb2YgTWVkaWFTdHJlYW0gdG9cbiAqICAgcmVxdWVzdCBmcm9tIHRoZSBicm93c2VyIChieSBkZWZhdWx0IGJvdGggYXVkaW8gYW5kIHZpZGVvKVxuICogQHJldHVybnMgUHJvbWlzZTxNZWRpYVN0cmVhbT5cbiAqL1xuZnVuY3Rpb24gZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKSB7XG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnN0cmFpbnRzID0gY29uc3RyYWludHMgfHwgeyBhdWRpbzogdHJ1ZSwgdmlkZW86IHRydWUgfTtcbiAgICByZXR1cm4gbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoY29uc3RyYWludHMpO1xuICB9XG4gIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ2dldFVzZXJNZWRpYSBpcyBub3Qgc3VwcG9ydGVkJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFVzZXJNZWRpYTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/getusermedia.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar WebRTC = {};\n\nObject.defineProperties(WebRTC, {\n  getStats: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./getstats */ \"./node_modules/@twilio/webrtc/lib/getstats.js\")\n  },\n  getUserMedia: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./getusermedia */ \"./node_modules/@twilio/webrtc/lib/getusermedia.js\")\n  },\n  MediaStream: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./mediastream */ \"./node_modules/@twilio/webrtc/lib/mediastream.js\")\n  },\n  MediaStreamTrack: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./mediastreamtrack */ \"./node_modules/@twilio/webrtc/lib/mediastreamtrack.js\")\n  },\n  RTCIceCandidate: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./rtcicecandidate */ \"./node_modules/@twilio/webrtc/lib/rtcicecandidate.js\")\n  },\n  RTCPeerConnection: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./rtcpeerconnection */ \"./node_modules/@twilio/webrtc/lib/rtcpeerconnection/index.js\")\n  },\n  RTCSessionDescription: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./rtcsessiondescription */ \"./node_modules/@twilio/webrtc/lib/rtcsessiondescription/index.js\")\n  },\n  version: {\n    enumerable: true,\n    value: __webpack_require__(/*! ../package.json */ \"./node_modules/@twilio/webrtc/package.json\").version\n  }\n});\n\nmodule.exports = WebRTC;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B0d2lsaW8vd2VicnRjL2xpYi9pbmRleC5qcz9kYTFkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFdlYlJUQyA9IHt9O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhXZWJSVEMsIHtcbiAgZ2V0U3RhdHM6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuL2dldHN0YXRzJylcbiAgfSxcbiAgZ2V0VXNlck1lZGlhOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogcmVxdWlyZSgnLi9nZXR1c2VybWVkaWEnKVxuICB9LFxuICBNZWRpYVN0cmVhbToge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHJlcXVpcmUoJy4vbWVkaWFzdHJlYW0nKVxuICB9LFxuICBNZWRpYVN0cmVhbVRyYWNrOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogcmVxdWlyZSgnLi9tZWRpYXN0cmVhbXRyYWNrJylcbiAgfSxcbiAgUlRDSWNlQ2FuZGlkYXRlOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogcmVxdWlyZSgnLi9ydGNpY2VjYW5kaWRhdGUnKVxuICB9LFxuICBSVENQZWVyQ29ubmVjdGlvbjoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHJlcXVpcmUoJy4vcnRjcGVlcmNvbm5lY3Rpb24nKVxuICB9LFxuICBSVENTZXNzaW9uRGVzY3JpcHRpb246IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuL3J0Y3Nlc3Npb25kZXNjcmlwdGlvbicpXG4gIH0sXG4gIHZlcnNpb246IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuLi9wYWNrYWdlLmpzb24nKS52ZXJzaW9uXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYlJUQztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/mediastream.js":
/*!********************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/mediastream.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals MediaStream */\n\n\nif (typeof MediaStream === 'function') {\n  module.exports = MediaStream;\n} else {\n  module.exports = function MediaStream() {\n    throw new Error('MediaStream is not supported');\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL21lZGlhc3RyZWFtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B0d2lsaW8vd2VicnRjL2xpYi9tZWRpYXN0cmVhbS5qcz9hYTY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgTWVkaWFTdHJlYW0gKi9cbid1c2Ugc3RyaWN0JztcblxuaWYgKHR5cGVvZiBNZWRpYVN0cmVhbSA9PT0gJ2Z1bmN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IE1lZGlhU3RyZWFtO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBNZWRpYVN0cmVhbSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01lZGlhU3RyZWFtIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/mediastream.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/mediastreamtrack.js":
/*!*************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/mediastreamtrack.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* global MediaStreamTrack */\n\n\nif (typeof MediaStreamTrack === 'function') {\n  module.exports = MediaStreamTrack;\n} else {\n  module.exports = function MediaStreamTrack() {\n    throw new Error('MediaStreamTrack is not supported');\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL21lZGlhc3RyZWFtdHJhY2suanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL21lZGlhc3RyZWFtdHJhY2suanM/MGVjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgTWVkaWFTdHJlYW1UcmFjayAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pZiAodHlwZW9mIE1lZGlhU3RyZWFtVHJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBNZWRpYVN0cmVhbVRyYWNrO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBNZWRpYVN0cmVhbVRyYWNrKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTWVkaWFTdHJlYW1UcmFjayBpcyBub3Qgc3VwcG9ydGVkJyk7XG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/mediastreamtrack.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcicecandidate.js":
/*!************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcicecandidate.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* global RTCIceCandidate */\n\n\nif (typeof RTCIceCandidate === 'function') {\n  module.exports = RTCIceCandidate;\n} else {\n  module.exports = function RTCIceCandidate() {\n    throw new Error('RTCIceCandidate is not supported');\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y2ljZWNhbmRpZGF0ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AdHdpbGlvL3dlYnJ0Yy9saWIvcnRjaWNlY2FuZGlkYXRlLmpzPzBhNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIFJUQ0ljZUNhbmRpZGF0ZSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pZiAodHlwZW9mIFJUQ0ljZUNhbmRpZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IFJUQ0ljZUNhbmRpZGF0ZTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gUlRDSWNlQ2FuZGlkYXRlKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUlRDSWNlQ2FuZGlkYXRlIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcicecandidate.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcpeerconnection/chrome.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcpeerconnection/chrome.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCDataChannel, RTCPeerConnection, RTCSessionDescription */\n\n\nvar ChromeRTCSessionDescription = __webpack_require__(/*! ../rtcsessiondescription/chrome */ \"./node_modules/@twilio/webrtc/lib/rtcsessiondescription/chrome.js\");\nvar EventTarget = __webpack_require__(/*! ../util/eventtarget */ \"./node_modules/@twilio/webrtc/lib/util/eventtarget.js\");\nvar inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\nvar Latch = __webpack_require__(/*! ../util/latch */ \"./node_modules/@twilio/webrtc/lib/util/latch.js\");\nvar MediaStream = __webpack_require__(/*! ../mediastream */ \"./node_modules/@twilio/webrtc/lib/mediastream.js\");\nvar RTCRtpSenderShim = __webpack_require__(/*! ../rtcrtpsender */ \"./node_modules/@twilio/webrtc/lib/rtcrtpsender.js\");\nvar sdpUtils = __webpack_require__(/*! ../util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\");\n\n// NOTE(mroberts): This class wraps Chrome's RTCPeerConnection implementation.\n// It provides some functionality not currently present in Chrome, namely the\n// abilities to\n//\n//   1. Rollback, per the workaround suggested here:\n//      https://bugs.chromium.org/p/webrtc/issues/detail?id=5738#c3\n//\n//   2. Listen for track events, per the adapter.js workaround.\n//\n//   3. Set iceTransportPolicy.\n//\nfunction ChromeRTCPeerConnection(configuration, constraints) {\n  if (!(this instanceof ChromeRTCPeerConnection)) {\n    return new ChromeRTCPeerConnection(configuration, constraints);\n  }\n\n  EventTarget.call(this);\n\n  configuration = configuration || {};\n  var newConfiguration = Object.assign(configuration.iceTransportPolicy\n    ? { iceTransports: configuration.iceTransportPolicy }\n    : {}, configuration);\n\n  util.interceptEvent(this, 'datachannel');\n  util.interceptEvent(this, 'signalingstatechange');\n\n  var sdpFormat = sdpUtils.getSdpFormat(newConfiguration.sdpSemantics);\n  var peerConnection = new RTCPeerConnection(newConfiguration, constraints);\n\n  Object.defineProperties(this, {\n    _appliedTracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    _localStream: {\n      value: new MediaStream()\n    },\n    _peerConnection: {\n      value: peerConnection\n    },\n    _pendingLocalOffer: {\n      value: null,\n      writable: true\n    },\n    _pendingRemoteOffer: {\n      value: null,\n      writable: true\n    },\n    _rolledBackTracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    _sdpFormat: {\n      value: sdpFormat\n    },\n    _senders: {\n      value: new Map()\n    },\n    _signalingStateLatch: {\n      value: new Latch()\n    },\n    _tracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    localDescription: {\n      enumerable: true,\n      get: function() {\n        return this._pendingLocalOffer ? this._pendingLocalOffer : peerConnection.localDescription;\n      }\n    },\n    remoteDescription: {\n      enumerable: true,\n      get: function() {\n        return this._pendingRemoteOffer ? this._pendingRemoteOffer : peerConnection.remoteDescription;\n      }\n    },\n    signalingState: {\n      enumerable: true,\n      get: function() {\n        if (this._pendingLocalOffer) {\n          return 'have-local-offer';\n        } else if (this._pendingRemoteOffer) {\n          return 'have-remote-offer';\n        }\n        return peerConnection.signalingState;\n      }\n    }\n  });\n\n  var self = this;\n\n  peerConnection.addEventListener('datachannel', function ondatachannel(event) {\n    shimDataChannel(event.channel);\n    self.dispatchEvent(event);\n  });\n\n  peerConnection.addEventListener('signalingstatechange', function onsignalingstatechange() {\n    if (peerConnection.signalingState === 'stable') {\n      self._appliedTracksToSSRCs = new Map(self._tracksToSSRCs);\n    }\n    if (!self._pendingLocalOffer && !self._pendingRemoteOffer) {\n      self.dispatchEvent.apply(self, arguments);\n    }\n  });\n\n  peerConnection.ontrack = function ontrack() {\n    // NOTE(mroberts): adapter.js's \"track\" event shim only kicks off if we set\n    // the ontrack property of the RTCPeerConnection.\n  };\n\n  if (typeof RTCPeerConnection.prototype.addTrack !== 'function') {\n    peerConnection.addStream(this._localStream);\n  }\n  util.proxyProperties(RTCPeerConnection.prototype, this, peerConnection);\n}\n\ninherits(ChromeRTCPeerConnection, EventTarget);\n\nif (typeof RTCPeerConnection.prototype.addTrack !== 'function') {\n  // NOTE(mmalavalli): This shim supports our limited case of adding\n  // all MediaStreamTracks to one MediaStream. It has been implemented this\n  // keeping in mind that this is to be maintained only until \"addTrack\" is\n  // supported natively in Chrome.\n  ChromeRTCPeerConnection.prototype.addTrack = function addTrack() {\n    var args = [].slice.call(arguments);\n    var track = args[0];\n    if (this._peerConnection.signalingState === 'closed') {\n      throw new Error('Cannot add MediaStreamTrack [' + track.id + ', '\n        + track.kind + ']: RTCPeerConnection is closed');\n    }\n\n    var sender = this._senders.get(track);\n    if (sender && sender.track) {\n      throw new Error('Cannot add MediaStreamTrack [' + track.id + ', '\n        + track.kind + ']: RTCPeerConnection already has it');\n    }\n    this._peerConnection.removeStream(this._localStream);\n    this._localStream.addTrack(track);\n    this._peerConnection.addStream(this._localStream);\n\n    sender = new RTCRtpSenderShim(track);\n    this._senders.set(track, sender);\n    return sender;\n  };\n\n  // NOTE(mmalavalli): This shim supports our limited case of removing\n  // MediaStreamTracks from one MediaStream. It has been implemented this\n  // keeping in mind that this is to be maintained only until \"removeTrack\" is\n  // supported natively in Chrome.\n  ChromeRTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    if (this._peerConnection.signalingState === 'closed') {\n      throw new Error('Cannot remove MediaStreamTrack: RTCPeerConnection is closed');\n    }\n\n    var track = sender.track;\n    if (!track) {\n      return;\n    }\n    sender = this._senders.get(track);\n    if (sender && sender.track) {\n      sender.track = null;\n      this._peerConnection.removeStream(this._localStream);\n      this._localStream.removeTrack(track);\n      this._peerConnection.addStream(this._localStream);\n    }\n  };\n\n  ChromeRTCPeerConnection.prototype.getSenders = function getSenders() {\n    return Array.from(this._senders.values());\n  };\n} else {\n  ChromeRTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    if (this._peerConnection.signalingState === 'closed') {\n      throw new Error('Cannot remove MediaStreamTrack: RTCPeerConnection is closed');\n    }\n    try {\n      this._peerConnection.removeTrack(sender);\n    } catch (e) {\n      // NOTE(mhuynh): Do nothing. In Chrome, will throw if a 'sender was not\n      // created by this peer connection'. This behavior does not seem to be\n      // spec compliant, so a temporary shim is introduced. A bug has been filed,\n      // and is tracked here:\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=860853\n    }\n  };\n}\n\nChromeRTCPeerConnection.prototype.addIceCandidate = function addIceCandidate(candidate) {\n  var args = [].slice.call(arguments);\n  var promise;\n  var self = this;\n\n  if (this.signalingState === 'have-remote-offer') {\n    // NOTE(mroberts): Because the ChromeRTCPeerConnection simulates the\n    // \"have-remote-offer\" signalingStates, we only want to invoke the true\n    // addIceCandidates method when the remote description has been applied.\n    promise = this._signalingStateLatch.when('low').then(function signalingStatesResolved() {\n      return self._peerConnection.addIceCandidate(candidate);\n    });\n  } else {\n    promise = this._peerConnection.addIceCandidate(candidate);\n  }\n\n  return args.length > 1\n    ? util.legacyPromise(promise, args[1], args[2])\n    : promise;\n};\n\n// NOTE(mroberts): The WebRTC spec does not specify that close should throw an\n// Error; however, in Chrome it does. We workaround this by checking the\n// signalingState manually.\nChromeRTCPeerConnection.prototype.close = function close() {\n  if (this.signalingState !== 'closed') {\n    this._pendingLocalOffer = null;\n    this._pendingRemoteOffer = null;\n    this._peerConnection.close();\n  }\n};\n\n// NOTE(mroberts): Because we workaround Chrome's lack of rollback support by\n// \"faking\" setRemoteDescription, we cannot create an answer until we actually\n// apply the remote description. This means, once you call createAnswer, you\n// can no longer rollback. This is acceptable for our use case because we will\n// apply the newly-created answer almost immediately; however, this may be\n// unacceptable for other use cases.\nChromeRTCPeerConnection.prototype.createAnswer = function createAnswer() {\n  var args = [].slice.call(arguments);\n  var promise;\n  var self = this;\n\n  if (this._pendingRemoteOffer) {\n    promise = this._peerConnection.setRemoteDescription(this._pendingRemoteOffer).then(function setRemoteDescriptionSucceeded() {\n      // NOTE(mroberts): The signalingStates between the ChromeRTCPeerConnection\n      // and the underlying RTCPeerConnection implementation have converged. We\n      // can unblock any pending calls to addIceCandidate now.\n      self._signalingStateLatch.lower();\n      return self._peerConnection.createAnswer();\n    }).then(function createAnswerSucceeded(answer) {\n      self._pendingRemoteOffer = null;\n\n      // NOTE(mmalavalli): If createAnswer() is called immediately after rolling back, then we no\n      // longer need to retain the rolled back tracks to SSRCs Map.\n      self._rolledBackTracksToSSRCs.clear();\n\n      return new ChromeRTCSessionDescription({\n        type: 'answer',\n        sdp: updateTrackIdsToSSRCs(self._sdpFormat, self._tracksToSSRCs, answer.sdp)\n      });\n    }, function setRemoteDescriptionOrCreateAnswerFailed(error) {\n      self._pendingRemoteOffer = null;\n      throw error;\n    });\n  } else {\n    promise = this._peerConnection.createAnswer().then(function(answer) {\n      // NOTE(mmalavalli): If createAnswer() is called immediately after rolling back, then we no\n      // longer need to retain the rolled back tracks to SSRCs Map.\n      self._rolledBackTracksToSSRCs.clear();\n\n      return new ChromeRTCSessionDescription({\n        type: 'answer',\n        sdp: updateTrackIdsToSSRCs(self._sdpFormat, self._tracksToSSRCs, answer.sdp)\n      });\n    });\n  }\n\n  return args.length > 1\n    ? util.legacyPromise(promise, args[0], args[1])\n    : promise;\n};\n\nChromeRTCPeerConnection.prototype.createOffer = function createOffer() {\n  var args = [].slice.call(arguments);\n  var options = (args.length > 1 ? args[2] : args[0]) || {};\n  var self = this;\n\n  var promise = this._peerConnection.createOffer(options).then(function(offer) {\n    // NOTE(mmalavalli): If createOffer() is called immediately after rolling back, then we no\n    // longer need to retain the rolled back tracks to SSRCs Map.\n    self._rolledBackTracksToSSRCs.clear();\n\n    return new ChromeRTCSessionDescription({\n      type: offer.type,\n      sdp: updateTrackIdsToSSRCs(self._sdpFormat, self._tracksToSSRCs, offer.sdp)\n    });\n  });\n\n  return args.length > 1\n    ? util.legacyPromise(promise, args[0], args[1])\n    : promise;\n};\n\nChromeRTCPeerConnection.prototype.createDataChannel = function createDataChannel(label, dataChannelDict) {\n  dataChannelDict = shimDataChannelInit(dataChannelDict);\n  var dataChannel = this._peerConnection.createDataChannel(label, dataChannelDict);\n  shimDataChannel(dataChannel);\n  return dataChannel;\n};\n\nChromeRTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n  var args = [].slice.call(arguments);\n  var description = args[0];\n\n  // NOTE(mmalavalli): If setLocalDescription() is called immediately after rolling back,\n  // then we need to restore the rolled back tracks to SSRCs Map.\n  if (this._rolledBackTracksToSSRCs.size > 0) {\n    this._tracksToSSRCs = new Map(this._rolledBackTracksToSSRCs);\n    this._rolledBackTracksToSSRCs.clear();\n  }\n\n  var promise = setDescription(this, true, description);\n  return args.length > 1\n    ? util.legacyPromise(promise, args[1], args[2])\n    : promise;\n};\n\nChromeRTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n  var args = [].slice.call(arguments);\n  var description = args[0];\n\n  // NOTE(mmalavalli): If setRemoteDescription() is called immediately after rolling back,\n  // then we no longer need to retain the rolled back tracks to SSRCs Map.\n  this._rolledBackTracksToSSRCs.clear();\n\n  var promise = setDescription(this, false, description);\n  return args.length > 1\n    ? util.legacyPromise(promise, args[1], args[2])\n    : promise;\n};\n\nutil.delegateMethods(\n  RTCPeerConnection.prototype,\n  ChromeRTCPeerConnection.prototype,\n  '_peerConnection');\n\n// NOTE(mroberts): We workaround Chrome's lack of rollback support, per the\n// workaround suggested here: https://bugs.chromium.org/p/webrtc/issues/detail?id=5738#c3\n// Namely, we \"fake\" setting the local or remote description and instead buffer\n// it. If we receive or create an answer, then we will actually apply the\n// description. Until we receive or create an answer, we will be able to\n// \"rollback\" by simply discarding the buffer description.\nfunction setDescription(peerConnection, local, description) {\n  function setPendingLocalOffer(offer) {\n    if (local) {\n      peerConnection._pendingLocalOffer = offer;\n    } else {\n      peerConnection._pendingRemoteOffer = offer;\n    }\n  }\n\n  function clearPendingLocalOffer() {\n    if (local) {\n      peerConnection._pendingLocalOffer = null;\n    } else {\n      peerConnection._pendingRemoteOffer = null;\n    }\n  }\n\n  var pendingLocalOffer = local ? peerConnection._pendingLocalOffer : peerConnection._pendingRemoteOffer;\n  var pendingRemoteOffer = local ? peerConnection._pendingRemoteOffer : peerConnection._pendingLocalOffer;\n  var intermediateState = local ? 'have-local-offer' : 'have-remote-offer';\n  var setLocalDescription = local ? 'setLocalDescription' : 'setRemoteDescription';\n  var promise;\n\n  if (!local && pendingRemoteOffer && description.type === 'answer') {\n    promise = setRemoteAnswer(peerConnection, description);\n  } else if (description.type === 'offer') {\n    if (peerConnection.signalingState !== intermediateState && peerConnection.signalingState !== 'stable') {\n      // NOTE(mroberts): Error message copied from Firefox.\n      return Promise.reject(new Error('Cannot set ' + (local ? 'local' : 'remote') +\n        ' offer in state ' + peerConnection.signalingState));\n    }\n\n    // We need to save this local offer in case of a rollback. We also need to\n    // check to see if the signalingState between the ChromeRTCPeerConnection\n    // and the underlying RTCPeerConnection implementation are about to diverge.\n    // If so, we need to ensure subsequent calls to addIceCandidate will block.\n    if (!pendingLocalOffer && peerConnection._signalingStateLatch.state === 'low') {\n      peerConnection._signalingStateLatch.raise();\n    }\n    var previousSignalingState = peerConnection.signalingState;\n    setPendingLocalOffer(unwrap(description));\n    promise = Promise.resolve();\n\n    // Only dispatch a signalingstatechange event if we transitioned.\n    if (peerConnection.signalingState !== previousSignalingState) {\n      promise.then(function dispatchSignalingStateChangeEvent() {\n        peerConnection.dispatchEvent(new Event('signalingstatechange'));\n      });\n    }\n\n  } else if (description.type === 'rollback') {\n    if (peerConnection.signalingState !== intermediateState) {\n      // NOTE(mroberts): Error message copied from Firefox.\n      promise = Promise.reject(new Error('Cannot rollback ' +\n        (local ? 'local' : 'remote') + ' description in ' + peerConnection.signalingState));\n    } else {\n      // Reset the pending offer.\n      clearPendingLocalOffer();\n\n      // NOTE(mmalavalli): We store the rolled back tracks to SSRCs Map here in case\n      // setLocalDescription() is called immediately after a rollback (without calling\n      // createOffer() or createAnswer()), in which case this roll back is not due to a\n      // glare scenario and this Map should be restored.\n      peerConnection._rolledBackTracksToSSRCs = new Map(peerConnection._tracksToSSRCs);\n      peerConnection._tracksToSSRCs = new Map(peerConnection._appliedTracksToSSRCs);\n\n      promise = Promise.resolve();\n      promise.then(function dispatchSignalingStateChangeEvent() {\n        peerConnection.dispatchEvent(new Event('signalingstatechange'));\n      });\n    }\n  }\n\n  return promise || peerConnection._peerConnection[setLocalDescription](unwrap(description));\n}\n\nfunction setRemoteAnswer(peerConnection, answer) {\n  // Apply the pending local offer.\n  var pendingLocalOffer = peerConnection._pendingLocalOffer;\n  return peerConnection._peerConnection.setLocalDescription(pendingLocalOffer).then(function setLocalOfferSucceeded() {\n    peerConnection._pendingLocalOffer = null;\n    return peerConnection.setRemoteDescription(answer);\n  }).then(function setRemoteAnswerSucceeded() {\n    // NOTE(mroberts): The signalingStates between the ChromeRTCPeerConnection\n    // and the underlying RTCPeerConnection implementation have converged. We\n    // can unblock any pending calls to addIceCandidate now.\n    peerConnection._signalingStateLatch.lower();\n  });\n}\n\nfunction unwrap(description) {\n  if (description instanceof ChromeRTCSessionDescription) {\n    if (description._description) {\n      return description._description;\n    }\n  }\n  return new RTCSessionDescription(description);\n}\n\n/**\n * Check whether or not we need to apply our maxPacketLifeTime shim. We are\n * pretty conservative: we'll only apply it if the legacy maxRetransmitTime\n * property is available _and_ the standard maxPacketLifeTime property is _not_\n * available (the thinking being that Chrome will land the standards-compliant\n * property).\n * @returns {boolean}\n */\nfunction needsMaxPacketLifeTimeShim() {\n  return 'maxRetransmitTime' in RTCDataChannel.prototype\n    && !('maxPacketLifeTime' in RTCDataChannel.prototype);\n}\n\n/**\n * Shim an RTCDataChannelInit dictionary (if necessary). This function returns\n * a copy of the original RTCDataChannelInit.\n * @param {RTCDataChannelInit} dataChannelDict\n * @returns {RTCDataChannelInit}\n */\nfunction shimDataChannelInit(dataChannelDict) {\n  dataChannelDict = Object.assign({}, dataChannelDict);\n  if (needsMaxPacketLifeTimeShim() && 'maxPacketLifeTime' in dataChannelDict) {\n    dataChannelDict.maxRetransmitTime = dataChannelDict.maxPacketLifeTime;\n  }\n  return dataChannelDict;\n}\n\n/**\n * Shim an RTCDataChannel (if necessary). This function mutates the\n * RTCDataChannel.\n * @param {RTCDataChannel} dataChannel\n * @returns {RTCDataChannel}\n */\nfunction shimDataChannel(dataChannel) {\n  Object.defineProperty(dataChannel, 'maxRetransmits', {\n    value: dataChannel.maxRetransmits === 65535\n      ? null\n      : dataChannel.maxRetransmits\n  });\n  if (needsMaxPacketLifeTimeShim()) {\n    // NOTE(mroberts): We can rename `maxRetransmitTime` to `maxPacketLifeTime`.\n    //\n    //   https://bugs.chromium.org/p/chromium/issues/detail?id=696681\n    //\n    Object.defineProperty(dataChannel, 'maxPacketLifeTime', {\n      value: dataChannel.maxRetransmitTime === 65535\n        ? null\n        : dataChannel.maxRetransmitTime\n    });\n  }\n  return dataChannel;\n}\n\n/**\n * Update the mappings from MediaStreamTrack IDs to SSRCs as indicated by both\n * the Map from MediaStreamTrack IDs to SSRCs and the SDP itself. This method\n * ensures that SSRCs never change once announced.\n * @param {'planb'|'unified'} sdpFormat\n * @param {Map<string, Set<string>>} tracksToSSRCs\n * @param {string} sdp - an SDP whose format is determined by `sdpSemantics`\n * @returns {string} updatedSdp - updated SDP\n */\nfunction updateTrackIdsToSSRCs(sdpFormat, tracksToSSRCs, sdp) {\n  return sdpFormat === 'unified'\n    ? sdpUtils.updateUnifiedPlanTrackIdsToSSRCs(tracksToSSRCs, sdp)\n    : sdpUtils.updatePlanBTrackIdsToSSRCs(tracksToSSRCs, sdp);\n}\n\nmodule.exports = ChromeRTCPeerConnection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcpeerconnection/chrome.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcpeerconnection/firefox.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcpeerconnection/firefox.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCPeerConnection */\n\n\nvar EventTarget = __webpack_require__(/*! ../util/eventtarget */ \"./node_modules/@twilio/webrtc/lib/util/eventtarget.js\");\nvar FirefoxRTCSessionDescription = __webpack_require__(/*! ../rtcsessiondescription/firefox */ \"./node_modules/@twilio/webrtc/lib/rtcsessiondescription/firefox.js\");\nvar inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\nvar updateTracksToSSRCs = __webpack_require__(/*! ../util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\").updateUnifiedPlanTrackIdsToSSRCs;\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\");\n\n// NOTE(mroberts): This is a short-lived workaround. Checking the user agent\n// string might not fix every affected Firefox instance, but it should be good\n// enough for this bug.\nvar needsWorkaroundForBug1480277 = typeof navigator === 'object'\n  && navigator.userAgent\n  && (navigator.userAgent.match(/Firefox\\/61/) || navigator.userAgent.match(/Firefox\\/62/));\n\n// NOTE(mroberts): This class wraps Firefox's RTCPeerConnection implementation.\n// It provides some functionality not currently present in Firefox, namely the\n// abilities to\n//\n//   1. Call setLocalDescription and setRemoteDescription with new offers in\n//      signalingStates \"have-local-offer\" and \"have-remote-offer\",\n//      respectively.\n//\n//   2. The ability to call createOffer in signalingState \"have-local-offer\".\n//\n// Both of these are implemented using rollbacks to workaround the following\n// bug:\n//\n//   https://bugzilla.mozilla.org/show_bug.cgi?id=1072388\n//\n// We also provide a workaround for a bug where Firefox may change the\n// previously-negotiated DTLS role in an answer, which breaks Chrome:\n//\n//     https://bugzilla.mozilla.org/show_bug.cgi?id=1240897\n//\nfunction FirefoxRTCPeerConnection(configuration) {\n  if (!(this instanceof FirefoxRTCPeerConnection)) {\n    return new FirefoxRTCPeerConnection(configuration);\n  }\n\n  EventTarget.call(this);\n\n  util.interceptEvent(this, 'signalingstatechange');\n\n  /* eslint new-cap:0 */\n  var peerConnection = new RTCPeerConnection(configuration);\n\n  Object.defineProperties(this, {\n    _initiallyNegotiatedDtlsRole: {\n      value: null,\n      writable: true\n    },\n    _isClosed: {\n      value: false,\n      writable: true\n    },\n    _peerConnection: {\n      value: peerConnection\n    },\n    _rollingBack: {\n      value: false,\n      writable: true\n    },\n    _tracksToSSRCs: {\n      value: new Map()\n    },\n    iceGatheringState: {\n      enumerable: true,\n      get: function() {\n        return this._isClosed ? 'complete' : this._peerConnection.iceGatheringState;\n      }\n    },\n    localDescription: {\n      enumerable: true,\n      get: function() {\n        return overwriteWithInitiallyNegotiatedDtlsRole(this._peerConnection.localDescription, this._initiallyNegotiatedDtlsRole);\n      }\n    },\n    signalingState: {\n      enumerable: true,\n      get: function() {\n        return this._isClosed ? 'closed' : this._peerConnection.signalingState;\n      }\n    }\n  });\n\n  var self = this;\n  var previousSignalingState;\n\n  peerConnection.addEventListener('signalingstatechange', function onsignalingstatechange() {\n    if (!self._rollingBack && self.signalingState !== previousSignalingState) {\n      previousSignalingState = self.signalingState;\n\n      // NOTE(mmalavalli): In Firefox, 'signalingstatechange' event is\n      // triggered synchronously in the same tick after\n      // RTCPeerConnection#close() is called. So we mimic Chrome's behavior\n      // by triggering 'signalingstatechange' on the next tick.\n      var dispatchEventToSelf = self.dispatchEvent.apply.bind(self.dispatchEvent, self, arguments);\n      if (self._isClosed) {\n        setTimeout(dispatchEventToSelf);\n      } else {\n        dispatchEventToSelf();\n      }\n    }\n  });\n\n  util.proxyProperties(RTCPeerConnection.prototype, this, peerConnection);\n}\n\ninherits(FirefoxRTCPeerConnection, EventTarget);\n\n// NOTE(mmalavalli): Firefox throws a TypeError when the PeerConnection's\n// prototype's \"peerIdentity\" property is accessed. In order to overcome\n// this, we ignore this property while delegating methods.\n// Reference: https://bugzilla.mozilla.org/show_bug.cgi?id=1363815\nObject.defineProperty(FirefoxRTCPeerConnection.prototype, 'peerIdentity', {\n  enumerable: true,\n  value: Promise.resolve({\n    idp: '',\n    name: ''\n  })\n});\n\nif (needsWorkaroundForBug1480277) {\n  FirefoxRTCPeerConnection.prototype.addTrack = function addTrack() {\n    var track = arguments[0];\n    var sender = this._peerConnection.addTrack.apply(this._peerConnection, arguments);\n    sender.replaceTrack(track);\n    return sender;\n  };\n}\n\nFirefoxRTCPeerConnection.prototype.createAnswer = function createAnswer() {\n  var args = [].slice.call(arguments);\n  var promise;\n  var self = this;\n\n  promise = this._peerConnection.createAnswer().then(function createAnswerSucceeded(answer) {\n    saveInitiallyNegotiatedDtlsRole(self, answer);\n    return overwriteWithInitiallyNegotiatedDtlsRole(answer, self._initiallyNegotiatedDtlsRole);\n  });\n\n  return typeof args[0] === 'function'\n    ? util.legacyPromise(promise, args[0], args[1])\n    : promise;\n};\n\n// NOTE(mroberts): The WebRTC spec allows you to call createOffer from any\n// signalingState other than \"closed\"; however, Firefox has not yet implemented\n// this (https://bugzilla.mozilla.org/show_bug.cgi?id=1072388). We workaround\n// this by rolling back if we are in state \"have-local-offer\" or\n// \"have-remote-offer\". This is acceptable for our use case because we will\n// apply the newly-created offer almost immediately; however, this may be\n// unacceptable for other use cases.\nFirefoxRTCPeerConnection.prototype.createOffer = function createOffer() {\n  var args = [].slice.call(arguments);\n  var options = (args.length > 1 ? args[2] : args[0]) || {};\n  var promise;\n  var self = this;\n\n  if (this.signalingState === 'have-local-offer' ||\n      this.signalingState === 'have-remote-offer') {\n    var local = this.signalingState === 'have-local-offer';\n    promise = rollback(this, local, function rollbackSucceeded() {\n      return self.createOffer(options);\n    });\n  } else {\n    promise = self._peerConnection.createOffer(options);\n  }\n\n  promise = promise.then(function(offer) {\n    return new FirefoxRTCSessionDescription({\n      type: offer.type,\n      sdp: updateTracksToSSRCs(self._tracksToSSRCs, offer.sdp)\n    });\n  });\n\n  return args.length > 1\n    ? util.legacyPromise(promise, args[0], args[1])\n    : promise;\n};\n\n// NOTE(mroberts): While Firefox will reject the Promise returned by\n// setLocalDescription when called from signalingState \"have-local-offer\" with\n// an answer, it still updates the .localDescription property. We workaround\n// this by explicitly handling this case.\nFirefoxRTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n  var args = [].slice.call(arguments);\n  var description = args[0];\n  var promise;\n\n  if (description && description.type === 'answer' && this.signalingState === 'have-local-offer') {\n    promise = Promise.reject(new Error('Cannot set local answer in state have-local-offer'));\n  }\n\n  if (promise) {\n    return args.length > 1\n      ? util.legacyPromise(promise, args[1], args[2])\n      : promise;\n  }\n\n  return this._peerConnection.setLocalDescription.apply(this._peerConnection, args);\n};\n\n// NOTE(mroberts): The WebRTC spec allows you to call setRemoteDescription with\n// an offer multiple times in signalingState \"have-remote-offer\"; however,\n// Firefox has not yet implemented this (https://bugzilla.mozilla.org/show_bug.cgi?id=1072388).\n// We workaround this by rolling back if we are in state \"have-remote-offer\".\n// This is acceptable for our use case; however, this may be unacceptable for\n// other use cases.\n//\n// While Firefox will reject the Promise returned by setRemoteDescription when\n// called from signalingState \"have-remote-offer\" with an answer, it sill\n// updates the .remoteDescription property. We workaround this by explicitly\n// handling this case.\nFirefoxRTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n  var args = [].slice.call(arguments);\n  var description = args[0];\n  var promise;\n  var self = this;\n\n  if (description && this.signalingState === 'have-remote-offer') {\n    if (description.type === 'answer') {\n      promise = Promise.reject(new Error('Cannot set remote answer in state have-remote-offer'));\n    } else if (description.type === 'offer') {\n      promise = rollback(this, false, function rollbackSucceeded() {\n        return self._peerConnection.setRemoteDescription(description);\n      });\n    }\n  }\n\n  if (!promise) {\n    promise = this._peerConnection.setRemoteDescription(description);\n  }\n\n  promise = promise.then(function setRemoteDescriptionSucceeded() {\n    saveInitiallyNegotiatedDtlsRole(self, description, true);\n  });\n\n  return args.length > 1\n    ? util.legacyPromise(promise, args[1], args[2])\n    : promise;\n};\n\n// NOTE(mroberts): The WebRTC spec specifies that the PeerConnection's internal\n// isClosed slot should immediately be set to true; however, in Firefox it\n// occurs in the next tick. We workaround this by tracking isClosed manually.\nFirefoxRTCPeerConnection.prototype.close = function close() {\n  if (this.signalingState !== 'closed') {\n    this._isClosed = true;\n    this._peerConnection.close();\n  }\n};\n\nutil.delegateMethods(\n  RTCPeerConnection.prototype,\n  FirefoxRTCPeerConnection.prototype,\n  '_peerConnection');\n\nfunction rollback(peerConnection, local, onceRolledBack) {\n  var setLocalDescription = local ? 'setLocalDescription' : 'setRemoteDescription';\n  peerConnection._rollingBack = true;\n  return peerConnection._peerConnection[setLocalDescription](new FirefoxRTCSessionDescription({\n    type: 'rollback'\n  })).then(onceRolledBack).then(function onceRolledBackSucceeded(result) {\n    peerConnection._rollingBack = false;\n    return result;\n  }, function rollbackOrOnceRolledBackFailed(error) {\n    peerConnection._rollingBack = false;\n    throw error;\n  });\n}\n\n/**\n * Extract the initially negotiated DTLS role out of an RTCSessionDescription's\n * sdp property and save it on the FirefoxRTCPeerConnection if and only if\n *\n *   1. A DTLS role was not already saved on the FirefoxRTCPeerConnection, and\n *   2. The description is an answer.\n *\n * @private\n * @param {FirefoxRTCPeerConnection} peerConnection\n * @param {RTCSessionDescription} description\n * @param {boolean} [remote=false] - if true, save the inverse of the DTLS role,\n *   e.g. \"active\" instead of \"passive\" and vice versa\n * @returns {undefined}\n */\nfunction saveInitiallyNegotiatedDtlsRole(peerConnection, description, remote) {\n  // NOTE(mroberts): JSEP specifies that offers always offer \"actpass\" as the\n  // DTLS role. We need to inspect answers to figure out the negotiated DTLS\n  // role.\n  if (peerConnection._initiallyNegotiatedDtlsRole || description.type === 'offer') {\n    return;\n  }\n\n  var match = description.sdp.match(/a=setup:([a-z]+)/);\n  if (!match) {\n    return;\n  }\n\n  var dtlsRole = match[1];\n  peerConnection._initiallyNegotiatedDtlsRole = remote ? {\n    active: 'passive',\n    passive: 'active'\n  }[dtlsRole] : dtlsRole;\n}\n\n/**\n * Overwrite the DTLS role in the sdp property of an RTCSessionDescription if\n * and only if\n *\n *   1. The description is an answer, and\n *   2. A DTLS role is provided.\n *\n * @private\n * @param {RTCSessionDescription} [description]\n * @param {string} [dtlsRole] - one of \"active\" or \"passive\"\n * @returns {?RTCSessionDescription} description\n */\nfunction overwriteWithInitiallyNegotiatedDtlsRole(description, dtlsRole) {\n  if (description && description.type === 'answer' && dtlsRole) {\n    return new FirefoxRTCSessionDescription({\n      type: description.type,\n      sdp: description.sdp.replace(/a=setup:[a-z]+/g, 'a=setup:' + dtlsRole)\n    });\n  }\n  return description;\n}\n\nmodule.exports = FirefoxRTCPeerConnection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcpeerconnection/firefox.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcpeerconnection/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcpeerconnection/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (typeof RTCPeerConnection === 'function') {\n  var guessBrowser = __webpack_require__(/*! ../util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").guessBrowser;\n  switch (guessBrowser()) {\n    case 'chrome':\n      module.exports = __webpack_require__(/*! ./chrome */ \"./node_modules/@twilio/webrtc/lib/rtcpeerconnection/chrome.js\");\n      break;\n    case 'firefox':\n      module.exports = __webpack_require__(/*! ./firefox */ \"./node_modules/@twilio/webrtc/lib/rtcpeerconnection/firefox.js\");\n      break;\n    case 'safari':\n      module.exports = __webpack_require__(/*! ./safari */ \"./node_modules/@twilio/webrtc/lib/rtcpeerconnection/safari.js\");\n      break;\n    default:\n      module.exports = RTCPeerConnection;\n      break;\n  }\n} else {\n  module.exports = function RTCPeerConnection() {\n    throw new Error('RTCPeerConnection is not supported');\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3BlZXJjb25uZWN0aW9uL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B0d2lsaW8vd2VicnRjL2xpYi9ydGNwZWVyY29ubmVjdGlvbi9pbmRleC5qcz8xOWMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHR5cGVvZiBSVENQZWVyQ29ubmVjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICB2YXIgZ3Vlc3NCcm93c2VyID0gcmVxdWlyZSgnLi4vdXRpbCcpLmd1ZXNzQnJvd3NlcjtcbiAgc3dpdGNoIChndWVzc0Jyb3dzZXIoKSkge1xuICAgIGNhc2UgJ2Nocm9tZSc6XG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2hyb21lJyk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdmaXJlZm94JzpcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9maXJlZm94Jyk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzYWZhcmknOlxuICAgICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3NhZmFyaScpO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gUlRDUGVlckNvbm5lY3Rpb247XG4gICAgICBicmVhaztcbiAgfVxufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBSVENQZWVyQ29ubmVjdGlvbigpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1JUQ1BlZXJDb25uZWN0aW9uIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcpeerconnection/index.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcpeerconnection/safari.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcpeerconnection/safari.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCPeerConnection, RTCSessionDescription */\n\n\nvar EventTarget = __webpack_require__(/*! ../util/eventtarget */ \"./node_modules/@twilio/webrtc/lib/util/eventtarget.js\");\nvar inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\nvar Latch = __webpack_require__(/*! ../util/latch */ \"./node_modules/@twilio/webrtc/lib/util/latch.js\");\nvar sdpUtils = __webpack_require__(/*! ../util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\");\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\");\n\nvar isUnifiedPlan = sdpUtils.getSdpFormat() === 'unified';\n\nvar updateTrackIdsToSSRCs = isUnifiedPlan\n  ? sdpUtils.updateUnifiedPlanTrackIdsToSSRCs\n  : sdpUtils.updatePlanBTrackIdsToSSRCs;\n\nfunction SafariRTCPeerConnection(configuration) {\n  if (!(this instanceof SafariRTCPeerConnection)) {\n    return new SafariRTCPeerConnection(configuration);\n  }\n\n  EventTarget.call(this);\n\n  util.interceptEvent(this, 'datachannel');\n  util.interceptEvent(this, 'iceconnectionstatechange');\n  util.interceptEvent(this, 'signalingstatechange');\n  util.interceptEvent(this, 'track');\n\n  var peerConnection = new RTCPeerConnection(configuration);\n\n  Object.defineProperties(this, {\n    _appliedTracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    _audioTransceiver: {\n      value: null,\n      writable: true\n    },\n    _isClosed: {\n      value: false,\n      writable: true\n    },\n    _peerConnection: {\n      value: peerConnection\n    },\n    _pendingLocalOffer: {\n      value: null,\n      writable: true\n    },\n    _pendingRemoteOffer: {\n      value: null,\n      writable: true\n    },\n    _rolledBackTracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    _signalingStateLatch: {\n      value: new Latch()\n    },\n    _tracksToSSRCs: {\n      value: new Map(),\n      writable: true\n    },\n    _videoTransceiver: {\n      value: null,\n      writable: true\n    },\n    localDescription: {\n      enumerable: true,\n      get: function() {\n        return this._pendingLocalOffer || this._peerConnection.localDescription;\n      }\n    },\n    iceConnectionState: {\n      enumerable: true,\n      get: function() {\n        return this._isClosed ? 'closed' : this._peerConnection.iceConnectionState;\n      }\n    },\n    iceGatheringState: {\n      enumerable: true,\n      get: function() {\n        return this._isClosed ? 'complete' : this._peerConnection.iceGatheringState;\n      }\n    },\n    remoteDescription: {\n      enumerable: true,\n      get: function() {\n        return this._pendingRemoteOffer || this._peerConnection.remoteDescription;\n      }\n    },\n    signalingState: {\n      enumerable: true,\n      get: function() {\n        if (this._isClosed) {\n          return 'closed';\n        } else if (this._pendingLocalOffer) {\n          return 'have-local-offer';\n        } else if (this._pendingRemoteOffer) {\n          return 'have-remote-offer';\n        }\n        return this._peerConnection.signalingState;\n      }\n    }\n  });\n\n  var self = this;\n\n  peerConnection.addEventListener('datachannel', function ondatachannel(event) {\n    shimDataChannel(event.channel);\n    self.dispatchEvent(event);\n  });\n\n  peerConnection.addEventListener('iceconnectionstatechange', function oniceconnectionstatechange() {\n    if (self._isClosed) {\n      return;\n    }\n    self.dispatchEvent.apply(self, arguments);\n  });\n\n  peerConnection.addEventListener('signalingstatechange', function onsignalingstatechange() {\n    if (self._isClosed) {\n      return;\n    }\n    if (peerConnection.signalingState === 'stable') {\n      self._appliedTracksToSSRCs = new Map(self._tracksToSSRCs);\n    }\n    if (!self._pendingLocalOffer && !self._pendingRemoteOffer) {\n      self.dispatchEvent.apply(self, arguments);\n    }\n  });\n\n  // NOTE(syerrapragada): This ensures that SafariRTCPeerConnection's \"remoteDescription\", when accessed\n  // in an RTCTrackEvent listener, will point to the underlying RTCPeerConnection's\n  // \"remoteDescription\". Before this fix, this was still pointing to \"_pendingRemoteOffer\"\n  // even though a new remote RTCSessionDescription had already been applied.\n  peerConnection.addEventListener('track', function ontrack(event) {\n    self._pendingRemoteOffer = null;\n    self.dispatchEvent(event);\n  });\n\n  util.proxyProperties(RTCPeerConnection.prototype, this, peerConnection);\n}\n\ninherits(SafariRTCPeerConnection, EventTarget);\n\nSafariRTCPeerConnection.prototype.addIceCandidate = function addIceCandidate(candidate) {\n  var self = this;\n  if (this.signalingState === 'have-remote-offer') {\n    return this._signalingStateLatch.when('low').then(function signalingStatesResolved() {\n      return self._peerConnection.addIceCandidate(candidate);\n    });\n  }\n  return this._peerConnection.addIceCandidate(candidate);\n};\n\nSafariRTCPeerConnection.prototype.createOffer = function createOffer(options) {\n  options = Object.assign({}, options);\n  var self = this;\n\n  // NOTE(mroberts): In general, this is not the way to do this; however, it's\n  // good enough for our application.\n  if (options.offerToReceiveAudio && !this._audioTransceiver && !(isUnifiedPlan && hasReceiversForTracksOfKind(this, 'audio'))) {\n    delete options.offerToReceiveAudio;\n    try {\n      this._audioTransceiver = isUnifiedPlan\n        ? this.addTransceiver('audio', { direction: 'recvonly' })\n        : this.addTransceiver('audio');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  if (options.offerToReceiveVideo && !this._videoTransceiver && !(isUnifiedPlan && hasReceiversForTracksOfKind(this, 'video'))) {\n    delete options.offerToReceiveVideo;\n    try {\n      this._videoTransceiver = isUnifiedPlan\n        ? this.addTransceiver('video', { direction: 'recvonly' })\n        : this.addTransceiver('video');\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  return this._peerConnection.createOffer(options).then(function(offer) {\n    // NOTE(mmalavalli): If createOffer() is called immediately after rolling back,\n    // then we no longer need to retain the rolled back tracks to SSRCs Map.\n    self._rolledBackTracksToSSRCs.clear();\n\n    return new RTCSessionDescription({\n      type: offer.type,\n      sdp: updateTrackIdsToSSRCs(self._tracksToSSRCs, offer.sdp)\n    });\n  });\n};\n\nSafariRTCPeerConnection.prototype.createAnswer = function createAnswer(options) {\n  var self = this;\n\n  if (this._pendingRemoteOffer) {\n    return this._peerConnection.setRemoteDescription(this._pendingRemoteOffer).then(function setRemoteDescriptionSucceeded() {\n      self._signalingStateLatch.lower();\n      return self._peerConnection.createAnswer();\n    }).then(function createAnswerSucceeded(answer) {\n      self._pendingRemoteOffer = null;\n\n      // NOTE(mmalavalli): If createAnswer() is called immediately after rolling back, then we no\n      // longer need to retain the rolled back tracks to SSRCs Map.\n      self._rolledBackTracksToSSRCs.clear();\n\n      return isUnifiedPlan ? new RTCSessionDescription({\n        type: answer.type,\n        sdp: updateTrackIdsToSSRCs(self._tracksToSSRCs, answer.sdp)\n      }) : answer;\n    }, function setRemoteDescriptionOrCreateAnswerFailed(error) {\n      self._pendingRemoteOffer = null;\n      throw error;\n    });\n  }\n\n  return this._peerConnection.createAnswer(options).then(function createAnswerSucceeded(answer) {\n    // NOTE(mmalavalli): If createAnswer() is called immediately after rolling back, then we no\n    // longer need to retain the rolled back tracks to SSRCs Map.\n    self._rolledBackTracksToSSRCs.clear();\n\n    return isUnifiedPlan ? new RTCSessionDescription({\n      type: answer.type,\n      sdp: updateTrackIdsToSSRCs(self._tracksToSSRCs, answer.sdp)\n    }) : answer;\n  });\n};\n\nSafariRTCPeerConnection.prototype.createDataChannel = function createDataChannel(label, dataChannelDict) {\n  var dataChannel = this._peerConnection.createDataChannel(label, dataChannelDict);\n  shimDataChannel(dataChannel);\n  return dataChannel;\n};\n\nSafariRTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n  sender.replaceTrack(null);\n  this._peerConnection.removeTrack(sender);\n};\n\nSafariRTCPeerConnection.prototype.setLocalDescription = function setLocalDescription(description) {\n  // NOTE(mmalavalli): If setLocalDescription() is called immediately after rolling back,\n  // then we need to restore the rolled back tracks to SSRCs Map.\n  if (this._rolledBackTracksToSSRCs.size > 0) {\n    this._tracksToSSRCs = new Map(this._rolledBackTracksToSSRCs);\n    this._rolledBackTracksToSSRCs.clear();\n  }\n  return setDescription(this, true, description);\n};\n\nSafariRTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(description) {\n  // NOTE(mmalavalli): If setRemoteDescription() is called immediately after rolling back,\n  // then we no longer need to retain the rolled back tracks to SSRCs Map.\n  this._rolledBackTracksToSSRCs.clear();\n  return setDescription(this, false, description);\n};\n\nSafariRTCPeerConnection.prototype.close = function close() {\n  if (this._isClosed) {\n    return;\n  }\n  this._isClosed = true;\n  this._peerConnection.close();\n  var self = this;\n  setTimeout(function() {\n    self.dispatchEvent(new Event('iceconnectionstatechange'));\n    self.dispatchEvent(new Event('signalingstatechange'));\n  });\n};\n\nutil.delegateMethods(\n  RTCPeerConnection.prototype,\n  SafariRTCPeerConnection.prototype,\n  '_peerConnection');\n\nfunction setDescription(peerConnection, local, description) {\n  function setPendingLocalOffer(offer) {\n    if (local) {\n      peerConnection._pendingLocalOffer = offer;\n    } else {\n      peerConnection._pendingRemoteOffer = offer;\n    }\n  }\n\n  function clearPendingLocalOffer() {\n    if (local) {\n      peerConnection._pendingLocalOffer = null;\n    } else {\n      peerConnection._pendingRemoteOffer = null;\n    }\n  }\n\n  var pendingLocalOffer = local ? peerConnection._pendingLocalOffer : peerConnection._pendingRemoteOffer;\n  var pendingRemoteOffer = local ? peerConnection._pendingRemoteOffer : peerConnection._pendingLocalOffer;\n  var intermediateState = local ? 'have-local-offer' : 'have-remote-offer';\n  var setLocalDescription = local ? 'setLocalDescription' : 'setRemoteDescription';\n\n  if (!local && pendingRemoteOffer && description.type === 'answer') {\n    return setRemoteAnswer(peerConnection, description);\n  } else if (description.type === 'offer') {\n    if (peerConnection.signalingState !== intermediateState && peerConnection.signalingState !== 'stable') {\n      return Promise.reject(new Error('Cannot set ' + (local ? 'local' : 'remote') +\n        ' offer in state ' + peerConnection.signalingState));\n    }\n\n    if (!pendingLocalOffer && peerConnection._signalingStateLatch.state === 'low') {\n      peerConnection._signalingStateLatch.raise();\n    }\n    var previousSignalingState = peerConnection.signalingState;\n    setPendingLocalOffer(description);\n\n    // Only dispatch a signalingstatechange event if we transitioned.\n    if (peerConnection.signalingState !== previousSignalingState) {\n      return Promise.resolve().then(function dispatchSignalingStateChangeEvent() {\n        peerConnection.dispatchEvent(new Event('signalingstatechange'));\n      });\n    }\n\n    return Promise.resolve();\n  } else if (description.type === 'rollback') {\n    if (peerConnection.signalingState !== intermediateState) {\n      return Promise.reject(new Error('Cannot rollback ' +\n        (local ? 'local' : 'remote') + ' description in ' + peerConnection.signalingState));\n    }\n    clearPendingLocalOffer();\n\n    // NOTE(mmalavalli): We store the rolled back tracks to SSRCs Map here in case\n    // setLocalDescription() is called immediately aftera rollback (without calling\n    // createOffer() or createAnswer()), in which case this roll back is not due to\n    // a glare scenario and this Map should be restored.\n    peerConnection._rolledBackTracksToSSRCs = new Map(peerConnection._tracksToSSRCs);\n    peerConnection._tracksToSSRCs = new Map(peerConnection._appliedTracksToSSRCs);\n\n    return Promise.resolve().then(function dispatchSignalingStateChangeEvent() {\n      peerConnection.dispatchEvent(new Event('signalingstatechange'));\n    });\n  }\n\n  return peerConnection._peerConnection[setLocalDescription](description);\n}\n\nfunction setRemoteAnswer(peerConnection, answer) {\n  var pendingLocalOffer = peerConnection._pendingLocalOffer;\n  return peerConnection._peerConnection.setLocalDescription(pendingLocalOffer).then(function setLocalOfferSucceeded() {\n    peerConnection._pendingLocalOffer = null;\n    return peerConnection.setRemoteDescription(answer);\n  }).then(function setRemoteAnswerSucceeded() {\n    peerConnection._signalingStateLatch.lower();\n  });\n}\n\n/**\n * Whether a SafariRTCPeerConnection has any RTCRtpReceivers(s) for the given\n * MediaStreamTrack kind.\n * @param {SafariRTCPeerConnection} peerConnection\n * @param {'audio' | 'video'} kind\n * @returns {boolean}\n */\nfunction hasReceiversForTracksOfKind(peerConnection, kind) {\n  return !!peerConnection.getTransceivers().find(function(transceiver) {\n    return transceiver.receiver && transceiver.receiver.track && transceiver.receiver.track.kind === kind;\n  });\n}\n\n/**\n * Shim an RTCDataChannel. This function mutates the RTCDataChannel.\n * @param {RTCDataChannel} dataChannel\n * @returns {RTCDataChannel}\n */\nfunction shimDataChannel(dataChannel) {\n  return Object.defineProperties(dataChannel, {\n    maxPacketLifeTime: {\n      value: dataChannel.maxPacketLifeTime === 65535\n        ? null\n        : dataChannel.maxPacketLifeTime\n    },\n    maxRetransmits: {\n      value: dataChannel.maxRetransmits === 65535\n        ? null\n        : dataChannel.maxRetransmits\n    }\n  });\n}\n\nmodule.exports = SafariRTCPeerConnection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcpeerconnection/safari.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcrtpsender.js":
/*!*********************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcrtpsender.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * RTCRtpSender shim.\n * @param {MediaStreamTrack} track\n * @property {MediaStreamTrack} track\n */\nfunction RTCRtpSenderShim(track) {\n  Object.defineProperties(this, {\n    track: {\n      enumerable: true,\n      value: track,\n      writable: true\n    }\n  });\n}\n\n// NOTE(mmalavalli): Because of the way we will be using this shim, there\n// are a couple of use cases that will not be covered:\n//\n// /* Case 1 */\n// const sender = pc.addTrack(track);\n// assert.equal(sender.track, track);\n// pc.removeTrack(sender);\n// assert.equal(sender.track, null); /* Error */\n//\n// /* Case 2 */\n// const sender = pc.addTrack(track);\n// const senders1 = new Set(pc.getSenders());\n// assert(senders1.has(sender));\n// pc.removeTrack(track);\n// const senders2 = new Set(pc.getSenders());\n// assert(senders2.has(sender)); /* Error */\n//\n// For now, since we only use senders for passing them to RTCPeerConnection#removeTrack(),\n// we will omit handling these use cases for now, and revisit them when we start\n// using the RTCRtpSender APIs.\n\nmodule.exports = RTCRtpSenderShim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3J0cHNlbmRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AdHdpbGlvL3dlYnJ0Yy9saWIvcnRjcnRwc2VuZGVyLmpzPzUxMDciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFJUQ1J0cFNlbmRlciBzaGltLlxuICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfSB0cmFja1xuICogQHByb3BlcnR5IHtNZWRpYVN0cmVhbVRyYWNrfSB0cmFja1xuICovXG5mdW5jdGlvbiBSVENSdHBTZW5kZXJTaGltKHRyYWNrKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICB0cmFjazoge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB0cmFjayxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbn1cblxuLy8gTk9URShtbWFsYXZhbGxpKTogQmVjYXVzZSBvZiB0aGUgd2F5IHdlIHdpbGwgYmUgdXNpbmcgdGhpcyBzaGltLCB0aGVyZVxuLy8gYXJlIGEgY291cGxlIG9mIHVzZSBjYXNlcyB0aGF0IHdpbGwgbm90IGJlIGNvdmVyZWQ6XG4vL1xuLy8gLyogQ2FzZSAxICovXG4vLyBjb25zdCBzZW5kZXIgPSBwYy5hZGRUcmFjayh0cmFjayk7XG4vLyBhc3NlcnQuZXF1YWwoc2VuZGVyLnRyYWNrLCB0cmFjayk7XG4vLyBwYy5yZW1vdmVUcmFjayhzZW5kZXIpO1xuLy8gYXNzZXJ0LmVxdWFsKHNlbmRlci50cmFjaywgbnVsbCk7IC8qIEVycm9yICovXG4vL1xuLy8gLyogQ2FzZSAyICovXG4vLyBjb25zdCBzZW5kZXIgPSBwYy5hZGRUcmFjayh0cmFjayk7XG4vLyBjb25zdCBzZW5kZXJzMSA9IG5ldyBTZXQocGMuZ2V0U2VuZGVycygpKTtcbi8vIGFzc2VydChzZW5kZXJzMS5oYXMoc2VuZGVyKSk7XG4vLyBwYy5yZW1vdmVUcmFjayh0cmFjayk7XG4vLyBjb25zdCBzZW5kZXJzMiA9IG5ldyBTZXQocGMuZ2V0U2VuZGVycygpKTtcbi8vIGFzc2VydChzZW5kZXJzMi5oYXMoc2VuZGVyKSk7IC8qIEVycm9yICovXG4vL1xuLy8gRm9yIG5vdywgc2luY2Ugd2Ugb25seSB1c2Ugc2VuZGVycyBmb3IgcGFzc2luZyB0aGVtIHRvIFJUQ1BlZXJDb25uZWN0aW9uI3JlbW92ZVRyYWNrKCksXG4vLyB3ZSB3aWxsIG9taXQgaGFuZGxpbmcgdGhlc2UgdXNlIGNhc2VzIGZvciBub3csIGFuZCByZXZpc2l0IHRoZW0gd2hlbiB3ZSBzdGFydFxuLy8gdXNpbmcgdGhlIFJUQ1J0cFNlbmRlciBBUElzLlxuXG5tb2R1bGUuZXhwb3J0cyA9IFJUQ1J0cFNlbmRlclNoaW07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcrtpsender.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcsessiondescription/chrome.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcsessiondescription/chrome.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCSessionDescription */\n\n\n// This class wraps Chrome's RTCSessionDescription implementation. It provides\n// one piece of functionality not currently present in Chrome, namely\n//\n//   1. Rollback support\n//      https://bugs.chromium.org/p/webrtc/issues/detail?id=4676\n//\nfunction ChromeRTCSessionDescription(descriptionInitDict) {\n  if (!(this instanceof ChromeRTCSessionDescription)) {\n    return new ChromeRTCSessionDescription(descriptionInitDict);\n  }\n\n  // If this constructor is called with an object with a .type property set to\n  // \"rollback\", we should not call Chrome's RTCSessionDescription constructor,\n  // because this would throw an RTCSdpType error.\n  var description = descriptionInitDict && descriptionInitDict.type === 'rollback'\n    ? null\n    : new RTCSessionDescription(descriptionInitDict);\n\n  Object.defineProperties(this, {\n    _description: {\n      get: function() {\n        return description;\n      }\n    },\n    sdp: {\n      enumerable: true,\n      value: description ? description.sdp : descriptionInitDict.sdp\n    },\n    type: {\n      enumerable: true,\n      value: description ? description.type : descriptionInitDict.type\n    }\n  });\n}\n\nmodule.exports = ChromeRTCSessionDescription;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3Nlc3Npb25kZXNjcmlwdGlvbi9jaHJvbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3Nlc3Npb25kZXNjcmlwdGlvbi9jaHJvbWUuanM/OWE0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIFJUQ1Nlc3Npb25EZXNjcmlwdGlvbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyBUaGlzIGNsYXNzIHdyYXBzIENocm9tZSdzIFJUQ1Nlc3Npb25EZXNjcmlwdGlvbiBpbXBsZW1lbnRhdGlvbi4gSXQgcHJvdmlkZXNcbi8vIG9uZSBwaWVjZSBvZiBmdW5jdGlvbmFsaXR5IG5vdCBjdXJyZW50bHkgcHJlc2VudCBpbiBDaHJvbWUsIG5hbWVseVxuLy9cbi8vICAgMS4gUm9sbGJhY2sgc3VwcG9ydFxuLy8gICAgICBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3Avd2VicnRjL2lzc3Vlcy9kZXRhaWw/aWQ9NDY3NlxuLy9cbmZ1bmN0aW9uIENocm9tZVJUQ1Nlc3Npb25EZXNjcmlwdGlvbihkZXNjcmlwdGlvbkluaXREaWN0KSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBDaHJvbWVSVENTZXNzaW9uRGVzY3JpcHRpb24pKSB7XG4gICAgcmV0dXJuIG5ldyBDaHJvbWVSVENTZXNzaW9uRGVzY3JpcHRpb24oZGVzY3JpcHRpb25Jbml0RGljdCk7XG4gIH1cblxuICAvLyBJZiB0aGlzIGNvbnN0cnVjdG9yIGlzIGNhbGxlZCB3aXRoIGFuIG9iamVjdCB3aXRoIGEgLnR5cGUgcHJvcGVydHkgc2V0IHRvXG4gIC8vIFwicm9sbGJhY2tcIiwgd2Ugc2hvdWxkIG5vdCBjYWxsIENocm9tZSdzIFJUQ1Nlc3Npb25EZXNjcmlwdGlvbiBjb25zdHJ1Y3RvcixcbiAgLy8gYmVjYXVzZSB0aGlzIHdvdWxkIHRocm93IGFuIFJUQ1NkcFR5cGUgZXJyb3IuXG4gIHZhciBkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uSW5pdERpY3QgJiYgZGVzY3JpcHRpb25Jbml0RGljdC50eXBlID09PSAncm9sbGJhY2snXG4gICAgPyBudWxsXG4gICAgOiBuZXcgUlRDU2Vzc2lvbkRlc2NyaXB0aW9uKGRlc2NyaXB0aW9uSW5pdERpY3QpO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBfZGVzY3JpcHRpb246IHtcbiAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNkcDoge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBkZXNjcmlwdGlvbiA/IGRlc2NyaXB0aW9uLnNkcCA6IGRlc2NyaXB0aW9uSW5pdERpY3Quc2RwXG4gICAgfSxcbiAgICB0eXBlOiB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGRlc2NyaXB0aW9uID8gZGVzY3JpcHRpb24udHlwZSA6IGRlc2NyaXB0aW9uSW5pdERpY3QudHlwZVxuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2hyb21lUlRDU2Vzc2lvbkRlc2NyaXB0aW9uO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcsessiondescription/chrome.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcsessiondescription/firefox.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcsessiondescription/firefox.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCSessionDescription */\n\n\nmodule.exports = RTCSessionDescription;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3Nlc3Npb25kZXNjcmlwdGlvbi9maXJlZm94LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B0d2lsaW8vd2VicnRjL2xpYi9ydGNzZXNzaW9uZGVzY3JpcHRpb24vZmlyZWZveC5qcz85YWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgUlRDU2Vzc2lvbkRlc2NyaXB0aW9uICovXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUlRDU2Vzc2lvbkRlc2NyaXB0aW9uO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcsessiondescription/firefox.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/rtcsessiondescription/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/rtcsessiondescription/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCSessionDescription */\n\n\nif (typeof RTCSessionDescription === 'function') {\n  var guessBrowser = __webpack_require__(/*! ../util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").guessBrowser;\n  switch (guessBrowser()) {\n    case 'chrome':\n      module.exports = __webpack_require__(/*! ./chrome */ \"./node_modules/@twilio/webrtc/lib/rtcsessiondescription/chrome.js\");\n      break;\n    case 'firefox':\n      module.exports = __webpack_require__(/*! ./firefox */ \"./node_modules/@twilio/webrtc/lib/rtcsessiondescription/firefox.js\");\n      break;\n    default:\n      module.exports = RTCSessionDescription;\n      break;\n  }\n} else {\n  module.exports = function RTCSessionDescription() {\n    throw new Error('RTCSessionDescription is not supported');\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3J0Y3Nlc3Npb25kZXNjcmlwdGlvbi9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AdHdpbGlvL3dlYnJ0Yy9saWIvcnRjc2Vzc2lvbmRlc2NyaXB0aW9uL2luZGV4LmpzPzFlNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBSVENTZXNzaW9uRGVzY3JpcHRpb24gKi9cbid1c2Ugc3RyaWN0JztcblxuaWYgKHR5cGVvZiBSVENTZXNzaW9uRGVzY3JpcHRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgdmFyIGd1ZXNzQnJvd3NlciA9IHJlcXVpcmUoJy4uL3V0aWwnKS5ndWVzc0Jyb3dzZXI7XG4gIHN3aXRjaCAoZ3Vlc3NCcm93c2VyKCkpIHtcbiAgICBjYXNlICdjaHJvbWUnOlxuICAgICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nocm9tZScpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZmlyZWZveCc6XG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmlyZWZveCcpO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIG1vZHVsZS5leHBvcnRzID0gUlRDU2Vzc2lvbkRlc2NyaXB0aW9uO1xuICAgICAgYnJlYWs7XG4gIH1cbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gUlRDU2Vzc2lvbkRlc2NyaXB0aW9uKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUlRDU2Vzc2lvbkRlc2NyaXB0aW9uIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/rtcsessiondescription/index.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/util/eventtarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/util/eventtarget.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n/**\n * Event target.\n * @class\n */\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    }\n  });\n}\n\n/**\n * Dispatch an Event to the {@link EventTarget}.\n * @param {Event} event\n */\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\n/**\n * Add an Event listener to the {@link EventTarget}.\n */\nEventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\n};\n\n/**\n * Remove an Event listener to the {@link EventTarget}.\n */\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  return this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\n};\n\nmodule.exports = EventTarget;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvZXZlbnR0YXJnZXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvZXZlbnR0YXJnZXQuanM/ZjMyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbi8qKlxuICogRXZlbnQgdGFyZ2V0LlxuICogQGNsYXNzXG4gKi9cbmZ1bmN0aW9uIEV2ZW50VGFyZ2V0KCkge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgX2V2ZW50RW1pdHRlcjoge1xuICAgICAgdmFsdWU6IG5ldyBFdmVudEVtaXR0ZXIoKVxuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYW4gRXZlbnQgdG8gdGhlIHtAbGluayBFdmVudFRhcmdldH0uXG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICovXG5FdmVudFRhcmdldC5wcm90b3R5cGUuZGlzcGF0Y2hFdmVudCA9IGZ1bmN0aW9uIGRpc3BhdGNoRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KGV2ZW50LnR5cGUsIGV2ZW50KTtcbn07XG5cbi8qKlxuICogQWRkIGFuIEV2ZW50IGxpc3RlbmVyIHRvIHRoZSB7QGxpbmsgRXZlbnRUYXJnZXR9LlxuICovXG5FdmVudFRhcmdldC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIoKSB7XG4gIHJldHVybiB0aGlzLl9ldmVudEVtaXR0ZXIuYWRkTGlzdGVuZXIuYXBwbHkodGhpcy5fZXZlbnRFbWl0dGVyLCBhcmd1bWVudHMpO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gRXZlbnQgbGlzdGVuZXIgdG8gdGhlIHtAbGluayBFdmVudFRhcmdldH0uXG4gKi9cbkV2ZW50VGFyZ2V0LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRMaXN0ZW5lcigpIHtcbiAgcmV0dXJuIHRoaXMuX2V2ZW50RW1pdHRlci5yZW1vdmVMaXN0ZW5lci5hcHBseSh0aGlzLl9ldmVudEVtaXR0ZXIsIGFyZ3VtZW50cyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50VGFyZ2V0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/util/eventtarget.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/util/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/util/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Create a {@link Deferred}.\n * @returns {Deferred}\n */\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function(resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\n/**\n * Copy a method from a `source` prototype onto a `wrapper` prototype. Invoking\n * the method on the `wrapper` prototype will invoke the corresponding method\n * on an instance accessed by `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @param {string} methodName\n * @returns {undefined}\n */\nfunction delegateMethod(source, wrapper, target, methodName) {\n  if (methodName in wrapper) {\n    // Skip any methods already set.\n    return;\n  } else if (methodName.match(/^on[a-z]+$/)) {\n    // Skip EventHandlers (these are handled in the constructor).\n    return;\n  }\n\n  var type;\n  try {\n    type = typeof source[methodName];\n  } catch (error) {\n    // NOTE(mroberts): Attempting to check the type of non-function members\n    // on the prototype throws an error for some types.\n  }\n\n  if (type !== 'function') {\n    // Skip non-function members.\n    return;\n  }\n\n  /* eslint no-loop-func:0 */\n  wrapper[methodName] = function() {\n    return this[target][methodName].apply(this[target], arguments);\n  };\n}\n\n/**\n * Copy methods from a `source` prototype onto a `wrapper` prototype. Invoking\n * the methods on the `wrapper` prototype will invoke the corresponding method\n * on an instance accessed by `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @returns {undefined}\n */\nfunction delegateMethods(source, wrapper, target) {\n  for (var methodName in source) {\n    delegateMethod(source, wrapper, target, methodName);\n  }\n}\n\n/**\n * Finds the items in list1 that are not in list2.\n * @param {Array<*>|Map<*>|Set<*>} list1\n * @param {Array<*>|Map<*>|Set<*>} list2\n * @returns {Set}\n */\nfunction difference(list1, list2) {\n  list1 = Array.isArray(list1) ? new Set(list1) : new Set(list1.values());\n  list2 = Array.isArray(list2) ? new Set(list2) : new Set(list2.values());\n\n  var difference = new Set();\n\n  list1.forEach(function(item) {\n    if (!list2.has(item)) {\n      difference.add(item);\n    }\n  });\n\n  return difference;\n}\n\n/**\n * Map a list to an array of arrays, and return the flattened result.\n * @param {Array<*>|Set<*>|Map<*>} list\n * @param {function(*): Array<*>} mapFn\n * @returns Array<*>\n */\nfunction flatMap(list, mapFn) {\n  var listArray = list instanceof Map || list instanceof Set\n    ? Array.from(list.values())\n    : list;\n\n  return listArray.reduce(function(flattened, item) {\n    var mapped = mapFn(item);\n    return flattened.concat(mapped);\n  }, []);\n}\n\n/**\n * Get the browser's user agent, if available.\n * @returns {?string}\n */\nfunction getUserAgent() {\n  return typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string'\n    ? navigator.userAgent\n    : null;\n}\n\n/**\n * Guess the browser.\n * @param {string} [userAgent=navigator.userAgent]\n * @returns {?string} browser - \"chrome\", \"firefox\", \"safari\", or null\n */\nfunction guessBrowser(userAgent) {\n  if (typeof userAgent === 'undefined') {\n    userAgent = getUserAgent();\n  }\n  if (/Chrome|CriOS/.test(userAgent)) {\n    return 'chrome';\n  }\n  if (/Firefox|FxiOS/.test(userAgent)) {\n    return 'firefox';\n  }\n  if (/Safari/.test(userAgent)) {\n    return 'safari';\n  }\n  return null;\n}\n\n/**\n * Guess the browser version.\n * @param {string} [userAgent=navigator.userAgent]\n * @returns {?{major: number, minor: number}}\n */\nfunction guessBrowserVersion(userAgent) {\n  if (typeof userAgent === 'undefined') {\n    userAgent = getUserAgent();\n  }\n  var prefix = {\n    chrome: 'Chrome|CriOS',\n    firefox: 'Firefox|FxiOS',\n    safari: 'Version'\n  }[guessBrowser(userAgent)];\n\n  if (!prefix) {\n    return null;\n  }\n  var regex = new RegExp('(' + prefix + ')/([^\\\\s]+)');\n  var match = (userAgent.match(regex) || [])[2];\n\n  if (!match) {\n    return null;\n  }\n  var versions = match.split('.').map(Number);\n  return {\n    major: isNaN(versions[0]) ? null : versions[0],\n    minor: isNaN(versions[1]) ? null : versions[1]\n  };\n}\n\n/**\n * Intercept an event that might otherwise be proxied on an EventTarget.\n * @param {EventTarget} target\n * @param {string} type\n * @returns {void}\n */\nfunction interceptEvent(target, type) {\n  var currentListener = null;\n  Object.defineProperty(target, 'on' + type, {\n    get: function() {\n      return currentListener;\n    },\n    set: function(newListener) {\n      if (currentListener) {\n        this.removeEventListener(type, currentListener);\n      }\n\n      if (typeof newListener === 'function') {\n        currentListener = newListener;\n        this.addEventListener(type, currentListener);\n      } else {\n        currentListener = null;\n      }\n    }\n  });\n}\n\n/**\n * This is a function for turning a Promise into the kind referenced in the\n * Legacy Interface Extensions section of the WebRTC spec.\n * @param {Promise<*>} promise\n * @param {function<*>} onSuccess\n * @param {function<Error>} onFailure\n * @returns {Promise<undefined>}\n */\nfunction legacyPromise(promise, onSuccess, onFailure) {\n  if (onSuccess) {\n    return promise.then(function(result) {\n      onSuccess(result);\n    }, function(error) {\n      onFailure(error);\n    });\n  }\n  return promise;\n}\n\n/**\n * Make a unique ID.\n * @return {string}\n */\nfunction makeUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n/**\n * For each property name on the `source` prototype, add getters and/or setters\n * to `wrapper` that proxy to `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @returns {undefined}\n */\nfunction proxyProperties(source, wrapper, target) {\n  Object.getOwnPropertyNames(source).forEach(function(propertyName) {\n    proxyProperty(source, wrapper, target, propertyName);\n  });\n}\n\n/**\n * For the property name on the `source` prototype, add a getter and/or setter\n * to `wrapper` that proxies to `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @param {string} propertyName\n * @returns {undefined}\n */\nfunction proxyProperty(source, wrapper, target, propertyName) {\n  if (propertyName in wrapper) {\n    // Skip any properties already set.\n    return;\n  } else if (propertyName.match(/^on[a-z]+$/)) {\n    Object.defineProperty(wrapper, propertyName, {\n      value: null,\n      writable: true\n    });\n\n    target.addEventListener(propertyName.slice(2), function() {\n      wrapper.dispatchEvent.apply(wrapper, arguments);\n    });\n\n    return;\n  }\n\n  Object.defineProperty(wrapper, propertyName, {\n    enumerable: true,\n    get: function() {\n      return target[propertyName];\n    }\n  });\n}\n\n/**\n * Check whether native WebRTC APIs are supported.\n * @returns {boolean}\n */\nfunction support() {\n  return typeof navigator === 'object'\n    && typeof navigator.mediaDevices === 'object'\n    && typeof navigator.mediaDevices.getUserMedia === 'function'\n    && typeof RTCPeerConnection === 'function';\n}\n\n/**\n * @typedef {object} Deferred\n * @property {Promise} promise\n * @property {function} reject\n * @property {function} resolve\n */\n\nexports.defer = defer;\nexports.delegateMethods = delegateMethods;\nexports.difference = difference;\nexports.flatMap = flatMap;\nexports.guessBrowser = guessBrowser;\nexports.guessBrowserVersion = guessBrowserVersion;\nexports.interceptEvent = interceptEvent;\nexports.legacyPromise = legacyPromise;\nexports.makeUUID = makeUUID;\nexports.proxyProperties = proxyProperties;\nexports.support = support;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvaW5kZXguanM/MDU2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlIGEge0BsaW5rIERlZmVycmVkfS5cbiAqIEByZXR1cm5zIHtEZWZlcnJlZH1cbiAqL1xuZnVuY3Rpb24gZGVmZXIoKSB7XG4gIHZhciBkZWZlcnJlZCA9IHt9O1xuICBkZWZlcnJlZC5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgZGVmZXJyZWQucmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgZGVmZXJyZWQucmVqZWN0ID0gcmVqZWN0O1xuICB9KTtcbiAgcmV0dXJuIGRlZmVycmVkO1xufVxuXG4vKipcbiAqIENvcHkgYSBtZXRob2QgZnJvbSBhIGBzb3VyY2VgIHByb3RvdHlwZSBvbnRvIGEgYHdyYXBwZXJgIHByb3RvdHlwZS4gSW52b2tpbmdcbiAqIHRoZSBtZXRob2Qgb24gdGhlIGB3cmFwcGVyYCBwcm90b3R5cGUgd2lsbCBpbnZva2UgdGhlIGNvcnJlc3BvbmRpbmcgbWV0aG9kXG4gKiBvbiBhbiBpbnN0YW5jZSBhY2Nlc3NlZCBieSBgdGFyZ2V0YC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBzb3VyY2VcbiAqIEBwYXJhbSB7b2JqZWN0fSB3cmFwcGVyXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0XG4gKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kTmFtZVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gZGVsZWdhdGVNZXRob2Qoc291cmNlLCB3cmFwcGVyLCB0YXJnZXQsIG1ldGhvZE5hbWUpIHtcbiAgaWYgKG1ldGhvZE5hbWUgaW4gd3JhcHBlcikge1xuICAgIC8vIFNraXAgYW55IG1ldGhvZHMgYWxyZWFkeSBzZXQuXG4gICAgcmV0dXJuO1xuICB9IGVsc2UgaWYgKG1ldGhvZE5hbWUubWF0Y2goL15vblthLXpdKyQvKSkge1xuICAgIC8vIFNraXAgRXZlbnRIYW5kbGVycyAodGhlc2UgYXJlIGhhbmRsZWQgaW4gdGhlIGNvbnN0cnVjdG9yKS5cbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgdHlwZTtcbiAgdHJ5IHtcbiAgICB0eXBlID0gdHlwZW9mIHNvdXJjZVttZXRob2ROYW1lXTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBOT1RFKG1yb2JlcnRzKTogQXR0ZW1wdGluZyB0byBjaGVjayB0aGUgdHlwZSBvZiBub24tZnVuY3Rpb24gbWVtYmVyc1xuICAgIC8vIG9uIHRoZSBwcm90b3R5cGUgdGhyb3dzIGFuIGVycm9yIGZvciBzb21lIHR5cGVzLlxuICB9XG5cbiAgaWYgKHR5cGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBTa2lwIG5vbi1mdW5jdGlvbiBtZW1iZXJzLlxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qIGVzbGludCBuby1sb29wLWZ1bmM6MCAqL1xuICB3cmFwcGVyW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXNbdGFyZ2V0XVttZXRob2ROYW1lXS5hcHBseSh0aGlzW3RhcmdldF0sIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbi8qKlxuICogQ29weSBtZXRob2RzIGZyb20gYSBgc291cmNlYCBwcm90b3R5cGUgb250byBhIGB3cmFwcGVyYCBwcm90b3R5cGUuIEludm9raW5nXG4gKiB0aGUgbWV0aG9kcyBvbiB0aGUgYHdyYXBwZXJgIHByb3RvdHlwZSB3aWxsIGludm9rZSB0aGUgY29ycmVzcG9uZGluZyBtZXRob2RcbiAqIG9uIGFuIGluc3RhbmNlIGFjY2Vzc2VkIGJ5IGB0YXJnZXRgLlxuICogQHBhcmFtIHtvYmplY3R9IHNvdXJjZVxuICogQHBhcmFtIHtvYmplY3R9IHdyYXBwZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIGRlbGVnYXRlTWV0aG9kcyhzb3VyY2UsIHdyYXBwZXIsIHRhcmdldCkge1xuICBmb3IgKHZhciBtZXRob2ROYW1lIGluIHNvdXJjZSkge1xuICAgIGRlbGVnYXRlTWV0aG9kKHNvdXJjZSwgd3JhcHBlciwgdGFyZ2V0LCBtZXRob2ROYW1lKTtcbiAgfVxufVxuXG4vKipcbiAqIEZpbmRzIHRoZSBpdGVtcyBpbiBsaXN0MSB0aGF0IGFyZSBub3QgaW4gbGlzdDIuXG4gKiBAcGFyYW0ge0FycmF5PCo+fE1hcDwqPnxTZXQ8Kj59IGxpc3QxXG4gKiBAcGFyYW0ge0FycmF5PCo+fE1hcDwqPnxTZXQ8Kj59IGxpc3QyXG4gKiBAcmV0dXJucyB7U2V0fVxuICovXG5mdW5jdGlvbiBkaWZmZXJlbmNlKGxpc3QxLCBsaXN0Mikge1xuICBsaXN0MSA9IEFycmF5LmlzQXJyYXkobGlzdDEpID8gbmV3IFNldChsaXN0MSkgOiBuZXcgU2V0KGxpc3QxLnZhbHVlcygpKTtcbiAgbGlzdDIgPSBBcnJheS5pc0FycmF5KGxpc3QyKSA/IG5ldyBTZXQobGlzdDIpIDogbmV3IFNldChsaXN0Mi52YWx1ZXMoKSk7XG5cbiAgdmFyIGRpZmZlcmVuY2UgPSBuZXcgU2V0KCk7XG5cbiAgbGlzdDEuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG4gICAgaWYgKCFsaXN0Mi5oYXMoaXRlbSkpIHtcbiAgICAgIGRpZmZlcmVuY2UuYWRkKGl0ZW0pO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGRpZmZlcmVuY2U7XG59XG5cbi8qKlxuICogTWFwIGEgbGlzdCB0byBhbiBhcnJheSBvZiBhcnJheXMsIGFuZCByZXR1cm4gdGhlIGZsYXR0ZW5lZCByZXN1bHQuXG4gKiBAcGFyYW0ge0FycmF5PCo+fFNldDwqPnxNYXA8Kj59IGxpc3RcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKik6IEFycmF5PCo+fSBtYXBGblxuICogQHJldHVybnMgQXJyYXk8Kj5cbiAqL1xuZnVuY3Rpb24gZmxhdE1hcChsaXN0LCBtYXBGbikge1xuICB2YXIgbGlzdEFycmF5ID0gbGlzdCBpbnN0YW5jZW9mIE1hcCB8fCBsaXN0IGluc3RhbmNlb2YgU2V0XG4gICAgPyBBcnJheS5mcm9tKGxpc3QudmFsdWVzKCkpXG4gICAgOiBsaXN0O1xuXG4gIHJldHVybiBsaXN0QXJyYXkucmVkdWNlKGZ1bmN0aW9uKGZsYXR0ZW5lZCwgaXRlbSkge1xuICAgIHZhciBtYXBwZWQgPSBtYXBGbihpdGVtKTtcbiAgICByZXR1cm4gZmxhdHRlbmVkLmNvbmNhdChtYXBwZWQpO1xuICB9LCBbXSk7XG59XG5cbi8qKlxuICogR2V0IHRoZSBicm93c2VyJ3MgdXNlciBhZ2VudCwgaWYgYXZhaWxhYmxlLlxuICogQHJldHVybnMgez9zdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGdldFVzZXJBZ2VudCgpIHtcbiAgcmV0dXJuIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBuYXZpZ2F0b3IudXNlckFnZW50ID09PSAnc3RyaW5nJ1xuICAgID8gbmF2aWdhdG9yLnVzZXJBZ2VudFxuICAgIDogbnVsbDtcbn1cblxuLyoqXG4gKiBHdWVzcyB0aGUgYnJvd3Nlci5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbdXNlckFnZW50PW5hdmlnYXRvci51c2VyQWdlbnRdXG4gKiBAcmV0dXJucyB7P3N0cmluZ30gYnJvd3NlciAtIFwiY2hyb21lXCIsIFwiZmlyZWZveFwiLCBcInNhZmFyaVwiLCBvciBudWxsXG4gKi9cbmZ1bmN0aW9uIGd1ZXNzQnJvd3Nlcih1c2VyQWdlbnQpIHtcbiAgaWYgKHR5cGVvZiB1c2VyQWdlbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdXNlckFnZW50ID0gZ2V0VXNlckFnZW50KCk7XG4gIH1cbiAgaWYgKC9DaHJvbWV8Q3JpT1MvLnRlc3QodXNlckFnZW50KSkge1xuICAgIHJldHVybiAnY2hyb21lJztcbiAgfVxuICBpZiAoL0ZpcmVmb3h8RnhpT1MvLnRlc3QodXNlckFnZW50KSkge1xuICAgIHJldHVybiAnZmlyZWZveCc7XG4gIH1cbiAgaWYgKC9TYWZhcmkvLnRlc3QodXNlckFnZW50KSkge1xuICAgIHJldHVybiAnc2FmYXJpJztcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuLyoqXG4gKiBHdWVzcyB0aGUgYnJvd3NlciB2ZXJzaW9uLlxuICogQHBhcmFtIHtzdHJpbmd9IFt1c2VyQWdlbnQ9bmF2aWdhdG9yLnVzZXJBZ2VudF1cbiAqIEByZXR1cm5zIHs/e21ham9yOiBudW1iZXIsIG1pbm9yOiBudW1iZXJ9fVxuICovXG5mdW5jdGlvbiBndWVzc0Jyb3dzZXJWZXJzaW9uKHVzZXJBZ2VudCkge1xuICBpZiAodHlwZW9mIHVzZXJBZ2VudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB1c2VyQWdlbnQgPSBnZXRVc2VyQWdlbnQoKTtcbiAgfVxuICB2YXIgcHJlZml4ID0ge1xuICAgIGNocm9tZTogJ0Nocm9tZXxDcmlPUycsXG4gICAgZmlyZWZveDogJ0ZpcmVmb3h8RnhpT1MnLFxuICAgIHNhZmFyaTogJ1ZlcnNpb24nXG4gIH1bZ3Vlc3NCcm93c2VyKHVzZXJBZ2VudCldO1xuXG4gIGlmICghcHJlZml4KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgnKCcgKyBwcmVmaXggKyAnKS8oW15cXFxcc10rKScpO1xuICB2YXIgbWF0Y2ggPSAodXNlckFnZW50Lm1hdGNoKHJlZ2V4KSB8fCBbXSlbMl07XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciB2ZXJzaW9ucyA9IG1hdGNoLnNwbGl0KCcuJykubWFwKE51bWJlcik7XG4gIHJldHVybiB7XG4gICAgbWFqb3I6IGlzTmFOKHZlcnNpb25zWzBdKSA/IG51bGwgOiB2ZXJzaW9uc1swXSxcbiAgICBtaW5vcjogaXNOYU4odmVyc2lvbnNbMV0pID8gbnVsbCA6IHZlcnNpb25zWzFdXG4gIH07XG59XG5cbi8qKlxuICogSW50ZXJjZXB0IGFuIGV2ZW50IHRoYXQgbWlnaHQgb3RoZXJ3aXNlIGJlIHByb3hpZWQgb24gYW4gRXZlbnRUYXJnZXQuXG4gKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fSB0YXJnZXRcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gaW50ZXJjZXB0RXZlbnQodGFyZ2V0LCB0eXBlKSB7XG4gIHZhciBjdXJyZW50TGlzdGVuZXIgPSBudWxsO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCAnb24nICsgdHlwZSwge1xuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY3VycmVudExpc3RlbmVyO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbihuZXdMaXN0ZW5lcikge1xuICAgICAgaWYgKGN1cnJlbnRMaXN0ZW5lcikge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgY3VycmVudExpc3RlbmVyKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBuZXdMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjdXJyZW50TGlzdGVuZXIgPSBuZXdMaXN0ZW5lcjtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGN1cnJlbnRMaXN0ZW5lcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50TGlzdGVuZXIgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogVGhpcyBpcyBhIGZ1bmN0aW9uIGZvciB0dXJuaW5nIGEgUHJvbWlzZSBpbnRvIHRoZSBraW5kIHJlZmVyZW5jZWQgaW4gdGhlXG4gKiBMZWdhY3kgSW50ZXJmYWNlIEV4dGVuc2lvbnMgc2VjdGlvbiBvZiB0aGUgV2ViUlRDIHNwZWMuXG4gKiBAcGFyYW0ge1Byb21pc2U8Kj59IHByb21pc2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb248Kj59IG9uU3VjY2Vzc1xuICogQHBhcmFtIHtmdW5jdGlvbjxFcnJvcj59IG9uRmFpbHVyZVxuICogQHJldHVybnMge1Byb21pc2U8dW5kZWZpbmVkPn1cbiAqL1xuZnVuY3Rpb24gbGVnYWN5UHJvbWlzZShwcm9taXNlLCBvblN1Y2Nlc3MsIG9uRmFpbHVyZSkge1xuICBpZiAob25TdWNjZXNzKSB7XG4gICAgcmV0dXJuIHByb21pc2UudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIG9uU3VjY2VzcyhyZXN1bHQpO1xuICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBvbkZhaWx1cmUoZXJyb3IpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG4vKipcbiAqIE1ha2UgYSB1bmlxdWUgSUQuXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIG1ha2VVVUlEKCkge1xuICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbihjKSB7XG4gICAgdmFyIHIgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwO1xuICAgIHZhciB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzIHwgMHg4KTtcbiAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gIH0pO1xufVxuXG4vKipcbiAqIEZvciBlYWNoIHByb3BlcnR5IG5hbWUgb24gdGhlIGBzb3VyY2VgIHByb3RvdHlwZSwgYWRkIGdldHRlcnMgYW5kL29yIHNldHRlcnNcbiAqIHRvIGB3cmFwcGVyYCB0aGF0IHByb3h5IHRvIGB0YXJnZXRgLlxuICogQHBhcmFtIHtvYmplY3R9IHNvdXJjZVxuICogQHBhcmFtIHtvYmplY3R9IHdyYXBwZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIHByb3h5UHJvcGVydGllcyhzb3VyY2UsIHdyYXBwZXIsIHRhcmdldCkge1xuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHlOYW1lKSB7XG4gICAgcHJveHlQcm9wZXJ0eShzb3VyY2UsIHdyYXBwZXIsIHRhcmdldCwgcHJvcGVydHlOYW1lKTtcbiAgfSk7XG59XG5cbi8qKlxuICogRm9yIHRoZSBwcm9wZXJ0eSBuYW1lIG9uIHRoZSBgc291cmNlYCBwcm90b3R5cGUsIGFkZCBhIGdldHRlciBhbmQvb3Igc2V0dGVyXG4gKiB0byBgd3JhcHBlcmAgdGhhdCBwcm94aWVzIHRvIGB0YXJnZXRgLlxuICogQHBhcmFtIHtvYmplY3R9IHNvdXJjZVxuICogQHBhcmFtIHtvYmplY3R9IHdyYXBwZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eU5hbWVcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIHByb3h5UHJvcGVydHkoc291cmNlLCB3cmFwcGVyLCB0YXJnZXQsIHByb3BlcnR5TmFtZSkge1xuICBpZiAocHJvcGVydHlOYW1lIGluIHdyYXBwZXIpIHtcbiAgICAvLyBTa2lwIGFueSBwcm9wZXJ0aWVzIGFscmVhZHkgc2V0LlxuICAgIHJldHVybjtcbiAgfSBlbHNlIGlmIChwcm9wZXJ0eU5hbWUubWF0Y2goL15vblthLXpdKyQvKSkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3cmFwcGVyLCBwcm9wZXJ0eU5hbWUsIHtcbiAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcblxuICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKHByb3BlcnR5TmFtZS5zbGljZSgyKSwgZnVuY3Rpb24oKSB7XG4gICAgICB3cmFwcGVyLmRpc3BhdGNoRXZlbnQuYXBwbHkod3JhcHBlciwgYXJndW1lbnRzKTtcbiAgICB9KTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3cmFwcGVyLCBwcm9wZXJ0eU5hbWUsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5TmFtZV07XG4gICAgfVxuICB9KTtcbn1cblxuLyoqXG4gKiBDaGVjayB3aGV0aGVyIG5hdGl2ZSBXZWJSVEMgQVBJcyBhcmUgc3VwcG9ydGVkLlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnQoKSB7XG4gIHJldHVybiB0eXBlb2YgbmF2aWdhdG9yID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBSVENQZWVyQ29ubmVjdGlvbiA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBEZWZlcnJlZFxuICogQHByb3BlcnR5IHtQcm9taXNlfSBwcm9taXNlXG4gKiBAcHJvcGVydHkge2Z1bmN0aW9ufSByZWplY3RcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IHJlc29sdmVcbiAqL1xuXG5leHBvcnRzLmRlZmVyID0gZGVmZXI7XG5leHBvcnRzLmRlbGVnYXRlTWV0aG9kcyA9IGRlbGVnYXRlTWV0aG9kcztcbmV4cG9ydHMuZGlmZmVyZW5jZSA9IGRpZmZlcmVuY2U7XG5leHBvcnRzLmZsYXRNYXAgPSBmbGF0TWFwO1xuZXhwb3J0cy5ndWVzc0Jyb3dzZXIgPSBndWVzc0Jyb3dzZXI7XG5leHBvcnRzLmd1ZXNzQnJvd3NlclZlcnNpb24gPSBndWVzc0Jyb3dzZXJWZXJzaW9uO1xuZXhwb3J0cy5pbnRlcmNlcHRFdmVudCA9IGludGVyY2VwdEV2ZW50O1xuZXhwb3J0cy5sZWdhY3lQcm9taXNlID0gbGVnYWN5UHJvbWlzZTtcbmV4cG9ydHMubWFrZVVVSUQgPSBtYWtlVVVJRDtcbmV4cG9ydHMucHJveHlQcm9wZXJ0aWVzID0gcHJveHlQcm9wZXJ0aWVzO1xuZXhwb3J0cy5zdXBwb3J0ID0gc3VwcG9ydDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/util/index.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/util/latch.js":
/*!*******************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/util/latch.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defer = __webpack_require__(/*! ./ */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").defer;\n\nvar states = {\n  high: new Set(['low']),\n  low: new Set(['high'])\n};\n\n/**\n * Construct a {@link Latch}.\n * @class\n * @classdesc A {@link Latch} has two states (\"high\" and \"low\") and methods for\n * transitioning between them ({@link Latch#raise} and {@link Latch#lower}).\n * @param {string} [initialState=\"low\"] - either \"high\" or \"low\"\n */\nfunction Latch(initialState) {\n  if (!(this instanceof Latch)) {\n    return new Latch(initialState);\n  }\n  var state = initialState || 'low';\n  Object.defineProperties(this, {\n    _state: {\n      set: function(_state) {\n        if (state !== _state) {\n          state = _state;\n          var whenDeferreds = this._whenDeferreds.get(state);\n          whenDeferreds.forEach(function(deferred) {\n            deferred.resolve(this);\n          }, this);\n          whenDeferreds.clear();\n        }\n      },\n      get: function() {\n        return state;\n      }\n    },\n    _whenDeferreds: {\n      value: new Map([\n        ['high', new Set()],\n        ['low', new Set()]\n      ])\n    },\n    state: {\n      enumerable: true,\n      get: function() {\n        return this._state;\n      }\n    }\n  });\n}\n\n/**\n * Transition to \"low\".\n * @returns {this}\n * @throws {Error}\n */\nLatch.prototype.lower = function lower() {\n  return this.transition('low');\n};\n\n/**\n * Transition to \"high\".\n * @returns {this}\n * @throws {Error}\n */\nLatch.prototype.raise = function raise() {\n  return this.transition('high');\n};\n\n/**\n * Transition to a new state.\n * @param {string} newState\n * @returns {this}\n * @throws {Error}\n */\nLatch.prototype.transition = function transition(newState) {\n  if (!states[this.state].has(newState)) {\n    throw createUnreachableStateError(this.state, newState);\n  }\n  this._state = newState;\n  return this;\n};\n\n/**\n * Return a Promise that resolves when the {@link Latch} transitions to\n * the specified state.\n * @param {string} state\n * @returns {Promise<this>}\n */\nLatch.prototype.when = function when(state) {\n  if (this.state === state) {\n    return Promise.resolve(this);\n  }\n  if (!states[this.state].has(state)) {\n    return Promise.reject(createUnreachableStateError(this.state, state));\n  }\n  var deferred = defer();\n  this._whenDeferreds.get(state).add(deferred);\n  return deferred.promise;\n};\n\n/**\n * Create an unreachable state Error.\n * @param {string} from - state to be transitioned from\n * @param {string} to - state to be transitioned to\n * @return {Error}\n */\nfunction createUnreachableStateError(from, to) {\n  return new Error('Cannot transition from \"' + from + '\" to \"' + to + '\"');\n}\n\nmodule.exports = Latch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvbGF0Y2guanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvbGliL3V0aWwvbGF0Y2guanM/YWVjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBkZWZlciA9IHJlcXVpcmUoJy4vJykuZGVmZXI7XG5cbnZhciBzdGF0ZXMgPSB7XG4gIGhpZ2g6IG5ldyBTZXQoWydsb3cnXSksXG4gIGxvdzogbmV3IFNldChbJ2hpZ2gnXSlcbn07XG5cbi8qKlxuICogQ29uc3RydWN0IGEge0BsaW5rIExhdGNofS5cbiAqIEBjbGFzc1xuICogQGNsYXNzZGVzYyBBIHtAbGluayBMYXRjaH0gaGFzIHR3byBzdGF0ZXMgKFwiaGlnaFwiIGFuZCBcImxvd1wiKSBhbmQgbWV0aG9kcyBmb3JcbiAqIHRyYW5zaXRpb25pbmcgYmV0d2VlbiB0aGVtICh7QGxpbmsgTGF0Y2gjcmFpc2V9IGFuZCB7QGxpbmsgTGF0Y2gjbG93ZXJ9KS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbaW5pdGlhbFN0YXRlPVwibG93XCJdIC0gZWl0aGVyIFwiaGlnaFwiIG9yIFwibG93XCJcbiAqL1xuZnVuY3Rpb24gTGF0Y2goaW5pdGlhbFN0YXRlKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBMYXRjaCkpIHtcbiAgICByZXR1cm4gbmV3IExhdGNoKGluaXRpYWxTdGF0ZSk7XG4gIH1cbiAgdmFyIHN0YXRlID0gaW5pdGlhbFN0YXRlIHx8ICdsb3cnO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgX3N0YXRlOiB7XG4gICAgICBzZXQ6IGZ1bmN0aW9uKF9zdGF0ZSkge1xuICAgICAgICBpZiAoc3RhdGUgIT09IF9zdGF0ZSkge1xuICAgICAgICAgIHN0YXRlID0gX3N0YXRlO1xuICAgICAgICAgIHZhciB3aGVuRGVmZXJyZWRzID0gdGhpcy5fd2hlbkRlZmVycmVkcy5nZXQoc3RhdGUpO1xuICAgICAgICAgIHdoZW5EZWZlcnJlZHMuZm9yRWFjaChmdW5jdGlvbihkZWZlcnJlZCkge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgICB3aGVuRGVmZXJyZWRzLmNsZWFyKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICB9XG4gICAgfSxcbiAgICBfd2hlbkRlZmVycmVkczoge1xuICAgICAgdmFsdWU6IG5ldyBNYXAoW1xuICAgICAgICBbJ2hpZ2gnLCBuZXcgU2V0KCldLFxuICAgICAgICBbJ2xvdycsIG5ldyBTZXQoKV1cbiAgICAgIF0pXG4gICAgfSxcbiAgICBzdGF0ZToge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zdGF0ZTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIFRyYW5zaXRpb24gdG8gXCJsb3dcIi5cbiAqIEByZXR1cm5zIHt0aGlzfVxuICogQHRocm93cyB7RXJyb3J9XG4gKi9cbkxhdGNoLnByb3RvdHlwZS5sb3dlciA9IGZ1bmN0aW9uIGxvd2VyKCkge1xuICByZXR1cm4gdGhpcy50cmFuc2l0aW9uKCdsb3cnKTtcbn07XG5cbi8qKlxuICogVHJhbnNpdGlvbiB0byBcImhpZ2hcIi5cbiAqIEByZXR1cm5zIHt0aGlzfVxuICogQHRocm93cyB7RXJyb3J9XG4gKi9cbkxhdGNoLnByb3RvdHlwZS5yYWlzZSA9IGZ1bmN0aW9uIHJhaXNlKCkge1xuICByZXR1cm4gdGhpcy50cmFuc2l0aW9uKCdoaWdoJyk7XG59O1xuXG4vKipcbiAqIFRyYW5zaXRpb24gdG8gYSBuZXcgc3RhdGUuXG4gKiBAcGFyYW0ge3N0cmluZ30gbmV3U3RhdGVcbiAqIEByZXR1cm5zIHt0aGlzfVxuICogQHRocm93cyB7RXJyb3J9XG4gKi9cbkxhdGNoLnByb3RvdHlwZS50cmFuc2l0aW9uID0gZnVuY3Rpb24gdHJhbnNpdGlvbihuZXdTdGF0ZSkge1xuICBpZiAoIXN0YXRlc1t0aGlzLnN0YXRlXS5oYXMobmV3U3RhdGUpKSB7XG4gICAgdGhyb3cgY3JlYXRlVW5yZWFjaGFibGVTdGF0ZUVycm9yKHRoaXMuc3RhdGUsIG5ld1N0YXRlKTtcbiAgfVxuICB0aGlzLl9zdGF0ZSA9IG5ld1N0YXRlO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUmV0dXJuIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHtAbGluayBMYXRjaH0gdHJhbnNpdGlvbnMgdG9cbiAqIHRoZSBzcGVjaWZpZWQgc3RhdGUuXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RhdGVcbiAqIEByZXR1cm5zIHtQcm9taXNlPHRoaXM+fVxuICovXG5MYXRjaC5wcm90b3R5cGUud2hlbiA9IGZ1bmN0aW9uIHdoZW4oc3RhdGUpIHtcbiAgaWYgKHRoaXMuc3RhdGUgPT09IHN0YXRlKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzKTtcbiAgfVxuICBpZiAoIXN0YXRlc1t0aGlzLnN0YXRlXS5oYXMoc3RhdGUpKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZVVucmVhY2hhYmxlU3RhdGVFcnJvcih0aGlzLnN0YXRlLCBzdGF0ZSkpO1xuICB9XG4gIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG4gIHRoaXMuX3doZW5EZWZlcnJlZHMuZ2V0KHN0YXRlKS5hZGQoZGVmZXJyZWQpO1xuICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbn07XG5cbi8qKlxuICogQ3JlYXRlIGFuIHVucmVhY2hhYmxlIHN0YXRlIEVycm9yLlxuICogQHBhcmFtIHtzdHJpbmd9IGZyb20gLSBzdGF0ZSB0byBiZSB0cmFuc2l0aW9uZWQgZnJvbVxuICogQHBhcmFtIHtzdHJpbmd9IHRvIC0gc3RhdGUgdG8gYmUgdHJhbnNpdGlvbmVkIHRvXG4gKiBAcmV0dXJuIHtFcnJvcn1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVW5yZWFjaGFibGVTdGF0ZUVycm9yKGZyb20sIHRvKSB7XG4gIHJldHVybiBuZXcgRXJyb3IoJ0Nhbm5vdCB0cmFuc2l0aW9uIGZyb20gXCInICsgZnJvbSArICdcIiB0byBcIicgKyB0byArICdcIicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IExhdGNoO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/util/latch.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/lib/util/sdp.js":
/*!*****************************************************!*\
  !*** ./node_modules/@twilio/webrtc/lib/util/sdp.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals RTCPeerConnection, RTCRtpTransceiver */\n\n\n\nvar flatMap = __webpack_require__(/*! ./ */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").flatMap;\nvar guessBrowser = __webpack_require__(/*! ./ */ \"./node_modules/@twilio/webrtc/lib/util/index.js\").guessBrowser;\n\n// NOTE(mmalavalli): We cache Chrome's sdpSemantics support in order to prevent\n// instantiation of more than one RTCPeerConnection.\nvar isSdpSemanticsSupported = null;\n\n/**\n * Check if Chrome supports specifying sdpSemantics for an RTCPeerConnection.\n * @return {boolean}\n */\nfunction checkIfSdpSemanticsIsSupported() {\n  if (typeof isSdpSemanticsSupported === 'boolean') {\n    return isSdpSemanticsSupported;\n  }\n  if (typeof RTCPeerConnection === 'undefined') {\n    isSdpSemanticsSupported = false;\n    return isSdpSemanticsSupported;\n  }\n  try {\n    new RTCPeerConnection({ sdpSemantics: 'foo' });\n    isSdpSemanticsSupported = false;\n  } catch (e) {\n    isSdpSemanticsSupported = true;\n  }\n  return isSdpSemanticsSupported;\n}\n\n// NOTE(mmalavalli): We cache Chrome's SDP format in order to prevent\n// instantiation of more than one RTCPeerConnection.\nvar chromeSdpFormat = null;\n\n/**\n * Get Chrome's default SDP format.\n * @returns {'planb'|'unified'}\n */\nfunction getChromeDefaultSdpFormat() {\n  if (!chromeSdpFormat) {\n    if (typeof RTCPeerConnection !== 'undefined'\n      && 'addTransceiver' in RTCPeerConnection.prototype) {\n      try {\n        new RTCPeerConnection().addTransceiver('audio');\n        chromeSdpFormat = 'unified';\n      } catch (e) {\n        chromeSdpFormat = 'planb';\n      }\n    } else {\n      chromeSdpFormat = 'planb';\n    }\n  }\n  return chromeSdpFormat;\n}\n\n/**\n * Get Chrome's SDP format.\n * @param {'plan-b'|'unified-plan'} [sdpSemantics]\n * @returns {'planb'|'unified'}\n */\nfunction getChromeSdpFormat(sdpSemantics) {\n  if (!sdpSemantics || !checkIfSdpSemanticsIsSupported()) {\n    return getChromeDefaultSdpFormat();\n  }\n  return {\n    'plan-b': 'planb',\n    'unified-plan': 'unified'\n  }[sdpSemantics];\n}\n\n/**\n * Get Safari's default SDP format.\n * @returns {'planb'|'unified'}\n */\nfunction getSafariSdpFormat() {\n  return typeof RTCRtpTransceiver !== 'undefined'\n    && 'currentDirection' in RTCRtpTransceiver.prototype\n      ? 'unified'\n      : 'planb';\n}\n\n/**\n * Get the browser's default SDP format.\n * @param {'plan-b'|'unified-plan'} [sdpSemantics]\n * @returns {'planb'|'unified'}\n */\nfunction getSdpFormat(sdpSemantics) {\n  return {\n    chrome: getChromeSdpFormat(sdpSemantics),\n    firefox: 'unified',\n    safari: getSafariSdpFormat()\n  }[guessBrowser()] || null;\n}\n\n/**\n * Match a pattern across lines, returning the first capture group for any\n * matches.\n * @param {string} pattern\n * @param {string} lines\n * @returns {Set<string>} matches\n */\nfunction getMatches(pattern, lines) {\n  var matches = lines.match(new RegExp(pattern, 'gm')) || [];\n  return matches.reduce(function(results, line) {\n    var match = line.match(new RegExp(pattern));\n    return match ? results.add(match[1]) : results;\n  }, new Set());\n}\n\n/**\n * Get a Set of MediaStreamTrack IDs from an SDP.\n * @param {string} pattern\n * @param {string} sdp\n * @returns {Set<string>}\n */\nfunction getTrackIds(pattern, sdp) {\n  return getMatches(pattern, sdp);\n}\n\n/**\n * Get a Set of MediaStreamTrack IDs from a Plan B SDP.\n * @param {string} sdp - Plan B SDP\n * @returns {Set<string>} trackIds\n */\nfunction getPlanBTrackIds(sdp) {\n  return getTrackIds('^a=ssrc:[0-9]+ +msid:.+ +(.+) *$', sdp);\n}\n\n/**\n * Get a Set of MediaStreamTrack IDs from a Unified Plan SDP.\n * @param {string} sdp - Unified Plan SDP\n * @returns {Set<string>} trackIds\n */\nfunction getUnifiedPlanTrackIds(sdp) {\n  return getTrackIds('^a=msid:.+ +(.+) *$', sdp);\n}\n\n/**\n * Get a Set of SSRCs for a MediaStreamTrack from a Plan B SDP.\n * @param {string} sdp - Plan B SDP\n * @param {string} trackId - MediaStreamTrack ID\n * @returns {Set<string>}\n */\nfunction getPlanBSSRCs(sdp, trackId) {\n  var pattern = '^a=ssrc:([0-9]+) +msid:[^ ]+ +' + trackId + ' *$';\n  return getMatches(pattern, sdp);\n}\n\n/**\n * Get the m= sections of a particular kind and direction from an sdp.\n * @param {string} sdp -  sdp string\n * @param {string} [kind] - Pattern for matching kind\n * @param {string} [direction] - Pattern for matching direction\n * @returns {Array<string>} mediaSections\n */\nfunction getMediaSections(sdp, kind, direction) {\n  kind = kind || '.*';\n  direction = direction || '.*';\n  return sdp.split('\\r\\nm=').slice(1).map(function(mediaSection) {\n    return 'm=' + mediaSection;\n  }).filter(function(mediaSection) {\n    var kindPattern = new RegExp('m=' + kind, 'gm');\n    var directionPattern = new RegExp('a=' + direction, 'gm');\n    return kindPattern.test(mediaSection) && directionPattern.test(mediaSection);\n  });\n}\n\n/**\n * Get the Set of SSRCs announced in a MediaSection.\n * @param {string} mediaSection\n * @returns {Array<string>} ssrcs\n */\nfunction getMediaSectionSSRCs(mediaSection) {\n  return Array.from(getMatches('^a=ssrc:([0-9]+) +.*$', mediaSection));\n}\n\n/**\n * Get a Set of SSRCs for a MediaStreamTrack from a Unified Plan SDP.\n * @param {string} sdp - Unified Plan SDP\n * @param {string} trackId - MediaStreamTrack ID\n * @returns {Set<string>}\n */\nfunction getUnifiedPlanSSRCs(sdp, trackId) {\n  var mediaSections = getMediaSections(sdp);\n\n  var msidAttrRegExp = new RegExp('^a=msid:[^ ]+ +' + trackId + ' *$', 'gm');\n  var matchingMediaSections = mediaSections.filter(function(mediaSection) {\n    return mediaSection.match(msidAttrRegExp);\n  });\n\n  return new Set(flatMap(matchingMediaSections, getMediaSectionSSRCs));\n}\n\n/**\n * Get a Map from MediaStreamTrack IDs to SSRCs from an SDP.\n * @param {function(string): Set<string>} getTrackIds\n * @param {function(string, string): Set<string>} getSSRCs\n * @param {string} sdp - SDP\n * @returns {Map<string, Set<string>>} trackIdsToSSRCs\n */\nfunction getTrackIdsToSSRCs(getTrackIds, getSSRCs, sdp) {\n  return new Map(Array.from(getTrackIds(sdp)).map(function(trackId) {\n    return [trackId, getSSRCs(sdp, trackId)];\n  }));\n}\n\n/**\n * Get a Map from MediaStreamTrack IDs to SSRCs from a Plan B SDP.\n * @param {string} sdp - Plan B SDP\n * @returns {Map<string, Set<string>>} trackIdsToSSRCs\n */\nfunction getPlanBTrackIdsToSSRCs(sdp) {\n  return getTrackIdsToSSRCs(getPlanBTrackIds, getPlanBSSRCs, sdp);\n}\n\n/**\n * Get a Map from MediaStreamTrack IDs to SSRCs from a Plan B SDP.\n * @param {string} sdp - Plan B SDP\n * @returns {Map<string, Set<string>>} trackIdsToSSRCs\n */\nfunction getUnifiedPlanTrackIdsToSSRCs(sdp) {\n  return getTrackIdsToSSRCs(getUnifiedPlanTrackIds, getUnifiedPlanSSRCs, sdp);\n}\n\n/**\n * Update the mappings from MediaStreamTrack IDs to SSRCs as indicated by both\n * the Map from MediaStreamTrack IDs to SSRCs and the SDP itself. This method\n * ensures that SSRCs never change once announced.\n * @param {function(string): Map<string, Set<string>>} getTrackIdsToSSRCs\n * @param {Map<string, Set<string>>} trackIdsToSSRCs\n * @param {string} sdp - SDP\n * @returns {strinng} updatedSdp - updated SDP\n */\nfunction updateTrackIdsToSSRCs(getTrackIdsToSSRCs, trackIdsToSSRCs, sdp) {\n  var newTrackIdsToSSRCs = getTrackIdsToSSRCs(sdp);\n  var newSSRCsToOldSSRCs = new Map();\n\n  // NOTE(mroberts): First, update a=ssrc attributes.\n  newTrackIdsToSSRCs.forEach(function(ssrcs, trackId) {\n    if (!trackIdsToSSRCs.has(trackId)) {\n      trackIdsToSSRCs.set(trackId, ssrcs);\n      return;\n    }\n    var oldSSRCs = Array.from(trackIdsToSSRCs.get(trackId));\n    var newSSRCs = Array.from(ssrcs);\n    oldSSRCs.forEach(function(oldSSRC, i) {\n      var newSSRC = newSSRCs[i];\n      newSSRCsToOldSSRCs.set(newSSRC, oldSSRC);\n      var pattern = '^a=ssrc:' + newSSRC + ' (.*)$';\n      var replacement = 'a=ssrc:' + oldSSRC + ' $1';\n      sdp = sdp.replace(new RegExp(pattern, 'gm'), replacement);\n    });\n  });\n\n  // NOTE(mroberts): Then, update a=ssrc-group attributes.\n  var pattern = '^(a=ssrc-group:[^ ]+ +)(.*)$';\n  var matches = sdp.match(new RegExp(pattern, 'gm')) || [];\n  matches.forEach(function(line) {\n    var match = line.match(new RegExp(pattern));\n    if (!match) {\n      return;\n    }\n    var prefix = match[1];\n    var newSSRCs = match[2];\n    var oldSSRCs = newSSRCs.split(' ').map(function(newSSRC) {\n      var oldSSRC = newSSRCsToOldSSRCs.get(newSSRC);\n      return oldSSRC ? oldSSRC : newSSRC;\n    }).join(' ');\n    sdp = sdp.replace(match[0], prefix + oldSSRCs);\n  });\n\n  return sdp;\n}\n\n/**\n * Update the mappings from MediaStreamTrack IDs to SSRCs as indicated by both\n * the Map from MediaStreamTrack IDs to SSRCs and the Plan B SDP itself. This\n * method ensures that SSRCs never change once announced.\n * @param {Map<string, Set<string>>} trackIdsToSSRCs\n * @param {string} sdp - Plan B SDP\n * @returns {string} updatedSdp - updated Plan B SDP\n */\nfunction updatePlanBTrackIdsToSSRCs(trackIdsToSSRCs, sdp) {\n  return updateTrackIdsToSSRCs(getPlanBTrackIdsToSSRCs, trackIdsToSSRCs, sdp);\n}\n\n/**\n * Update the mappings from MediaStreamTrack IDs to SSRCs as indicated by both\n * the Map from MediaStreamTrack IDs to SSRCs and the Plan B SDP itself. This\n * method ensures that SSRCs never change once announced.\n * @param {Map<string, Set<string>>} trackIdsToSSRCs\n * @param {string} sdp - Plan B SDP\n * @returns {string} updatedSdp - updated Plan B SDP\n */\nfunction updateUnifiedPlanTrackIdsToSSRCs(trackIdsToSSRCs, sdp) {\n  return updateTrackIdsToSSRCs(getUnifiedPlanTrackIdsToSSRCs, trackIdsToSSRCs, sdp);\n}\n\nexports.getSdpFormat = getSdpFormat;\nexports.getMediaSections = getMediaSections;\nexports.getPlanBTrackIds = getPlanBTrackIds;\nexports.getUnifiedPlanTrackIds = getUnifiedPlanTrackIds;\nexports.getPlanBSSRCs = getPlanBSSRCs;\nexports.getUnifiedPlanSSRCs = getUnifiedPlanSSRCs;\nexports.updatePlanBTrackIdsToSSRCs = updatePlanBTrackIdsToSSRCs;\nexports.updateUnifiedPlanTrackIdsToSSRCs = updateUnifiedPlanTrackIdsToSSRCs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/lib/util/sdp.js\n");

/***/ }),

/***/ "./node_modules/@twilio/webrtc/package.json":
/*!**************************************************!*\
  !*** ./node_modules/@twilio/webrtc/package.json ***!
  \**************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, contributors, deprecated, description, devDependencies, homepage, keywords, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"_from\\\":\\\"@twilio/webrtc@4.3.1\\\",\\\"_id\\\":\\\"@twilio/webrtc@4.3.1\\\",\\\"_inBundle\\\":false,\\\"_integrity\\\":\\\"sha512-T9Slk8TyKrKqjc4PH4aPknjmEozny/M1TzVyfRRyEQSt548hXXhLYrSp3nUcK49bfzVrgbYuRj6ojExYh2qLqw==\\\",\\\"_location\\\":\\\"/@twilio/webrtc\\\",\\\"_phantomChildren\\\":{},\\\"_requested\\\":{\\\"type\\\":\\\"version\\\",\\\"registry\\\":true,\\\"raw\\\":\\\"@twilio/webrtc@4.3.1\\\",\\\"name\\\":\\\"@twilio/webrtc\\\",\\\"escapedName\\\":\\\"@twilio%2fwebrtc\\\",\\\"scope\\\":\\\"@twilio\\\",\\\"rawSpec\\\":\\\"4.3.1\\\",\\\"saveSpec\\\":null,\\\"fetchSpec\\\":\\\"4.3.1\\\"},\\\"_requiredBy\\\":[\\\"/twilio-video\\\"],\\\"_resolved\\\":\\\"https://registry.npmjs.org/@twilio/webrtc/-/webrtc-4.3.1.tgz\\\",\\\"_shasum\\\":\\\"35acd0bda1ce65424d9617defb0b6d9b333c77c7\\\",\\\"_spec\\\":\\\"@twilio/webrtc@4.3.1\\\",\\\"_where\\\":\\\"C:\\\\\\\\Users\\\\\\\\Administrateur\\\\\\\\Desktop\\\\\\\\HACK-Healthy\\\\\\\\client\\\\\\\\node_modules\\\\\\\\twilio-video\\\",\\\"author\\\":{\\\"name\\\":\\\"Manjesh Malavalli\\\",\\\"email\\\":\\\"mmalavalli@twilio.com\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/twilio/twilio-webrtc.js/issues\\\"},\\\"bundleDependencies\\\":false,\\\"contributors\\\":[{\\\"name\\\":\\\"Mark Roberts\\\",\\\"email\\\":\\\"mroberts@twilio.com\\\"},{\\\"name\\\":\\\"Ryan Rowland\\\",\\\"email\\\":\\\"rrowland@twilio.com\\\"},{\\\"name\\\":\\\"Makarand Patwardhan\\\",\\\"email\\\":\\\"mpatwardhan@twilio.com\\\"}],\\\"deprecated\\\":false,\\\"description\\\":\\\"WebRTC-related APIs and shims used by twilio-video.js\\\",\\\"devDependencies\\\":{\\\"browserify\\\":\\\"^14.4.0\\\",\\\"electron\\\":\\\"^5.0.0\\\",\\\"envify\\\":\\\"^4.1.0\\\",\\\"eslint\\\":\\\"^4.4.1\\\",\\\"is-docker\\\":\\\"^2.0.0\\\",\\\"istanbul\\\":\\\"^0.4.5\\\",\\\"karma\\\":\\\"^1.7.0\\\",\\\"karma-browserify\\\":\\\"^5.1.1\\\",\\\"karma-chrome-launcher\\\":\\\"^2.2.0\\\",\\\"karma-edgium-launcher\\\":\\\"^4.0.0-0\\\",\\\"karma-electron\\\":\\\"^6.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^1.0.1\\\",\\\"karma-htmlfile-reporter\\\":\\\"^0.3.8\\\",\\\"karma-junit-reporter\\\":\\\"^1.2.0\\\",\\\"karma-mocha\\\":\\\"^1.3.0\\\",\\\"karma-safari-launcher\\\":\\\"~0.1\\\",\\\"karma-spec-reporter\\\":\\\"0.0.31\\\",\\\"mocha\\\":\\\"^3.5.0\\\",\\\"npm-run-all\\\":\\\"^4.0.2\\\",\\\"rimraf\\\":\\\"^2.6.1\\\",\\\"simple-git\\\":\\\"^2.4.0\\\",\\\"twilio-release-tool\\\":\\\"^1.0.0\\\",\\\"watchify\\\":\\\"^3.9.0\\\",\\\"webrtc-adapter\\\":\\\"^6.4.8\\\"},\\\"homepage\\\":\\\"https://github.com/twilio/twilio-webrtc.js#readme\\\",\\\"keywords\\\":[\\\"shim\\\",\\\"twilio\\\",\\\"video\\\",\\\"webrtc\\\"],\\\"license\\\":\\\"BSD-3-Clause\\\",\\\"main\\\":\\\"./lib/index.js\\\",\\\"name\\\":\\\"@twilio/webrtc\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/twilio/twilio-webrtc.js.git\\\"},\\\"scripts\\\":{\\\"build\\\":\\\"npm-run-all clean lint test\\\",\\\"clean\\\":\\\"rimraf coverage\\\",\\\"lint\\\":\\\"eslint ./lib\\\",\\\"test\\\":\\\"npm-run-all test:*\\\",\\\"test:integration\\\":\\\"npm-run-all test:integration:*\\\",\\\"test:integration:adapter\\\":\\\"karma start karma/integration.adapter.conf.js\\\",\\\"test:integration:native\\\":\\\"karma start karma/integration.conf.js\\\",\\\"test:unit\\\":\\\"istanbul cover node_modules/mocha/bin/_mocha -- ./test/unit/index.js\\\"},\\\"version\\\":\\\"4.3.1\\\"}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHR3aWxpby93ZWJydGMvcGFja2FnZS5qc29uLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@twilio/webrtc/package.json\n");

/***/ }),

/***/ "./node_modules/backoff/index.js":
/*!***************************************!*\
  !*** ./node_modules/backoff/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar Backoff = __webpack_require__(/*! ./lib/backoff */ \"./node_modules/backoff/lib/backoff.js\");\nvar ExponentialBackoffStrategy = __webpack_require__(/*! ./lib/strategy/exponential */ \"./node_modules/backoff/lib/strategy/exponential.js\");\nvar FibonacciBackoffStrategy = __webpack_require__(/*! ./lib/strategy/fibonacci */ \"./node_modules/backoff/lib/strategy/fibonacci.js\");\nvar FunctionCall = __webpack_require__(/*! ./lib/function_call.js */ \"./node_modules/backoff/lib/function_call.js\");\n\nmodule.exports.Backoff = Backoff;\nmodule.exports.FunctionCall = FunctionCall;\nmodule.exports.FibonacciStrategy = FibonacciBackoffStrategy;\nmodule.exports.ExponentialStrategy = ExponentialBackoffStrategy;\n\n// Constructs a Fibonacci backoff.\nmodule.exports.fibonacci = function(options) {\n    return new Backoff(new FibonacciBackoffStrategy(options));\n};\n\n// Constructs an exponential backoff.\nmodule.exports.exponential = function(options) {\n    return new Backoff(new ExponentialBackoffStrategy(options));\n};\n\n// Constructs a FunctionCall for the given function and arguments.\nmodule.exports.call = function(fn, vargs, callback) {\n    var args = Array.prototype.slice.call(arguments);\n    fn = args[0];\n    vargs = args.slice(1, args.length - 1);\n    callback = args[args.length - 1];\n    return new FunctionCall(fn, vargs, callback);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFja29mZi9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWNrb2ZmL2luZGV4LmpzPzBiMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gICAgICBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aGlldSBUdXJjb3R0ZVxuLy8gICAgICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5cbnZhciBCYWNrb2ZmID0gcmVxdWlyZSgnLi9saWIvYmFja29mZicpO1xudmFyIEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5ID0gcmVxdWlyZSgnLi9saWIvc3RyYXRlZ3kvZXhwb25lbnRpYWwnKTtcbnZhciBGaWJvbmFjY2lCYWNrb2ZmU3RyYXRlZ3kgPSByZXF1aXJlKCcuL2xpYi9zdHJhdGVneS9maWJvbmFjY2knKTtcbnZhciBGdW5jdGlvbkNhbGwgPSByZXF1aXJlKCcuL2xpYi9mdW5jdGlvbl9jYWxsLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzLkJhY2tvZmYgPSBCYWNrb2ZmO1xubW9kdWxlLmV4cG9ydHMuRnVuY3Rpb25DYWxsID0gRnVuY3Rpb25DYWxsO1xubW9kdWxlLmV4cG9ydHMuRmlib25hY2NpU3RyYXRlZ3kgPSBGaWJvbmFjY2lCYWNrb2ZmU3RyYXRlZ3k7XG5tb2R1bGUuZXhwb3J0cy5FeHBvbmVudGlhbFN0cmF0ZWd5ID0gRXhwb25lbnRpYWxCYWNrb2ZmU3RyYXRlZ3k7XG5cbi8vIENvbnN0cnVjdHMgYSBGaWJvbmFjY2kgYmFja29mZi5cbm1vZHVsZS5leHBvcnRzLmZpYm9uYWNjaSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IEJhY2tvZmYobmV3IEZpYm9uYWNjaUJhY2tvZmZTdHJhdGVneShvcHRpb25zKSk7XG59O1xuXG4vLyBDb25zdHJ1Y3RzIGFuIGV4cG9uZW50aWFsIGJhY2tvZmYuXG5tb2R1bGUuZXhwb3J0cy5leHBvbmVudGlhbCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IEJhY2tvZmYobmV3IEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5KG9wdGlvbnMpKTtcbn07XG5cbi8vIENvbnN0cnVjdHMgYSBGdW5jdGlvbkNhbGwgZm9yIHRoZSBnaXZlbiBmdW5jdGlvbiBhbmQgYXJndW1lbnRzLlxubW9kdWxlLmV4cG9ydHMuY2FsbCA9IGZ1bmN0aW9uKGZuLCB2YXJncywgY2FsbGJhY2spIHtcbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgZm4gPSBhcmdzWzBdO1xuICAgIHZhcmdzID0gYXJncy5zbGljZSgxLCBhcmdzLmxlbmd0aCAtIDEpO1xuICAgIGNhbGxiYWNrID0gYXJnc1thcmdzLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiBuZXcgRnVuY3Rpb25DYWxsKGZuLCB2YXJncywgY2FsbGJhY2spO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/backoff/index.js\n");

/***/ }),

/***/ "./node_modules/backoff/lib/backoff.js":
/*!*********************************************!*\
  !*** ./node_modules/backoff/lib/backoff.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\n// to generate the backoff delays.\nfunction Backoff(backoffStrategy) {\n    events.EventEmitter.call(this);\n\n    this.backoffStrategy_ = backoffStrategy;\n    this.maxNumberOfRetry_ = -1;\n    this.backoffNumber_ = 0;\n    this.backoffDelay_ = 0;\n    this.timeoutID_ = -1;\n\n    this.handlers = {\n        backoff: this.onBackoff_.bind(this)\n    };\n}\nutil.inherits(Backoff, events.EventEmitter);\n\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\n// event will be emitted when the limit is reached.\nBackoff.prototype.failAfter = function(maxNumberOfRetry) {\n    precond.checkArgument(maxNumberOfRetry > 0,\n        'Expected a maximum number of retry greater than 0 but got %s.',\n        maxNumberOfRetry);\n\n    this.maxNumberOfRetry_ = maxNumberOfRetry;\n};\n\n// Starts a backoff operation. Accepts an optional parameter to let the\n// listeners know why the backoff operation was started.\nBackoff.prototype.backoff = function(err) {\n    precond.checkState(this.timeoutID_ === -1, 'Backoff in progress.');\n\n    if (this.backoffNumber_ === this.maxNumberOfRetry_) {\n        this.emit('fail', err);\n        this.reset();\n    } else {\n        this.backoffDelay_ = this.backoffStrategy_.next();\n        this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\n        this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\n    }\n};\n\n// Handles the backoff timeout completion.\nBackoff.prototype.onBackoff_ = function() {\n    this.timeoutID_ = -1;\n    this.emit('ready', this.backoffNumber_, this.backoffDelay_);\n    this.backoffNumber_++;\n};\n\n// Stops any backoff operation and resets the backoff delay to its inital value.\nBackoff.prototype.reset = function() {\n    this.backoffNumber_ = 0;\n    this.backoffStrategy_.reset();\n    clearTimeout(this.timeoutID_);\n    this.timeoutID_ = -1;\n};\n\nmodule.exports = Backoff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvYmFja29mZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWNrb2ZmL2xpYi9iYWNrb2ZmLmpzPzI4NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gICAgICBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aGlldSBUdXJjb3R0ZVxuLy8gICAgICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5cbnZhciBldmVudHMgPSByZXF1aXJlKCdldmVudHMnKTtcbnZhciBwcmVjb25kID0gcmVxdWlyZSgncHJlY29uZCcpO1xudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5cbi8vIEEgY2xhc3MgdG8gaG9sZCB0aGUgc3RhdGUgb2YgYSBiYWNrb2ZmIG9wZXJhdGlvbi4gQWNjZXB0cyBhIGJhY2tvZmYgc3RyYXRlZ3lcbi8vIHRvIGdlbmVyYXRlIHRoZSBiYWNrb2ZmIGRlbGF5cy5cbmZ1bmN0aW9uIEJhY2tvZmYoYmFja29mZlN0cmF0ZWd5KSB7XG4gICAgZXZlbnRzLkV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gICAgdGhpcy5iYWNrb2ZmU3RyYXRlZ3lfID0gYmFja29mZlN0cmF0ZWd5O1xuICAgIHRoaXMubWF4TnVtYmVyT2ZSZXRyeV8gPSAtMTtcbiAgICB0aGlzLmJhY2tvZmZOdW1iZXJfID0gMDtcbiAgICB0aGlzLmJhY2tvZmZEZWxheV8gPSAwO1xuICAgIHRoaXMudGltZW91dElEXyA9IC0xO1xuXG4gICAgdGhpcy5oYW5kbGVycyA9IHtcbiAgICAgICAgYmFja29mZjogdGhpcy5vbkJhY2tvZmZfLmJpbmQodGhpcylcbiAgICB9O1xufVxudXRpbC5pbmhlcml0cyhCYWNrb2ZmLCBldmVudHMuRXZlbnRFbWl0dGVyKTtcblxuLy8gU2V0cyBhIGxpbWl0LCBncmVhdGVyIHRoYW4gMCwgb24gdGhlIG1heGltdW0gbnVtYmVyIG9mIGJhY2tvZmZzLiBBICdmYWlsJ1xuLy8gZXZlbnQgd2lsbCBiZSBlbWl0dGVkIHdoZW4gdGhlIGxpbWl0IGlzIHJlYWNoZWQuXG5CYWNrb2ZmLnByb3RvdHlwZS5mYWlsQWZ0ZXIgPSBmdW5jdGlvbihtYXhOdW1iZXJPZlJldHJ5KSB7XG4gICAgcHJlY29uZC5jaGVja0FyZ3VtZW50KG1heE51bWJlck9mUmV0cnkgPiAwLFxuICAgICAgICAnRXhwZWN0ZWQgYSBtYXhpbXVtIG51bWJlciBvZiByZXRyeSBncmVhdGVyIHRoYW4gMCBidXQgZ290ICVzLicsXG4gICAgICAgIG1heE51bWJlck9mUmV0cnkpO1xuXG4gICAgdGhpcy5tYXhOdW1iZXJPZlJldHJ5XyA9IG1heE51bWJlck9mUmV0cnk7XG59O1xuXG4vLyBTdGFydHMgYSBiYWNrb2ZmIG9wZXJhdGlvbi4gQWNjZXB0cyBhbiBvcHRpb25hbCBwYXJhbWV0ZXIgdG8gbGV0IHRoZVxuLy8gbGlzdGVuZXJzIGtub3cgd2h5IHRoZSBiYWNrb2ZmIG9wZXJhdGlvbiB3YXMgc3RhcnRlZC5cbkJhY2tvZmYucHJvdG90eXBlLmJhY2tvZmYgPSBmdW5jdGlvbihlcnIpIHtcbiAgICBwcmVjb25kLmNoZWNrU3RhdGUodGhpcy50aW1lb3V0SURfID09PSAtMSwgJ0JhY2tvZmYgaW4gcHJvZ3Jlc3MuJyk7XG5cbiAgICBpZiAodGhpcy5iYWNrb2ZmTnVtYmVyXyA9PT0gdGhpcy5tYXhOdW1iZXJPZlJldHJ5Xykge1xuICAgICAgICB0aGlzLmVtaXQoJ2ZhaWwnLCBlcnIpO1xuICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5iYWNrb2ZmRGVsYXlfID0gdGhpcy5iYWNrb2ZmU3RyYXRlZ3lfLm5leHQoKTtcbiAgICAgICAgdGhpcy50aW1lb3V0SURfID0gc2V0VGltZW91dCh0aGlzLmhhbmRsZXJzLmJhY2tvZmYsIHRoaXMuYmFja29mZkRlbGF5Xyk7XG4gICAgICAgIHRoaXMuZW1pdCgnYmFja29mZicsIHRoaXMuYmFja29mZk51bWJlcl8sIHRoaXMuYmFja29mZkRlbGF5XywgZXJyKTtcbiAgICB9XG59O1xuXG4vLyBIYW5kbGVzIHRoZSBiYWNrb2ZmIHRpbWVvdXQgY29tcGxldGlvbi5cbkJhY2tvZmYucHJvdG90eXBlLm9uQmFja29mZl8gPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRpbWVvdXRJRF8gPSAtMTtcbiAgICB0aGlzLmVtaXQoJ3JlYWR5JywgdGhpcy5iYWNrb2ZmTnVtYmVyXywgdGhpcy5iYWNrb2ZmRGVsYXlfKTtcbiAgICB0aGlzLmJhY2tvZmZOdW1iZXJfKys7XG59O1xuXG4vLyBTdG9wcyBhbnkgYmFja29mZiBvcGVyYXRpb24gYW5kIHJlc2V0cyB0aGUgYmFja29mZiBkZWxheSB0byBpdHMgaW5pdGFsIHZhbHVlLlxuQmFja29mZi5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmJhY2tvZmZOdW1iZXJfID0gMDtcbiAgICB0aGlzLmJhY2tvZmZTdHJhdGVneV8ucmVzZXQoKTtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SURfKTtcbiAgICB0aGlzLnRpbWVvdXRJRF8gPSAtMTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQmFja29mZjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/backoff/lib/backoff.js\n");

/***/ }),

/***/ "./node_modules/backoff/lib/function_call.js":
/*!***************************************************!*\
  !*** ./node_modules/backoff/lib/function_call.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar Backoff = __webpack_require__(/*! ./backoff */ \"./node_modules/backoff/lib/backoff.js\");\nvar FibonacciBackoffStrategy = __webpack_require__(/*! ./strategy/fibonacci */ \"./node_modules/backoff/lib/strategy/fibonacci.js\");\n\n// Wraps a function to be called in a backoff loop.\nfunction FunctionCall(fn, args, callback) {\n    events.EventEmitter.call(this);\n\n    precond.checkIsFunction(fn, 'Expected fn to be a function.');\n    precond.checkIsArray(args, 'Expected args to be an array.');\n    precond.checkIsFunction(callback, 'Expected callback to be a function.');\n\n    this.function_ = fn;\n    this.arguments_ = args;\n    this.callback_ = callback;\n    this.lastResult_ = [];\n    this.numRetries_ = 0;\n\n    this.backoff_ = null;\n    this.strategy_ = null;\n    this.failAfter_ = -1;\n    this.retryPredicate_ = FunctionCall.DEFAULT_RETRY_PREDICATE_;\n\n    this.state_ = FunctionCall.State_.PENDING;\n}\nutil.inherits(FunctionCall, events.EventEmitter);\n\n// States in which the call can be.\nFunctionCall.State_ = {\n    // Call isn't started yet.\n    PENDING: 0,\n    // Call is in progress.\n    RUNNING: 1,\n    // Call completed successfully which means that either the wrapped function\n    // returned successfully or the maximal number of backoffs was reached.\n    COMPLETED: 2,\n    // The call was aborted.\n    ABORTED: 3\n};\n\n// The default retry predicate which considers any error as retriable.\nFunctionCall.DEFAULT_RETRY_PREDICATE_ = function(err) {\n  return true;\n};\n\n// Checks whether the call is pending.\nFunctionCall.prototype.isPending = function() {\n    return this.state_ == FunctionCall.State_.PENDING;\n};\n\n// Checks whether the call is in progress.\nFunctionCall.prototype.isRunning = function() {\n    return this.state_ == FunctionCall.State_.RUNNING;\n};\n\n// Checks whether the call is completed.\nFunctionCall.prototype.isCompleted = function() {\n    return this.state_ == FunctionCall.State_.COMPLETED;\n};\n\n// Checks whether the call is aborted.\nFunctionCall.prototype.isAborted = function() {\n    return this.state_ == FunctionCall.State_.ABORTED;\n};\n\n// Sets the backoff strategy to use. Can only be called before the call is\n// started otherwise an exception will be thrown.\nFunctionCall.prototype.setStrategy = function(strategy) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.strategy_ = strategy;\n    return this; // Return this for chaining.\n};\n\n// Sets the predicate which will be used to determine whether the errors\n// returned from the wrapped function should be retried or not, e.g. a\n// network error would be retriable while a type error would stop the\n// function call.\nFunctionCall.prototype.retryIf = function(retryPredicate) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.retryPredicate_ = retryPredicate;\n    return this;\n};\n\n// Returns all intermediary results returned by the wrapped function since\n// the initial call.\nFunctionCall.prototype.getLastResult = function() {\n    return this.lastResult_.concat();\n};\n\n// Returns the number of times the wrapped function call was retried.\nFunctionCall.prototype.getNumRetries = function() {\n    return this.numRetries_;\n};\n\n// Sets the backoff limit.\nFunctionCall.prototype.failAfter = function(maxNumberOfRetry) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.failAfter_ = maxNumberOfRetry;\n    return this; // Return this for chaining.\n};\n\n// Aborts the call.\nFunctionCall.prototype.abort = function() {\n    if (this.isCompleted() || this.isAborted()) {\n      return;\n    }\n\n    if (this.isRunning()) {\n        this.backoff_.reset();\n    }\n\n    this.state_ = FunctionCall.State_.ABORTED;\n    this.lastResult_ = [new Error('Backoff aborted.')];\n    this.emit('abort');\n    this.doCallback_();\n};\n\n// Initiates the call to the wrapped function. Accepts an optional factory\n// function used to create the backoff instance; used when testing.\nFunctionCall.prototype.start = function(backoffFactory) {\n    precond.checkState(!this.isAborted(), 'FunctionCall is aborted.');\n    precond.checkState(this.isPending(), 'FunctionCall already started.');\n\n    var strategy = this.strategy_ || new FibonacciBackoffStrategy();\n\n    this.backoff_ = backoffFactory ?\n        backoffFactory(strategy) :\n        new Backoff(strategy);\n\n    this.backoff_.on('ready', this.doCall_.bind(this, true /* isRetry */));\n    this.backoff_.on('fail', this.doCallback_.bind(this));\n    this.backoff_.on('backoff', this.handleBackoff_.bind(this));\n\n    if (this.failAfter_ > 0) {\n        this.backoff_.failAfter(this.failAfter_);\n    }\n\n    this.state_ = FunctionCall.State_.RUNNING;\n    this.doCall_(false /* isRetry */);\n};\n\n// Calls the wrapped function.\nFunctionCall.prototype.doCall_ = function(isRetry) {\n    if (isRetry) {\n        this.numRetries_++;\n    }\n    var eventArgs = ['call'].concat(this.arguments_);\n    events.EventEmitter.prototype.emit.apply(this, eventArgs);\n    var callback = this.handleFunctionCallback_.bind(this);\n    this.function_.apply(null, this.arguments_.concat(callback));\n};\n\n// Calls the wrapped function's callback with the last result returned by the\n// wrapped function.\nFunctionCall.prototype.doCallback_ = function() {\n    this.callback_.apply(null, this.lastResult_);\n};\n\n// Handles wrapped function's completion. This method acts as a replacement\n// for the original callback function.\nFunctionCall.prototype.handleFunctionCallback_ = function() {\n    if (this.isAborted()) {\n        return;\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    this.lastResult_ = args; // Save last callback arguments.\n    events.EventEmitter.prototype.emit.apply(this, ['callback'].concat(args));\n\n    var err = args[0];\n    if (err && this.retryPredicate_(err)) {\n        this.backoff_.backoff(err);\n    } else {\n        this.state_ = FunctionCall.State_.COMPLETED;\n        this.doCallback_();\n    }\n};\n\n// Handles the backoff event by reemitting it.\nFunctionCall.prototype.handleBackoff_ = function(number, delay, err) {\n    this.emit('backoff', number, delay, err);\n};\n\nmodule.exports = FunctionCall;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/backoff/lib/function_call.js\n");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/exponential.js":
/*!**********************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/exponential.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\n\nvar BackoffStrategy = __webpack_require__(/*! ./strategy */ \"./node_modules/backoff/lib/strategy/strategy.js\");\n\n// Exponential backoff strategy.\nfunction ExponentialBackoffStrategy(options) {\n    BackoffStrategy.call(this, options);\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n    this.factor_ = ExponentialBackoffStrategy.DEFAULT_FACTOR;\n\n    if (options && options.factor !== undefined) {\n        precond.checkArgument(options.factor > 1,\n            'Exponential factor should be greater than 1 but got %s.',\n            options.factor);\n        this.factor_ = options.factor;\n    }\n}\nutil.inherits(ExponentialBackoffStrategy, BackoffStrategy);\n\n// Default multiplication factor used to compute the next backoff delay from\n// the current one. The value can be overridden by passing a custom factor as\n// part of the options.\nExponentialBackoffStrategy.DEFAULT_FACTOR = 2;\n\nExponentialBackoffStrategy.prototype.next_ = function() {\n    this.backoffDelay_ = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n    this.nextBackoffDelay_ = this.backoffDelay_ * this.factor_;\n    return this.backoffDelay_;\n};\n\nExponentialBackoffStrategy.prototype.reset_ = function() {\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n};\n\nmodule.exports = ExponentialBackoffStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvc3RyYXRlZ3kvZXhwb25lbnRpYWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvc3RyYXRlZ3kvZXhwb25lbnRpYWwuanM/ZjNkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICAgIENvcHlyaWdodCAoYykgMjAxMiBNYXRoaWV1IFR1cmNvdHRlXG4vLyAgICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cblxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG52YXIgcHJlY29uZCA9IHJlcXVpcmUoJ3ByZWNvbmQnKTtcblxudmFyIEJhY2tvZmZTdHJhdGVneSA9IHJlcXVpcmUoJy4vc3RyYXRlZ3knKTtcblxuLy8gRXhwb25lbnRpYWwgYmFja29mZiBzdHJhdGVneS5cbmZ1bmN0aW9uIEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5KG9wdGlvbnMpIHtcbiAgICBCYWNrb2ZmU3RyYXRlZ3kuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICB0aGlzLmJhY2tvZmZEZWxheV8gPSAwO1xuICAgIHRoaXMubmV4dEJhY2tvZmZEZWxheV8gPSB0aGlzLmdldEluaXRpYWxEZWxheSgpO1xuICAgIHRoaXMuZmFjdG9yXyA9IEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5LkRFRkFVTFRfRkFDVE9SO1xuXG4gICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5mYWN0b3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBwcmVjb25kLmNoZWNrQXJndW1lbnQob3B0aW9ucy5mYWN0b3IgPiAxLFxuICAgICAgICAgICAgJ0V4cG9uZW50aWFsIGZhY3RvciBzaG91bGQgYmUgZ3JlYXRlciB0aGFuIDEgYnV0IGdvdCAlcy4nLFxuICAgICAgICAgICAgb3B0aW9ucy5mYWN0b3IpO1xuICAgICAgICB0aGlzLmZhY3Rvcl8gPSBvcHRpb25zLmZhY3RvcjtcbiAgICB9XG59XG51dGlsLmluaGVyaXRzKEV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5LCBCYWNrb2ZmU3RyYXRlZ3kpO1xuXG4vLyBEZWZhdWx0IG11bHRpcGxpY2F0aW9uIGZhY3RvciB1c2VkIHRvIGNvbXB1dGUgdGhlIG5leHQgYmFja29mZiBkZWxheSBmcm9tXG4vLyB0aGUgY3VycmVudCBvbmUuIFRoZSB2YWx1ZSBjYW4gYmUgb3ZlcnJpZGRlbiBieSBwYXNzaW5nIGEgY3VzdG9tIGZhY3RvciBhc1xuLy8gcGFydCBvZiB0aGUgb3B0aW9ucy5cbkV4cG9uZW50aWFsQmFja29mZlN0cmF0ZWd5LkRFRkFVTFRfRkFDVE9SID0gMjtcblxuRXhwb25lbnRpYWxCYWNrb2ZmU3RyYXRlZ3kucHJvdG90eXBlLm5leHRfID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5iYWNrb2ZmRGVsYXlfID0gTWF0aC5taW4odGhpcy5uZXh0QmFja29mZkRlbGF5XywgdGhpcy5nZXRNYXhEZWxheSgpKTtcbiAgICB0aGlzLm5leHRCYWNrb2ZmRGVsYXlfID0gdGhpcy5iYWNrb2ZmRGVsYXlfICogdGhpcy5mYWN0b3JfO1xuICAgIHJldHVybiB0aGlzLmJhY2tvZmZEZWxheV87XG59O1xuXG5FeHBvbmVudGlhbEJhY2tvZmZTdHJhdGVneS5wcm90b3R5cGUucmVzZXRfID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5iYWNrb2ZmRGVsYXlfID0gMDtcbiAgICB0aGlzLm5leHRCYWNrb2ZmRGVsYXlfID0gdGhpcy5nZXRJbml0aWFsRGVsYXkoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhwb25lbnRpYWxCYWNrb2ZmU3RyYXRlZ3k7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/backoff/lib/strategy/exponential.js\n");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/fibonacci.js":
/*!********************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/fibonacci.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar BackoffStrategy = __webpack_require__(/*! ./strategy */ \"./node_modules/backoff/lib/strategy/strategy.js\");\n\n// Fibonacci backoff strategy.\nfunction FibonacciBackoffStrategy(options) {\n    BackoffStrategy.call(this, options);\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n}\nutil.inherits(FibonacciBackoffStrategy, BackoffStrategy);\n\nFibonacciBackoffStrategy.prototype.next_ = function() {\n    var backoffDelay = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n    this.nextBackoffDelay_ += this.backoffDelay_;\n    this.backoffDelay_ = backoffDelay;\n    return backoffDelay;\n};\n\nFibonacciBackoffStrategy.prototype.reset_ = function() {\n    this.nextBackoffDelay_ = this.getInitialDelay();\n    this.backoffDelay_ = 0;\n};\n\nmodule.exports = FibonacciBackoffStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvc3RyYXRlZ3kvZmlib25hY2NpLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhY2tvZmYvbGliL3N0cmF0ZWd5L2ZpYm9uYWNjaS5qcz8xY2VhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgICAgQ29weXJpZ2h0IChjKSAyMDEyIE1hdGhpZXUgVHVyY290dGVcbi8vICAgICAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxudmFyIEJhY2tvZmZTdHJhdGVneSA9IHJlcXVpcmUoJy4vc3RyYXRlZ3knKTtcblxuLy8gRmlib25hY2NpIGJhY2tvZmYgc3RyYXRlZ3kuXG5mdW5jdGlvbiBGaWJvbmFjY2lCYWNrb2ZmU3RyYXRlZ3kob3B0aW9ucykge1xuICAgIEJhY2tvZmZTdHJhdGVneS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICAgIHRoaXMuYmFja29mZkRlbGF5XyA9IDA7XG4gICAgdGhpcy5uZXh0QmFja29mZkRlbGF5XyA9IHRoaXMuZ2V0SW5pdGlhbERlbGF5KCk7XG59XG51dGlsLmluaGVyaXRzKEZpYm9uYWNjaUJhY2tvZmZTdHJhdGVneSwgQmFja29mZlN0cmF0ZWd5KTtcblxuRmlib25hY2NpQmFja29mZlN0cmF0ZWd5LnByb3RvdHlwZS5uZXh0XyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBiYWNrb2ZmRGVsYXkgPSBNYXRoLm1pbih0aGlzLm5leHRCYWNrb2ZmRGVsYXlfLCB0aGlzLmdldE1heERlbGF5KCkpO1xuICAgIHRoaXMubmV4dEJhY2tvZmZEZWxheV8gKz0gdGhpcy5iYWNrb2ZmRGVsYXlfO1xuICAgIHRoaXMuYmFja29mZkRlbGF5XyA9IGJhY2tvZmZEZWxheTtcbiAgICByZXR1cm4gYmFja29mZkRlbGF5O1xufTtcblxuRmlib25hY2NpQmFja29mZlN0cmF0ZWd5LnByb3RvdHlwZS5yZXNldF8gPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLm5leHRCYWNrb2ZmRGVsYXlfID0gdGhpcy5nZXRJbml0aWFsRGVsYXkoKTtcbiAgICB0aGlzLmJhY2tvZmZEZWxheV8gPSAwO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGaWJvbmFjY2lCYWNrb2ZmU3RyYXRlZ3k7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/backoff/lib/strategy/fibonacci.js\n");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/strategy.js":
/*!*******************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/strategy.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nfunction isDef(value) {\n    return value !== undefined && value !== null;\n}\n\n// Abstract class defining the skeleton for the backoff strategies. Accepts an\n// object holding the options for the backoff strategy:\n//\n//  * `randomisationFactor`: The randomisation factor which must be between 0\n//     and 1 where 1 equates to a randomization factor of 100% and 0 to no\n//     randomization.\n//  * `initialDelay`: The backoff initial delay in milliseconds.\n//  * `maxDelay`: The backoff maximal delay in milliseconds.\nfunction BackoffStrategy(options) {\n    options = options || {};\n\n    if (isDef(options.initialDelay) && options.initialDelay < 1) {\n        throw new Error('The initial timeout must be greater than 0.');\n    } else if (isDef(options.maxDelay) && options.maxDelay < 1) {\n        throw new Error('The maximal timeout must be greater than 0.');\n    }\n\n    this.initialDelay_ = options.initialDelay || 100;\n    this.maxDelay_ = options.maxDelay || 10000;\n\n    if (this.maxDelay_ <= this.initialDelay_) {\n        throw new Error('The maximal backoff delay must be ' +\n                        'greater than the initial backoff delay.');\n    }\n\n    if (isDef(options.randomisationFactor) &&\n        (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\n        throw new Error('The randomisation factor must be between 0 and 1.');\n    }\n\n    this.randomisationFactor_ = options.randomisationFactor || 0;\n}\n\n// Gets the maximal backoff delay.\nBackoffStrategy.prototype.getMaxDelay = function() {\n    return this.maxDelay_;\n};\n\n// Gets the initial backoff delay.\nBackoffStrategy.prototype.getInitialDelay = function() {\n    return this.initialDelay_;\n};\n\n// Template method that computes and returns the next backoff delay in\n// milliseconds.\nBackoffStrategy.prototype.next = function() {\n    var backoffDelay = this.next_();\n    var randomisationMultiple = 1 + Math.random() * this.randomisationFactor_;\n    var randomizedDelay = Math.round(backoffDelay * randomisationMultiple);\n    return randomizedDelay;\n};\n\n// Computes and returns the next backoff delay. Intended to be overridden by\n// subclasses.\nBackoffStrategy.prototype.next_ = function() {\n    throw new Error('BackoffStrategy.next_() unimplemented.');\n};\n\n// Template method that resets the backoff delay to its initial value.\nBackoffStrategy.prototype.reset = function() {\n    this.reset_();\n};\n\n// Resets the backoff delay to its initial value. Intended to be overridden by\n// subclasses.\nBackoffStrategy.prototype.reset_ = function() {\n    throw new Error('BackoffStrategy.reset_() unimplemented.');\n};\n\nmodule.exports = BackoffStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvc3RyYXRlZ3kvc3RyYXRlZ3kuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFja29mZi9saWIvc3RyYXRlZ3kvc3RyYXRlZ3kuanM/OTEzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICAgIENvcHlyaWdodCAoYykgMjAxMiBNYXRoaWV1IFR1cmNvdHRlXG4vLyAgICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cblxudmFyIGV2ZW50cyA9IHJlcXVpcmUoJ2V2ZW50cycpO1xudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5cbmZ1bmN0aW9uIGlzRGVmKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGw7XG59XG5cbi8vIEFic3RyYWN0IGNsYXNzIGRlZmluaW5nIHRoZSBza2VsZXRvbiBmb3IgdGhlIGJhY2tvZmYgc3RyYXRlZ2llcy4gQWNjZXB0cyBhblxuLy8gb2JqZWN0IGhvbGRpbmcgdGhlIG9wdGlvbnMgZm9yIHRoZSBiYWNrb2ZmIHN0cmF0ZWd5OlxuLy9cbi8vICAqIGByYW5kb21pc2F0aW9uRmFjdG9yYDogVGhlIHJhbmRvbWlzYXRpb24gZmFjdG9yIHdoaWNoIG11c3QgYmUgYmV0d2VlbiAwXG4vLyAgICAgYW5kIDEgd2hlcmUgMSBlcXVhdGVzIHRvIGEgcmFuZG9taXphdGlvbiBmYWN0b3Igb2YgMTAwJSBhbmQgMCB0byBub1xuLy8gICAgIHJhbmRvbWl6YXRpb24uXG4vLyAgKiBgaW5pdGlhbERlbGF5YDogVGhlIGJhY2tvZmYgaW5pdGlhbCBkZWxheSBpbiBtaWxsaXNlY29uZHMuXG4vLyAgKiBgbWF4RGVsYXlgOiBUaGUgYmFja29mZiBtYXhpbWFsIGRlbGF5IGluIG1pbGxpc2Vjb25kcy5cbmZ1bmN0aW9uIEJhY2tvZmZTdHJhdGVneShvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICBpZiAoaXNEZWYob3B0aW9ucy5pbml0aWFsRGVsYXkpICYmIG9wdGlvbnMuaW5pdGlhbERlbGF5IDwgMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBpbml0aWFsIHRpbWVvdXQgbXVzdCBiZSBncmVhdGVyIHRoYW4gMC4nKTtcbiAgICB9IGVsc2UgaWYgKGlzRGVmKG9wdGlvbnMubWF4RGVsYXkpICYmIG9wdGlvbnMubWF4RGVsYXkgPCAxKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIG1heGltYWwgdGltZW91dCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwLicpO1xuICAgIH1cblxuICAgIHRoaXMuaW5pdGlhbERlbGF5XyA9IG9wdGlvbnMuaW5pdGlhbERlbGF5IHx8IDEwMDtcbiAgICB0aGlzLm1heERlbGF5XyA9IG9wdGlvbnMubWF4RGVsYXkgfHwgMTAwMDA7XG5cbiAgICBpZiAodGhpcy5tYXhEZWxheV8gPD0gdGhpcy5pbml0aWFsRGVsYXlfKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIG1heGltYWwgYmFja29mZiBkZWxheSBtdXN0IGJlICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2dyZWF0ZXIgdGhhbiB0aGUgaW5pdGlhbCBiYWNrb2ZmIGRlbGF5LicpO1xuICAgIH1cblxuICAgIGlmIChpc0RlZihvcHRpb25zLnJhbmRvbWlzYXRpb25GYWN0b3IpICYmXG4gICAgICAgIChvcHRpb25zLnJhbmRvbWlzYXRpb25GYWN0b3IgPCAwIHx8IG9wdGlvbnMucmFuZG9taXNhdGlvbkZhY3RvciA+IDEpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHJhbmRvbWlzYXRpb24gZmFjdG9yIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAxLicpO1xuICAgIH1cblxuICAgIHRoaXMucmFuZG9taXNhdGlvbkZhY3Rvcl8gPSBvcHRpb25zLnJhbmRvbWlzYXRpb25GYWN0b3IgfHwgMDtcbn1cblxuLy8gR2V0cyB0aGUgbWF4aW1hbCBiYWNrb2ZmIGRlbGF5LlxuQmFja29mZlN0cmF0ZWd5LnByb3RvdHlwZS5nZXRNYXhEZWxheSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm1heERlbGF5Xztcbn07XG5cbi8vIEdldHMgdGhlIGluaXRpYWwgYmFja29mZiBkZWxheS5cbkJhY2tvZmZTdHJhdGVneS5wcm90b3R5cGUuZ2V0SW5pdGlhbERlbGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5pdGlhbERlbGF5Xztcbn07XG5cbi8vIFRlbXBsYXRlIG1ldGhvZCB0aGF0IGNvbXB1dGVzIGFuZCByZXR1cm5zIHRoZSBuZXh0IGJhY2tvZmYgZGVsYXkgaW5cbi8vIG1pbGxpc2Vjb25kcy5cbkJhY2tvZmZTdHJhdGVneS5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBiYWNrb2ZmRGVsYXkgPSB0aGlzLm5leHRfKCk7XG4gICAgdmFyIHJhbmRvbWlzYXRpb25NdWx0aXBsZSA9IDEgKyBNYXRoLnJhbmRvbSgpICogdGhpcy5yYW5kb21pc2F0aW9uRmFjdG9yXztcbiAgICB2YXIgcmFuZG9taXplZERlbGF5ID0gTWF0aC5yb3VuZChiYWNrb2ZmRGVsYXkgKiByYW5kb21pc2F0aW9uTXVsdGlwbGUpO1xuICAgIHJldHVybiByYW5kb21pemVkRGVsYXk7XG59O1xuXG4vLyBDb21wdXRlcyBhbmQgcmV0dXJucyB0aGUgbmV4dCBiYWNrb2ZmIGRlbGF5LiBJbnRlbmRlZCB0byBiZSBvdmVycmlkZGVuIGJ5XG4vLyBzdWJjbGFzc2VzLlxuQmFja29mZlN0cmF0ZWd5LnByb3RvdHlwZS5uZXh0XyA9IGZ1bmN0aW9uKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQmFja29mZlN0cmF0ZWd5Lm5leHRfKCkgdW5pbXBsZW1lbnRlZC4nKTtcbn07XG5cbi8vIFRlbXBsYXRlIG1ldGhvZCB0aGF0IHJlc2V0cyB0aGUgYmFja29mZiBkZWxheSB0byBpdHMgaW5pdGlhbCB2YWx1ZS5cbkJhY2tvZmZTdHJhdGVneS5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlc2V0XygpO1xufTtcblxuLy8gUmVzZXRzIHRoZSBiYWNrb2ZmIGRlbGF5IHRvIGl0cyBpbml0aWFsIHZhbHVlLiBJbnRlbmRlZCB0byBiZSBvdmVycmlkZGVuIGJ5XG4vLyBzdWJjbGFzc2VzLlxuQmFja29mZlN0cmF0ZWd5LnByb3RvdHlwZS5yZXNldF8gPSBmdW5jdGlvbigpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0JhY2tvZmZTdHJhdGVneS5yZXNldF8oKSB1bmltcGxlbWVudGVkLicpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrb2ZmU3RyYXRlZ3k7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/backoff/lib/strategy/strategy.js\n");

/***/ }),

/***/ "./node_modules/core-js/modules/_create-property.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $defineProperty = __webpack_require__(/*! ./_object-dp */ \"./node_modules/core-js/modules/_object-dp.js\");\nvar createDesc = __webpack_require__(/*! ./_property-desc */ \"./node_modules/core-js/modules/_property-desc.js\");\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanM/ZjFhZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/core-js/modules/_create-property.js\n");

/***/ }),

/***/ "./node_modules/core-js/modules/_string-at.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-at.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/core-js/modules/_to-integer.js\");\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/core-js/modules/_defined.js\");\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctYXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctYXQuanM/MDJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/core-js/modules/_string-at.js\n");

/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.from.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/core-js/modules/_ctx.js\");\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/modules/_export.js\");\nvar toObject = __webpack_require__(/*! ./_to-object */ \"./node_modules/core-js/modules/_to-object.js\");\nvar call = __webpack_require__(/*! ./_iter-call */ \"./node_modules/core-js/modules/_iter-call.js\");\nvar isArrayIter = __webpack_require__(/*! ./_is-array-iter */ \"./node_modules/core-js/modules/_is-array-iter.js\");\nvar toLength = __webpack_require__(/*! ./_to-length */ \"./node_modules/core-js/modules/_to-length.js\");\nvar createProperty = __webpack_require__(/*! ./_create-property */ \"./node_modules/core-js/modules/_create-property.js\");\nvar getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ \"./node_modules/core-js/modules/core.get-iterator-method.js\");\n\n$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ \"./node_modules/core-js/modules/_iter-detect.js\")(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mcm9tLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcz8xYzRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24gKGl0ZXIpIHsgQXJyYXkuZnJvbShpdGVyKTsgfSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjEgQXJyYXkuZnJvbShhcnJheUxpa2UsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICBmcm9tOiBmdW5jdGlvbiBmcm9tKGFycmF5TGlrZSAvKiAsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBDID0gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiBBcnJheTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIG1hcGZuID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgbGVuZ3RoLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmIChtYXBwaW5nKSBtYXBmbiA9IGN0eChtYXBmbiwgYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpO1xuICAgIC8vIGlmIG9iamVjdCBpc24ndCBpdGVyYWJsZSBvciBpdCdzIGFycmF5IHdpdGggZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBzaW1wbGUgY2FzZVxuICAgIGlmIChpdGVyRm4gIT0gdW5kZWZpbmVkICYmICEoQyA9PSBBcnJheSAmJiBpc0FycmF5SXRlcihpdGVyRm4pKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCByZXN1bHQgPSBuZXcgQygpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IGNhbGwoaXRlcmF0b3IsIG1hcGZuLCBbc3RlcC52YWx1ZSwgaW5kZXhdLCB0cnVlKSA6IHN0ZXAudmFsdWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgICBmb3IgKHJlc3VsdCA9IG5ldyBDKGxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/core-js/modules/es6.array.from.js\n");

/***/ }),

/***/ "./node_modules/core-js/modules/es6.string.iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.iterator.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $at = __webpack_require__(/*! ./_string-at */ \"./node_modules/core-js/modules/_string-at.js\")(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(/*! ./_iter-define */ \"./node_modules/core-js/modules/_iter-define.js\")(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanM/NWRmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/core-js/modules/es6.string.iterator.js\n");

/***/ }),

/***/ "./node_modules/core-js/modules/web.dom.iterable.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $iterators = __webpack_require__(/*! ./es6.array.iterator */ \"./node_modules/core-js/modules/es6.array.iterator.js\");\nvar getKeys = __webpack_require__(/*! ./_object-keys */ \"./node_modules/core-js/modules/_object-keys.js\");\nvar redefine = __webpack_require__(/*! ./_redefine */ \"./node_modules/core-js/modules/_redefine.js\");\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/modules/_global.js\");\nvar hide = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/modules/_hide.js\");\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/modules/_iterators.js\");\nvar wks = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/modules/_wks.js\");\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanM/YWM2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgSVRFUkFUT1IgPSB3a3MoJ2l0ZXJhdG9yJyk7XG52YXIgVE9fU1RSSU5HX1RBRyA9IHdrcygndG9TdHJpbmdUYWcnKTtcbnZhciBBcnJheVZhbHVlcyA9IEl0ZXJhdG9ycy5BcnJheTtcblxudmFyIERPTUl0ZXJhYmxlcyA9IHtcbiAgQ1NTUnVsZUxpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBDU1NTdHlsZURlY2xhcmF0aW9uOiBmYWxzZSxcbiAgQ1NTVmFsdWVMaXN0OiBmYWxzZSxcbiAgQ2xpZW50UmVjdExpc3Q6IGZhbHNlLFxuICBET01SZWN0TGlzdDogZmFsc2UsXG4gIERPTVN0cmluZ0xpc3Q6IGZhbHNlLFxuICBET01Ub2tlbkxpc3Q6IHRydWUsXG4gIERhdGFUcmFuc2Zlckl0ZW1MaXN0OiBmYWxzZSxcbiAgRmlsZUxpc3Q6IGZhbHNlLFxuICBIVE1MQWxsQ29sbGVjdGlvbjogZmFsc2UsXG4gIEhUTUxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTEZvcm1FbGVtZW50OiBmYWxzZSxcbiAgSFRNTFNlbGVjdEVsZW1lbnQ6IGZhbHNlLFxuICBNZWRpYUxpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBNaW1lVHlwZUFycmF5OiBmYWxzZSxcbiAgTmFtZWROb2RlTWFwOiBmYWxzZSxcbiAgTm9kZUxpc3Q6IHRydWUsXG4gIFBhaW50UmVxdWVzdExpc3Q6IGZhbHNlLFxuICBQbHVnaW46IGZhbHNlLFxuICBQbHVnaW5BcnJheTogZmFsc2UsXG4gIFNWR0xlbmd0aExpc3Q6IGZhbHNlLFxuICBTVkdOdW1iZXJMaXN0OiBmYWxzZSxcbiAgU1ZHUGF0aFNlZ0xpc3Q6IGZhbHNlLFxuICBTVkdQb2ludExpc3Q6IGZhbHNlLFxuICBTVkdTdHJpbmdMaXN0OiBmYWxzZSxcbiAgU1ZHVHJhbnNmb3JtTGlzdDogZmFsc2UsXG4gIFNvdXJjZUJ1ZmZlckxpc3Q6IGZhbHNlLFxuICBTdHlsZVNoZWV0TGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIFRleHRUcmFja0N1ZUxpc3Q6IGZhbHNlLFxuICBUZXh0VHJhY2tMaXN0OiBmYWxzZSxcbiAgVG91Y2hMaXN0OiBmYWxzZVxufTtcblxuZm9yICh2YXIgY29sbGVjdGlvbnMgPSBnZXRLZXlzKERPTUl0ZXJhYmxlcyksIGkgPSAwOyBpIDwgY29sbGVjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgdmFyIE5BTUUgPSBjb2xsZWN0aW9uc1tpXTtcbiAgdmFyIGV4cGxpY2l0ID0gRE9NSXRlcmFibGVzW05BTUVdO1xuICB2YXIgQ29sbGVjdGlvbiA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIHByb3RvID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgdmFyIGtleTtcbiAgaWYgKHByb3RvKSB7XG4gICAgaWYgKCFwcm90b1tJVEVSQVRPUl0pIGhpZGUocHJvdG8sIElURVJBVE9SLCBBcnJheVZhbHVlcyk7XG4gICAgaWYgKCFwcm90b1tUT19TVFJJTkdfVEFHXSkgaGlkZShwcm90bywgVE9fU1RSSU5HX1RBRywgTkFNRSk7XG4gICAgSXRlcmF0b3JzW05BTUVdID0gQXJyYXlWYWx1ZXM7XG4gICAgaWYgKGV4cGxpY2l0KSBmb3IgKGtleSBpbiAkaXRlcmF0b3JzKSBpZiAoIXByb3RvW2tleV0pIHJlZGVmaW5lKHByb3RvLCBrZXksICRpdGVyYXRvcnNba2V5XSwgdHJ1ZSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/core-js/modules/web.dom.iterable.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.5.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-05-04T22:49Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.5.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( _i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.5\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2020-03-14\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px\";\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = parseInt( trStyle.height ) > 3;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = (\n\t\t\t\t\tdataPriv.get( cur, \"events\" ) || Object.create( null )\n\t\t\t\t)[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script\n\t\t\tif ( !isSuccess && jQuery.inArray( \"script\", s.dataTypes ) > -1 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tif ( typeof props.top === \"number\" ) {\n\t\t\t\tprops.top += \"px\";\n\t\t\t}\n\t\t\tif ( typeof props.left === \"number\" ) {\n\t\t\t\tprops.left += \"px\";\n\t\t\t}\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery/dist/jquery.js\n");

/***/ }),

/***/ "./node_modules/precond/index.js":
/*!***************************************!*\
  !*** ./node_modules/precond/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nmodule.exports = __webpack_require__(/*! ./lib/checks */ \"./node_modules/precond/lib/checks.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY29uZC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcmVjb25kL2luZGV4LmpzP2NjYzEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxMiBNYXRoaWV1IFR1cmNvdHRlXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9jaGVja3MnKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/precond/index.js\n");

/***/ }),

/***/ "./node_modules/precond/lib/checks.js":
/*!********************************************!*\
  !*** ./node_modules/precond/lib/checks.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar errors = module.exports = __webpack_require__(/*! ./errors */ \"./node_modules/precond/lib/errors.js\");\n\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n    messageFormat = messageFormat || '';\n    var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n    var error = new ExceptionConstructor(message);\n    Error.captureStackTrace(error, callee);\n    throw error;\n}\n\nfunction failArgumentCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\n\nfunction failStateCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\n\nmodule.exports.checkArgument = function(value, message) {\n    if (!value) {\n        failArgumentCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkState = function(value, message) {\n    if (!value) {\n        failStateCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkIsDef = function(value, message) {\n    if (value !== undefined) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined but was undefined.',\n        Array.prototype.slice.call(arguments, 2));\n};\n\nmodule.exports.checkIsDefAndNotNull = function(value, message) {\n    // Note that undefined == null.\n    if (value != null) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined and not null but got \"' +\n        typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n};\n\n// Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\nfunction typeOf(value) {\n    var s = typeof value;\n    if (s == 'object') {\n        if (!value) {\n            return 'null';\n        } else if (value instanceof Array) {\n            return 'array';\n        }\n    }\n    return s;\n}\n\nfunction typeCheck(expect) {\n    return function(value, message) {\n        var type = typeOf(value);\n\n        if (type == expect) {\n            return value;\n        }\n\n        failArgumentCheck(arguments.callee, message ||\n            'Expected \"' + expect + '\" but got \"' + type + '\".',\n            Array.prototype.slice.call(arguments, 2));\n    };\n}\n\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY29uZC9saWIvY2hlY2tzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ByZWNvbmQvbGliL2NoZWNrcy5qcz8xY2RjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aGlldSBUdXJjb3R0ZVxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICovXG5cbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG52YXIgZXJyb3JzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Vycm9ycycpO1xuXG5mdW5jdGlvbiBmYWlsQ2hlY2soRXhjZXB0aW9uQ29uc3RydWN0b3IsIGNhbGxlZSwgbWVzc2FnZUZvcm1hdCwgZm9ybWF0QXJncykge1xuICAgIG1lc3NhZ2VGb3JtYXQgPSBtZXNzYWdlRm9ybWF0IHx8ICcnO1xuICAgIHZhciBtZXNzYWdlID0gdXRpbC5mb3JtYXQuYXBwbHkodGhpcywgW21lc3NhZ2VGb3JtYXRdLmNvbmNhdChmb3JtYXRBcmdzKSk7XG4gICAgdmFyIGVycm9yID0gbmV3IEV4Y2VwdGlvbkNvbnN0cnVjdG9yKG1lc3NhZ2UpO1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGVycm9yLCBjYWxsZWUpO1xuICAgIHRocm93IGVycm9yO1xufVxuXG5mdW5jdGlvbiBmYWlsQXJndW1lbnRDaGVjayhjYWxsZWUsIG1lc3NhZ2UsIGZvcm1hdEFyZ3MpIHtcbiAgICBmYWlsQ2hlY2soZXJyb3JzLklsbGVnYWxBcmd1bWVudEVycm9yLCBjYWxsZWUsIG1lc3NhZ2UsIGZvcm1hdEFyZ3MpO1xufVxuXG5mdW5jdGlvbiBmYWlsU3RhdGVDaGVjayhjYWxsZWUsIG1lc3NhZ2UsIGZvcm1hdEFyZ3MpIHtcbiAgICBmYWlsQ2hlY2soZXJyb3JzLklsbGVnYWxTdGF0ZUVycm9yLCBjYWxsZWUsIG1lc3NhZ2UsIGZvcm1hdEFyZ3MpO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5jaGVja0FyZ3VtZW50ID0gZnVuY3Rpb24odmFsdWUsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIGZhaWxBcmd1bWVudENoZWNrKGFyZ3VtZW50cy5jYWxsZWUsIG1lc3NhZ2UsXG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5jaGVja1N0YXRlID0gZnVuY3Rpb24odmFsdWUsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIGZhaWxTdGF0ZUNoZWNrKGFyZ3VtZW50cy5jYWxsZWUsIG1lc3NhZ2UsXG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5jaGVja0lzRGVmID0gZnVuY3Rpb24odmFsdWUsIG1lc3NhZ2UpIHtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG4gICAgZmFpbEFyZ3VtZW50Q2hlY2soYXJndW1lbnRzLmNhbGxlZSwgbWVzc2FnZSB8fFxuICAgICAgICAnRXhwZWN0ZWQgdmFsdWUgdG8gYmUgZGVmaW5lZCBidXQgd2FzIHVuZGVmaW5lZC4nLFxuICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmNoZWNrSXNEZWZBbmROb3ROdWxsID0gZnVuY3Rpb24odmFsdWUsIG1lc3NhZ2UpIHtcbiAgICAvLyBOb3RlIHRoYXQgdW5kZWZpbmVkID09IG51bGwuXG4gICAgaWYgKHZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIGZhaWxBcmd1bWVudENoZWNrKGFyZ3VtZW50cy5jYWxsZWUsIG1lc3NhZ2UgfHxcbiAgICAgICAgJ0V4cGVjdGVkIHZhbHVlIHRvIGJlIGRlZmluZWQgYW5kIG5vdCBudWxsIGJ1dCBnb3QgXCInICtcbiAgICAgICAgdHlwZU9mKHZhbHVlKSArICdcIi4nLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKTtcbn07XG5cbi8vIEZpeGVkIHZlcnNpb24gb2YgdGhlIHR5cGVPZiBvcGVyYXRvciB3aGljaCByZXR1cm5zICdudWxsJyBmb3IgbnVsbCB2YWx1ZXNcbi8vIGFuZCAnYXJyYXknIGZvciBhcnJheXMuXG5mdW5jdGlvbiB0eXBlT2YodmFsdWUpIHtcbiAgICB2YXIgcyA9IHR5cGVvZiB2YWx1ZTtcbiAgICBpZiAocyA9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gJ251bGwnO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiAnYXJyYXknO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzO1xufVxuXG5mdW5jdGlvbiB0eXBlQ2hlY2soZXhwZWN0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciB0eXBlID0gdHlwZU9mKHZhbHVlKTtcblxuICAgICAgICBpZiAodHlwZSA9PSBleHBlY3QpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZhaWxBcmd1bWVudENoZWNrKGFyZ3VtZW50cy5jYWxsZWUsIG1lc3NhZ2UgfHxcbiAgICAgICAgICAgICdFeHBlY3RlZCBcIicgKyBleHBlY3QgKyAnXCIgYnV0IGdvdCBcIicgKyB0eXBlICsgJ1wiLicsXG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpKTtcbiAgICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cy5jaGVja0lzU3RyaW5nID0gdHlwZUNoZWNrKCdzdHJpbmcnKTtcbm1vZHVsZS5leHBvcnRzLmNoZWNrSXNBcnJheSA9IHR5cGVDaGVjaygnYXJyYXknKTtcbm1vZHVsZS5leHBvcnRzLmNoZWNrSXNOdW1iZXIgPSB0eXBlQ2hlY2soJ251bWJlcicpO1xubW9kdWxlLmV4cG9ydHMuY2hlY2tJc0Jvb2xlYW4gPSB0eXBlQ2hlY2soJ2Jvb2xlYW4nKTtcbm1vZHVsZS5leHBvcnRzLmNoZWNrSXNGdW5jdGlvbiA9IHR5cGVDaGVjaygnZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzLmNoZWNrSXNPYmplY3QgPSB0eXBlQ2hlY2soJ29iamVjdCcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/precond/lib/checks.js\n");

/***/ }),

/***/ "./node_modules/precond/lib/errors.js":
/*!********************************************!*\
  !*** ./node_modules/precond/lib/errors.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nfunction IllegalArgumentError(message) {\n    Error.call(this, message);\n    this.message = message;\n}\nutil.inherits(IllegalArgumentError, Error);\n\nIllegalArgumentError.prototype.name = 'IllegalArgumentError';\n\nfunction IllegalStateError(message) {\n    Error.call(this, message);\n    this.message = message;\n}\nutil.inherits(IllegalStateError, Error);\n\nIllegalStateError.prototype.name = 'IllegalStateError';\n\nmodule.exports.IllegalStateError = IllegalStateError;\nmodule.exports.IllegalArgumentError = IllegalArgumentError;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY29uZC9saWIvZXJyb3JzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ByZWNvbmQvbGliL2Vycm9ycy5qcz83N2JlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aGlldSBUdXJjb3R0ZVxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICovXG5cbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5mdW5jdGlvbiBJbGxlZ2FsQXJndW1lbnRFcnJvcihtZXNzYWdlKSB7XG4gICAgRXJyb3IuY2FsbCh0aGlzLCBtZXNzYWdlKTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xufVxudXRpbC5pbmhlcml0cyhJbGxlZ2FsQXJndW1lbnRFcnJvciwgRXJyb3IpO1xuXG5JbGxlZ2FsQXJndW1lbnRFcnJvci5wcm90b3R5cGUubmFtZSA9ICdJbGxlZ2FsQXJndW1lbnRFcnJvcic7XG5cbmZ1bmN0aW9uIElsbGVnYWxTdGF0ZUVycm9yKG1lc3NhZ2UpIHtcbiAgICBFcnJvci5jYWxsKHRoaXMsIG1lc3NhZ2UpO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG51dGlsLmluaGVyaXRzKElsbGVnYWxTdGF0ZUVycm9yLCBFcnJvcik7XG5cbklsbGVnYWxTdGF0ZUVycm9yLnByb3RvdHlwZS5uYW1lID0gJ0lsbGVnYWxTdGF0ZUVycm9yJztcblxubW9kdWxlLmV4cG9ydHMuSWxsZWdhbFN0YXRlRXJyb3IgPSBJbGxlZ2FsU3RhdGVFcnJvcjtcbm1vZHVsZS5leHBvcnRzLklsbGVnYWxBcmd1bWVudEVycm9yID0gSWxsZWdhbEFyZ3VtZW50RXJyb3I7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/precond/lib/errors.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/cancelableroompromise.js":
/*!****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/cancelableroompromise.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar CancelablePromise = __webpack_require__(/*! ./util/cancelablepromise */ \"./node_modules/twilio-video/es5/util/cancelablepromise.js\");\n\n/**\n * Create a {@link CancelablePromise<Room>}.\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\n * @returns CancelablePromise<Room>\n */\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n  var cancelableRoomSignalingPromise = void 0;\n  var cancellationError = new Error('Canceled');\n\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n    var localParticipant = void 0;\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n      if (isCanceled()) {\n        return CancelablePromise.reject(cancellationError);\n      }\n      localParticipant = createLocalParticipant(localTracks);\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n        if (isCanceled()) {\n          throw cancellationError;\n        }\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n        return cancelableRoomSignalingPromise;\n      });\n    }).then(function roomSignalingConnected(roomSignaling) {\n      if (isCanceled()) {\n        roomSignaling.disconnect();\n        throw cancellationError;\n      }\n      resolve(createRoom(localParticipant, roomSignaling));\n    }).catch(function onError(error) {\n      reject(error);\n    });\n  }, function onCancel() {\n    if (cancelableRoomSignalingPromise) {\n      cancelableRoomSignalingPromise.cancel();\n    }\n  });\n}\n\nmodule.exports = createCancelableRoomPromise;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9jYW5jZWxhYmxlcm9vbXByb21pc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9jYW5jZWxhYmxlcm9vbXByb21pc2UuanM/ZmU0YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWxhYmxlUHJvbWlzZSA9IHJlcXVpcmUoJy4vdXRpbC9jYW5jZWxhYmxlcHJvbWlzZScpO1xuXG4vKipcbiAqIENyZWF0ZSBhIHtAbGluayBDYW5jZWxhYmxlUHJvbWlzZTxSb29tPn0uXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKGZ1bmN0aW9uKEFycmF5PExvY2FsVHJhY2s+KTogQ2FuY2VsYWJsZVByb21pc2U8Um9vbVNpZ25hbGluZz4pOlxuICogICBQcm9taXNlPGZ1bmN0aW9uKCk6IENhbmNlbGFibGVQcm9taXNlPFJvb21TaWduYWxpbmc+Pn0gZ2V0TG9jYWxUcmFja3NcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oQXJyYXk8TG9jYWxUcmFjaz4pOiBMb2NhbFBhcnRpY2lwYW50fSBjcmVhdGVMb2NhbFBhcnRpY2lwYW50XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKEFycmF5PExvY2FsVHJhY2s+KTogQ2FuY2VsYWJsZVByb21pc2U8Um9vbVNpZ25hbGluZz59IGNyZWF0ZVJvb21TaWduYWxpbmdcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oTG9jYWxQYXJ0aWNpcGFudCwgUm9vbVNpZ25hbGluZyk6IFJvb219IGNyZWF0ZVJvb21cbiAqIEByZXR1cm5zIENhbmNlbGFibGVQcm9taXNlPFJvb20+XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNhbmNlbGFibGVSb29tUHJvbWlzZShnZXRMb2NhbFRyYWNrcywgY3JlYXRlTG9jYWxQYXJ0aWNpcGFudCwgY3JlYXRlUm9vbVNpZ25hbGluZywgY3JlYXRlUm9vbSkge1xuICB2YXIgY2FuY2VsYWJsZVJvb21TaWduYWxpbmdQcm9taXNlID0gdm9pZCAwO1xuICB2YXIgY2FuY2VsbGF0aW9uRXJyb3IgPSBuZXcgRXJyb3IoJ0NhbmNlbGVkJyk7XG5cbiAgcmV0dXJuIG5ldyBDYW5jZWxhYmxlUHJvbWlzZShmdW5jdGlvbiBvbkNyZWF0ZShyZXNvbHZlLCByZWplY3QsIGlzQ2FuY2VsZWQpIHtcbiAgICB2YXIgbG9jYWxQYXJ0aWNpcGFudCA9IHZvaWQgMDtcbiAgICBnZXRMb2NhbFRyYWNrcyhmdW5jdGlvbiBnZXRMb2NhbFRyYWNrc1N1Y2NlZWRlZChsb2NhbFRyYWNrcykge1xuICAgICAgaWYgKGlzQ2FuY2VsZWQoKSkge1xuICAgICAgICByZXR1cm4gQ2FuY2VsYWJsZVByb21pc2UucmVqZWN0KGNhbmNlbGxhdGlvbkVycm9yKTtcbiAgICAgIH1cbiAgICAgIGxvY2FsUGFydGljaXBhbnQgPSBjcmVhdGVMb2NhbFBhcnRpY2lwYW50KGxvY2FsVHJhY2tzKTtcbiAgICAgIHJldHVybiBjcmVhdGVSb29tU2lnbmFsaW5nKGxvY2FsUGFydGljaXBhbnQpLnRoZW4oZnVuY3Rpb24gY3JlYXRlUm9vbVNpZ25hbGluZ1N1Y2NlZWRlZChnZXRDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2UpIHtcbiAgICAgICAgaWYgKGlzQ2FuY2VsZWQoKSkge1xuICAgICAgICAgIHRocm93IGNhbmNlbGxhdGlvbkVycm9yO1xuICAgICAgICB9XG4gICAgICAgIGNhbmNlbGFibGVSb29tU2lnbmFsaW5nUHJvbWlzZSA9IGdldENhbmNlbGFibGVSb29tU2lnbmFsaW5nUHJvbWlzZSgpO1xuICAgICAgICByZXR1cm4gY2FuY2VsYWJsZVJvb21TaWduYWxpbmdQcm9taXNlO1xuICAgICAgfSk7XG4gICAgfSkudGhlbihmdW5jdGlvbiByb29tU2lnbmFsaW5nQ29ubmVjdGVkKHJvb21TaWduYWxpbmcpIHtcbiAgICAgIGlmIChpc0NhbmNlbGVkKCkpIHtcbiAgICAgICAgcm9vbVNpZ25hbGluZy5kaXNjb25uZWN0KCk7XG4gICAgICAgIHRocm93IGNhbmNlbGxhdGlvbkVycm9yO1xuICAgICAgfVxuICAgICAgcmVzb2x2ZShjcmVhdGVSb29tKGxvY2FsUGFydGljaXBhbnQsIHJvb21TaWduYWxpbmcpKTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbiBvbkVycm9yKGVycm9yKSB7XG4gICAgICByZWplY3QoZXJyb3IpO1xuICAgIH0pO1xuICB9LCBmdW5jdGlvbiBvbkNhbmNlbCgpIHtcbiAgICBpZiAoY2FuY2VsYWJsZVJvb21TaWduYWxpbmdQcm9taXNlKSB7XG4gICAgICBjYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2UuY2FuY2VsKCk7XG4gICAgfVxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVDYW5jZWxhYmxlUm9vbVByb21pc2U7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/cancelableroompromise.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/connect.js":
/*!**************************************************!*\
  !*** ./node_modules/twilio-video/es5/connect.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\"),\n    MediaStreamTrack = _require.MediaStreamTrack;\n\nvar _require2 = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require2.guessBrowser,\n    guessBrowserVersion = _require2.guessBrowserVersion;\n\nvar createCancelableRoomPromise = __webpack_require__(/*! ./cancelableroompromise */ \"./node_modules/twilio-video/es5/cancelableroompromise.js\");\nvar createLocalTracks = __webpack_require__(/*! ./createlocaltracks */ \"./node_modules/twilio-video/es5/createlocaltracks.js\");\nvar EncodingParametersImpl = __webpack_require__(/*! ./encodingparameters */ \"./node_modules/twilio-video/es5/encodingparameters.js\");\nvar LocalParticipant = __webpack_require__(/*! ./localparticipant */ \"./node_modules/twilio-video/es5/localparticipant.js\");\n\nvar _require3 = __webpack_require__(/*! ./media/track/es5 */ \"./node_modules/twilio-video/es5/media/track/es5/index.js\"),\n    LocalAudioTrack = _require3.LocalAudioTrack,\n    LocalDataTrack = _require3.LocalDataTrack,\n    LocalVideoTrack = _require3.LocalVideoTrack;\n\nvar NetworkQualityConfigurationImpl = __webpack_require__(/*! ./networkqualityconfiguration */ \"./node_modules/twilio-video/es5/networkqualityconfiguration.js\");\nvar Room = __webpack_require__(/*! ./room */ \"./node_modules/twilio-video/es5/room.js\");\nvar SignalingV2 = __webpack_require__(/*! ./signaling/v2 */ \"./node_modules/twilio-video/es5/signaling/v2/index.js\");\n\nvar _require4 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    asLocalTrack = _require4.asLocalTrack,\n    buildLogLevels = _require4.buildLogLevels,\n    filterObject = _require4.filterObject,\n    isNonArrayObject = _require4.isNonArrayObject;\n\nvar _require5 = __webpack_require__(/*! ./util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    DEFAULT_ENVIRONMENT = _require5.DEFAULT_ENVIRONMENT,\n    DEFAULT_LOG_LEVEL = _require5.DEFAULT_LOG_LEVEL,\n    DEFAULT_REALM = _require5.DEFAULT_REALM,\n    DEFAULT_REGION = _require5.DEFAULT_REGION,\n    WS_SERVER = _require5.WS_SERVER,\n    E = _require5.typeErrors;\n\nvar CancelablePromise = __webpack_require__(/*! ./util/cancelablepromise */ \"./node_modules/twilio-video/es5/util/cancelablepromise.js\");\nvar EventObserver = __webpack_require__(/*! ./util/eventobserver */ \"./node_modules/twilio-video/es5/util/eventobserver.js\");\nvar Log = __webpack_require__(/*! ./util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\n\nvar _require6 = __webpack_require__(/*! ./util/validate */ \"./node_modules/twilio-video/es5/util/validate.js\"),\n    validateBandwidthProfile = _require6.validateBandwidthProfile;\n\nvar safariVersion = guessBrowser() === 'safari' && guessBrowserVersion();\n\n// This is used to make out which connect() call a particular Log statement\n// belongs to. Each call to connect() increments this counter.\nvar connectCalls = 0;\n\nvar didPrintSafariWarning = false;\nvar isSafariWithoutVP8Support = false;\n\nif (safariVersion) {\n  var safariMajorVersion = safariVersion.major,\n      safariMinorVersion = safariVersion.minor;\n\n  isSafariWithoutVP8Support = safariMajorVersion < 12 || safariMajorVersion === 12 && safariMinorVersion < 1;\n}\n\n/**\n * Connect to a {@link Room}.\n *   <br><br>\n *   By default, this will automatically acquire an array containing a\n *   {@link LocalAudioTrack} and {@link LocalVideoTrack} before connecting to\n *   the {@link Room}. These will be stopped when you disconnect from the\n *   {@link Room}.\n *   <br><br>\n *   You can override the default behavior by specifying\n *   <code>options</code>. For example, rather than acquiring a\n *   {@link LocalAudioTrack} and {@link LocalVideoTrack} automatically, you can\n *   pass your own array which you can stop yourself. See {@link ConnectOptions}\n *   for more information.\n * @alias module:twilio-video.connect\n * @param {string} token - The Access Token string\n * @param {ConnectOptions} [options] - Options to override the default behavior\n * @returns {CancelablePromise<Room>}\n * @throws {RangeError}\n * @throws {TwilioError}\n * @throws {TypeError}\n * @example\n * var Video = require('twilio-video');\n * var token = getAccessToken();\n * Video.connect(token, {\n *   name: 'my-cool-room'\n * }).then(function(room) {\n *   room.on('participantConnected', function(participant) {\n *     console.log(participant.identity + ' has connected');\n *   });\n\n *   room.once('disconnected', function() {\n *     console.log('You left the Room:', room.name);\n *   });\n * }).catch(error => {\n *   console.log('Could not connect to the Room:', error.message);\n * });\n * @example\n * var Video = require('twilio-video');\n * var token = getAccessToken();\n *\n * // Connect with audio-only\n * Video.connect(token, {\n *   name: 'my-cool-room',\n *   audio: true\n * }).then(function(room) {\n *   room.on('participantConnected', function(participant) {\n *     console.log(participant.identity + ' has connected');\n *   });\n *\n *   room.once('disconnected', function() {\n *     console.log('You left the Room:', room.name);\n *   });\n * }).catch(error => {\n *   console.log('Could not connect to the Room:', error.message);\n * });\n * @example\n * var Video = require('twilio-video');\n * var token = getAccessToken();\n *\n * // Connect with media acquired using getUserMedia()\n * navigator.mediaDevices.getUserMedia({\n *   audio: true,\n *   video: true\n * }).then(function(mediaStream) {\n *   return Video.connect(token, {\n *     name: 'my-cool-room',\n *     tracks: mediaStream.getTracks()\n *   });\n * }).then(function(room) {\n *   room.on('participantConnected', function(participant) {\n *     console.log(participant.identity + ' has connected');\n *   });\n *\n *   room.once('disconnected', function() {\n *     console.log('You left the Room:', room.name);\n *   });\n * }).catch(error => {\n *   console.log('Could not connect to the Room:', error.message);\n * });\n * @example\n * var Video = require('twilio-video');\n * var token = getAccessToken();\n *\n * // Connect with custom names for LocalAudioTrack and LocalVideoTrack\n * Video.connect(token, {\n *   name: 'my-cool-room'\n *   audio: { name: 'microphone' },\n *   video: { name: 'camera' }\n * }).then(function(room) {\n *   room.localParticipants.trackPublications.forEach(function(publication) {\n *     console.log('The LocalTrack \"' + publication.trackName + '\" was successfully published');\n *   });\n * }).catch(error => {\n *   console.log('Could not connect to the Room:', error.message);\n * });\n */\nfunction connect(token, options) {\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n  if (!isNonArrayObject(options)) {\n    return CancelablePromise.reject(E.INVALID_TYPE('options', 'object'));\n  }\n\n  options = Object.assign({\n    automaticSubscription: true,\n    createLocalTracks: createLocalTracks,\n    dominantSpeaker: false,\n    enableDscp: false,\n    environment: DEFAULT_ENVIRONMENT,\n    eventListener: null,\n    insights: true,\n    LocalAudioTrack: LocalAudioTrack,\n    LocalDataTrack: LocalDataTrack,\n    LocalParticipant: LocalParticipant,\n    LocalVideoTrack: LocalVideoTrack,\n    Log: Log,\n    MediaStreamTrack: MediaStreamTrack,\n    logLevel: DEFAULT_LOG_LEVEL,\n    maxAudioBitrate: null,\n    maxVideoBitrate: null,\n    name: null,\n    networkMonitor: true,\n    networkQuality: false,\n    preferredAudioCodecs: [],\n    preferredVideoCodecs: [],\n    realm: DEFAULT_REALM,\n    region: DEFAULT_REGION,\n    signaling: SignalingV2\n  }, filterObject(options));\n\n  /* eslint new-cap:0 */\n  var wsServer = WS_SERVER(options.environment, options.region);\n  var eventObserver = new EventObserver(Date.now(), options.eventListener);\n  options = Object.assign({ eventObserver: eventObserver, wsServer: wsServer }, options);\n\n  var logLevels = buildLogLevels(options.logLevel);\n  var logComponentName = '[connect #' + ++connectCalls + ']';\n\n  var log = void 0;\n  try {\n    log = new options.Log('default', logComponentName, logLevels);\n  } catch (error) {\n    return CancelablePromise.reject(error);\n  }\n  options.log = log;\n\n  // NOTE(mmalavalli): Remove the deprecated ConnectOptions properties with a warning.\n  // The warning is displayed only for the first call to connect() per browser session.\n  removeDeprecatedConnectOptionsPropsWithWarning(options, log);\n\n  // NOTE(mroberts): Print the Safari warning once if the log-level is at least\n  // \"warn\", i.e. neither \"error\" nor \"off\".\n  // NOTE(mmalavalli): Print the Safari warning only for versions 12.0 and below.\n  if (isSafariWithoutVP8Support && !didPrintSafariWarning && log.logLevel !== 'error' && log.logLevel !== 'off') {\n    didPrintSafariWarning = true;\n    log.warn(['Support for Safari 12.0 and below is limited because it does not support VP8.', 'This means you may experience codec issues in Group Rooms. You may also', 'experience codec issues in Peer-to-Peer (P2P) Rooms containing Android- or', 'iOS-based Participants who do not support H.264. However, P2P Rooms', 'with browser-based Participants should work. For more information, please', 'refer to this guide: https://www.twilio.com/docs/video/javascript-v2-developing-safari-11'].join(' '));\n  }\n\n  if (typeof token !== 'string') {\n    return CancelablePromise.reject(E.INVALID_TYPE('token', 'string'));\n  }\n\n  // NOTE(mmalavalli): The Room \"name\" in \"options\" was being used\n  // as the LocalTrack name in asLocalTrack(). So we pass a copy of\n  // \"options\" without the \"name\".\n  var localTrackOptions = Object.assign({}, options);\n  delete localTrackOptions.name;\n\n  if ('tracks' in options) {\n    if (!Array.isArray(options.tracks)) {\n      return CancelablePromise.reject(E.INVALID_TYPE('options.tracks', 'Array of LocalAudioTrack, LocalVideoTrack or MediaStreamTrack'));\n    }\n    try {\n      options.tracks = options.tracks.map(function (track) {\n        return asLocalTrack(track, localTrackOptions);\n      });\n    } catch (error) {\n      return CancelablePromise.reject(error);\n    }\n  }\n\n  var error = validateBandwidthProfile(options.bandwidthProfile);\n  if (error) {\n    return CancelablePromise.reject(error);\n  }\n\n  var Signaling = options.signaling;\n  var signaling = new Signaling(options.wsServer, options);\n\n  log.info('Connecting to a Room');\n  log.debug('Options:', options);\n\n  var encodingParameters = new EncodingParametersImpl({\n    maxAudioBitrate: options.maxAudioBitrate,\n    maxVideoBitrate: options.maxVideoBitrate\n  });\n\n  var preferredCodecs = {\n    audio: options.preferredAudioCodecs,\n    video: options.preferredVideoCodecs.map(normalizeVideoCodecSettings)\n  };\n\n  var networkQualityConfiguration = new NetworkQualityConfigurationImpl(isNonArrayObject(options.networkQuality) ? options.networkQuality : {});\n\n  // Convert options.networkQuality to boolean to configure Media Signaling\n  options.networkQuality = isNonArrayObject(options.networkQuality) || options.networkQuality;\n\n  // Create a CancelableRoomPromise<Room> that resolves after these steps:\n  // 1 - Get the LocalTracks.\n  // 2 - Create the LocalParticipant using options.tracks.\n  // 3 - Connect to rtc-room-service and create the RoomSignaling.\n  // 4 - Create the Room and then resolve the CancelablePromise.\n  var cancelableRoomPromise = createCancelableRoomPromise(getLocalTracks.bind(null, options), createLocalParticipant.bind(null, signaling, log, encodingParameters, networkQualityConfiguration, options), createRoomSignaling.bind(null, token, options, signaling, encodingParameters, preferredCodecs), createRoom.bind(null, options));\n\n  cancelableRoomPromise.then(function (room) {\n    log.info('Connected to Room:', room.toString());\n    log.info('Room name:', room.name);\n    log.debug('Room:', room);\n    return room;\n  }, function (error) {\n    if (cancelableRoomPromise._isCanceled) {\n      log.info('Attempt to connect to a Room was canceled');\n    } else {\n      log.info('Error while connecting to a Room:', error);\n    }\n  });\n\n  return cancelableRoomPromise;\n}\n\n/**\n * You may pass these options to {@link connect} in order to override the\n * default behavior.\n * @typedef {object} ConnectOptions\n * @property {boolean|CreateLocalTrackOptions} [audio=true] - Whether or not to\n *   get local audio with <code>getUserMedia</code> when <code>tracks</code>\n *   are not provided.\n * @property {boolean} [automaticSubscription=true] - By default, you will subscribe\n *   to all RemoteTracks shared by other Participants in a Room. You can now override this\n *   behavior by setting this flag to <code>false</code>. It will make sure that you will\n *   not subscribe to any RemoteTrack in a Group or Small Group Room. Setting it to\n *   <code>true</code>, or not setting it at all preserves the default behavior. This\n *   flag does not have any effect in a Peer-to-Peer Room.\n * @property {BandwidthProfileOptions} [bandwidthProfile] - You can optionally configure\n *   how your available downlink bandwidth is shared among the RemoteTracks you have subscribed\n *   to in a Group Room. By default, bandwidth is shared equally among the RemoteTracks.\n *   This has no effect in Peer-to-Peer Rooms.\n * @property {boolean} [dominantSpeaker=false] - Whether to enable the Dominant\n *   Speaker API or not. This only takes effect in Group Rooms.\n * @property {boolean} [dscpTagging=false] - <code>(deprecated: use \"enableDscp\" instead)</code>\n *   DSCP tagging allows you to request enhanced QoS treatment for RTP media packets from any\n *   firewall that the client may be behind. Setting this option to <code>true</code> will\n *   request DSCP tagging for media packets on supported browsers (only Chrome supports this\n *   as of now). Audio packets will be sent with DSCP header value set to 0xb8 which corresponds\n *   to Expedited Forwarding (EF). Video packets will be sent with DSCP header value set to 0x88\n *   which corresponds to Assured Forwarding (AF41).\n * @property {boolean} [enableDscp=false] - DSCP tagging allows you to request enhanced\n *   QoS treatment for RTP media packets from any firewall that the client may be behind.\n *   Setting this option to <code>true</code> will request DSCP tagging for media packets\n *   on supported browsers (only Chrome supports this as of now). Audio packets will be\n *   sent with DSCP header value set to 0xb8 which corresponds to Expedited Forwarding (EF).\n *   Video packets will be sent with DSCP header value set to 0x88 which corresponds to\n *   Assured Forwarding (AF41).\n * @property {EventListener} [eventListener] - Optionally, you can listen to fine-grained events\n *   related to signaling and media that are not available in the public APIs. These events\n *   might be useful for your own reporting and diagnostics.\n * @property {Array<RTCIceServer>} iceServers - Override the STUN and TURN\n *   servers used when connecting to {@link Room}s\n * @property {RTCIceTransportPolicy} [iceTransportPolicy=\"all\"] - Override the\n *   ICE transport policy to be one of \"relay\" or \"all\"\n * @property {boolean} [insights=true] - Whether publishing events\n *   to the Insights gateway is enabled or not\n * @property {?number} [maxAudioBitrate=null] - Max outgoing audio bitrate (bps);\n *   A <code>null</code> or a <code>0</code> value does not set any bitrate limit;\n *   This value is set as a hint for variable bitrate codecs, but will not take\n *   effect for fixed bitrate codecs; Based on our tests, Chrome, Firefox and Safari\n *   support a bitrate range of 12000 bps to 256000 bps for Opus codec; This parameter\n *   has no effect on iSAC, PCMU and PCMA codecs\n * @property {?number} [maxVideoBitrate=null] - Max outgoing video bitrate (bps);\n *   A <code>null</code> or <code>0</code> value does not set any bitrate limit;\n *   This value is set as a hint for variable bitrate codecs, but will not take\n *   effect for fixed bitrate codecs; Based on our tests, Chrome, Firefox and Safari\n *   all seem to support an average bitrate range of 20000 bps (20 kbps) to\n *   8000000 bps (8 mbps) for a 720p VideoTrack\n * @property {?string} [name=null] - Set to connect to a {@link Room} by name\n * @property {boolean|NetworkQualityConfiguration} [networkQuality=false] - Whether to enable the Network\n *   Quality API or not. This only takes effect in Group Rooms. Pass a {@link NetworkQualityConfiguration}\n *   to configure verbosity levels for network quality information for {@link LocalParticipant}\n *   and {@link RemoteParticipant}s. A <code>true</code> value will set the {@link NetworkQualityVerbosity}\n *   for the {@link LocalParticipant} to {@link NetworkQualityVerbosity}<code style=\"padding:0 0\">#minimal</code>\n *   and the {@link NetworkQualityVerbosity} for {@link RemoteParticipant}s to\n *   {@link NetworkQualityVerbosity}<code style=\"padding:0 0\">#none</code>.\n * @property {string} [region='gll'] - Preferred signaling region; By default, you will be connected to the\n *   nearest signaling server determined by latency based routing. Setting a value other\n *   than <code style=\"padding:0 0\">gll</code> bypasses routing and guarantees that signaling traffic will be\n *   terminated in the region that you prefer. Please refer to this <a href=\"https://www.twilio.com/docs/video/ip-address-whitelisting#signaling-communication\" target=\"_blank\">table</a>\n *   for the list of supported signaling regions.\n * @property {Array<AudioCodec>} [preferredAudioCodecs=[]] - Preferred audio codecs;\n *  An empty array preserves the current audio codec preference order.\n * @property {Array<VideoCodec|VideoCodecSettings>} [preferredVideoCodecs=[]] -\n *  Preferred video codecs; An empty array preserves the current video codec\n *  preference order. If you want to set a preferred video codec on a Group Room,\n *  you will need to create the Room using the REST API and set the\n *  <code>VideoCodecs</code> property.\n *  See <a href=\"https://www.twilio.com/docs/api/video/rooms-resource#create-room\">\n *  here</a> for more information.\n * @property {LogLevel|LogLevels} [logLevel='warn'] - Set the log verbosity\n *   of logging to console. Passing a {@link LogLevel} string will use the same\n *   level for all components. Pass a {@link LogLevels} to set specific log\n *   levels.\n * @property {Array<LocalTrack|MediaStreamTrack>} [tracks] - The\n *   {@link LocalTrack}s or MediaStreamTracks with which to join the\n *   {@link Room}. These tracks can be obtained either by calling\n *   {@link createLocalTracks}, or by constructing them from the MediaStream\n *   obtained by calling <code>getUserMedia()</code>.\n * @property {boolean|CreateLocalTrackOptions} [video=true] - Whether or not to\n *   get local video with <code>getUserMedia</code> when <code>tracks</code>\n *   are not provided.\n */\n\n/**\n * {@link BandwidthProfileOptions} allows you to configure how your available downlink\n * bandwidth is shared among the RemoteTracks you have subscribed to in a Group Room.\n * @typedef {object} BandwidthProfileOptions\n * @property {VideoBandwidthProfileOptions} [video] - Optional parameter to configure\n *   how your available downlink bandwidth is shared among the {@link RemoteVideoTrack}s you\n *   have subscribed to in a Group Room.\n */\n\n/**\n * {@link VideoBandwidthProfileOptions} allows you to configure how your available downlink\n * bandwidth is shared among the {@link RemoteVideoTrack}s you have subscribed to in a Group Room.\n * @typedef {object} VideoBandwidthProfileOptions\n * @property {Track.Priority} [dominantSpeakerPriority=\"standard\"] - Optional parameter to\n *   specify the minimum subscribe {@link Track.Priority} of the Dominant Speaker's {@link RemoteVideoTrack}s.\n *   This means that the Dominant Speaker's {@link RemoteVideoTrack}s that are published with\n *   lower {@link Track.Priority} will be subscribed to with the {@link Track.Priority} specified here.\n *   This has no effect on {@link RemoteVideoTrack}s published with higher {@link Track.Priority}, which will\n *   still be subscribed to with with the same {@link Track.Priority}. If not specified, this defaults to \"standard\".\n *   This parameter only applies to a Group Room Participant when {@link ConnectOptions}.dominantSpeaker is set to true.\n * @property {number} [maxSubscriptionBitrate] - Optional parameter to specify the maximum\n *   downlink video bandwidth in bits per second (bps). By default, there are no limits on\n *   the downlink video bandwidth.\n * @property {number} [maxTracks] - Optional parameter to specify the maximum number of visible\n *   {@link RemoteVideoTrack}s, which will be selected based on {@link Track.Priority} and an N-Loudest\n *   policy. By default there are no limits on the number of visible {@link RemoteVideoTrack}s.\n *   0 or a negative value will remove any limit on the maximum number of visible {@link RemoteVideoTrack}s.\n * @property {BandwidthProfileMode} [mode=\"grid\"] - Optional parameter to specify how the {@link RemoteVideoTrack}s'\n *   TrackPriority values are mapped to bandwidth allocation in Group Rooms. This defaults to \"grid\",\n *   which results in equal bandwidth share allocation to all {@link RemoteVideoTrack}s.\n * @property {VideoRenderDimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s based on {@link Track.Priority} and the\n *   {@link RemoteVideoTrack}s of the Dominant Speaker.\n * @property {TrackSwitchOffMode} [trackSwitchOffMode=\"predicted\"] - Optional parameter to configure\n *   how {@link RemoteVideoTrack}s are switched off in response to bandwidth pressure. Defaults to \"predicted\".\n */\n\n/**\n * {@link VideoRenderDimensions} allows you to specify the desired render dimensions of {@link RemoteVideoTrack}s\n * based on {@link Track.Priority}. The bandwidth allocation algorithm will distribute the available downlink bandwidth\n * proportional to the requested render dimensions. This is just an input for calculating the bandwidth to be allocated\n * and does not affect the actual resolution of the {@link RemoteVideoTrack}s.\n * @typedef {object} VideoRenderDimensions\n * @property {VideoTrack.Dimensions} [high] - Optional parameter to specify the desired rendering dimensions of\n *   {@link RemoteVideoTrack} whose {@link Track.Priority} is \"high\". 0 or a negative value will result in the lowest\n *   possible resolution. This defaults to 1280 x 720 (HD).\n * @property {VideoTrack.Dimensions} [low] - Optional parameter to specify the desired rendering dimensions of\n *   {@link RemoteVideoTrack} whose {@link Track.Priority} is \"low\". 0 or a negative value will result in the lowest\n *   possible resolution. This defaults to 176 x 144 (QCIF).\n * @property {VideoTrack.Dimensions} [standard] - Optional parameter to specify the desired rendering dimensions of\n *   {@link RemoteVideoTrack} whose {@link Track.Priority} is \"standard\". 0 or a negative value will result in the lowest\n *   possible resolution. This defaults to 640 x 480 (VGA).\n */\n\n/**\n * Configure verbosity levels for network quality information for\n * {@link LocalParticipant} and {@link RemoteParticipant}s.\n * @typedef {object} NetworkQualityConfiguration\n * @property {NetworkQualityVerbosity} [local=1] - Verbosity level for {@link LocalParticipant}\n * @property {NetworkQualityVerbosity} [remote=0] - Verbosity level for {@link RemoteParticipant}s\n */\n\n/**\n * You may pass these levels to {@link ConnectOptions} to override\n * log levels for individual components.\n * @typedef {object} LogLevels\n * @property {LogLevel} [default='warn'] - Log level for 'default' modules.\n * @property {LogLevel} [media='warn'] - Log level for 'media' modules.\n * @property {LogLevel} [signaling='warn'] - Log level for 'signaling' modules.\n * @property {LogLevel} [webrtc='warn'] - Log level for 'webrtc' modules.\n */\n\n/**\n * Video codec settings.\n * @typedef {object} VideoCodecSettings\n * @property {VideoCodec} codec - Video codec name\n */\n\n/**\n * VP8 codec settings.\n * @typedef {VideoCodecSettings} VP8CodecSettings\n * @property {VideoCodec} name - \"VP8\"\n * @property {boolean} [simulcast=false] - Enable/disable VP8 simulcast; if\n *   enabled, Twilio's Video SDK will send three video streams of different\n *   qualities\n */\n\n/**\n * Names of the supported audio codecs.\n * @enum {string}\n */\n// eslint-disable-next-line\nvar AudioCodec = {\n  isac: 'isac',\n  opus: 'opus',\n  PCMA: 'PCMA',\n  PCMU: 'PCMU'\n};\n\n/**\n * Names of the supported video codecs.\n * @enum {string}\n */\n// eslint-disable-next-line\nvar VideoCodec = {\n  H264: 'H264',\n  VP8: 'VP8',\n  VP9: 'VP9'\n};\n\n/**\n * Levels for logging verbosity.\n * @enum {string}\n */\n// eslint-disable-next-line\nvar LogLevel = {\n  debug: 'debug',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  off: 'off'\n};\n\n/**\n * The verbosity level of network quality information of a {@link Participant}.\n * @enum {number}\n */\n// eslint-disable-next-line\nvar NetworkQualityVerbosity = {\n  /**\n   * Nothing is reported for the {@link Participant}. This has no effect and\n   * defaults to {@link NetworkQualityVerbosity}<code style=\"padding:0 0\">#minimal</code>\n   * for the {@link LocalParticipant}.\n   */\n  none: 0,\n  /**\n   * Reports {@link NetworkQualityLevel} for the {@link Participant}.\n   */\n  minimal: 1,\n  /**\n   * Reports {@link NetworkQualityLevel} and {@link NetworkQualityStats} for the {@link Participant}.\n   * {@link NetworkQualityStats} is populated with audio and video {@link NetworkQualityLevel}s\n   * based on which the {@link Participant}'s {@link NetworkQualityLevel} is calculated.\n   */\n  moderate: 2,\n  /**\n   * Reports {@link NetworkQualityLevel} and {@link NetworkQualityStats} for the {@link Participant}.\n   * {@link NetworkQualityStats} is populated with audio and Video {@link NetworkQualityLevel}s\n   * and their corresponding {@link NetworkQualityMediaStats} based on which the\n   * {@link Participant}'s {@link NetworkQualityLevel} is calculated.\n   */\n  detailed: 3\n};\n\n/**\n * {@link TrackSwitchOffMode} specifies when {@link RemoteVideoTrack}s' are switched off.\n * @enum {string}\n */\n// eslint-disable-next-line\nvar TrackSwitchOffMode = {\n  /**\n   * In this mode, {@link RemoteVideoTrack}s are switched off only when network congestion\n   * is detected.\n   */\n  detected: 'detected',\n\n  /**\n   * In this mode, {@link RemoteVideoTrack}s are pro-actively switched off when network\n   * congestion is predicted by the bandwidth estimation mechanism.\n   */\n  predicted: 'predicted',\n\n  /**\n   * In this mode, {@link RemoteVideoTrack}s are not switched off. Instead in response to network\n   * congestion, tracks will be adjusted to lower quality.\n   */\n  disabled: 'disabled'\n};\n\n/**\n * {@link BandwidthProfileMode} specifies how {@link RemoteVideoTrack}s' {@link Track.Priority} values\n * are mapped to bandwidth allocation in Group Rooms.\n * @enum {string}\n */\n// eslint-disable-next-line\nvar BandwidthProfileMode = {\n  /**\n   * This mode is for use cases where all the subscribed {@link RemoteVideoTrack}s are\n   * equally important. The bandwidth allocation algorithm will share the available\n   * downlink bandwidth equally among the subscribed {@link RemoteVideoTrack}s, irrespective\n   * of their {@link Track.Priority}. In case of insufficient downlink bandwidth, the lower\n   * priority {@link RemoteVideoTrack}s are switched off.\n   */\n  grid: 'grid',\n  /**\n   * This mode is for use cases where some {@link RemoteVideoTrack}s are prioritized more than\n   * others. However, the lower priority {@link RemoteVideoTrack}s still need to be visible.\n   * The bandwidth allocation algorithm will share the available downlink bandwidth proportional\n   * to the requested {@link VideoRenderDimensions} corresponding to their {@link Track.Priority}.\n   * In case of insufficient downlink bandwidth, the quality of higher priority {@link RemoteVideoTrack}s\n   * may be degraded to avoid switching off lower priority {@link RemoteVideoTrack}s.\n   */\n  collaboration: 'collaboration',\n  /**\n   * This mode is for use cases where some {@link RemoteVideoTrack}s are deemed critical and must\n   * be preserved at any cost over the other {@link RemoteVideoTrack}s. The bandwidth allocation\n   * algorithm will allocate as big a share of the available downlink bandwidth as it possibly\n   * can to the higher priority {@link RemoteVideoTrack}s, and only then consider the lower priority\n   * {@link RemoteVideoTrack}s. In case of insufficient downlink bandwidth, the lower priority\n   * {@link RemoteVideoTrack}s are switched off in order to preserve the quality of the higher\n   * priority {@link RemoteVideoTrack}s.\n   */\n  presentation: 'presentation'\n};\n\n/**\n * An {@link EventListener} allows you to listen to fine-grained {@link EventListenerEvent}s related\n * to signaling and media that are not available in the public APIs, which might be useful for your own\n * reporting and diagnostics.\n * @typedef {EventEmitter} EventListener\n * @example\n * const { EventEmitter } = require('events');\n * const { connect } = require('twilio-video');\n *\n * const eventListener = new EventEmitter();\n * eventListener.on('event', function(event) {\n *   console.log('The SDK raised an event:', event);\n * });\n *\n * connect('token', {\n *   eventListener: eventListener\n * });\n */\n\n/**\n * The SDK raised an {@link EventListenerEvent}.\n * @event EventListener#event\n * @param {EventListenerEvent} event - Context about the event raised by the SDK.\n * This can be one of the following:\n *  * {@link EventListenerClosedEvent}\n *  * {@link EventListenerConnectingEvent}\n *  * {@link EventListenerEarlyEvent}\n *  * {@link EventListenerOpenEvent}\n *  * {@link EventListenerWaitingEvent}\n */\n\n/**\n * An {@link EventListenerEvent} provides context about an event raised by the SDK on the\n * {@link EventListener}. Apart from the properties listed here, it may also include some\n * event-specific data within an optional \"payload\" property. The different types of\n * {@link EventListenerEvent}s are listed below:\n *  * {@link EventListenerClosedEvent}\n *  * {@link EventListenerConnectingEvent}\n *  * {@link EventListenerEarlyEvent}\n *  * {@link EventListenerOpenEvent}\n *  * {@link EventListenerWaitingEvent}\n * @typedef {object} EventListenerEvent\n * @property {number} elapsedTime - The time elapsed in milliseconds since connect() was called\n * @property {string} group - The group under which the event is classified\n * @property {string} level - The verbosity level of the event, which can be one of \"debug\", \"error\", \"info\", \"warning\"\n * @property {string} name - The name of the event\n * @property {*} [payload] - Optional event-specific data\n * @property {number} timestamp - The time in milliseconds relative to the Unix Epoch when the event was raised\n */\n\n/**\n * The connection to Twilio's signaling server was closed.\n * @typedef {EventListenerEvent} EventListenerClosedEvent\n * @property {string} group='signaling'\n * @property {string} level - 'info' if the connection was closed by the client, 'error' otherwise\n * @property {string} name='closed'\n * @property {{reason: string}} payload - Reason for the connection being closed. It can be one of\n *   'busy', 'failed', 'local', 'remote' or 'timeout'\n */\n\n/**\n * The SDK is connecting to Twilio's signaling server.\n * @typedef {EventListenerEvent} EventListenerConnectingEvent\n * @property {string} group='signaling'\n * @property {string} level='info'\n * @property {string} name='connecting'\n */\n\n/**\n * The SDK is about to connect to Twilio's signaling server.\n * @typedef {EventListenerEvent} EventListenerEarlyEvent\n * @property {string} group='signaling'\n * @property {string} level='info'\n * @property {string} name='early'\n */\n\n/**\n * The SDK has established a signaling connection to Twilio's signaling server.\n * @typedef {EventListenerEvent} EventListenerOpenEvent\n * @property {string} group='signaling'\n * @property {string} level='info'\n * @property {string} name='open'\n */\n\n/**\n * The SDK is waiting to retry connecting th Twilio's signaling server. This can\n * happen if the server is busy with too many connection requests.\n * @typedef {EventListenerEvent} EventListenerWaitingEvent\n * @property {string} group='signaling'\n * @property {string} level='warning'\n * @property {string} name='waiting'\n */\n\nvar deprecatedConnectOptionsProps = new Set([{ didWarn: false, name: 'abortOnIceServersTimeout' }, { didWarn: false, name: 'dscpTagging', newName: 'enableDscp' }, { didWarn: false, name: 'iceServersTimeout' }]);\n\nfunction removeDeprecatedConnectOptionsPropsWithWarning(options, log) {\n  deprecatedConnectOptionsProps.forEach(function (prop) {\n    var didWarn = prop.didWarn,\n        name = prop.name,\n        newName = prop.newName;\n\n    if (name in options) {\n      if (newName) {\n        options[newName] = options[name];\n      }\n      delete options[name];\n      if (!didWarn && !['error', 'off'].includes(log.level)) {\n        log.warn('The ConnectOptions flag \"' + name + '\" is ' + (newName ? 'deprecated and scheduled for removal. Please use \"' + newName + '\" instead.' : 'no longer applicable and will be ignored.'));\n        prop.didWarn = true;\n      }\n    }\n  });\n}\n\nfunction createLocalParticipant(signaling, log, encodingParameters, networkQualityConfiguration, options, localTracks) {\n  var localParticipantSignaling = signaling.createLocalParticipantSignaling(encodingParameters, networkQualityConfiguration);\n  log.debug('Creating a new LocalParticipant:', localParticipantSignaling);\n  return new options.LocalParticipant(localParticipantSignaling, localTracks, options);\n}\n\nfunction createRoom(options, localParticipant, roomSignaling) {\n  var room = new Room(localParticipant, roomSignaling, options);\n  var log = options.log;\n\n  log.debug('Creating a new Room:', room);\n  roomSignaling.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      log.info('Disconnected from Room:', room.toString());\n      roomSignaling.removeListener('stateChanged', stateChanged);\n    }\n  });\n\n  return room;\n}\n\nfunction createRoomSignaling(token, options, signaling, encodingParameters, preferredCodecs, localParticipant) {\n  options.log.debug('Creating a new RoomSignaling');\n  return signaling.connect(localParticipant._signaling, token, encodingParameters, preferredCodecs, options);\n}\n\nfunction getLocalTracks(options, handleLocalTracks) {\n  var log = options.log;\n\n  options.shouldStopLocalTracks = !options.tracks;\n  if (options.shouldStopLocalTracks) {\n    log.info('LocalTracks were not provided, so they will be acquired ' + 'automatically before connecting to the Room. LocalTracks will ' + 'be released if connecting to the Room fails or if the Room ' + 'is disconnected');\n  } else {\n    log.info('Getting LocalTracks');\n    log.debug('Options:', options);\n  }\n\n  return options.createLocalTracks(options).then(function getLocalTracksSucceeded(localTracks) {\n    var promise = handleLocalTracks(localTracks);\n\n    promise.catch(function handleLocalTracksFailed() {\n      if (options.shouldStopLocalTracks) {\n        log.info('The automatically acquired LocalTracks will now be stopped');\n        localTracks.forEach(function (track) {\n          track.stop();\n        });\n      }\n    });\n\n    return promise;\n  });\n}\n\nfunction normalizeVideoCodecSettings(nameOrSettings) {\n  var settings = typeof nameOrSettings === 'string' ? { codec: nameOrSettings } : nameOrSettings;\n  switch (settings.codec.toLowerCase()) {\n    case 'vp8':\n      {\n        return Object.assign({ simulcast: false }, settings);\n      }\n    default:\n      {\n        return settings;\n      }\n  }\n}\n\nmodule.exports = connect;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/connect.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/createlocaltrack.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/createlocaltrack.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defaultCreateLocalTracks = __webpack_require__(/*! ./createlocaltracks */ \"./node_modules/twilio-video/es5/createlocaltracks.js\");\nvar DEFAULT_LOG_LEVEL = __webpack_require__(/*! ./util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\").DEFAULT_LOG_LEVEL;\n\n/**\n * Request a {@link LocalAudioTrack} or {@link LocalVideoTrack}.\n * @param {Track.Kind} kind - \"audio\" or \"video\"\n * @param {CreateLocalTrackOptions} [options]\n * @returns {Promise<LocalAudioTrack|LocalVideoTrack>}\n * @private\n */\nfunction createLocalTrack(kind, options) {\n  options = Object.assign({\n    createLocalTracks: defaultCreateLocalTracks,\n    logLevel: DEFAULT_LOG_LEVEL\n  }, options);\n\n  var createOptions = {};\n  createOptions.logLevel = options.logLevel;\n  delete options.logLevel;\n\n  var createLocalTracks = options.createLocalTracks;\n  delete options.createLocalTracks;\n  createOptions[kind] = Object.keys(options).length > 0 ? options : true;\n\n  return createLocalTracks(createOptions).then(function (localTracks) {\n    return localTracks[0];\n  });\n}\n\n/**\n * Request a {@link LocalAudioTrack}.\n * @alias module:twilio-video.createLocalAudioTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalAudioTrack}\n * @returns {Promise<LocalAudioTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just video\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   video: true\n * }).then(function(room) {\n *   // Add audio after connecting to the Room\n *   Video.createLocalAudioTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalAudioTrack with a custom name\n * Video.createLocalAudioTrack({ name: 'microphone' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'microphone'\n * });\n */\nfunction createLocalAudioTrack(options) {\n  return createLocalTrack('audio', options);\n}\n\n/**\n * Request a {@link LocalVideoTrack}.\n * @alias module:twilio-video.createLocalVideoTrack\n * @param {CreateLocalTrackOptions} [options] - Options for requesting a {@link LocalVideoTrack}\n * @returns {Promise<LocalVideoTrack>}\n * @example\n * var Video = require('twilio-video');\n *\n * // Connect to the Room with just audio\n * Video.connect('my-token', {\n *   name: 'my-cool-room',\n *   audio: true\n * }).then(function(room) {\n *   // Add video after connecting to the Room\n *   Video.createLocalVideoTrack().then(function(localTrack) {\n *     room.localParticipant.publishTrack(localTrack);\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n *\n * // Request the default LocalVideoTrack with a custom name\n * Video.createLocalVideoTrack({ name: 'camera' }).then(function(localTrack) {\n *   console.log(localTrack.name); // 'camera'\n * });\n */\nfunction createLocalVideoTrack(options) {\n  return createLocalTrack('video', options);\n}\n\n/**\n * Create {@link LocalTrack} options. Apart from the properties listed here, you can\n * also specify any of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n * properties.\n * @typedef {MediaTrackConstraints} CreateLocalTrackOptions\n * @property {LogLevel|LogLevels} logLevel\n * @property {string} [name] - The {@link LocalTrack}'s name; by default,\n *   it is set to the {@link LocalTrack}'s ID.\n * @property {boolean} [workaroundWebKitBug180748=false] - Only valid for\n *   {@link LocalAudioTrack}s; setting this attempts to workaround WebKit Bug\n *   180748, where, in Safari, getUserMedia may return a silent audio\n *   MediaStreamTrack.\n */\n\nmodule.exports = {\n  audio: createLocalAudioTrack,\n  video: createLocalVideoTrack\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9jcmVhdGVsb2NhbHRyYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvY3JlYXRlbG9jYWx0cmFjay5qcz8zMzVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGRlZmF1bHRDcmVhdGVMb2NhbFRyYWNrcyA9IHJlcXVpcmUoJy4vY3JlYXRlbG9jYWx0cmFja3MnKTtcbnZhciBERUZBVUxUX0xPR19MRVZFTCA9IHJlcXVpcmUoJy4vdXRpbC9jb25zdGFudHMnKS5ERUZBVUxUX0xPR19MRVZFTDtcblxuLyoqXG4gKiBSZXF1ZXN0IGEge0BsaW5rIExvY2FsQXVkaW9UcmFja30gb3Ige0BsaW5rIExvY2FsVmlkZW9UcmFja30uXG4gKiBAcGFyYW0ge1RyYWNrLktpbmR9IGtpbmQgLSBcImF1ZGlvXCIgb3IgXCJ2aWRlb1wiXG4gKiBAcGFyYW0ge0NyZWF0ZUxvY2FsVHJhY2tPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHtQcm9taXNlPExvY2FsQXVkaW9UcmFja3xMb2NhbFZpZGVvVHJhY2s+fVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlTG9jYWxUcmFjayhraW5kLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICBjcmVhdGVMb2NhbFRyYWNrczogZGVmYXVsdENyZWF0ZUxvY2FsVHJhY2tzLFxuICAgIGxvZ0xldmVsOiBERUZBVUxUX0xPR19MRVZFTFxuICB9LCBvcHRpb25zKTtcblxuICB2YXIgY3JlYXRlT3B0aW9ucyA9IHt9O1xuICBjcmVhdGVPcHRpb25zLmxvZ0xldmVsID0gb3B0aW9ucy5sb2dMZXZlbDtcbiAgZGVsZXRlIG9wdGlvbnMubG9nTGV2ZWw7XG5cbiAgdmFyIGNyZWF0ZUxvY2FsVHJhY2tzID0gb3B0aW9ucy5jcmVhdGVMb2NhbFRyYWNrcztcbiAgZGVsZXRlIG9wdGlvbnMuY3JlYXRlTG9jYWxUcmFja3M7XG4gIGNyZWF0ZU9wdGlvbnNba2luZF0gPSBPYmplY3Qua2V5cyhvcHRpb25zKS5sZW5ndGggPiAwID8gb3B0aW9ucyA6IHRydWU7XG5cbiAgcmV0dXJuIGNyZWF0ZUxvY2FsVHJhY2tzKGNyZWF0ZU9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKGxvY2FsVHJhY2tzKSB7XG4gICAgcmV0dXJuIGxvY2FsVHJhY2tzWzBdO1xuICB9KTtcbn1cblxuLyoqXG4gKiBSZXF1ZXN0IGEge0BsaW5rIExvY2FsQXVkaW9UcmFja30uXG4gKiBAYWxpYXMgbW9kdWxlOnR3aWxpby12aWRlby5jcmVhdGVMb2NhbEF1ZGlvVHJhY2tcbiAqIEBwYXJhbSB7Q3JlYXRlTG9jYWxUcmFja09wdGlvbnN9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHJlcXVlc3RpbmcgYSB7QGxpbmsgTG9jYWxBdWRpb1RyYWNrfVxuICogQHJldHVybnMge1Byb21pc2U8TG9jYWxBdWRpb1RyYWNrPn1cbiAqIEBleGFtcGxlXG4gKiB2YXIgVmlkZW8gPSByZXF1aXJlKCd0d2lsaW8tdmlkZW8nKTtcbiAqXG4gKiAvLyBDb25uZWN0IHRvIHRoZSBSb29tIHdpdGgganVzdCB2aWRlb1xuICogVmlkZW8uY29ubmVjdCgnbXktdG9rZW4nLCB7XG4gKiAgIG5hbWU6ICdteS1jb29sLXJvb20nLFxuICogICB2aWRlbzogdHJ1ZVxuICogfSkudGhlbihmdW5jdGlvbihyb29tKSB7XG4gKiAgIC8vIEFkZCBhdWRpbyBhZnRlciBjb25uZWN0aW5nIHRvIHRoZSBSb29tXG4gKiAgIFZpZGVvLmNyZWF0ZUxvY2FsQXVkaW9UcmFjaygpLnRoZW4oZnVuY3Rpb24obG9jYWxUcmFjaykge1xuICogICAgIHJvb20ubG9jYWxQYXJ0aWNpcGFudC5wdWJsaXNoVHJhY2sobG9jYWxUcmFjayk7XG4gKiAgIH0pO1xuICogfSk7XG4gKiBAZXhhbXBsZVxuICogdmFyIFZpZGVvID0gcmVxdWlyZSgndHdpbGlvLXZpZGVvJyk7XG4gKlxuICogLy8gUmVxdWVzdCB0aGUgZGVmYXVsdCBMb2NhbEF1ZGlvVHJhY2sgd2l0aCBhIGN1c3RvbSBuYW1lXG4gKiBWaWRlby5jcmVhdGVMb2NhbEF1ZGlvVHJhY2soeyBuYW1lOiAnbWljcm9waG9uZScgfSkudGhlbihmdW5jdGlvbihsb2NhbFRyYWNrKSB7XG4gKiAgIGNvbnNvbGUubG9nKGxvY2FsVHJhY2submFtZSk7IC8vICdtaWNyb3Bob25lJ1xuICogfSk7XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUxvY2FsQXVkaW9UcmFjayhvcHRpb25zKSB7XG4gIHJldHVybiBjcmVhdGVMb2NhbFRyYWNrKCdhdWRpbycsIG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIFJlcXVlc3QgYSB7QGxpbmsgTG9jYWxWaWRlb1RyYWNrfS5cbiAqIEBhbGlhcyBtb2R1bGU6dHdpbGlvLXZpZGVvLmNyZWF0ZUxvY2FsVmlkZW9UcmFja1xuICogQHBhcmFtIHtDcmVhdGVMb2NhbFRyYWNrT3B0aW9uc30gW29wdGlvbnNdIC0gT3B0aW9ucyBmb3IgcmVxdWVzdGluZyBhIHtAbGluayBMb2NhbFZpZGVvVHJhY2t9XG4gKiBAcmV0dXJucyB7UHJvbWlzZTxMb2NhbFZpZGVvVHJhY2s+fVxuICogQGV4YW1wbGVcbiAqIHZhciBWaWRlbyA9IHJlcXVpcmUoJ3R3aWxpby12aWRlbycpO1xuICpcbiAqIC8vIENvbm5lY3QgdG8gdGhlIFJvb20gd2l0aCBqdXN0IGF1ZGlvXG4gKiBWaWRlby5jb25uZWN0KCdteS10b2tlbicsIHtcbiAqICAgbmFtZTogJ215LWNvb2wtcm9vbScsXG4gKiAgIGF1ZGlvOiB0cnVlXG4gKiB9KS50aGVuKGZ1bmN0aW9uKHJvb20pIHtcbiAqICAgLy8gQWRkIHZpZGVvIGFmdGVyIGNvbm5lY3RpbmcgdG8gdGhlIFJvb21cbiAqICAgVmlkZW8uY3JlYXRlTG9jYWxWaWRlb1RyYWNrKCkudGhlbihmdW5jdGlvbihsb2NhbFRyYWNrKSB7XG4gKiAgICAgcm9vbS5sb2NhbFBhcnRpY2lwYW50LnB1Ymxpc2hUcmFjayhsb2NhbFRyYWNrKTtcbiAqICAgfSk7XG4gKiB9KTtcbiAqIEBleGFtcGxlXG4gKiB2YXIgVmlkZW8gPSByZXF1aXJlKCd0d2lsaW8tdmlkZW8nKTtcbiAqXG4gKiAvLyBSZXF1ZXN0IHRoZSBkZWZhdWx0IExvY2FsVmlkZW9UcmFjayB3aXRoIGEgY3VzdG9tIG5hbWVcbiAqIFZpZGVvLmNyZWF0ZUxvY2FsVmlkZW9UcmFjayh7IG5hbWU6ICdjYW1lcmEnIH0pLnRoZW4oZnVuY3Rpb24obG9jYWxUcmFjaykge1xuICogICBjb25zb2xlLmxvZyhsb2NhbFRyYWNrLm5hbWUpOyAvLyAnY2FtZXJhJ1xuICogfSk7XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUxvY2FsVmlkZW9UcmFjayhvcHRpb25zKSB7XG4gIHJldHVybiBjcmVhdGVMb2NhbFRyYWNrKCd2aWRlbycsIG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIENyZWF0ZSB7QGxpbmsgTG9jYWxUcmFja30gb3B0aW9ucy4gQXBhcnQgZnJvbSB0aGUgcHJvcGVydGllcyBsaXN0ZWQgaGVyZSwgeW91IGNhblxuICogYWxzbyBzcGVjaWZ5IGFueSBvZiB0aGUgPGEgaHJlZj1cImh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9NZWRpYVRyYWNrQ29uc3RyYWludHNcIiB0YXJnZXQ9XCJfYmxhbmtcIj5NZWRpYVRyYWNrQ29uc3RyYWludHM8L2E+XG4gKiBwcm9wZXJ0aWVzLlxuICogQHR5cGVkZWYge01lZGlhVHJhY2tDb25zdHJhaW50c30gQ3JlYXRlTG9jYWxUcmFja09wdGlvbnNcbiAqIEBwcm9wZXJ0eSB7TG9nTGV2ZWx8TG9nTGV2ZWxzfSBsb2dMZXZlbFxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtuYW1lXSAtIFRoZSB7QGxpbmsgTG9jYWxUcmFja30ncyBuYW1lOyBieSBkZWZhdWx0LFxuICogICBpdCBpcyBzZXQgdG8gdGhlIHtAbGluayBMb2NhbFRyYWNrfSdzIElELlxuICogQHByb3BlcnR5IHtib29sZWFufSBbd29ya2Fyb3VuZFdlYktpdEJ1ZzE4MDc0OD1mYWxzZV0gLSBPbmx5IHZhbGlkIGZvclxuICogICB7QGxpbmsgTG9jYWxBdWRpb1RyYWNrfXM7IHNldHRpbmcgdGhpcyBhdHRlbXB0cyB0byB3b3JrYXJvdW5kIFdlYktpdCBCdWdcbiAqICAgMTgwNzQ4LCB3aGVyZSwgaW4gU2FmYXJpLCBnZXRVc2VyTWVkaWEgbWF5IHJldHVybiBhIHNpbGVudCBhdWRpb1xuICogICBNZWRpYVN0cmVhbVRyYWNrLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhdWRpbzogY3JlYXRlTG9jYWxBdWRpb1RyYWNrLFxuICB2aWRlbzogY3JlYXRlTG9jYWxWaWRlb1RyYWNrXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/createlocaltrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/createlocaltracks.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-video/es5/createlocaltracks.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar asLocalTrack = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\").asLocalTrack;\nvar buildLogLevels = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\").buildLogLevels;\nvar getUserMedia = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\").getUserMedia;\n\nvar _require = __webpack_require__(/*! ./media/track/es5 */ \"./node_modules/twilio-video/es5/media/track/es5/index.js\"),\n    LocalAudioTrack = _require.LocalAudioTrack,\n    LocalDataTrack = _require.LocalDataTrack,\n    LocalVideoTrack = _require.LocalVideoTrack;\n\nvar MediaStreamTrack = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\").MediaStreamTrack;\nvar Log = __webpack_require__(/*! ./util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\nvar DEFAULT_LOG_LEVEL = __webpack_require__(/*! ./util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\").DEFAULT_LOG_LEVEL;\nvar workaround180748 = __webpack_require__(/*! ./webaudio/workaround180748 */ \"./node_modules/twilio-video/es5/webaudio/workaround180748.js\");\n\n// This is used to make out which createLocalTracks() call a particular Log\n// statement belongs to. Each call to createLocalTracks() increments this\n// counter.\nvar createLocalTrackCalls = 0;\n\n/**\n * Request {@link LocalTrack}s. By default, it requests a\n * {@link LocalAudioTrack} and a {@link LocalVideoTrack}.\n * @alias module:twilio-video.createLocalTracks\n * @param {CreateLocalTracksOptions} [options]\n * @returns {Promise<Array<LocalTrack>>}\n * @example\n * var Video = require('twilio-video');\n * // Request audio and video tracks\n * Video.createLocalTracks().then(function(localTracks) {\n *   var localMediaContainer = document.getElementById('local-media-container-id');\n *   localTracks.forEach(function(track) {\n *     localMediaContainer.appendChild(track.attach());\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n * // Request just the default audio track\n * Video.createLocalTracks({ audio: true }).then(function(localTracks) {\n *   return Video.connect('my-token', {\n *     name: 'my-cool-room',\n *     tracks: localTracks\n *   });\n * });\n * @example\n * var Video = require('twilio-video');\n * // Request the audio and video tracks with custom names\n * Video.createLocalTracks({\n *   audio: { name: 'microphone' },\n *   video: { name: 'camera' }\n * }).then(function(localTracks) {\n *   localTracks.forEach(function(localTrack) {\n *     console.log(localTrack.name);\n *   });\n * });\n */\nfunction createLocalTracks(options) {\n  var isAudioVideoAbsent = !(options && ('audio' in options || 'video' in options));\n\n  options = Object.assign({\n    audio: isAudioVideoAbsent,\n    getUserMedia: getUserMedia,\n    logLevel: DEFAULT_LOG_LEVEL,\n    LocalAudioTrack: LocalAudioTrack,\n    LocalDataTrack: LocalDataTrack,\n    LocalVideoTrack: LocalVideoTrack,\n    MediaStreamTrack: MediaStreamTrack,\n    Log: Log,\n    video: isAudioVideoAbsent\n  }, options);\n\n  var logComponentName = '[createLocalTracks #' + ++createLocalTrackCalls + ']';\n  var logLevels = buildLogLevels(options.logLevel);\n  var log = new options.Log('default', logComponentName, logLevels);\n\n  // NOTE(mmalavalli): The Room \"name\" in \"options\" was being used\n  // as the LocalTrack name in asLocalTrack(). So we pass a copy of\n  // \"options\" without the \"name\".\n  var localTrackOptions = Object.assign({ log: log }, options);\n  delete localTrackOptions.name;\n\n  if (options.audio === false && options.video === false) {\n    log.info('Neither audio nor video requested, so returning empty LocalTracks');\n    return Promise.resolve([]);\n  }\n\n  if (options.tracks) {\n    log.info('Adding user-provided LocalTracks');\n    log.debug('LocalTracks:', options.tracks);\n    return Promise.resolve(options.tracks);\n  }\n\n  var extraLocalTrackOptions = {\n    audio: options.audio && options.audio.name ? { name: options.audio.name } : {},\n    video: options.video && options.video.name ? { name: options.video.name } : {}\n  };\n\n  extraLocalTrackOptions.audio.isCreatedByCreateLocalTracks = true;\n  extraLocalTrackOptions.video.isCreatedByCreateLocalTracks = true;\n\n  if (options.audio && typeof options.audio.workaroundWebKitBug1208516 === 'boolean') {\n    extraLocalTrackOptions.audio.workaroundWebKitBug1208516 = options.audio.workaroundWebKitBug1208516;\n  }\n\n  if (options.video && typeof options.video.workaroundWebKitBug1208516 === 'boolean') {\n    extraLocalTrackOptions.video.workaroundWebKitBug1208516 = options.video.workaroundWebKitBug1208516;\n  }\n\n  if (options.audio) {\n    delete options.audio.name;\n  }\n  if (options.video) {\n    delete options.video.name;\n  }\n\n  var mediaStreamConstraints = {\n    audio: options.audio,\n    video: options.video\n  };\n\n  var workaroundWebKitBug180748 = options.audio && options.audio.workaroundWebKitBug180748;\n\n  var mediaStreamPromise = workaroundWebKitBug180748 ? workaround180748(log, options.getUserMedia, mediaStreamConstraints) : options.getUserMedia(mediaStreamConstraints);\n\n  return mediaStreamPromise.then(function (mediaStream) {\n    var mediaStreamTracks = mediaStream.getAudioTracks().concat(mediaStream.getVideoTracks());\n\n    log.info('Call to getUserMedia successful; got MediaStreamTracks:', mediaStreamTracks);\n\n    return mediaStreamTracks.map(function (mediaStreamTrack) {\n      return asLocalTrack(mediaStreamTrack, Object.assign(extraLocalTrackOptions[mediaStreamTrack.kind], localTrackOptions));\n    });\n  }, function (error) {\n    log.warn('Call to getUserMedia failed:', error);\n    throw error;\n  });\n}\n\n/**\n * {@link createLocalTracks} options\n * @typedef {object} CreateLocalTracksOptions\n * @property {boolean|CreateLocalTrackOptions} [audio=true] - Whether or not to\n *   get local audio with <code>getUserMedia</code> when <code>tracks</code>\n *   are not provided.\n * @property {LogLevel|LogLevels} [logLevel='warn'] - Set the log verbosity\n *   of logging to console. Passing a {@link LogLevel} string will use the same\n *   level for all components. Pass a {@link LogLevels} to set specific log\n *   levels.\n * @property {boolean|CreateLocalTrackOptions} [video=true] - Whether or not to\n *   get local video with <code>getUserMedia</code> when <code>tracks</code>\n *   are not provided.\n */\n\nmodule.exports = createLocalTracks;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/createlocaltracks.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/data/receiver.js":
/*!********************************************************!*\
  !*** ./node_modules/twilio-video/es5/data/receiver.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DataTrackTransceiver = __webpack_require__(/*! ./transceiver */ \"./node_modules/twilio-video/es5/data/transceiver.js\");\nvar DataTransport = __webpack_require__(/*! ./transport */ \"./node_modules/twilio-video/es5/data/transport.js\");\n\n/**\n * A {@link DataTrackReceiver} represents a {@link DataTrackTransceiver} over\n * which data can be received. Internally, it users a single RTCDataChannel to\n * receive data.\n * @extends DataTrackTransceiver\n * @emits DataTrackReceiver#message\n * @emits DataTrackReceiver#close\n */\n\nvar DataTrackReceiver = function (_DataTrackTransceiver) {\n  _inherits(DataTrackReceiver, _DataTrackTransceiver);\n\n  /**\n   * Construct an {@link DataTrackReceiver}.\n   * @param {RTCDataChannel} dataChannel\n   */\n  function DataTrackReceiver(dataChannel) {\n    _classCallCheck(this, DataTrackReceiver);\n\n    var _this = _possibleConstructorReturn(this, (DataTrackReceiver.__proto__ || Object.getPrototypeOf(DataTrackReceiver)).call(this, dataChannel.label, dataChannel.maxPacketLifeTime, dataChannel.maxRetransmits, dataChannel.ordered));\n\n    Object.defineProperties(_this, {\n      _dataChannel: {\n        value: dataChannel\n      }\n    });\n\n    // NOTE(mmalavalli): In Firefox, the default value for \"binaryType\" is \"blob\".\n    // So, we set it to \"arraybuffer\" to ensure that it is consistent with Chrome\n    // and Safari.\n    dataChannel.binaryType = 'arraybuffer';\n\n    dataChannel.addEventListener('message', function (event) {\n      _this.emit('message', event.data);\n    });\n\n    dataChannel.addEventListener('close', function () {\n      _this.emit('close');\n    });\n    return _this;\n  }\n\n  _createClass(DataTrackReceiver, [{\n    key: 'stop',\n    value: function stop() {\n      this._dataChannel.close();\n      _get(DataTrackReceiver.prototype.__proto__ || Object.getPrototypeOf(DataTrackReceiver.prototype), 'stop', this).call(this);\n    }\n\n    /**\n     * Create a {@link DataTransport} from the {@link DataTrackReceiver}.\n     * @returns {DataTransport}\n     */\n\n  }, {\n    key: 'toDataTransport',\n    value: function toDataTransport() {\n      return new DataTransport(this._dataChannel);\n    }\n  }]);\n\n  return DataTrackReceiver;\n}(DataTrackTransceiver);\n\n/**\n * @event DataTrackReceiver#message\n * @param {string|ArrayBuffer} data\n */\n\n/**\n * @event DataTrackReceiver#close\n */\n\nmodule.exports = DataTrackReceiver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9kYXRhL3JlY2VpdmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvZGF0YS9yZWNlaXZlci5qcz85NDE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBEYXRhVHJhY2tUcmFuc2NlaXZlciA9IHJlcXVpcmUoJy4vdHJhbnNjZWl2ZXInKTtcbnZhciBEYXRhVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi90cmFuc3BvcnQnKTtcblxuLyoqXG4gKiBBIHtAbGluayBEYXRhVHJhY2tSZWNlaXZlcn0gcmVwcmVzZW50cyBhIHtAbGluayBEYXRhVHJhY2tUcmFuc2NlaXZlcn0gb3ZlclxuICogd2hpY2ggZGF0YSBjYW4gYmUgcmVjZWl2ZWQuIEludGVybmFsbHksIGl0IHVzZXJzIGEgc2luZ2xlIFJUQ0RhdGFDaGFubmVsIHRvXG4gKiByZWNlaXZlIGRhdGEuXG4gKiBAZXh0ZW5kcyBEYXRhVHJhY2tUcmFuc2NlaXZlclxuICogQGVtaXRzIERhdGFUcmFja1JlY2VpdmVyI21lc3NhZ2VcbiAqIEBlbWl0cyBEYXRhVHJhY2tSZWNlaXZlciNjbG9zZVxuICovXG5cbnZhciBEYXRhVHJhY2tSZWNlaXZlciA9IGZ1bmN0aW9uIChfRGF0YVRyYWNrVHJhbnNjZWl2ZXIpIHtcbiAgX2luaGVyaXRzKERhdGFUcmFja1JlY2VpdmVyLCBfRGF0YVRyYWNrVHJhbnNjZWl2ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYW4ge0BsaW5rIERhdGFUcmFja1JlY2VpdmVyfS5cbiAgICogQHBhcmFtIHtSVENEYXRhQ2hhbm5lbH0gZGF0YUNoYW5uZWxcbiAgICovXG4gIGZ1bmN0aW9uIERhdGFUcmFja1JlY2VpdmVyKGRhdGFDaGFubmVsKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERhdGFUcmFja1JlY2VpdmVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEYXRhVHJhY2tSZWNlaXZlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERhdGFUcmFja1JlY2VpdmVyKSkuY2FsbCh0aGlzLCBkYXRhQ2hhbm5lbC5sYWJlbCwgZGF0YUNoYW5uZWwubWF4UGFja2V0TGlmZVRpbWUsIGRhdGFDaGFubmVsLm1heFJldHJhbnNtaXRzLCBkYXRhQ2hhbm5lbC5vcmRlcmVkKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2RhdGFDaGFubmVsOiB7XG4gICAgICAgIHZhbHVlOiBkYXRhQ2hhbm5lbFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gTk9URShtbWFsYXZhbGxpKTogSW4gRmlyZWZveCwgdGhlIGRlZmF1bHQgdmFsdWUgZm9yIFwiYmluYXJ5VHlwZVwiIGlzIFwiYmxvYlwiLlxuICAgIC8vIFNvLCB3ZSBzZXQgaXQgdG8gXCJhcnJheWJ1ZmZlclwiIHRvIGVuc3VyZSB0aGF0IGl0IGlzIGNvbnNpc3RlbnQgd2l0aCBDaHJvbWVcbiAgICAvLyBhbmQgU2FmYXJpLlxuICAgIGRhdGFDaGFubmVsLmJpbmFyeVR5cGUgPSAnYXJyYXlidWZmZXInO1xuXG4gICAgZGF0YUNoYW5uZWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgX3RoaXMuZW1pdCgnbWVzc2FnZScsIGV2ZW50LmRhdGEpO1xuICAgIH0pO1xuXG4gICAgZGF0YUNoYW5uZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5lbWl0KCdjbG9zZScpO1xuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhEYXRhVHJhY2tSZWNlaXZlciwgW3tcbiAgICBrZXk6ICdzdG9wJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCgpIHtcbiAgICAgIHRoaXMuX2RhdGFDaGFubmVsLmNsb3NlKCk7XG4gICAgICBfZ2V0KERhdGFUcmFja1JlY2VpdmVyLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKERhdGFUcmFja1JlY2VpdmVyLnByb3RvdHlwZSksICdzdG9wJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSB7QGxpbmsgRGF0YVRyYW5zcG9ydH0gZnJvbSB0aGUge0BsaW5rIERhdGFUcmFja1JlY2VpdmVyfS5cbiAgICAgKiBAcmV0dXJucyB7RGF0YVRyYW5zcG9ydH1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndG9EYXRhVHJhbnNwb3J0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9EYXRhVHJhbnNwb3J0KCkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRhVHJhbnNwb3J0KHRoaXMuX2RhdGFDaGFubmVsKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRGF0YVRyYWNrUmVjZWl2ZXI7XG59KERhdGFUcmFja1RyYW5zY2VpdmVyKTtcblxuLyoqXG4gKiBAZXZlbnQgRGF0YVRyYWNrUmVjZWl2ZXIjbWVzc2FnZVxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXlCdWZmZXJ9IGRhdGFcbiAqL1xuXG4vKipcbiAqIEBldmVudCBEYXRhVHJhY2tSZWNlaXZlciNjbG9zZVxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YVRyYWNrUmVjZWl2ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/data/receiver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/data/sender.js":
/*!******************************************************!*\
  !*** ./node_modules/twilio-video/es5/data/sender.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DataTrackTransceiver = __webpack_require__(/*! ./transceiver */ \"./node_modules/twilio-video/es5/data/transceiver.js\");\nvar makeUUID = __webpack_require__(/*! ../util */ \"./node_modules/twilio-video/es5/util/index.js\").makeUUID;\n\n/**\n * A {@link DataTrackSender} represents a {@link DataTrackTransceiver} over\n * which data can be sent. Internally, it uses a collection of RTCDataChannels\n * to send data.\n * @extends DataTrackTransceiver\n */\n\nvar DataTrackSender = function (_DataTrackTransceiver) {\n  _inherits(DataTrackSender, _DataTrackTransceiver);\n\n  /**\n   * Construct a {@link DataTrackSender}.\n   * @param {?number} maxPacketLifeTime\n   * @param {?number} maxRetransmits\n   * @param {boolean} ordered\n   */\n  function DataTrackSender(maxPacketLifeTime, maxRetransmtis, ordered) {\n    _classCallCheck(this, DataTrackSender);\n\n    var _this = _possibleConstructorReturn(this, (DataTrackSender.__proto__ || Object.getPrototypeOf(DataTrackSender)).call(this, makeUUID(), maxPacketLifeTime, maxRetransmtis, ordered));\n\n    Object.defineProperties(_this, {\n      _clones: {\n        value: new Set()\n      },\n      _dataChannels: {\n        value: new Set()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a cloned {@link DataTrackSender}.\n   * @private\n   * @returns {void}\n   */\n\n\n  _createClass(DataTrackSender, [{\n    key: '_addClone',\n    value: function _addClone(clone) {\n      this._clones.add(clone);\n    }\n\n    /**\n     * Remove a cloned {@link DataTrackSender}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeClone',\n    value: function removeClone(clone) {\n      this._clones.delete(clone);\n    }\n\n    /**\n     * Add an RTCDataChannel to the {@link DataTrackSender}.\n     * @param {RTCDataChannel} dataChannel\n     * @returns {this}\n     */\n\n  }, {\n    key: 'addDataChannel',\n    value: function addDataChannel(dataChannel) {\n      this._dataChannels.add(dataChannel);\n      return this;\n    }\n\n    /**\n     * Return a new {@link DataTrackSender}. Any message sent over this\n     * {@link DataTrackSender} will also be sent over the clone. Whenever this\n     * {@link DataTrackSender} is stopped, so to will the clone.\n     * @returns {DataTrackSender}\n     */\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var _this2 = this;\n\n      var clone = new DataTrackSender(this.maxPacketLifeTime, this.maxRetransmits, this.ordered);\n      this._addClone(clone);\n      clone.once('stopped', function () {\n        return _this2.removeClone(clone);\n      });\n      return clone;\n    }\n\n    /**\n     * Remove an RTCDataChannel from the {@link DataTrackSender}.\n     * @param {RTCDataChannel} dataChannel\n     * @returns {this}\n     */\n\n  }, {\n    key: 'removeDataChannel',\n    value: function removeDataChannel(dataChannel) {\n      this._dataChannels.delete(dataChannel);\n      return this;\n    }\n\n    /**\n     * Send data over the {@link DataTrackSender}. Internally, this calls\n     * <code>send</code> over each of the underlying RTCDataChannels.\n     * @param {string|Blob|ArrayBuffer|ArrayBufferView} data\n     * @returns {this}\n     */\n\n  }, {\n    key: 'send',\n    value: function send(data) {\n      this._dataChannels.forEach(function (dataChannel) {\n        try {\n          dataChannel.send(data);\n        } catch (error) {\n          // Do nothing.\n        }\n      });\n      this._clones.forEach(function (clone) {\n        try {\n          clone.send(data);\n        } catch (error) {\n          // Do nothing.\n        }\n      });\n      return this;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this._dataChannels.forEach(function (dataChannel) {\n        return dataChannel.close();\n      });\n      this._clones.forEach(function (clone) {\n        return clone.stop();\n      });\n      _get(DataTrackSender.prototype.__proto__ || Object.getPrototypeOf(DataTrackSender.prototype), 'stop', this).call(this);\n    }\n  }]);\n\n  return DataTrackSender;\n}(DataTrackTransceiver);\n\nmodule.exports = DataTrackSender;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/data/sender.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/data/transceiver.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/data/transceiver.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackTransceiver = __webpack_require__(/*! ../transceiver */ \"./node_modules/twilio-video/es5/transceiver.js\");\n\n/**\n * A {@link DataTrackTransceiver} represents either one or more local\n * RTCDataChannels or a single remote RTCDataChannel. It can be used to send or\n * receive data.\n * @extends TrackTransceiver\n * @property {string} id\n * @property {string} kind - \"data\"\n * @property {?number} maxPacketLifeTime\n * @property {?number} maxRetransmits\n * @property {boolean} ordered\n */\n\nvar DataTrackTransceiver = function (_TrackTransceiver) {\n  _inherits(DataTrackTransceiver, _TrackTransceiver);\n\n  /**\n   * Construct a {@link DataTrackTransceiver}.\n   * @param {string} id\n   * @param {?number} maxPacketLifeTime\n   * @param {?number} maxRetransmits\n   * @param {boolean} ordered\n   */\n  function DataTrackTransceiver(id, maxPacketLifeTime, maxRetransmits, ordered) {\n    _classCallCheck(this, DataTrackTransceiver);\n\n    var _this = _possibleConstructorReturn(this, (DataTrackTransceiver.__proto__ || Object.getPrototypeOf(DataTrackTransceiver)).call(this, id, 'data'));\n\n    Object.defineProperties(_this, {\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: ordered\n      }\n    });\n    return _this;\n  }\n\n  return DataTrackTransceiver;\n}(TrackTransceiver);\n\nmodule.exports = DataTrackTransceiver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9kYXRhL3RyYW5zY2VpdmVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvZGF0YS90cmFuc2NlaXZlci5qcz81Mjk1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgVHJhY2tUcmFuc2NlaXZlciA9IHJlcXVpcmUoJy4uL3RyYW5zY2VpdmVyJyk7XG5cbi8qKlxuICogQSB7QGxpbmsgRGF0YVRyYWNrVHJhbnNjZWl2ZXJ9IHJlcHJlc2VudHMgZWl0aGVyIG9uZSBvciBtb3JlIGxvY2FsXG4gKiBSVENEYXRhQ2hhbm5lbHMgb3IgYSBzaW5nbGUgcmVtb3RlIFJUQ0RhdGFDaGFubmVsLiBJdCBjYW4gYmUgdXNlZCB0byBzZW5kIG9yXG4gKiByZWNlaXZlIGRhdGEuXG4gKiBAZXh0ZW5kcyBUcmFja1RyYW5zY2VpdmVyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBraW5kIC0gXCJkYXRhXCJcbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gbWF4UGFja2V0TGlmZVRpbWVcbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gbWF4UmV0cmFuc21pdHNcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gb3JkZXJlZFxuICovXG5cbnZhciBEYXRhVHJhY2tUcmFuc2NlaXZlciA9IGZ1bmN0aW9uIChfVHJhY2tUcmFuc2NlaXZlcikge1xuICBfaW5oZXJpdHMoRGF0YVRyYWNrVHJhbnNjZWl2ZXIsIF9UcmFja1RyYW5zY2VpdmVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIERhdGFUcmFja1RyYW5zY2VpdmVyfS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkXG4gICAqIEBwYXJhbSB7P251bWJlcn0gbWF4UGFja2V0TGlmZVRpbWVcbiAgICogQHBhcmFtIHs/bnVtYmVyfSBtYXhSZXRyYW5zbWl0c1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IG9yZGVyZWRcbiAgICovXG4gIGZ1bmN0aW9uIERhdGFUcmFja1RyYW5zY2VpdmVyKGlkLCBtYXhQYWNrZXRMaWZlVGltZSwgbWF4UmV0cmFuc21pdHMsIG9yZGVyZWQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGF0YVRyYWNrVHJhbnNjZWl2ZXIpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERhdGFUcmFja1RyYW5zY2VpdmVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRGF0YVRyYWNrVHJhbnNjZWl2ZXIpKS5jYWxsKHRoaXMsIGlkLCAnZGF0YScpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBtYXhQYWNrZXRMaWZlVGltZToge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbWF4UGFja2V0TGlmZVRpbWVcbiAgICAgIH0sXG4gICAgICBtYXhSZXRyYW5zbWl0czoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbWF4UmV0cmFuc21pdHNcbiAgICAgIH0sXG4gICAgICBvcmRlcmVkOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBvcmRlcmVkXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgcmV0dXJuIERhdGFUcmFja1RyYW5zY2VpdmVyO1xufShUcmFja1RyYW5zY2VpdmVyKTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhVHJhY2tUcmFuc2NlaXZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/data/transceiver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/data/transport.js":
/*!*********************************************************!*\
  !*** ./node_modules/twilio-video/es5/data/transport.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\n/**\n * @classdesc A {@link DataTransport} implements {@link MediaSignalingTransport}\n *   in terms of an RTCDataChannel.\n * @extends EventEmitter\n * @implements MediaSignalingTransport\n * @emits DataTransport#message\n */\n\n\nvar DataTransport = function (_EventEmitter) {\n  _inherits(DataTransport, _EventEmitter);\n\n  /**\n   * Construct a {@link DataTransport}.\n   * @param {RTCDataChannel} dataChannel\n   */\n  function DataTransport(dataChannel) {\n    _classCallCheck(this, DataTransport);\n\n    var _this = _possibleConstructorReturn(this, (DataTransport.__proto__ || Object.getPrototypeOf(DataTransport)).call(this));\n\n    Object.defineProperties(_this, {\n      _dataChannel: {\n        value: dataChannel\n      },\n      _messageQueue: {\n        value: []\n      }\n    });\n\n    dataChannel.addEventListener('open', function () {\n      _this._messageQueue.splice(0).forEach(function (message) {\n        return _this._publish(message);\n      });\n    });\n\n    dataChannel.addEventListener('message', function (_ref) {\n      var data = _ref.data;\n\n      try {\n        var message = JSON.parse(data);\n        _this.emit('message', message);\n      } catch (error) {\n        // Do nothing.\n      }\n    });\n\n    _this.publish({ type: 'ready' });\n    return _this;\n  }\n\n  /**\n   * @param message\n   * @private\n   */\n\n\n  _createClass(DataTransport, [{\n    key: '_publish',\n    value: function _publish(message) {\n      var data = JSON.stringify(message);\n      try {\n        this._dataChannel.send(data);\n      } catch (error) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Publish a message. Returns true if calling the method resulted in\n     * publishing (or eventually publishing) the update.\n     * @param {object} message\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(message) {\n      var dataChannel = this._dataChannel;\n      if (dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed') {\n        return false;\n      }\n      if (dataChannel.readyState === 'connecting') {\n        this._messageQueue.push(message);\n        return true;\n      }\n      this._publish(message);\n      return true;\n    }\n  }]);\n\n  return DataTransport;\n}(EventEmitter);\n\n/**\n * The {@link DataTransport} received a message.\n * @event DataTransport#message\n * @param {object} message\n */\n\nmodule.exports = DataTransport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9kYXRhL3RyYW5zcG9ydC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L2RhdGEvdHJhbnNwb3J0LmpzPzU1NDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ2V2ZW50cycpLFxuICAgIEV2ZW50RW1pdHRlciA9IF9yZXF1aXJlLkV2ZW50RW1pdHRlcjtcblxuLyoqXG4gKiBAY2xhc3NkZXNjIEEge0BsaW5rIERhdGFUcmFuc3BvcnR9IGltcGxlbWVudHMge0BsaW5rIE1lZGlhU2lnbmFsaW5nVHJhbnNwb3J0fVxuICogICBpbiB0ZXJtcyBvZiBhbiBSVENEYXRhQ2hhbm5lbC5cbiAqIEBleHRlbmRzIEV2ZW50RW1pdHRlclxuICogQGltcGxlbWVudHMgTWVkaWFTaWduYWxpbmdUcmFuc3BvcnRcbiAqIEBlbWl0cyBEYXRhVHJhbnNwb3J0I21lc3NhZ2VcbiAqL1xuXG5cbnZhciBEYXRhVHJhbnNwb3J0ID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKERhdGFUcmFuc3BvcnQsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgRGF0YVRyYW5zcG9ydH0uXG4gICAqIEBwYXJhbSB7UlRDRGF0YUNoYW5uZWx9IGRhdGFDaGFubmVsXG4gICAqL1xuICBmdW5jdGlvbiBEYXRhVHJhbnNwb3J0KGRhdGFDaGFubmVsKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERhdGFUcmFuc3BvcnQpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKERhdGFUcmFuc3BvcnQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEYXRhVHJhbnNwb3J0KSkuY2FsbCh0aGlzKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2RhdGFDaGFubmVsOiB7XG4gICAgICAgIHZhbHVlOiBkYXRhQ2hhbm5lbFxuICAgICAgfSxcbiAgICAgIF9tZXNzYWdlUXVldWU6IHtcbiAgICAgICAgdmFsdWU6IFtdXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBkYXRhQ2hhbm5lbC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuX21lc3NhZ2VRdWV1ZS5zcGxpY2UoMCkuZm9yRWFjaChmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gX3RoaXMuX3B1Ymxpc2gobWVzc2FnZSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGRhdGFDaGFubmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBmdW5jdGlvbiAoX3JlZikge1xuICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBtZXNzYWdlID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgICAgX3RoaXMuZW1pdCgnbWVzc2FnZScsIG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gRG8gbm90aGluZy5cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF90aGlzLnB1Ymxpc2goeyB0eXBlOiAncmVhZHknIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0gbWVzc2FnZVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhEYXRhVHJhbnNwb3J0LCBbe1xuICAgIGtleTogJ19wdWJsaXNoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3B1Ymxpc2gobWVzc2FnZSkge1xuICAgICAgdmFyIGRhdGEgPSBKU09OLnN0cmluZ2lmeShtZXNzYWdlKTtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuX2RhdGFDaGFubmVsLnNlbmQoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyBEbyBub3RoaW5nLlxuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFB1Ymxpc2ggYSBtZXNzYWdlLiBSZXR1cm5zIHRydWUgaWYgY2FsbGluZyB0aGUgbWV0aG9kIHJlc3VsdGVkIGluXG4gICAgICogcHVibGlzaGluZyAob3IgZXZlbnR1YWxseSBwdWJsaXNoaW5nKSB0aGUgdXBkYXRlLlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBtZXNzYWdlXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3B1Ymxpc2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwdWJsaXNoKG1lc3NhZ2UpIHtcbiAgICAgIHZhciBkYXRhQ2hhbm5lbCA9IHRoaXMuX2RhdGFDaGFubmVsO1xuICAgICAgaWYgKGRhdGFDaGFubmVsLnJlYWR5U3RhdGUgPT09ICdjbG9zaW5nJyB8fCBkYXRhQ2hhbm5lbC5yZWFkeVN0YXRlID09PSAnY2xvc2VkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoZGF0YUNoYW5uZWwucmVhZHlTdGF0ZSA9PT0gJ2Nvbm5lY3RpbmcnKSB7XG4gICAgICAgIHRoaXMuX21lc3NhZ2VRdWV1ZS5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX3B1Ymxpc2gobWVzc2FnZSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRGF0YVRyYW5zcG9ydDtcbn0oRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBUaGUge0BsaW5rIERhdGFUcmFuc3BvcnR9IHJlY2VpdmVkIGEgbWVzc2FnZS5cbiAqIEBldmVudCBEYXRhVHJhbnNwb3J0I21lc3NhZ2VcbiAqIEBwYXJhbSB7b2JqZWN0fSBtZXNzYWdlXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhVHJhbnNwb3J0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/data/transport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/encodingparameters.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/encodingparameters.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n/**\n * {@link EncodingParametersImpl} represents an object which notifies its\n * listeners of any changes in the values of its properties.\n * @extends EventEmitter\n * @implements EncodingParameters\n * @emits EncodingParametersImpl#changed\n * @property {?number} maxAudioBitrate\n * @property {?number} maxVideoBitrate\n */\n\nvar EncodingParametersImpl = function (_EventEmitter) {\n  _inherits(EncodingParametersImpl, _EventEmitter);\n\n  /**\n   * Construct an {@link EncodingParametersImpl}.\n   * @param {EncodingParamters} encodingParameters - Initial {@link EncodingParameters}\n   */\n  function EncodingParametersImpl(encodingParameters) {\n    _classCallCheck(this, EncodingParametersImpl);\n\n    var _this = _possibleConstructorReturn(this, (EncodingParametersImpl.__proto__ || Object.getPrototypeOf(EncodingParametersImpl)).call(this));\n\n    encodingParameters = Object.assign({\n      maxAudioBitrate: null,\n      maxVideoBitrate: null\n    }, encodingParameters);\n\n    Object.defineProperties(_this, {\n      maxAudioBitrate: {\n        value: encodingParameters.maxAudioBitrate,\n        writable: true\n      },\n      maxVideoBitrate: {\n        value: encodingParameters.maxVideoBitrate,\n        writable: true\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Returns the bitrate values in an {@link EncodingParameters}.\n   * @returns {EncodingParameters}\n   */\n\n\n  _createClass(EncodingParametersImpl, [{\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        maxAudioBitrate: this.maxAudioBitrate,\n        maxVideoBitrate: this.maxVideoBitrate\n      };\n    }\n\n    /**\n     * Update the bitrate values with those in the given {@link EncodingParameters}.\n     * @param {EncodingParameters} encodingParameters - The new {@link EncodingParameters}\n     * @fires EncodingParametersImpl#changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(encodingParameters) {\n      var _this2 = this;\n\n      encodingParameters = Object.assign({\n        maxAudioBitrate: this.maxAudioBitrate,\n        maxVideoBitrate: this.maxVideoBitrate\n      }, encodingParameters);\n\n      var shouldEmitChanged = ['maxAudioBitrate', 'maxVideoBitrate'].reduce(function (shouldEmitChanged, maxKindBitrate) {\n        if (_this2[maxKindBitrate] !== encodingParameters[maxKindBitrate]) {\n          _this2[maxKindBitrate] = encodingParameters[maxKindBitrate];\n          shouldEmitChanged = true;\n        }\n        return shouldEmitChanged;\n      }, false);\n\n      if (shouldEmitChanged) {\n        this.emit('changed');\n      }\n    }\n  }]);\n\n  return EncodingParametersImpl;\n}(EventEmitter);\n\n/**\n * At least one of the {@link EncodingParametersImpl}'s bitrate values changed.\n * @event EncodingParametersImpl#changed\n */\n\nmodule.exports = EncodingParametersImpl;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9lbmNvZGluZ3BhcmFtZXRlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9lbmNvZGluZ3BhcmFtZXRlcnMuanM/YTM2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcblxuLyoqXG4gKiB7QGxpbmsgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbH0gcmVwcmVzZW50cyBhbiBvYmplY3Qgd2hpY2ggbm90aWZpZXMgaXRzXG4gKiBsaXN0ZW5lcnMgb2YgYW55IGNoYW5nZXMgaW4gdGhlIHZhbHVlcyBvZiBpdHMgcHJvcGVydGllcy5cbiAqIEBleHRlbmRzIEV2ZW50RW1pdHRlclxuICogQGltcGxlbWVudHMgRW5jb2RpbmdQYXJhbWV0ZXJzXG4gKiBAZW1pdHMgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbCNjaGFuZ2VkXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IG1heEF1ZGlvQml0cmF0ZVxuICogQHByb3BlcnR5IHs/bnVtYmVyfSBtYXhWaWRlb0JpdHJhdGVcbiAqL1xuXG52YXIgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbCA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhFbmNvZGluZ1BhcmFtZXRlcnNJbXBsLCBfRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGFuIHtAbGluayBFbmNvZGluZ1BhcmFtZXRlcnNJbXBsfS5cbiAgICogQHBhcmFtIHtFbmNvZGluZ1BhcmFtdGVyc30gZW5jb2RpbmdQYXJhbWV0ZXJzIC0gSW5pdGlhbCB7QGxpbmsgRW5jb2RpbmdQYXJhbWV0ZXJzfVxuICAgKi9cbiAgZnVuY3Rpb24gRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbChlbmNvZGluZ1BhcmFtZXRlcnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbCk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEVuY29kaW5nUGFyYW1ldGVyc0ltcGwpKS5jYWxsKHRoaXMpKTtcblxuICAgIGVuY29kaW5nUGFyYW1ldGVycyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgbWF4QXVkaW9CaXRyYXRlOiBudWxsLFxuICAgICAgbWF4VmlkZW9CaXRyYXRlOiBudWxsXG4gICAgfSwgZW5jb2RpbmdQYXJhbWV0ZXJzKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBtYXhBdWRpb0JpdHJhdGU6IHtcbiAgICAgICAgdmFsdWU6IGVuY29kaW5nUGFyYW1ldGVycy5tYXhBdWRpb0JpdHJhdGUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgbWF4VmlkZW9CaXRyYXRlOiB7XG4gICAgICAgIHZhbHVlOiBlbmNvZGluZ1BhcmFtZXRlcnMubWF4VmlkZW9CaXRyYXRlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBiaXRyYXRlIHZhbHVlcyBpbiBhbiB7QGxpbmsgRW5jb2RpbmdQYXJhbWV0ZXJzfS5cbiAgICogQHJldHVybnMge0VuY29kaW5nUGFyYW1ldGVyc31cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbCwgW3tcbiAgICBrZXk6ICd0b0pTT04nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXhBdWRpb0JpdHJhdGU6IHRoaXMubWF4QXVkaW9CaXRyYXRlLFxuICAgICAgICBtYXhWaWRlb0JpdHJhdGU6IHRoaXMubWF4VmlkZW9CaXRyYXRlXG4gICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUgYml0cmF0ZSB2YWx1ZXMgd2l0aCB0aG9zZSBpbiB0aGUgZ2l2ZW4ge0BsaW5rIEVuY29kaW5nUGFyYW1ldGVyc30uXG4gICAgICogQHBhcmFtIHtFbmNvZGluZ1BhcmFtZXRlcnN9IGVuY29kaW5nUGFyYW1ldGVycyAtIFRoZSBuZXcge0BsaW5rIEVuY29kaW5nUGFyYW1ldGVyc31cbiAgICAgKiBAZmlyZXMgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbCNjaGFuZ2VkXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShlbmNvZGluZ1BhcmFtZXRlcnMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBlbmNvZGluZ1BhcmFtZXRlcnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgbWF4QXVkaW9CaXRyYXRlOiB0aGlzLm1heEF1ZGlvQml0cmF0ZSxcbiAgICAgICAgbWF4VmlkZW9CaXRyYXRlOiB0aGlzLm1heFZpZGVvQml0cmF0ZVxuICAgICAgfSwgZW5jb2RpbmdQYXJhbWV0ZXJzKTtcblxuICAgICAgdmFyIHNob3VsZEVtaXRDaGFuZ2VkID0gWydtYXhBdWRpb0JpdHJhdGUnLCAnbWF4VmlkZW9CaXRyYXRlJ10ucmVkdWNlKGZ1bmN0aW9uIChzaG91bGRFbWl0Q2hhbmdlZCwgbWF4S2luZEJpdHJhdGUpIHtcbiAgICAgICAgaWYgKF90aGlzMlttYXhLaW5kQml0cmF0ZV0gIT09IGVuY29kaW5nUGFyYW1ldGVyc1ttYXhLaW5kQml0cmF0ZV0pIHtcbiAgICAgICAgICBfdGhpczJbbWF4S2luZEJpdHJhdGVdID0gZW5jb2RpbmdQYXJhbWV0ZXJzW21heEtpbmRCaXRyYXRlXTtcbiAgICAgICAgICBzaG91bGRFbWl0Q2hhbmdlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNob3VsZEVtaXRDaGFuZ2VkO1xuICAgICAgfSwgZmFsc2UpO1xuXG4gICAgICBpZiAoc2hvdWxkRW1pdENoYW5nZWQpIHtcbiAgICAgICAgdGhpcy5lbWl0KCdjaGFuZ2VkJyk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEVuY29kaW5nUGFyYW1ldGVyc0ltcGw7XG59KEV2ZW50RW1pdHRlcik7XG5cbi8qKlxuICogQXQgbGVhc3Qgb25lIG9mIHRoZSB7QGxpbmsgRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbH0ncyBiaXRyYXRlIHZhbHVlcyBjaGFuZ2VkLlxuICogQGV2ZW50IEVuY29kaW5nUGFyYW1ldGVyc0ltcGwjY2hhbmdlZFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gRW5jb2RpbmdQYXJhbWV0ZXJzSW1wbDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/encodingparameters.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/eventemitter.js":
/*!*******************************************************!*\
  !*** ./node_modules/twilio-video/es5/eventemitter.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\nvar _require2 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    hidePrivateAndCertainPublicPropertiesInClass = _require2.hidePrivateAndCertainPublicPropertiesInClass;\n\nmodule.exports = hidePrivateAndCertainPublicPropertiesInClass(EventEmitter, ['domain']);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9ldmVudGVtaXR0ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9ldmVudGVtaXR0ZXIuanM/OTgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ2V2ZW50cycpLFxuICAgIEV2ZW50RW1pdHRlciA9IF9yZXF1aXJlLkV2ZW50RW1pdHRlcjtcblxudmFyIF9yZXF1aXJlMiA9IHJlcXVpcmUoJy4vdXRpbCcpLFxuICAgIGhpZGVQcml2YXRlQW5kQ2VydGFpblB1YmxpY1Byb3BlcnRpZXNJbkNsYXNzID0gX3JlcXVpcmUyLmhpZGVQcml2YXRlQW5kQ2VydGFpblB1YmxpY1Byb3BlcnRpZXNJbkNsYXNzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhpZGVQcml2YXRlQW5kQ2VydGFpblB1YmxpY1Byb3BlcnRpZXNJbkNsYXNzKEV2ZW50RW1pdHRlciwgWydkb21haW4nXSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/eventemitter.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/index.js":
/*!************************************************!*\
  !*** ./node_modules/twilio-video/es5/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! ./media/track/es5 */ \"./node_modules/twilio-video/es5/media/track/es5/index.js\"),\n    LocalAudioTrack = _require.LocalAudioTrack,\n    LocalDataTrack = _require.LocalDataTrack,\n    LocalVideoTrack = _require.LocalVideoTrack;\n\n/**\n * @module twilio-video\n * @property {boolean} isSupported - true if the current browser is officially\n *   supported by twilio-video.js; In this context, \"supported\" means that\n *   twilio-video.js has been extensively tested with this browser; This\n *   <a href='https://www.twilio.com/docs/video/javascript#supported-browsers target=\"_blank\">table</a>\n *   specifies the list of officially supported browsers.\n *\n * @property {string} version - current version of twilio-video.js.\n */\n\n\nvar version = __webpack_require__(/*! ../package.json */ \"./node_modules/twilio-video/package.json\").version;\nvar Video = {};\n\nObject.defineProperties(Video, {\n  connect: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./connect */ \"./node_modules/twilio-video/es5/connect.js\")\n  },\n  createLocalAudioTrack: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./createlocaltrack */ \"./node_modules/twilio-video/es5/createlocaltrack.js\").audio\n  },\n  createLocalTracks: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./createlocaltracks */ \"./node_modules/twilio-video/es5/createlocaltracks.js\")\n  },\n  createLocalVideoTrack: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./createlocaltrack */ \"./node_modules/twilio-video/es5/createlocaltrack.js\").video\n  },\n  isSupported: {\n    enumerable: true,\n    value: __webpack_require__(/*! ./util/support */ \"./node_modules/twilio-video/es5/util/support.js\")()\n  },\n  LocalAudioTrack: {\n    enumerable: true,\n    value: LocalAudioTrack\n  },\n  LocalDataTrack: {\n    enumerable: true,\n    value: LocalDataTrack\n  },\n  LocalVideoTrack: {\n    enumerable: true,\n    value: LocalVideoTrack\n  },\n  version: {\n    enumerable: true,\n    value: version\n  }\n});\n\nmodule.exports = Video;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L2luZGV4LmpzP2RlMWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuL21lZGlhL3RyYWNrL2VzNScpLFxuICAgIExvY2FsQXVkaW9UcmFjayA9IF9yZXF1aXJlLkxvY2FsQXVkaW9UcmFjayxcbiAgICBMb2NhbERhdGFUcmFjayA9IF9yZXF1aXJlLkxvY2FsRGF0YVRyYWNrLFxuICAgIExvY2FsVmlkZW9UcmFjayA9IF9yZXF1aXJlLkxvY2FsVmlkZW9UcmFjaztcblxuLyoqXG4gKiBAbW9kdWxlIHR3aWxpby12aWRlb1xuICogQHByb3BlcnR5IHtib29sZWFufSBpc1N1cHBvcnRlZCAtIHRydWUgaWYgdGhlIGN1cnJlbnQgYnJvd3NlciBpcyBvZmZpY2lhbGx5XG4gKiAgIHN1cHBvcnRlZCBieSB0d2lsaW8tdmlkZW8uanM7IEluIHRoaXMgY29udGV4dCwgXCJzdXBwb3J0ZWRcIiBtZWFucyB0aGF0XG4gKiAgIHR3aWxpby12aWRlby5qcyBoYXMgYmVlbiBleHRlbnNpdmVseSB0ZXN0ZWQgd2l0aCB0aGlzIGJyb3dzZXI7IFRoaXNcbiAqICAgPGEgaHJlZj0naHR0cHM6Ly93d3cudHdpbGlvLmNvbS9kb2NzL3ZpZGVvL2phdmFzY3JpcHQjc3VwcG9ydGVkLWJyb3dzZXJzIHRhcmdldD1cIl9ibGFua1wiPnRhYmxlPC9hPlxuICogICBzcGVjaWZpZXMgdGhlIGxpc3Qgb2Ygb2ZmaWNpYWxseSBzdXBwb3J0ZWQgYnJvd3NlcnMuXG4gKlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHZlcnNpb24gLSBjdXJyZW50IHZlcnNpb24gb2YgdHdpbGlvLXZpZGVvLmpzLlxuICovXG5cblxudmFyIHZlcnNpb24gPSByZXF1aXJlKCcuLi9wYWNrYWdlLmpzb24nKS52ZXJzaW9uO1xudmFyIFZpZGVvID0ge307XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFZpZGVvLCB7XG4gIGNvbm5lY3Q6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuL2Nvbm5lY3QnKVxuICB9LFxuICBjcmVhdGVMb2NhbEF1ZGlvVHJhY2s6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuL2NyZWF0ZWxvY2FsdHJhY2snKS5hdWRpb1xuICB9LFxuICBjcmVhdGVMb2NhbFRyYWNrczoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHJlcXVpcmUoJy4vY3JlYXRlbG9jYWx0cmFja3MnKVxuICB9LFxuICBjcmVhdGVMb2NhbFZpZGVvVHJhY2s6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiByZXF1aXJlKCcuL2NyZWF0ZWxvY2FsdHJhY2snKS52aWRlb1xuICB9LFxuICBpc1N1cHBvcnRlZDoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHJlcXVpcmUoJy4vdXRpbC9zdXBwb3J0JykoKVxuICB9LFxuICBMb2NhbEF1ZGlvVHJhY2s6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiBMb2NhbEF1ZGlvVHJhY2tcbiAgfSxcbiAgTG9jYWxEYXRhVHJhY2s6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiBMb2NhbERhdGFUcmFja1xuICB9LFxuICBMb2NhbFZpZGVvVHJhY2s6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiBMb2NhbFZpZGVvVHJhY2tcbiAgfSxcbiAgdmVyc2lvbjoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHZlcnNpb25cbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVmlkZW87Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/localparticipant.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/localparticipant.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\"),\n    MediaStreamTrack = _require.MediaStreamTrack;\n\nvar _require2 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    asLocalTrack = _require2.asLocalTrack,\n    asLocalTrackPublication = _require2.asLocalTrackPublication,\n    trackClass = _require2.trackClass;\n\nvar _require3 = __webpack_require__(/*! ./util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    E = _require3.typeErrors,\n    trackPriority = _require3.trackPriority;\n\nvar _require4 = __webpack_require__(/*! ./util/validate */ \"./node_modules/twilio-video/es5/util/validate.js\"),\n    validateLocalTrack = _require4.validateLocalTrack;\n\nvar _require5 = __webpack_require__(/*! ./media/track/es5 */ \"./node_modules/twilio-video/es5/media/track/es5/index.js\"),\n    LocalAudioTrack = _require5.LocalAudioTrack,\n    LocalDataTrack = _require5.LocalDataTrack,\n    LocalVideoTrack = _require5.LocalVideoTrack;\n\nvar LocalAudioTrackPublication = __webpack_require__(/*! ./media/track/localaudiotrackpublication */ \"./node_modules/twilio-video/es5/media/track/localaudiotrackpublication.js\");\nvar LocalDataTrackPublication = __webpack_require__(/*! ./media/track/localdatatrackpublication */ \"./node_modules/twilio-video/es5/media/track/localdatatrackpublication.js\");\nvar LocalVideoTrackPublication = __webpack_require__(/*! ./media/track/localvideotrackpublication */ \"./node_modules/twilio-video/es5/media/track/localvideotrackpublication.js\");\nvar Participant = __webpack_require__(/*! ./participant */ \"./node_modules/twilio-video/es5/participant.js\");\n\n/**\n * A {@link LocalParticipant} represents the local {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, LocalAudioTrackPublication>} audioTracks -\n *    The {@link LocalParticipant}'s {@link LocalAudioTrackPublication}s\n * @property {Map<Track.SID, LocalDataTrackPublication>} dataTracks -\n *    The {@link LocalParticipant}'s {@link LocalDataTrackPublication}s\n * @property {Map<Track.SID, LocalTrackPublication>} tracks -\n *    The {@link LocalParticipant}'s {@link LocalTrackPublication}s\n * @property {Map<Track.SID, LocalVideoTrackPublication>} videoTracks -\n *    The {@link LocalParticipant}'s {@link LocalVideoTrackPublication}s\n * @property {string} signalingRegion - The geographical region of the\n *     signaling edge the {@link LocalParticipant} is connected to.\n *\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits LocalParticipant#trackDimensionsChanged\n * @emits LocalParticipant#trackDisabled\n * @emits LocalParticipant#trackEnabled\n * @emits LocalParticipant#trackPublicationFailed\n * @emits LocalParticipant#trackPublished\n * @emits LocalParticipant#trackStarted\n * @emits LocalParticipant#trackStopped\n */\n\nvar LocalParticipant = function (_Participant) {\n  _inherits(LocalParticipant, _Participant);\n\n  /**\n   * Construct a {@link LocalParticipant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {Array<LocalTrack>} localTracks\n   * @param {Object} options\n   */\n  function LocalParticipant(signaling, localTracks, options) {\n    _classCallCheck(this, LocalParticipant);\n\n    options = Object.assign({\n      LocalAudioTrack: LocalAudioTrack,\n      LocalVideoTrack: LocalVideoTrack,\n      LocalDataTrack: LocalDataTrack,\n      MediaStreamTrack: MediaStreamTrack,\n      LocalAudioTrackPublication: LocalAudioTrackPublication,\n      LocalVideoTrackPublication: LocalVideoTrackPublication,\n      LocalDataTrackPublication: LocalDataTrackPublication,\n      shouldStopLocalTracks: false,\n      tracks: localTracks\n    }, options);\n\n    var tracksToStop = options.shouldStopLocalTracks ? new Set(localTracks.filter(function (localTrack) {\n      return localTrack.kind !== 'data';\n    })) : new Set();\n\n    var _this = _possibleConstructorReturn(this, (LocalParticipant.__proto__ || Object.getPrototypeOf(LocalParticipant)).call(this, signaling, options));\n\n    Object.defineProperties(_this, {\n      _LocalAudioTrack: {\n        value: options.LocalAudioTrack\n      },\n      _LocalDataTrack: {\n        value: options.LocalDataTrack\n      },\n      _LocalVideoTrack: {\n        value: options.LocalVideoTrack\n      },\n      _MediaStreamTrack: {\n        value: options.MediaStreamTrack\n      },\n      _LocalAudioTrackPublication: {\n        value: options.LocalAudioTrackPublication\n      },\n      _LocalDataTrackPublication: {\n        value: options.LocalDataTrackPublication\n      },\n      _LocalVideoTrackPublication: {\n        value: options.LocalVideoTrackPublication\n      },\n      _tracksToStop: {\n        value: tracksToStop\n      },\n      signalingRegion: {\n        enumerable: true,\n        get: function get() {\n          return signaling.signalingRegion;\n        }\n      }\n    });\n\n    _this._handleTrackSignalingEvents();\n    return _this;\n  }\n\n  /**\n   * @private\n   * @param {LocalTrack} track\n   * @param {Track.ID} id\n   * @param {Track.Priority} priority\n   * @returns {?LocalTrack}\n   */\n\n\n  _createClass(LocalParticipant, [{\n    key: '_addTrack',\n    value: function _addTrack(track, id, priority) {\n      var addedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_addTrack', this).call(this, track, id);\n      if (addedTrack && this.state !== 'disconnected') {\n        this._addLocalTrack(track, priority);\n      }\n      return addedTrack;\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: '_addLocalTrack',\n    value: function _addLocalTrack(track, priority) {\n      this._signaling.addTrack(track._trackSender, track.name, priority);\n      this._log.info('Added a new ' + trackClass(track, true) + ':', track.id);\n      this._log.debug(trackClass(track, true) + ':', track);\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.ID} id\n     * @returns {?LocalTrack}\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(track, id) {\n      var removedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_removeTrack', this).call(this, track, id);\n      if (removedTrack && this.state !== 'disconnected') {\n        this._signaling.removeTrack(track._trackSender);\n        this._log.info('Removed a ' + trackClass(track, true) + ':', track.id);\n        this._log.debug(trackClass(track, true) + ':', track);\n      }\n      return removedTrack;\n    }\n\n    /**\n     * Get the {@link LocalTrack} events to re-emit.\n     * @private\n     * @returns {Array<Array<string>>} events\n     */\n\n  }, {\n    key: '_getTrackEvents',\n    value: function _getTrackEvents() {\n      return _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_getTrackEvents', this).call(this).concat([['disabled', 'trackDisabled'], ['enabled', 'trackEnabled'], ['stopped', 'trackStopped']]);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[LocalParticipant #' + this._instanceId + (this.sid ? ': ' + this.sid : '') + ']';\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_handleTrackSignalingEvents',\n    value: function _handleTrackSignalingEvents() {\n      var _this2 = this;\n\n      var log = this._log;\n\n      if (this.state === 'disconnected') {\n        return;\n      }\n\n      var signaling = this._signaling;\n\n      function localTrackDisabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.disable();\n          log.debug('Disabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackEnabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.enable();\n          log.debug('Enabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackStopped(localTrack) {\n        // NOTE(mroberts): We shouldn't need to check for `stop`, since DataTracks\n        // do not emit \"stopped\".\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.stop();\n        }\n        return trackSignaling;\n      }\n\n      this.on('trackDisabled', localTrackDisabled);\n      this.on('trackEnabled', localTrackEnabled);\n      this.on('trackStopped', localTrackStopped);\n\n      this._tracks.forEach(function (track) {\n        _this2._addLocalTrack(track, trackPriority.PRIORITY_STANDARD);\n        _this2._getOrCreateLocalTrackPublication(track).catch(function (error) {\n          // Just log a warning for now.\n          log.warn('Failed to get or create LocalTrackPublication for ' + track + ':', error);\n        });\n      });\n\n      var self = this;\n      signaling.on('stateChanged', function stateChanged(state) {\n        log.debug('Transitioned to state:', state);\n        if (state === 'disconnected') {\n          log.debug('Removing LocalTrack event listeners');\n          signaling.removeListener('stateChanged', stateChanged);\n          self.removeListener('trackDisabled', localTrackDisabled);\n          self.removeListener('trackEnabled', localTrackEnabled);\n          self.removeListener('trackStopped', localTrackStopped);\n\n          // NOTE(mmalavalli): Remove the stale MediaTrackSender clones so that we\n          // do not call replaceTrack() on their RTCRtpSenders.\n          self._tracks.forEach(function (track) {\n            var trackSignaling = localTrackStopped(track);\n            if (trackSignaling) {\n              track._trackSender.removeClone(trackSignaling._trackTransceiver);\n            }\n          });\n\n          log.info('LocalParticipant disconnected. Stopping ' + self._tracksToStop.size + ' automatically-acquired LocalTracks');\n          self._tracksToStop.forEach(function (track) {\n            track.stop();\n          });\n        } else if (state === 'connected') {\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\n          // successful signaling reconnection, and not a first-time establishment\n          // of the signaling connection.\n          log.info('reconnected');\n\n          // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n          // Do not signal  public events synchronously with lock held.\n          setTimeout(function () {\n            return self.emit('reconnected');\n          }, 0);\n        }\n      });\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} localTrack\n     * @returns {Promise<LocalTrackPublication>}\n     */\n\n  }, {\n    key: '_getOrCreateLocalTrackPublication',\n    value: function _getOrCreateLocalTrackPublication(localTrack) {\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n      if (localTrackPublication) {\n        return Promise.resolve(localTrackPublication);\n      }\n\n      var log = this._log;\n      var self = this;\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n      if (!trackSignaling) {\n        return Promise.reject(new Error('Unexpected error: The ' + localTrack + ' cannot be published'));\n      }\n\n      function unpublish(publication) {\n        self.unpublishTrack(publication.track);\n      }\n\n      return new Promise(function (resolve, reject) {\n        function updated() {\n          var error = trackSignaling.error;\n          if (error) {\n            trackSignaling.removeListener('updated', updated);\n            log.warn('Failed to publish the ' + trackClass(localTrack, true) + ': ' + error.message);\n            self._removeTrack(localTrack, localTrack.id);\n            setTimeout(function () {\n              self.emit('trackPublicationFailed', error, localTrack);\n            });\n            reject(error);\n            return;\n          }\n\n          if (!self._tracks.has(localTrack.id)) {\n            trackSignaling.removeListener('updated', updated);\n            reject(new Error('The ' + localTrack + ' was unpublished'));\n            return;\n          }\n\n          var sid = trackSignaling.sid;\n          if (!sid) {\n            return;\n          }\n\n          trackSignaling.removeListener('updated', updated);\n\n          var options = {\n            log: log,\n            LocalAudioTrackPublication: self._LocalAudioTrackPublication,\n            LocalDataTrackPublication: self._LocalDataTrackPublication,\n            LocalVideoTrackPublication: self._LocalVideoTrackPublication\n          };\n\n          localTrackPublication = getTrackPublication(self.tracks, localTrack);\n\n          if (!localTrackPublication) {\n            localTrackPublication = asLocalTrackPublication(localTrack, trackSignaling, unpublish, options);\n            self._addTrackPublication(localTrackPublication);\n          }\n\n          if (self._signaling.state === 'connected') {\n            setTimeout(function () {\n              self.emit('trackPublished', localTrackPublication);\n            });\n          }\n          resolve(localTrackPublication);\n        }\n\n        trackSignaling.on('updated', updated);\n      });\n    }\n\n    /**\n     * Publishes a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack} localTrack - The {@link LocalTrack} to publish\n     * @param {LocalTrackPublishOptions} [options] - The {@link LocalTrackPublishOptions}\n     *   for publishing the {@link LocalTrack}\n     * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n     *   {@link LocalTrackPublication} if successful\n     * @throws {TypeError}\n     * @throws {RangeError}\n     * @example\n     * var Video = require('twilio-video');\n     *\n     * Video.connect(token, {\n     *   name: 'my-cool-room',\n     *   audio: true\n     * }).then(function(room) {\n     *   return Video.createLocalVideoTrack({\n     *     name: 'camera'\n     *   }).then(function(localVideoTrack) {\n     *     return room.localParticipant.publishTrack(localVideoTrack, {\n     *       priority: 'high'\n     *     });\n     *   });\n     * }).then(function(publication) {\n     *   console.log('The LocalTrack \"' + publication.trackName\n     *     + '\" was successfully published with priority \"'\n     *     * publication.priority + '\"');\n     * });\n    */ /**\n       * Publishes a MediaStreamTrack to the {@link Room}.\n       * @param {MediaStreamTrack} mediaStreamTrack - The MediaStreamTrack\n       *   to publish; if a corresponding {@link LocalAudioTrack} or\n       *   {@link LocalVideoTrack} has not yet been published, this method will\n       *   construct one\n       * @param {MediaStreamTrackPublishOptions} [options] - The options for publishing\n       *   the MediaStreamTrack\n       * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n       *   {@link LocalTrackPublication} if successful\n       * @throws {TypeError}\n       * @throws {RangeError}\n       * @example\n       * var Video = require('twilio-video');\n       *\n       * Video.connect(token, {\n       *   name: 'my-cool-room',\n       *   audio: true\n       * }).then(function(room) {\n       *   return navigator.mediaDevices.getUserMedia({\n       *     video: true\n       *   }).then(function(mediaStream) {\n       *     var mediaStreamTrack = mediaStream.getTracks()[0];\n       *     return room.localParticipant.publishTrack(mediaStreamTrack, {\n       *       name: 'camera',\n       *       priority: 'high'\n       *     });\n       *   });\n       * }).then(function(publication) {\n       *   console.log('The LocalTrack \"' + publication.trackName\n       *     + '\" was successfully published with priority \"'\n       *     * publication.priority + '\"');\n       * });\n       */\n\n  }, {\n    key: 'publishTrack',\n    value: function publishTrack(localTrackOrMediaStreamTrack, options) {\n      var trackPublication = getTrackPublication(this.tracks, localTrackOrMediaStreamTrack);\n      if (trackPublication) {\n        return Promise.resolve(trackPublication);\n      }\n\n      options = Object.assign({\n        log: this._log,\n        priority: trackPriority.PRIORITY_STANDARD,\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      }, options);\n\n      var localTrack = void 0;\n      try {\n        localTrack = asLocalTrack(localTrackOrMediaStreamTrack, options);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n\n      var priorityValues = Object.values(trackPriority);\n      if (!priorityValues.includes(options.priority)) {\n        // eslint-disable-next-line new-cap\n        return Promise.reject(E.INVALID_VALUE('LocalTrackPublishOptions.priority', priorityValues));\n      }\n\n      var addedLocalTrack = this._addTrack(localTrack, localTrack.id, options.priority) || this._tracks.get(localTrack.id);\n\n      return this._getOrCreateLocalTrackPublication(addedLocalTrack);\n    }\n\n    /**\n     * Publishes multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to publish; for any MediaStreamTracks provided, if a corresponding\n     *   {@link LocalAudioTrack} or {@link LocalVideoTrack} has not yet been\n     *   published, this method will construct one\n     * @returns {Promise<Array<LocalTrackPublication>>} - The resulting\n     *   {@link LocalTrackPublication}s\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'publishTracks',\n    value: function publishTracks(tracks) {\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n      return Promise.all(tracks.map(this.publishTrack, this));\n    }\n  }, {\n    key: 'setBandwidthProfile',\n    value: function setBandwidthProfile() {\n      this._log.warn('setBandwidthProfile is not implemented yet and may be available in future versions of twilio-video.js');\n    }\n\n    /**\n     * Sets the {@link NetworkQualityVerbosity} for the {@link LocalParticipant} and\n     * {@link RemoteParticipant}s. It does nothing if Network Quality is not enabled\n     * while calling {@link connect}.\n     * @param {NetworkQualityConfiguration} networkQualityConfiguration - The new\n     *   {@link NetworkQualityConfiguration}; If either or both of the local and\n     *   remote {@link NetworkQualityVerbosity} values are absent, then the corresponding\n     *   existing values are retained\n     * @returns {this}\n     * @example\n     * // Update verbosity levels for both LocalParticipant and RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1,\n     *   remote: 2\n     * });\n     * @example\n     * // Update verbosity level for only the LocalParticipant\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1\n     * });\n     *  @example\n     * // Update verbosity level for only the RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   remote: 2\n     * });\n     */\n\n  }, {\n    key: 'setNetworkQualityConfiguration',\n    value: function setNetworkQualityConfiguration(networkQualityConfiguration) {\n      if ((typeof networkQualityConfiguration === 'undefined' ? 'undefined' : _typeof(networkQualityConfiguration)) !== 'object' || networkQualityConfiguration === null) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('networkQualityConfiguration', 'NetworkQualityConfiguration');\n      }\n      ['local', 'remote'].forEach(function (prop) {\n        if (prop in networkQualityConfiguration && (typeof networkQualityConfiguration[prop] !== 'number' || isNaN(networkQualityConfiguration[prop]))) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_TYPE('networkQualityConfiguration.' + prop, 'number');\n        }\n      });\n      this._signaling.setNetworkQualityConfiguration(networkQualityConfiguration);\n      return this;\n    }\n\n    /**\n     * Set the {@link LocalParticipant}'s {@link EncodingParameters}.\n     * @param {?EncodingParameters} [encodingParameters] - The new\n     *   {@link EncodingParameters}; If null, then the bitrate limits are removed;\n     *   If not specified, then the existing bitrate limits are preserved\n     * @returns {this}\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'setParameters',\n    value: function setParameters(encodingParameters) {\n      if (typeof encodingParameters !== 'undefined' && (typeof encodingParameters === 'undefined' ? 'undefined' : _typeof(encodingParameters)) !== 'object') {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('encodingParameters', 'EncodingParameters, null or undefined');\n      }\n\n      if (encodingParameters) {\n        ['maxAudioBitrate', 'maxVideoBitrate'].forEach(function (prop) {\n          if (typeof encodingParameters[prop] !== 'undefined' && typeof encodingParameters[prop] !== 'number' && encodingParameters[prop] !== null) {\n            // eslint-disable-next-line new-cap\n            throw E.INVALID_TYPE('encodingParameters.' + prop, 'number, null or undefined');\n          }\n        });\n      } else if (encodingParameters === null) {\n        encodingParameters = { maxAudioBitrate: null, maxVideoBitrate: null };\n      }\n\n      this._signaling.setParameters(encodingParameters);\n      return this;\n    }\n\n    /**\n     * Stops publishing a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack|MediaStreamTrack} track - The {@link LocalTrack}\n     *   to stop publishing; if a MediaStreamTrack is provided, this method\n     *   looks up the corresponding {@link LocalAudioTrack} or\n     *   {@link LocalVideoTrack} to stop publishing\n     * @returns {?LocalTrackPublication} - The corresponding\n     *   {@link LocalTrackPublication} if the {@link LocalTrack} was previously\n     *   published, null otherwise\n     * @throws {TypeError}\n    */\n\n  }, {\n    key: 'unpublishTrack',\n    value: function unpublishTrack(track) {\n      validateLocalTrack(track, {\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      });\n\n      var localTrack = this._tracks.get(track.id);\n      if (!localTrack) {\n        return null;\n      }\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n      trackSignaling.publishFailed(new Error('The ' + localTrack + ' was unpublished'));\n\n      localTrack = this._removeTrack(localTrack, localTrack.id);\n      if (!localTrack) {\n        return null;\n      }\n\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n      if (localTrackPublication) {\n        this._removeTrackPublication(localTrackPublication);\n      }\n      return localTrackPublication;\n    }\n\n    /**\n     * Stops publishing multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to stop publishing; for any MediaStreamTracks provided, this method looks\n     *   up the corresponding {@link LocalAudioTrack} or {@link LocalVideoTrack} to\n     *   stop publishing\n     * @returns {Array<LocalTrackPublication>} - The corresponding\n     *   {@link LocalTrackPublication}s that were successfully unpublished\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'unpublishTracks',\n    value: function unpublishTracks(tracks) {\n      var _this3 = this;\n\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n\n      return tracks.reduce(function (unpublishedTracks, track) {\n        var unpublishedTrack = _this3.unpublishTrack(track);\n        return unpublishedTrack ? unpublishedTracks.concat(unpublishedTrack) : unpublishedTracks;\n      }, []);\n    }\n  }]);\n\n  return LocalParticipant;\n}(Participant);\n\n/**\n * The {@link LocalParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnected\n */\n\n/**\n * The {@link LocalParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnecting\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalVideoTrack}'s dimensions changed.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} whose dimensions changed\n * @event LocalParticipant#trackDimensionsChanged\n */\n\n/**\n * A {@link LocalTrack} was disabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was disabled\n * @event LocalParticipant#trackDisabled\n */\n\n/**\n * A {@link LocalTrack} was enabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was enabled\n * @event LocalParticipant#trackEnabled\n */\n\n/**\n * A {@link LocalTrack} failed to publish. Check the error message for more\n * information.\n * @param {TwilioError} error - A {@link TwilioError} explaining why publication\n *   failed\n * @param {LocalTrack} localTrack - The {@link LocalTrack} that failed to\n *   publish\n * @event LocalParticipant#trackPublicationFailed\n */\n\n/**\n * A {@link LocalTrack} was successfully published.\n * @param {LocalTrackPublication} publication - The resulting\n *   {@link LocalTrackPublication} for the published {@link LocalTrack}\n * @event LocalParticipant#trackPublished\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s started.\n * @param {LocalTrack} track - The {@link LocalTrack} that started\n * @event LocalParticipant#trackStarted\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s stopped, either\n * because {@link LocalTrack#stop} was called or because the underlying\n * MediaStreamTrack ended).\n * @param {LocalTrack} track - The {@link LocalTrack} that stopped\n * @event LocalParticipant#trackStopped\n */\n\n/**\n * Outgoing media encoding parameters.\n * @typedef {object} EncodingParameters\n * @property {?number} [maxAudioBitrate] - Max outgoing audio bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or a\n *   <code>0</code> value removes any previously set bitrate limit; This value is set\n *   as a hint for variable bitrate codecs, but will not take effect for fixed bitrate\n *   codecs; Based on our tests, Chrome, Firefox and Safari support a bitrate range of\n *   12000 bps to 256000 bps for Opus codec; This parameter has no effect on iSAC, PCMU\n *   and PCMA codecs\n * @property {?number} [maxVideoBitrate] - Max outgoing video bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or\n *   a <code>0</code> value removes any previously set bitrate limit; This value is\n *   set as a hint for variable bitrate codecs, but will not take effect for fixed\n *   bitrate codecs; Based on our tests, Chrome, Firefox and Safari all seem to support\n *   an average bitrate range of 20000 bps (20 kbps) to 8000000 bps (8 mbps) for a\n *   720p VideoTrack.\n *   Note: this limit is not applied for screen share tracks published on Chrome.\n */\n\n/**\n * Options for publishing a {@link LocalTrack}.\n * @typedef {object} LocalTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * Options for publishing a {@link MediaStreamTrack}.\n * @typedef {LocalTrackOptions} MediaStreamTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * @private\n * @param {Map<Track.SID, LocalTrackPublication>} trackPublications\n * @param {LocalTrack|MediaStreamTrack} track\n * @returns {?LocalTrackPublication} trackPublication\n */\n\n\nfunction getTrackPublication(trackPublications, track) {\n  return Array.from(trackPublications.values()).find(function (trackPublication) {\n    return trackPublication.track === track || trackPublication.track.mediaStreamTrack === track;\n  }) || null;\n}\n\nmodule.exports = LocalParticipant;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/localparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/audiotrack.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/audiotrack.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaTrack = __webpack_require__(/*! ./mediatrack */ \"./node_modules/twilio-video/es5/media/track/mediatrack.js\");\n\n/**\n * An {@link AudioTrack} is a {@link Track} representing audio.\n * @extends Track\n * @property {boolean} isStarted - Whether or not the {@link AudioTrack} has\n *   started; if the {@link AudioTrack} started, there is enough audio data to\n *   begin playback\n * @property {boolean} isEnabled - Whether or not the {@link AudioTrack} is\n *   enabled; if the {@link AudioTrack} is not enabled, it is \"muted\"\n * @property {Track.Kind} kind - \"audio\"\n * @property {MediaStreamTrack} mediaStreamTrack - An audio MediaStreamTrack\n * @emits AudioTrack#disabled\n * @emits AudioTrack#enabled\n * @emits AudioTrack#started\n */\n\nvar AudioTrack = function (_MediaTrack) {\n  _inherits(AudioTrack, _MediaTrack);\n\n  /**\n   * Construct an {@link AudioTrack}.\n   * @param {MediaTrackTransceiver} mediaTrackTransceiver\n   * @param {{log: Log}} options\n   */\n  function AudioTrack(mediaTrackTransceiver, options) {\n    _classCallCheck(this, AudioTrack);\n\n    return _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this, mediaTrackTransceiver, options));\n  }\n\n  /**\n   * @private\n   */\n\n\n  _createClass(AudioTrack, [{\n    key: '_start',\n    value: function _start() {\n      _get(AudioTrack.prototype.__proto__ || Object.getPrototypeOf(AudioTrack.prototype), '_start', this).call(this);\n      if (this._dummyEl) {\n        this._detachElement(this._dummyEl);\n      }\n    }\n\n    /**\n     * Create an HTMLAudioElement and attach the {@link AudioTrack} to it.\n     *\n     * The HTMLAudioElement's <code>srcObject</code> will be set to a new\n     * MediaStream containing the {@link AudioTrack}'s MediaStreamTrack.\n     *\n     * @returns {HTMLAudioElement} audioElement\n     * @example\n     * const Video = require('twilio-video');\n     *\n     * Video.createLocalAudioTrack().then(function(audioTrack) {\n     *   const audioElement = audioTrack.attach();\n     *   document.body.appendChild(audioElement);\n     * });\n    */ /**\n       * Attach the {@link AudioTrack} to an existing HTMLMediaElement. The\n       * HTMLMediaElement could be an HTMLAudioElement or an HTMLVideoElement.\n       *\n       * If the HTMLMediaElement's <code>srcObject</code> is not set to a MediaStream,\n       * this method sets it to a new MediaStream containing the {@link AudioTrack}'s\n       * MediaStreamTrack; otherwise, it adds the {@link MediaTrack}'s\n       * MediaStreamTrack to the existing MediaStream. Finally, if there are any other\n       * MediaStreamTracks of the same kind on the MediaStream, this method removes\n       * them.\n       *\n       * @param {HTMLMediaElement} mediaElement - The HTMLMediaElement to attach to\n       * @returns {HTMLMediaElement} mediaElement\n       * @example\n       * const Video = require('twilio-video');\n       *\n       * const videoElement = document.createElement('video');\n       * document.body.appendChild(videoElement);\n       *\n       * Video.createLocalAudioTrack().then(function(audioTrack) {\n       *   audioTrack.attach(videoElement);\n       * });\n       */ /**\n          * Attach the {@link AudioTrack} to an HTMLMediaElement selected by\n          * <code>document.querySelector</code>. The HTMLMediaElement could be an\n          * HTMLAudioElement or an HTMLVideoElement.\n          *\n          * If the HTMLMediaElement's <code>srcObject</code> is not set to a MediaStream,\n          * this method sets it to a new MediaStream containing the {@link AudioTrack}'s\n          * MediaStreamTrack; otherwise, it adds the {@link AudioTrack}'s\n          * MediaStreamTrack to the existing MediaStream. Finally, if there are any other\n          * MediaStreamTracks of the same kind on the MediaStream, this method removes\n          * them.\n          *\n          * @param {string} selector - A query selector for the HTMLMediaElement to\n          *   attach to\n          * @returns {HTMLMediaElement} mediaElement\n          * @example\n          * const Video = require('twilio-video');\n          *\n          * const videoElement = document.createElement('video');\n          * videoElement.id = 'my-video-element';\n          * document.body.appendChild(videoElement);\n          *\n          * Video.createLocalAudioTrack().then(function(track) {\n          *   track.attach('#my-video-element');\n          * });\n          */\n\n  }, {\n    key: 'attach',\n    value: function attach() {\n      return _get(AudioTrack.prototype.__proto__ || Object.getPrototypeOf(AudioTrack.prototype), 'attach', this).apply(this, arguments);\n    }\n\n    /**\n     * Detach the {@link AudioTrack} from all previously attached HTMLMediaElements.\n     * @returns {Array<HTMLMediaElement>} mediaElements\n     * @example\n     * const mediaElements = audioTrack.detach();\n     * mediaElements.forEach(mediaElement => mediaElement.remove());\n    */ /**\n       * Detach the {@link AudioTrack} from a previously attached HTMLMediaElement.\n       * @param {HTMLMediaElement} mediaElement - One of the HTMLMediaElements to\n       *   which the {@link AudioTrack} is attached\n       * @returns {HTMLMediaElement} mediaElement\n       * @example\n       * const videoElement = document.getElementById('my-video-element');\n       * audioTrack.detach(videoElement).remove();\n       */ /**\n          * Detach the {@link AudioTrack} from a previously attached HTMLMediaElement\n          *   specified by <code>document.querySelector</code>.\n          * @param {string} selector - The query selector of HTMLMediaElement to which\n          *    the {@link AudioTrack} is attached\n          * @returns {HTMLMediaElement} mediaElement\n          * @example\n          * audioTrack.detach('#my-video-element').remove();\n          */\n\n  }, {\n    key: 'detach',\n    value: function detach() {\n      return _get(AudioTrack.prototype.__proto__ || Object.getPrototypeOf(AudioTrack.prototype), 'detach', this).apply(this, arguments);\n    }\n  }]);\n\n  return AudioTrack;\n}(MediaTrack);\n\n/**\n * The {@link AudioTrack} was disabled, i.e. \"muted\".\n * @param {AudioTrack} track - The {@link AudioTrack} that was disabled\n * @event AudioTrack#disabled\n */\n\n/**\n * The {@link AudioTrack} was enabled, i.e. \"unmuted\".\n * @param {AudioTrack} track - The {@link AudioTrack} that was enabled\n * @event AudioTrack#enabled\n */\n\n/**\n * The {@link AudioTrack} started. This means there is enough audio data to\n * begin playback.\n * @param {AudioTrack} track - The {@link AudioTrack} that started\n * @event AudioTrack#started\n */\n\nmodule.exports = AudioTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/audiotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/es5/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/es5/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  LocalAudioTrack: __webpack_require__(/*! ./localaudiotrack */ \"./node_modules/twilio-video/es5/media/track/es5/localaudiotrack.js\"),\n  LocalVideoTrack: __webpack_require__(/*! ./localvideotrack */ \"./node_modules/twilio-video/es5/media/track/es5/localvideotrack.js\"),\n  LocalDataTrack: __webpack_require__(/*! ./localdatatrack */ \"./node_modules/twilio-video/es5/media/track/es5/localdatatrack.js\")\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvaW5kZXguanM/NTUxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBMb2NhbEF1ZGlvVHJhY2s6IHJlcXVpcmUoJy4vbG9jYWxhdWRpb3RyYWNrJyksXG4gIExvY2FsVmlkZW9UcmFjazogcmVxdWlyZSgnLi9sb2NhbHZpZGVvdHJhY2snKSxcbiAgTG9jYWxEYXRhVHJhY2s6IHJlcXVpcmUoJy4vbG9jYWxkYXRhdHJhY2snKVxufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/es5/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/es5/localaudiotrack.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/es5/localaudiotrack.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// eslint-disable-next-line no-warning-comments\n// TODO(mroberts): Remove this when we go to the next major version. This is\n// only in place so that we can support ES6 classes without requiring `new`.\n\n\nvar _require = __webpack_require__(/*! util */ \"./node_modules/util/util.js\"),\n    inherits = _require.inherits;\n\nvar LocalAudioTrackClass = __webpack_require__(/*! ../localaudiotrack */ \"./node_modules/twilio-video/es5/media/track/localaudiotrack.js\");\n\nfunction LocalAudioTrack(mediaStreamTrack, options) {\n  var track = new LocalAudioTrackClass(mediaStreamTrack, options);\n  Object.setPrototypeOf(track, LocalAudioTrack.prototype);\n  return track;\n}\n\ninherits(LocalAudioTrack, LocalAudioTrackClass);\n\nmodule.exports = LocalAudioTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvbG9jYWxhdWRpb3RyYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svZXM1L2xvY2FsYXVkaW90cmFjay5qcz84MDk2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby13YXJuaW5nLWNvbW1lbnRzXG4vLyBUT0RPKG1yb2JlcnRzKTogUmVtb3ZlIHRoaXMgd2hlbiB3ZSBnbyB0byB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLiBUaGlzIGlzXG4vLyBvbmx5IGluIHBsYWNlIHNvIHRoYXQgd2UgY2FuIHN1cHBvcnQgRVM2IGNsYXNzZXMgd2l0aG91dCByZXF1aXJpbmcgYG5ld2AuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ3V0aWwnKSxcbiAgICBpbmhlcml0cyA9IF9yZXF1aXJlLmluaGVyaXRzO1xuXG52YXIgTG9jYWxBdWRpb1RyYWNrQ2xhc3MgPSByZXF1aXJlKCcuLi9sb2NhbGF1ZGlvdHJhY2snKTtcblxuZnVuY3Rpb24gTG9jYWxBdWRpb1RyYWNrKG1lZGlhU3RyZWFtVHJhY2ssIG9wdGlvbnMpIHtcbiAgdmFyIHRyYWNrID0gbmV3IExvY2FsQXVkaW9UcmFja0NsYXNzKG1lZGlhU3RyZWFtVHJhY2ssIG9wdGlvbnMpO1xuICBPYmplY3Quc2V0UHJvdG90eXBlT2YodHJhY2ssIExvY2FsQXVkaW9UcmFjay5wcm90b3R5cGUpO1xuICByZXR1cm4gdHJhY2s7XG59XG5cbmluaGVyaXRzKExvY2FsQXVkaW9UcmFjaywgTG9jYWxBdWRpb1RyYWNrQ2xhc3MpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsQXVkaW9UcmFjazsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/es5/localaudiotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/es5/localdatatrack.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/es5/localdatatrack.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// eslint-disable-next-line no-warning-comments\n// TODO(mroberts): Remove this when we go to the next major version. This is\n// only in place so that we can support ES6 classes without requiring `new`.\n\n\nvar _require = __webpack_require__(/*! util */ \"./node_modules/util/util.js\"),\n    inherits = _require.inherits;\n\nvar LocalDataTrackClass = __webpack_require__(/*! ../localdatatrack */ \"./node_modules/twilio-video/es5/media/track/localdatatrack.js\");\n\nfunction LocalDataTrack(options) {\n  var track = new LocalDataTrackClass(options);\n  Object.setPrototypeOf(track, LocalDataTrack.prototype);\n  return track;\n}\n\ninherits(LocalDataTrack, LocalDataTrackClass);\n\nmodule.exports = LocalDataTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvbG9jYWxkYXRhdHJhY2suanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvbG9jYWxkYXRhdHJhY2suanM/NDYzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8td2FybmluZy1jb21tZW50c1xuLy8gVE9ETyhtcm9iZXJ0cyk6IFJlbW92ZSB0aGlzIHdoZW4gd2UgZ28gdG8gdGhlIG5leHQgbWFqb3IgdmVyc2lvbi4gVGhpcyBpc1xuLy8gb25seSBpbiBwbGFjZSBzbyB0aGF0IHdlIGNhbiBzdXBwb3J0IEVTNiBjbGFzc2VzIHdpdGhvdXQgcmVxdWlyaW5nIGBuZXdgLlxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCd1dGlsJyksXG4gICAgaW5oZXJpdHMgPSBfcmVxdWlyZS5pbmhlcml0cztcblxudmFyIExvY2FsRGF0YVRyYWNrQ2xhc3MgPSByZXF1aXJlKCcuLi9sb2NhbGRhdGF0cmFjaycpO1xuXG5mdW5jdGlvbiBMb2NhbERhdGFUcmFjayhvcHRpb25zKSB7XG4gIHZhciB0cmFjayA9IG5ldyBMb2NhbERhdGFUcmFja0NsYXNzKG9wdGlvbnMpO1xuICBPYmplY3Quc2V0UHJvdG90eXBlT2YodHJhY2ssIExvY2FsRGF0YVRyYWNrLnByb3RvdHlwZSk7XG4gIHJldHVybiB0cmFjaztcbn1cblxuaW5oZXJpdHMoTG9jYWxEYXRhVHJhY2ssIExvY2FsRGF0YVRyYWNrQ2xhc3MpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsRGF0YVRyYWNrOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/es5/localdatatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/es5/localvideotrack.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/es5/localvideotrack.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// eslint-disable-next-line no-warning-comments\n// TODO(mroberts): Remove this when we go to the next major version. This is\n// only in place so that we can support ES6 classes without requiring `new`.\n\n\nvar _require = __webpack_require__(/*! util */ \"./node_modules/util/util.js\"),\n    inherits = _require.inherits;\n\nvar LocalVideoTrackClass = __webpack_require__(/*! ../localvideotrack */ \"./node_modules/twilio-video/es5/media/track/localvideotrack.js\");\n\nfunction LocalVideoTrack(mediaStreamTrack, options) {\n  var track = new LocalVideoTrackClass(mediaStreamTrack, options);\n  Object.setPrototypeOf(track, LocalVideoTrack.prototype);\n  return track;\n}\n\ninherits(LocalVideoTrack, LocalVideoTrackClass);\n\nmodule.exports = LocalVideoTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9lczUvbG9jYWx2aWRlb3RyYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svZXM1L2xvY2FsdmlkZW90cmFjay5qcz9kOGQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby13YXJuaW5nLWNvbW1lbnRzXG4vLyBUT0RPKG1yb2JlcnRzKTogUmVtb3ZlIHRoaXMgd2hlbiB3ZSBnbyB0byB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLiBUaGlzIGlzXG4vLyBvbmx5IGluIHBsYWNlIHNvIHRoYXQgd2UgY2FuIHN1cHBvcnQgRVM2IGNsYXNzZXMgd2l0aG91dCByZXF1aXJpbmcgYG5ld2AuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ3V0aWwnKSxcbiAgICBpbmhlcml0cyA9IF9yZXF1aXJlLmluaGVyaXRzO1xuXG52YXIgTG9jYWxWaWRlb1RyYWNrQ2xhc3MgPSByZXF1aXJlKCcuLi9sb2NhbHZpZGVvdHJhY2snKTtcblxuZnVuY3Rpb24gTG9jYWxWaWRlb1RyYWNrKG1lZGlhU3RyZWFtVHJhY2ssIG9wdGlvbnMpIHtcbiAgdmFyIHRyYWNrID0gbmV3IExvY2FsVmlkZW9UcmFja0NsYXNzKG1lZGlhU3RyZWFtVHJhY2ssIG9wdGlvbnMpO1xuICBPYmplY3Quc2V0UHJvdG90eXBlT2YodHJhY2ssIExvY2FsVmlkZW9UcmFjay5wcm90b3R5cGUpO1xuICByZXR1cm4gdHJhY2s7XG59XG5cbmluaGVyaXRzKExvY2FsVmlkZW9UcmFjaywgTG9jYWxWaWRlb1RyYWNrQ2xhc3MpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsVmlkZW9UcmFjazsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/es5/localvideotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/index.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! ../../eventemitter */ \"./node_modules/twilio-video/es5/eventemitter.js\");\n\nvar _require = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    buildLogLevels = _require.buildLogLevels,\n    valueToJSON = _require.valueToJSON;\n\nvar DEFAULT_LOG_LEVEL = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\").DEFAULT_LOG_LEVEL;\nvar Log = __webpack_require__(/*! ../../util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\n\nvar nInstances = 0;\n\n/**\n * A {@link Track} represents a stream of audio, video, or data.\n * @extends EventEmitter\n * @property {Track.Kind} kind - The {@link Track}'s kind\n * @property {string} name - The {@link Track}'s name\n */\n\nvar Track = function (_EventEmitter) {\n  _inherits(Track, _EventEmitter);\n\n  /**\n   * Construct a {@link Track}.\n   * @param {Track.ID} id - The {@link Track}'s ID\n   * @param {Track.Kind} kind - The {@link Track}'s kind\n   * @param {{ log: Log, name: ?string }} options\n   */\n  function Track(id, kind, options) {\n    _classCallCheck(this, Track);\n\n    options = Object.assign({\n      name: id,\n      log: null,\n      logLevel: DEFAULT_LOG_LEVEL\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (Track.__proto__ || Object.getPrototypeOf(Track)).call(this));\n\n    var name = String(options.name);\n\n    var logLevels = buildLogLevels(options.logLevel);\n    var log = options.log ? options.log.createLog('media', _this) : new Log('media', _this, logLevels);\n\n    Object.defineProperties(_this, {\n      _instanceId: {\n        value: ++nInstances\n      },\n      _log: {\n        value: log\n      },\n      kind: {\n        enumerable: true,\n        value: kind\n      },\n      name: {\n        enumerable: true,\n        value: name\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Track, [{\n    key: 'toJSON',\n    value: function toJSON() {\n      return valueToJSON(this);\n    }\n  }]);\n\n  return Track;\n}(EventEmitter);\n\n/**\n * The {@link Track} ID is a string identifier for the {@link Track}.\n * @typedef {string} Track.ID\n */\n\n/**\n * The {@link Track} kind is either \"audio\", \"video\", or \"data\".\n * @typedef {string} Track.Kind\n */\n\n/**\n * The {@link Track}'s priority can be \"low\", \"standard\", or \"high\".\n * @typedef {string} Track.Priority\n */\n\n/**\n * The {@link Track} SID is a unique string identifier for the {@link Track}\n * that is published to a {@link Room}.\n * @typedef {string} Track.SID\n */\n\n/**\n * A {@link DataTrack} is a {@link LocalDataTrack} or {@link RemoteDataTrack}.\n * @typedef {LocalDataTrack|RemoteDataTrack} DataTrack\n */\n\n/**\n * A {@link LocalTrack} is a {@link LocalAudioTrack}, {@link LocalVideoTrack},\n * or {@link LocalDataTrack}.\n * @typedef {LocalAudioTrack|LocalVideoTrack|LocalDataTrack} LocalTrack\n */\n\n/**\n * {@link LocalTrack} options\n * @typedef {object} LocalTrackOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n * @property {string} [name] - The {@link LocalTrack}'s name; by default,\n *   it is set to the {@link LocalTrack}'s ID.\n */\n\n/**\n * A {@link RemoteTrack} is a {@link RemoteAudioTrack},\n * {@link RemoteVideoTrack}, or {@link RemoteDataTrack}.\n * @typedef {RemoteAudioTrack|RemoteVideoTrack|RemoteDataTrack} RemoteTrack\n */\n\nmodule.exports = Track;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL2luZGV4LmpzPzM0MmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCcuLi8uLi9ldmVudGVtaXR0ZXInKTtcblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi4vLi4vdXRpbCcpLFxuICAgIGJ1aWxkTG9nTGV2ZWxzID0gX3JlcXVpcmUuYnVpbGRMb2dMZXZlbHMsXG4gICAgdmFsdWVUb0pTT04gPSBfcmVxdWlyZS52YWx1ZVRvSlNPTjtcblxudmFyIERFRkFVTFRfTE9HX0xFVkVMID0gcmVxdWlyZSgnLi4vLi4vdXRpbC9jb25zdGFudHMnKS5ERUZBVUxUX0xPR19MRVZFTDtcbnZhciBMb2cgPSByZXF1aXJlKCcuLi8uLi91dGlsL2xvZycpO1xuXG52YXIgbkluc3RhbmNlcyA9IDA7XG5cbi8qKlxuICogQSB7QGxpbmsgVHJhY2t9IHJlcHJlc2VudHMgYSBzdHJlYW0gb2YgYXVkaW8sIHZpZGVvLCBvciBkYXRhLlxuICogQGV4dGVuZHMgRXZlbnRFbWl0dGVyXG4gKiBAcHJvcGVydHkge1RyYWNrLktpbmR9IGtpbmQgLSBUaGUge0BsaW5rIFRyYWNrfSdzIGtpbmRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBuYW1lIC0gVGhlIHtAbGluayBUcmFja30ncyBuYW1lXG4gKi9cblxudmFyIFRyYWNrID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKFRyYWNrLCBfRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFRyYWNrfS5cbiAgICogQHBhcmFtIHtUcmFjay5JRH0gaWQgLSBUaGUge0BsaW5rIFRyYWNrfSdzIElEXG4gICAqIEBwYXJhbSB7VHJhY2suS2luZH0ga2luZCAtIFRoZSB7QGxpbmsgVHJhY2t9J3Mga2luZFxuICAgKiBAcGFyYW0ge3sgbG9nOiBMb2csIG5hbWU6ID9zdHJpbmcgfX0gb3B0aW9uc1xuICAgKi9cbiAgZnVuY3Rpb24gVHJhY2soaWQsIGtpbmQsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhY2spO1xuXG4gICAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgbmFtZTogaWQsXG4gICAgICBsb2c6IG51bGwsXG4gICAgICBsb2dMZXZlbDogREVGQVVMVF9MT0dfTEVWRUxcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChUcmFjay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFRyYWNrKSkuY2FsbCh0aGlzKSk7XG5cbiAgICB2YXIgbmFtZSA9IFN0cmluZyhvcHRpb25zLm5hbWUpO1xuXG4gICAgdmFyIGxvZ0xldmVscyA9IGJ1aWxkTG9nTGV2ZWxzKG9wdGlvbnMubG9nTGV2ZWwpO1xuICAgIHZhciBsb2cgPSBvcHRpb25zLmxvZyA/IG9wdGlvbnMubG9nLmNyZWF0ZUxvZygnbWVkaWEnLCBfdGhpcykgOiBuZXcgTG9nKCdtZWRpYScsIF90aGlzLCBsb2dMZXZlbHMpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIF9pbnN0YW5jZUlkOiB7XG4gICAgICAgIHZhbHVlOiArK25JbnN0YW5jZXNcbiAgICAgIH0sXG4gICAgICBfbG9nOiB7XG4gICAgICAgIHZhbHVlOiBsb2dcbiAgICAgIH0sXG4gICAgICBraW5kOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBraW5kXG4gICAgICB9LFxuICAgICAgbmFtZToge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbmFtZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhUcmFjaywgW3tcbiAgICBrZXk6ICd0b0pTT04nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgICByZXR1cm4gdmFsdWVUb0pTT04odGhpcyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRyYWNrO1xufShFdmVudEVtaXR0ZXIpO1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgVHJhY2t9IElEIGlzIGEgc3RyaW5nIGlkZW50aWZpZXIgZm9yIHRoZSB7QGxpbmsgVHJhY2t9LlxuICogQHR5cGVkZWYge3N0cmluZ30gVHJhY2suSURcbiAqL1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgVHJhY2t9IGtpbmQgaXMgZWl0aGVyIFwiYXVkaW9cIiwgXCJ2aWRlb1wiLCBvciBcImRhdGFcIi5cbiAqIEB0eXBlZGVmIHtzdHJpbmd9IFRyYWNrLktpbmRcbiAqL1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgVHJhY2t9J3MgcHJpb3JpdHkgY2FuIGJlIFwibG93XCIsIFwic3RhbmRhcmRcIiwgb3IgXCJoaWdoXCIuXG4gKiBAdHlwZWRlZiB7c3RyaW5nfSBUcmFjay5Qcmlvcml0eVxuICovXG5cbi8qKlxuICogVGhlIHtAbGluayBUcmFja30gU0lEIGlzIGEgdW5pcXVlIHN0cmluZyBpZGVudGlmaWVyIGZvciB0aGUge0BsaW5rIFRyYWNrfVxuICogdGhhdCBpcyBwdWJsaXNoZWQgdG8gYSB7QGxpbmsgUm9vbX0uXG4gKiBAdHlwZWRlZiB7c3RyaW5nfSBUcmFjay5TSURcbiAqL1xuXG4vKipcbiAqIEEge0BsaW5rIERhdGFUcmFja30gaXMgYSB7QGxpbmsgTG9jYWxEYXRhVHJhY2t9IG9yIHtAbGluayBSZW1vdGVEYXRhVHJhY2t9LlxuICogQHR5cGVkZWYge0xvY2FsRGF0YVRyYWNrfFJlbW90ZURhdGFUcmFja30gRGF0YVRyYWNrXG4gKi9cblxuLyoqXG4gKiBBIHtAbGluayBMb2NhbFRyYWNrfSBpcyBhIHtAbGluayBMb2NhbEF1ZGlvVHJhY2t9LCB7QGxpbmsgTG9jYWxWaWRlb1RyYWNrfSxcbiAqIG9yIHtAbGluayBMb2NhbERhdGFUcmFja30uXG4gKiBAdHlwZWRlZiB7TG9jYWxBdWRpb1RyYWNrfExvY2FsVmlkZW9UcmFja3xMb2NhbERhdGFUcmFja30gTG9jYWxUcmFja1xuICovXG5cbi8qKlxuICoge0BsaW5rIExvY2FsVHJhY2t9IG9wdGlvbnNcbiAqIEB0eXBlZGVmIHtvYmplY3R9IExvY2FsVHJhY2tPcHRpb25zXG4gKiBAcHJvcGVydHkge0xvZ0xldmVsfExvZ0xldmVsc30gbG9nTGV2ZWwgLSBMb2cgbGV2ZWwgZm9yICdtZWRpYScgbW9kdWxlc1xuICogQHByb3BlcnR5IHtzdHJpbmd9IFtuYW1lXSAtIFRoZSB7QGxpbmsgTG9jYWxUcmFja30ncyBuYW1lOyBieSBkZWZhdWx0LFxuICogICBpdCBpcyBzZXQgdG8gdGhlIHtAbGluayBMb2NhbFRyYWNrfSdzIElELlxuICovXG5cbi8qKlxuICogQSB7QGxpbmsgUmVtb3RlVHJhY2t9IGlzIGEge0BsaW5rIFJlbW90ZUF1ZGlvVHJhY2t9LFxuICoge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9LCBvciB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfS5cbiAqIEB0eXBlZGVmIHtSZW1vdGVBdWRpb1RyYWNrfFJlbW90ZVZpZGVvVHJhY2t8UmVtb3RlRGF0YVRyYWNrfSBSZW1vdGVUcmFja1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gVHJhY2s7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localaudiotrack.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localaudiotrack.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require.guessBrowser;\n\nvar AudioTrack = __webpack_require__(/*! ./audiotrack */ \"./node_modules/twilio-video/es5/media/track/audiotrack.js\");\nvar mixinLocalMediaTrack = __webpack_require__(/*! ./localmediatrack */ \"./node_modules/twilio-video/es5/media/track/localmediatrack.js\");\n\nvar isFirefox = guessBrowser() === 'firefox';\nvar LocalMediaAudioTrack = mixinLocalMediaTrack(AudioTrack);\n\n/**\n * A {@link LocalAudioTrack} is an {@link AudioTrack} representing audio that\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\n * enabled and disabled with {@link LocalAudioTrack#enable} and\n * {@link LocalAudioTrack#disable} or stopped completely with\n * {@link LocalAudioTrack#stop}.\n * @extends AudioTrack\n * @property {Track.ID} id - The {@link LocalAudioTrack}'s ID\n * @property {boolean} isStopped - Whether or not the {@link LocalAudioTrack} is\n *   stopped\n * @emits LocalAudioTrack#disabled\n * @emits LocalAudioTrack#enabled\n * @emits LocalAudioTrack#started\n * @emits LocalAudioTrack#stopped\n */\n\nvar LocalAudioTrack = function (_LocalMediaAudioTrack) {\n  _inherits(LocalAudioTrack, _LocalMediaAudioTrack);\n\n  /**\n   * Construct a {@link LocalAudioTrack} from a MediaStreamTrack.\n   * @param {MediaStreamTrack} mediaStreamTrack - An audio MediaStreamTrack\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\n   */\n  function LocalAudioTrack(mediaStreamTrack, options) {\n    _classCallCheck(this, LocalAudioTrack);\n\n    return _possibleConstructorReturn(this, (LocalAudioTrack.__proto__ || Object.getPrototypeOf(LocalAudioTrack)).call(this, mediaStreamTrack, options));\n  }\n\n  _createClass(LocalAudioTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalAudioTrack #' + this._instanceId + ': ' + this.id + ']';\n    }\n  }, {\n    key: 'attach',\n    value: function attach(el) {\n      el = _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'attach', this).call(this, el);\n      el.muted = true;\n      return el;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), '_end', this).apply(this, arguments);\n    }\n\n    /**\n     * Disable the {@link LocalAudioTrack}. This is effectively \"mute\".\n     * @returns {this}\n     * @fires LocalAudioTrack#disabled\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'disable', this).apply(this, arguments);\n    }\n\n    /**\n     * Enable the {@link LocalAudioTrack}. This is effectively \"unmute\".\n     * @returns {this}\n     * @fires LocalAudioTrack#enabled\n    */ /**\n       * Enable or disable the {@link LocalAudioTrack}. This is effectively \"unmute\"\n       * or \"mute\".\n       * @param {boolean} [enabled] - Specify false to mute the\n       *   {@link LocalAudioTrack}\n       * @returns {this}\n       * @fires LocalAudioTrack#disabled\n       * @fires LocalAudioTrack#enabled\n       */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'enable', this).apply(this, arguments);\n    }\n\n    /**\n     * Restart the {@link LocalAudioTrack}. This stops the existing MediaStreamTrack\n     * and creates a new MediaStreamTrack. If the {@link LocalAudioTrack} is being published\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\n     * the {@link LocalAudioTrack}'s ID is no longer guaranteed to be the same as the\n     * underlying MediaStreamTrack's ID.\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n     *   for restarting the {@link LocalAudioTrack}; If not specified, then the current MediaTrackConstraints\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\n     *   will be used\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalAudioTrack} was not created\n     *   using an one of <code>createLocalAudioTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\n     *   raised by <code>getUserMedia</code> when it fails\n     * @fires LocalAudioTrack#stopped\n     * @fires LocalAudioTrack#started\n     * @example\n     * const { connect, createLocalAudioTrack } = require('twilio-video');\n     *\n     * // Create a LocalAudioTrack that captures audio from a USB microphone.\n     * createLocalAudioTrack({ deviceId: 'usb-mic-id' }).then(function(localAudioTrack) {\n     *   return connect('token', {\n     *     name: 'my-cool-room',\n     *     tracks: [localAudioTrack]\n     *   });\n     * }).then(function(room) {\n     *   // Restart the LocalAudioTrack to capture audio from the default microphone.\n     *   const localAudioTrack = Array.from(room.localParticipant.audioTracks.values())[0].track;\n     *   return localAudioTrack.restart({ deviceId: 'default-mic-id' });\n     * });\n     */\n\n  }, {\n    key: 'restart',\n    value: function restart() {\n      var constraints = arguments[0] || {};\n\n      // NOTE(mmalavalli): If \"deviceId\" is present in the constraints, then the developer\n      // is most likely trying to switch audio devices. In Firefox, getUserMedia raises a\n      // NotReadableError when trying to capture from a different audio device while the\n      // existing audio device is still being used. So, we stop the existing MediaStreamTrack\n      // before calling getUserMedia.\n      if (isFirefox && 'deviceId' in constraints) {\n        this._stop();\n      }\n\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'restart', this).apply(this, arguments);\n    }\n\n    /**\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\n     * {@link LocalAudioTrack}, you should unpublish it after stopping.\n     * @returns {this}\n     * @fires LocalAudioTrack#stopped\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'stop', this).apply(this, arguments);\n    }\n  }]);\n\n  return LocalAudioTrack;\n}(LocalMediaAudioTrack);\n\n/**\n * The {@link LocalAudioTrack} was disabled, i.e. \"muted\".\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was\n *   disabled\n * @event LocalAudioTrack#disabled\n */\n\n/**\n * The {@link LocalAudioTrack} was enabled, i.e. \"unmuted\".\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was enabled\n * @event LocalAudioTrack#enabled\n */\n\n/**\n * The {@link LocalAudioTrack} started. This means there is enough audio data to\n * begin playback.\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that started\n * @event LocalAudioTrack#started\n */\n\n/**\n * The {@link LocalAudioTrack} stopped, either because {@link LocalAudioTrack#stop}\n * or {@link LocalAudioTrack#restart} was called or because the underlying\n * MediaStreamTrack ended.\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that stopped\n * @event LocalAudioTrack#stopped\n */\n\nmodule.exports = LocalAudioTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localaudiotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localaudiotrackpublication.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localaudiotrackpublication.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackPublication = __webpack_require__(/*! ./localtrackpublication */ \"./node_modules/twilio-video/es5/media/track/localtrackpublication.js\");\n\n/**\n * A {@link LocalAudioTrackPublication} is a {@link LocalAudioTrack} that has\n * been published to a {@link Room}.\n * @extends LocalTrackPublication\n * @property {Track.Kind} kind - \"audio\"\n * @property {LocalAudioTrack} track - the {@link LocalAudioTrack}\n */\n\nvar LocalAudioTrackPublication = function (_LocalTrackPublicatio) {\n  _inherits(LocalAudioTrackPublication, _LocalTrackPublicatio);\n\n  /**\n   * Construct a {@link LocalAudioTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalAudioTrack} track - the {@link LocalAudioTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *    that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication} options\n   */\n  function LocalAudioTrackPublication(signaling, track, unpublish, options) {\n    _classCallCheck(this, LocalAudioTrackPublication);\n\n    return _possibleConstructorReturn(this, (LocalAudioTrackPublication.__proto__ || Object.getPrototypeOf(LocalAudioTrackPublication)).call(this, signaling, track, unpublish, options));\n  }\n\n  _createClass(LocalAudioTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalAudioTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return LocalAudioTrackPublication;\n}(LocalTrackPublication);\n\nmodule.exports = LocalAudioTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9sb2NhbGF1ZGlvdHJhY2twdWJsaWNhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL2xvY2FsYXVkaW90cmFja3B1YmxpY2F0aW9uLmpzPzA5MmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBMb2NhbFRyYWNrUHVibGljYXRpb24gPSByZXF1aXJlKCcuL2xvY2FsdHJhY2twdWJsaWNhdGlvbicpO1xuXG4vKipcbiAqIEEge0BsaW5rIExvY2FsQXVkaW9UcmFja1B1YmxpY2F0aW9ufSBpcyBhIHtAbGluayBMb2NhbEF1ZGlvVHJhY2t9IHRoYXQgaGFzXG4gKiBiZWVuIHB1Ymxpc2hlZCB0byBhIHtAbGluayBSb29tfS5cbiAqIEBleHRlbmRzIExvY2FsVHJhY2tQdWJsaWNhdGlvblxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kIC0gXCJhdWRpb1wiXG4gKiBAcHJvcGVydHkge0xvY2FsQXVkaW9UcmFja30gdHJhY2sgLSB0aGUge0BsaW5rIExvY2FsQXVkaW9UcmFja31cbiAqL1xuXG52YXIgTG9jYWxBdWRpb1RyYWNrUHVibGljYXRpb24gPSBmdW5jdGlvbiAoX0xvY2FsVHJhY2tQdWJsaWNhdGlvKSB7XG4gIF9pbmhlcml0cyhMb2NhbEF1ZGlvVHJhY2tQdWJsaWNhdGlvbiwgX0xvY2FsVHJhY2tQdWJsaWNhdGlvKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIExvY2FsQXVkaW9UcmFja1B1YmxpY2F0aW9ufS5cbiAgICogQHBhcmFtIHtMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IHNpZ25hbGluZyAtIFRoZSBjb3JyZXNwb25kaW5nXG4gICAqICAge0BsaW5rIExvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ31cbiAgICogQHBhcmFtIHtMb2NhbEF1ZGlvVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBMb2NhbEF1ZGlvVHJhY2t9XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oTG9jYWxUcmFja1B1YmxpY2F0aW9uKTogdm9pZH0gdW5wdWJsaXNoIC0gVGhlIGNhbGxiYWNrXG4gICAqICAgIHRoYXQgdW5wdWJsaXNoZXMgdGhlIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb259XG4gICAqIEBwYXJhbSB7VHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9ufSBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBMb2NhbEF1ZGlvVHJhY2tQdWJsaWNhdGlvbihzaWduYWxpbmcsIHRyYWNrLCB1bnB1Ymxpc2gsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9jYWxBdWRpb1RyYWNrUHVibGljYXRpb24pO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMb2NhbEF1ZGlvVHJhY2tQdWJsaWNhdGlvbi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvY2FsQXVkaW9UcmFja1B1YmxpY2F0aW9uKSkuY2FsbCh0aGlzLCBzaWduYWxpbmcsIHRyYWNrLCB1bnB1Ymxpc2gsIG9wdGlvbnMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2NhbEF1ZGlvVHJhY2tQdWJsaWNhdGlvbiwgW3tcbiAgICBrZXk6ICd0b1N0cmluZycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuICdbTG9jYWxBdWRpb1RyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvY2FsQXVkaW9UcmFja1B1YmxpY2F0aW9uO1xufShMb2NhbFRyYWNrUHVibGljYXRpb24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsQXVkaW9UcmFja1B1YmxpY2F0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localaudiotrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localdatatrack.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localdatatrack.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Track = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/media/track/index.js\");\nvar DefaultDataTrackSender = __webpack_require__(/*! ../../data/sender */ \"./node_modules/twilio-video/es5/data/sender.js\");\n\n/**\n * A {@link LocalDataTrack} is a {@link Track} representing data that your\n * {@link LocalParticipant} can publish to a {@link Room}.\n * @extends Track\n * @property {Track.ID} id - The {@link LocalDataTrack}'s ID\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which the {@link LocalDataTrack} will send\n *   or re-send data if not acknowledged on the underlying RTCDataChannel(s).\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the {@link LocalDataTrack} will resend data if not successfully\n *   delivered on the underlying RTCDataChannel(s).\n * @property {boolean} ordered - true if data on the {@link LocalDataTrack} is\n *   guaranteed to be sent in order.\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of times the {@link LocalDataTrack} will attempt to send\n *   data, ensuring \"reliable\" transmission.\n * @example\n * var Video = require('twilio-video');\n *\n * var localDataTrack = new Video.LocalDataTrack();\n * window.addEventListener('mousemove', function(event) {\n *   localDataTrack.send(JSON.stringify({\n *     x: e.clientX,\n *     y: e.clientY\n *   }));\n * });\n *\n * var token1 = getAccessToken();\n * Video.connect(token1, {\n *   name: 'my-cool-room',\n *   tracks: [localDataTrack]\n * });\n *\n * var token2 = getAccessToken();\n * Video.connect(token2, {\n *   name: 'my-cool-room',\n *   tracks: []\n * }).then(function(room) {\n *   room.on('trackSubscribed', function(track) {\n *     track.on('message', function(message) {\n *       console.log(JSON.parse(message)); // { x: <number>, y: <number> }\n *     });\n *   });\n * });\n */\n\nvar LocalDataTrack = function (_Track) {\n  _inherits(LocalDataTrack, _Track);\n\n  /**\n   * Construct a {@link LocalDataTrack}.\n   * @param {LocalDataTrackOptions} [options] - {@link LocalDataTrack} options\n   */\n  function LocalDataTrack(options) {\n    _classCallCheck(this, LocalDataTrack);\n\n    options = Object.assign({\n      DataTrackSender: DefaultDataTrackSender,\n      maxPacketLifeTime: null,\n      maxRetransmits: null,\n      ordered: true\n    }, options);\n\n    var DataTrackSender = options.DataTrackSender;\n    var dataTrackSender = new DataTrackSender(options.maxPacketLifeTime, options.maxRetransmits, options.ordered);\n\n    var _this = _possibleConstructorReturn(this, (LocalDataTrack.__proto__ || Object.getPrototypeOf(LocalDataTrack)).call(this, dataTrackSender.id, 'data', options));\n\n    Object.defineProperties(_this, {\n      _trackSender: {\n        value: dataTrackSender\n      },\n      id: {\n        enumerable: true,\n        value: dataTrackSender.id\n      },\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: options.maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: options.maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: options.ordered\n      },\n      reliable: {\n        enumerable: true,\n        value: options.maxPacketLifeTime === null && options.maxRetransmits === null\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Send a message over the {@link LocalDataTrack}.\n   * @param {string|Blob|ArrayBuffer|ArrayBufferView} data\n   * @returns {void}\n   */\n\n\n  _createClass(LocalDataTrack, [{\n    key: 'send',\n    value: function send(data) {\n      this._trackSender.send(data);\n    }\n  }]);\n\n  return LocalDataTrack;\n}(Track);\n\n/**\n * {@link LocalDataTrack} options\n * @typedef {LocalTrackOptions} LocalDataTrackOptions\n * @property {?number} [maxPacketLifeTime=null] - Set this to limit the time\n *   (in milliseconds) during which the LocalDataTrack will send or re-send data\n *   if not successfully delivered on the underlying RTCDataChannel(s). It is an\n *   error to specify both this and <code>maxRetransmits</code>.\n * @property {?number} [maxRetransmits=null] - Set this to limit the number of\n *   times the {@link LocalDataTrack} will send or re-send data if not\n *   acknowledged on the underlying RTCDataChannel(s). It is an error to specify\n *   both this and <code>maxPacketLifeTime</code>.\n * @property {boolean} [ordered=true] - Set this to false to allow data on the\n *   LocalDataTrack to be sent out-of-order.\n */\n\nmodule.exports = LocalDataTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localdatatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localdatatrackpublication.js":
/*!********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localdatatrackpublication.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackPublication = __webpack_require__(/*! ./localtrackpublication */ \"./node_modules/twilio-video/es5/media/track/localtrackpublication.js\");\n\n/**\n * A {@link LocalDataTrackPublication} is a {@link LocalDataTrack} that has been\n * published to a {@link Room}.\n * @extends LocalTrackPublication\n * @property {Track.Kind} kind - \"data\"\n * @property {LocalDataTrack} track - the {@link LocalDataTrack}\n */\n\nvar LocalDataTrackPublication = function (_LocalTrackPublicatio) {\n  _inherits(LocalDataTrackPublication, _LocalTrackPublicatio);\n\n  /**\n   * Construct a {@link LocalDataTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalDataTrack} track - the {@link LocalDataTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *    that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication} options\n   */\n  function LocalDataTrackPublication(signaling, track, unpublish, options) {\n    _classCallCheck(this, LocalDataTrackPublication);\n\n    return _possibleConstructorReturn(this, (LocalDataTrackPublication.__proto__ || Object.getPrototypeOf(LocalDataTrackPublication)).call(this, signaling, track, unpublish, options));\n  }\n\n  _createClass(LocalDataTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalDataTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return LocalDataTrackPublication;\n}(LocalTrackPublication);\n\nmodule.exports = LocalDataTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9sb2NhbGRhdGF0cmFja3B1YmxpY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svbG9jYWxkYXRhdHJhY2twdWJsaWNhdGlvbi5qcz83NWVjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTG9jYWxUcmFja1B1YmxpY2F0aW9uID0gcmVxdWlyZSgnLi9sb2NhbHRyYWNrcHVibGljYXRpb24nKTtcblxuLyoqXG4gKiBBIHtAbGluayBMb2NhbERhdGFUcmFja1B1YmxpY2F0aW9ufSBpcyBhIHtAbGluayBMb2NhbERhdGFUcmFja30gdGhhdCBoYXMgYmVlblxuICogcHVibGlzaGVkIHRvIGEge0BsaW5rIFJvb219LlxuICogQGV4dGVuZHMgTG9jYWxUcmFja1B1YmxpY2F0aW9uXG4gKiBAcHJvcGVydHkge1RyYWNrLktpbmR9IGtpbmQgLSBcImRhdGFcIlxuICogQHByb3BlcnR5IHtMb2NhbERhdGFUcmFja30gdHJhY2sgLSB0aGUge0BsaW5rIExvY2FsRGF0YVRyYWNrfVxuICovXG5cbnZhciBMb2NhbERhdGFUcmFja1B1YmxpY2F0aW9uID0gZnVuY3Rpb24gKF9Mb2NhbFRyYWNrUHVibGljYXRpbykge1xuICBfaW5oZXJpdHMoTG9jYWxEYXRhVHJhY2tQdWJsaWNhdGlvbiwgX0xvY2FsVHJhY2tQdWJsaWNhdGlvKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIExvY2FsRGF0YVRyYWNrUHVibGljYXRpb259LlxuICAgKiBAcGFyYW0ge0xvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ30gc2lnbmFsaW5nIC0gVGhlIGNvcnJlc3BvbmRpbmdcbiAgICogICB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfVxuICAgKiBAcGFyYW0ge0xvY2FsRGF0YVRyYWNrfSB0cmFjayAtIHRoZSB7QGxpbmsgTG9jYWxEYXRhVHJhY2t9XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oTG9jYWxUcmFja1B1YmxpY2F0aW9uKTogdm9pZH0gdW5wdWJsaXNoIC0gVGhlIGNhbGxiYWNrXG4gICAqICAgIHRoYXQgdW5wdWJsaXNoZXMgdGhlIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb259XG4gICAqIEBwYXJhbSB7VHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9ufSBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBMb2NhbERhdGFUcmFja1B1YmxpY2F0aW9uKHNpZ25hbGluZywgdHJhY2ssIHVucHVibGlzaCwgb3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2NhbERhdGFUcmFja1B1YmxpY2F0aW9uKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTG9jYWxEYXRhVHJhY2tQdWJsaWNhdGlvbi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvY2FsRGF0YVRyYWNrUHVibGljYXRpb24pKS5jYWxsKHRoaXMsIHNpZ25hbGluZywgdHJhY2ssIHVucHVibGlzaCwgb3B0aW9ucykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExvY2FsRGF0YVRyYWNrUHVibGljYXRpb24sIFt7XG4gICAga2V5OiAndG9TdHJpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiAnW0xvY2FsRGF0YVRyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvY2FsRGF0YVRyYWNrUHVibGljYXRpb247XG59KExvY2FsVHJhY2tQdWJsaWNhdGlvbik7XG5cbm1vZHVsZS5leHBvcnRzID0gTG9jYWxEYXRhVHJhY2tQdWJsaWNhdGlvbjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localdatatrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localmediatrack.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localmediatrack.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint new-cap:0 */\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\"),\n    getUserMedia = _require.getUserMedia;\n\nvar _require2 = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require2.guessBrowser;\n\nvar _require3 = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    capitalize = _require3.capitalize,\n    defer = _require3.defer,\n    waitForSometime = _require3.waitForSometime,\n    waitForEvent = _require3.waitForEvent;\n\nvar _require4 = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    ILLEGAL_INVOKE = _require4.typeErrors.ILLEGAL_INVOKE;\n\nvar documentVisibilityMonitor = __webpack_require__(/*! ../../util/documentvisibilitymonitor.js */ \"./node_modules/twilio-video/es5/util/documentvisibilitymonitor.js\");\nvar gUMSilentTrackWorkaround = __webpack_require__(/*! ../../webaudio/workaround180748 */ \"./node_modules/twilio-video/es5/webaudio/workaround180748.js\");\nvar MediaTrackSender = __webpack_require__(/*! ./sender */ \"./node_modules/twilio-video/es5/media/track/sender.js\");\n\nfunction mixinLocalMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link LocalMediaTrack} represents audio or video that your\n   * {@link LocalParticipant} is sending to a {@link Room}. As such, it can be\n   * enabled and disabled with {@link LocalMediaTrack#enable} and\n   * {@link LocalMediaTrack#disable} or stopped completely with\n   * {@link LocalMediaTrack#stop}.\n   * @emits LocalMediaTrack#stopped\n   */\n  return function (_AudioOrVideoTrack) {\n    _inherits(LocalMediaTrack, _AudioOrVideoTrack);\n\n    /**\n     * Construct a {@link LocalMediaTrack} from a MediaStreamTrack.\n     * @param {MediaStreamTrack} mediaStreamTrack - The underlying MediaStreamTrack\n     * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\n     */\n    function LocalMediaTrack(mediaStreamTrack, options) {\n      _classCallCheck(this, LocalMediaTrack);\n\n      // NOTE(mpatwardhan): by default workaround for WebKitBug1208516 will be enabled on Safari browsers\n      // although the bug is seen  mainly on iOS devices, we do not have a reliable way to tell iOS from MacOs\n      // userAgent on iOS pretends its macOs if Safari is set to request desktop pages.\n      var workaroundWebKitBug1208516 = guessBrowser() === 'safari' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object' && typeof document.addEventListener === 'function' && typeof document.visibilityState === 'string';\n\n      options = Object.assign({\n        getUserMedia: getUserMedia,\n        isCreatedByCreateLocalTracks: false,\n        workaroundWebKitBug1208516: workaroundWebKitBug1208516,\n        gUMSilentTrackWorkaround: gUMSilentTrackWorkaround\n      }, options);\n\n      var mediaTrackSender = new MediaTrackSender(mediaStreamTrack);\n\n      var _this = _possibleConstructorReturn(this, (LocalMediaTrack.__proto__ || Object.getPrototypeOf(LocalMediaTrack)).call(this, mediaTrackSender, options));\n\n      Object.defineProperties(_this, {\n        _getUserMedia: {\n          value: options.getUserMedia\n        },\n        _gUMSilentTrackWorkaround: {\n          value: options.gUMSilentTrackWorkaround\n        },\n        _workaroundWebKitBug1208516Cleanup: {\n          value: null,\n          writable: true\n        },\n        _didCallEnd: {\n          value: false,\n          writable: true\n        },\n        _isCreatedByCreateLocalTracks: {\n          value: options.isCreatedByCreateLocalTracks\n        },\n        _trackSender: {\n          value: mediaTrackSender\n        },\n        id: {\n          enumerable: true,\n          value: mediaTrackSender.id\n        },\n        isEnabled: {\n          enumerable: true,\n          get: function get() {\n            return mediaTrackSender.enabled;\n          }\n        },\n        isStopped: {\n          enumerable: true,\n          get: function get() {\n            return mediaTrackSender.readyState === 'ended';\n          }\n        }\n      });\n\n      // NOTE(mpatwardhan): As a workaround for WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=208516,\n      // upon foregrounding, re-acquire new MediaStreamTrack if the existing one is ended or muted.\n      if (options.workaroundWebKitBug1208516) {\n        _this._workaroundWebKitBug1208516Cleanup = restartWhenInadvertentlyStopped(_this);\n      }\n      return _this;\n    }\n\n    /**\n     * @private\n     */\n\n\n    _createClass(LocalMediaTrack, [{\n      key: '_end',\n      value: function _end() {\n        if (this._didCallEnd) {\n          return;\n        }\n        _get(LocalMediaTrack.prototype.__proto__ || Object.getPrototypeOf(LocalMediaTrack.prototype), '_end', this).call(this);\n        this._didCallEnd = true;\n        this.emit('stopped', this);\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_initialize',\n      value: function _initialize() {\n        if (this._didCallEnd) {\n          this._didCallEnd = false;\n        }\n        _get(LocalMediaTrack.prototype.__proto__ || Object.getPrototypeOf(LocalMediaTrack.prototype), '_initialize', this).call(this);\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_reacquireTrack',\n      value: function _reacquireTrack(constraints) {\n        var getUserMedia = this._getUserMedia,\n            gUMSilentTrackWorkaround = this._gUMSilentTrackWorkaround,\n            log = this._log,\n            kind = this.mediaStreamTrack.kind;\n\n\n        log.info('Re-acquiring the MediaStreamTrack');\n        log.debug('Constraints:', constraints);\n\n        var gUMConstraints = Object.assign({\n          audio: false,\n          video: false\n        }, _defineProperty({}, kind, constraints));\n\n        var gUMPromise = this._workaroundWebKitBug1208516Cleanup ? gUMSilentTrackWorkaround(log, getUserMedia, gUMConstraints) : getUserMedia(gUMConstraints);\n\n        return gUMPromise.then(function (mediaStream) {\n          return mediaStream.getTracks()[0];\n        });\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_restart',\n      value: function _restart(constraints) {\n        var _this2 = this;\n\n        var log = this._log,\n            mediaStreamTrack = this.mediaStreamTrack;\n\n        constraints = constraints || mediaStreamTrack.getConstraints();\n        return this._reacquireTrack(constraints).catch(function (error) {\n          log.error('Failed to re-acquire the MediaStreamTrack:', error, constraints);\n          throw error;\n        }).then(function (newMediaStreamTrack) {\n          log.info('Re-acquired the MediaStreamTrack');\n          log.debug('MediaStreamTrack:', newMediaStreamTrack);\n          return _this2._setMediaStreamTrack(newMediaStreamTrack);\n        });\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_setMediaStreamTrack',\n      value: function _setMediaStreamTrack(mediaStreamTrack) {\n        var _this3 = this;\n\n        // NOTE(mpatwardhan): Preserve the value of the \"enabled\" flag.\n        mediaStreamTrack.enabled = this.mediaStreamTrack.enabled;\n\n        // NOTE(mmalavalli): Stop the current MediaStreamTrack. If not already\n        // stopped, this should fire a \"stopped\" event.\n        this._stop();\n\n        return this._trackSender.setMediaStreamTrack(mediaStreamTrack).catch(function (error) {\n          _this3._log.warn('setMediaStreamTrack failed:', error, mediaStreamTrack);\n        }).then(function () {\n          _this3._initialize();\n          _this3._getAllAttachedElements().forEach(function (el) {\n            return _this3._attach(el);\n          });\n        });\n      }\n\n      /**\n       * @private\n       */\n\n    }, {\n      key: '_stop',\n      value: function _stop() {\n        this.mediaStreamTrack.stop();\n        this._end();\n        return this;\n      }\n    }, {\n      key: 'enable',\n      value: function enable(enabled) {\n        enabled = typeof enabled === 'boolean' ? enabled : true;\n        if (enabled !== this.mediaStreamTrack.enabled) {\n          this._log.info((enabled ? 'En' : 'Dis') + 'abling');\n          this.mediaStreamTrack.enabled = enabled;\n          this.emit(enabled ? 'enabled' : 'disabled', this);\n        }\n        return this;\n      }\n    }, {\n      key: 'disable',\n      value: function disable() {\n        return this.enable(false);\n      }\n    }, {\n      key: 'restart',\n      value: function restart(constraints) {\n        var kind = this.kind;\n\n        if (!this._isCreatedByCreateLocalTracks) {\n          return Promise.reject(ILLEGAL_INVOKE('restart', 'can only be called on a' + (' Local' + capitalize(kind) + 'Track that is created using createLocalTracks') + (' or createLocal' + capitalize(kind) + 'Track.')));\n        }\n        return this._restart(constraints);\n      }\n    }, {\n      key: 'stop',\n      value: function stop() {\n        this._log.info('Stopping');\n        if (this._workaroundWebKitBug1208516Cleanup) {\n          this._workaroundWebKitBug1208516Cleanup();\n          this._workaroundWebKitBug1208516Cleanup = null;\n        }\n        return this._stop();\n      }\n    }]);\n\n    return LocalMediaTrack;\n  }(AudioOrVideoTrack);\n}\n\nfunction restartWhenInadvertentlyStopped(localMediaTrack) {\n  var mediaStreamTrack = localMediaTrack.mediaStreamTrack;\n\n  var trackChangeInProgress = null;\n\n  function shouldReacquireTrack() {\n    var _workaroundWebKitBug1208516Cleanup = localMediaTrack._workaroundWebKitBug1208516Cleanup,\n        isStopped = localMediaTrack.isStopped,\n        muted = localMediaTrack.mediaStreamTrack.muted;\n\n    var isInadvertentlyStopped = isStopped && !!_workaroundWebKitBug1208516Cleanup;\n    return document.visibilityState === 'visible' && (muted || isInadvertentlyStopped) && !trackChangeInProgress;\n  }\n\n  function handleTrackStateChange() {\n    return Promise.race([waitForEvent(mediaStreamTrack, 'unmute'), waitForSometime(50)]).then(function () {\n      if (shouldReacquireTrack()) {\n        trackChangeInProgress = defer();\n        localMediaTrack._restart().finally(function () {\n          mediaStreamTrack.removeEventListener('ended', handleTrackStateChange);\n          mediaStreamTrack = localMediaTrack.mediaStreamTrack;\n          mediaStreamTrack.addEventListener('ended', handleTrackStateChange);\n          trackChangeInProgress.resolve();\n          trackChangeInProgress = null;\n        });\n      }\n\n      // NOTE(mmalavalli): If the MediaStreamTrack ends before the DOM is visible,\n      // then this makes sure that visibility callback for phase 2 is called only\n      // after the MediaStreamTrack is re-acquired.\n      return trackChangeInProgress && trackChangeInProgress.promise;\n    });\n  }\n\n  // NOTE(mpatwardhan): listen for document visibility callback on phase 1.\n  // this ensures that any we acquire media tracks before RemoteMediaTrack\n  // tries to `play` them (in phase 2). This order is important because\n  // play can fail on safari if audio is not being captured.\n  documentVisibilityMonitor.onVisible(1, handleTrackStateChange);\n  mediaStreamTrack.addEventListener('ended', handleTrackStateChange);\n  return function () {\n    documentVisibilityMonitor.offVisible(1, handleTrackStateChange);\n    mediaStreamTrack.removeEventListener('ended', handleTrackStateChange);\n  };\n}\n\nmodule.exports = mixinLocalMediaTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localmediatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localtrackpublication.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localtrackpublication.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint new-cap:0 */\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackPublication = __webpack_require__(/*! ./trackpublication */ \"./node_modules/twilio-video/es5/media/track/trackpublication.js\");\n\nvar _require = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    E = _require.typeErrors,\n    trackPriority = _require.trackPriority;\n\n/**\n * A {@link LocalTrackPublication} is a {@link LocalTrack} that has been\n * published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isTrackEnabled - whether the published {@link LocalTrack}\n *   is enabled\n * @property {Track.Kind} kind - kind of the published {@link LocalTrack}\n * @property {Track.Priority} priority - the publish priority of the {@link LocalTrack}\n * @property {LocalTrack} track - the {@link LocalTrack}\n */\n\n\nvar LocalTrackPublication = function (_TrackPublication) {\n  _inherits(LocalTrackPublication, _TrackPublication);\n\n  /**\n   * Construct a {@link LocalTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalTrack} track - The {@link LocalTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *   that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication}\n   *   options\n   */\n  function LocalTrackPublication(signaling, track, unpublish, options) {\n    _classCallCheck(this, LocalTrackPublication);\n\n    var _this = _possibleConstructorReturn(this, (LocalTrackPublication.__proto__ || Object.getPrototypeOf(LocalTrackPublication)).call(this, track.name, signaling.sid, options));\n\n    Object.defineProperties(_this, {\n      _reemitTrackEvent: {\n        value: function value() {\n          return _this.emit(_this.isTrackEnabled ? 'trackEnabled' : 'trackDisabled');\n        }\n      },\n      _signaling: {\n        value: signaling\n      },\n      _unpublish: {\n        value: unpublish\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get: function get() {\n          return this.track.kind === 'data' ? true : this.track.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: track.kind\n      },\n      priority: {\n        enumerable: true,\n        get: function get() {\n          return signaling.updatedPriority;\n        }\n      },\n      track: {\n        enumerable: true,\n        value: track\n      }\n    });\n\n    track.on('disabled', _this._reemitTrackEvent);\n    track.on('enabled', _this._reemitTrackEvent);\n    return _this;\n  }\n\n  _createClass(LocalTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n\n    /**\n     * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n     * @param {Track.Priority} priority - the new {@link Track.priority}\n     * @returns {this}\n     * @throws {RangeError}\n     */\n\n  }, {\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      var priorityValues = Object.values(trackPriority);\n      if (!priorityValues.includes(priority)) {\n        throw E.INVALID_VALUE('priority', priorityValues);\n      }\n      this._signaling.setPriority(priority);\n      return this;\n    }\n\n    /**\n     * Unpublish a {@link LocalTrackPublication}. This means that the media\n     * from this {@link LocalTrackPublication} is no longer available to the\n     * {@link Room}'s {@link RemoteParticipant}s.\n     * @returns {this}\n     */\n\n  }, {\n    key: 'unpublish',\n    value: function unpublish() {\n      this.track.removeListener('disabled', this._reemitTrackEvent);\n      this.track.removeListener('enabled', this._reemitTrackEvent);\n      this._unpublish(this);\n      return this;\n    }\n  }]);\n\n  return LocalTrackPublication;\n}(TrackPublication);\n\nmodule.exports = LocalTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localtrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localvideotrack.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localvideotrack.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar mixinLocalMediaTrack = __webpack_require__(/*! ./localmediatrack */ \"./node_modules/twilio-video/es5/media/track/localmediatrack.js\");\nvar VideoTrack = __webpack_require__(/*! ./videotrack */ \"./node_modules/twilio-video/es5/media/track/videotrack.js\");\n\nvar LocalMediaVideoTrack = mixinLocalMediaTrack(VideoTrack);\n\n/**\n * A {@link LocalVideoTrack} is a {@link VideoTrack} representing video that\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\n * enabled and disabled with {@link LocalVideoTrack#enable} and\n * {@link LocalVideoTrack#disable} or stopped completely with\n * {@link LocalVideoTrack#stop}.\n * @extends VideoTrack\n * @property {Track.ID} id - The {@link LocalVideoTrack}'s ID\n * @property {boolean} isStopped - Whether or not the {@link LocalVideoTrack} is\n *   stopped\n * @emits LocalVideoTrack#disabled\n * @emits LocalVideoTrack#enabled\n * @emits LocalVideoTrack#started\n * @emits LocalVideoTrack#stopped\n */\n\nvar LocalVideoTrack = function (_LocalMediaVideoTrack) {\n  _inherits(LocalVideoTrack, _LocalMediaVideoTrack);\n\n  /**\n   * Construct a {@link LocalVideoTrack} from a MediaStreamTrack.\n   * @param {MediaStreamTrack} mediaStreamTrack - The underlying MediaStreamTrack\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\n   */\n  function LocalVideoTrack(mediaStreamTrack, options) {\n    _classCallCheck(this, LocalVideoTrack);\n\n    return _possibleConstructorReturn(this, (LocalVideoTrack.__proto__ || Object.getPrototypeOf(LocalVideoTrack)).call(this, mediaStreamTrack, options));\n  }\n\n  _createClass(LocalVideoTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalVideoTrack #' + this._instanceId + ': ' + this.id + ']';\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), '_end', this).apply(this, arguments);\n    }\n\n    /**\n     * Disable the {@link LocalVideoTrack}. This is effectively \"pause\".\n     * @returns {this}\n     * @fires VideoTrack#disabled\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'disable', this).apply(this, arguments);\n    }\n\n    /**\n     * Enable the {@link LocalVideoTrack}. This is effectively \"unpause\".\n     * @returns {this}\n     * @fires VideoTrack#enabled\n    */ /**\n       * Enable or disable the {@link LocalVideoTrack}. This is effectively \"unpause\"\n       * or \"pause\".\n       * @param {boolean} [enabled] - Specify false to pause the\n       *   {@link LocalVideoTrack}\n       * @returns {this}\n       * @fires VideoTrack#disabled\n       * @fires VideoTrack#enabled\n       */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'enable', this).apply(this, arguments);\n    }\n\n    /**\n     * Restart the {@link LocalVideoTrack}. This stops the existing MediaStreamTrack\n     * and creates a new MediaStreamTrack. If the {@link LocalVideoTrack} is being published\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\n     * the {@link LocalVideoTrack}'s ID is no longer guaranteed to be the same as the\n     * underlying MediaStreamTrack's ID.\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n     *   for restarting the {@link LocalVideoTrack}; If not specified, then the current MediaTrackConstraints\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\n     *   will be used\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalVideoTrack} was not created\n     *   using an one of <code>createLocalVideoTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\n     *   raised by <code>getUserMedia</code> when it fails\n     * @fires LocalVideoTrack#stopped\n     * @fires LocalVideoTrack#started\n     * @example\n     * const { connect, createLocalVideoTrack } = require('twilio-video');\n     *\n     * // Create a LocalVideoTrack that captures video from the front-facing camera.\n     * createLocalVideoTrack({ facingMode: 'user' }).then(function(localVideoTrack) {\n     *   return connect('token', {\n     *     name: 'my-cool-room',\n     *     tracks: [localVideoTrack]\n     *   });\n     * }).then(function(room) {\n     *   // Restart the LocalVideoTrack to capture video from the back-facing camera.\n     *   const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     *   return localVideoTrack.restart({ facingMode: 'environment' });\n     * });\n     */\n\n  }, {\n    key: 'restart',\n    value: function restart() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'restart', this).apply(this, arguments);\n    }\n\n    /**\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\n     * {@link LocalVideoTrack}, you should unpublish it after stopping.\n     * @returns {this}\n     * @fires LocalVideoTrack#stopped\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'stop', this).apply(this, arguments);\n    }\n  }]);\n\n  return LocalVideoTrack;\n}(LocalMediaVideoTrack);\n\n/**\n * The {@link LocalVideoTrack} was disabled, i.e. \"muted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was\n *   disabled\n * @event LocalVideoTrack#disabled\n */\n\n/**\n * The {@link LocalVideoTrack} was enabled, i.e. \"unmuted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was enabled\n * @event LocalVideoTrack#enabled\n */\n\n/**\n * The {@link LocalVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that started\n * @event LocalVideoTrack#started\n */\n\n/**\n * The {@link LocalVideoTrack} stopped, either because {@link LocalVideoTrack#stop}\n * or {@link LocalVideoTrack#restart} was called or because the underlying\n * MediaStreamTrack ended.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that stopped\n * @event LocalVideoTrack#stopped\n */\n\nmodule.exports = LocalVideoTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localvideotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/localvideotrackpublication.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/localvideotrackpublication.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackPublication = __webpack_require__(/*! ./localtrackpublication */ \"./node_modules/twilio-video/es5/media/track/localtrackpublication.js\");\n\n/**\n * A {@link LocalVideoTrackPublication} is a {@link LocalVideoTrack} that has\n * been published to a {@link Room}.\n * @extends LocalTrackPublication\n * @property {Track.Kind} kind - \"video\"\n * @property {LocalVideoTrack} track - the {@link LocalVideoTrack}\n */\n\nvar LocalVideoTrackPublication = function (_LocalTrackPublicatio) {\n  _inherits(LocalVideoTrackPublication, _LocalTrackPublicatio);\n\n  /**\n   * Construct a {@link LocalVideoTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalVideoTrack} track - the {@link LocalVideoTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *    that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication} options\n   */\n  function LocalVideoTrackPublication(signaling, track, unpublish, options) {\n    _classCallCheck(this, LocalVideoTrackPublication);\n\n    return _possibleConstructorReturn(this, (LocalVideoTrackPublication.__proto__ || Object.getPrototypeOf(LocalVideoTrackPublication)).call(this, signaling, track, unpublish, options));\n  }\n\n  _createClass(LocalVideoTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalVideoTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return LocalVideoTrackPublication;\n}(LocalTrackPublication);\n\nmodule.exports = LocalVideoTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9sb2NhbHZpZGVvdHJhY2twdWJsaWNhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL2xvY2FsdmlkZW90cmFja3B1YmxpY2F0aW9uLmpzPzJjNTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBMb2NhbFRyYWNrUHVibGljYXRpb24gPSByZXF1aXJlKCcuL2xvY2FsdHJhY2twdWJsaWNhdGlvbicpO1xuXG4vKipcbiAqIEEge0BsaW5rIExvY2FsVmlkZW9UcmFja1B1YmxpY2F0aW9ufSBpcyBhIHtAbGluayBMb2NhbFZpZGVvVHJhY2t9IHRoYXQgaGFzXG4gKiBiZWVuIHB1Ymxpc2hlZCB0byBhIHtAbGluayBSb29tfS5cbiAqIEBleHRlbmRzIExvY2FsVHJhY2tQdWJsaWNhdGlvblxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kIC0gXCJ2aWRlb1wiXG4gKiBAcHJvcGVydHkge0xvY2FsVmlkZW9UcmFja30gdHJhY2sgLSB0aGUge0BsaW5rIExvY2FsVmlkZW9UcmFja31cbiAqL1xuXG52YXIgTG9jYWxWaWRlb1RyYWNrUHVibGljYXRpb24gPSBmdW5jdGlvbiAoX0xvY2FsVHJhY2tQdWJsaWNhdGlvKSB7XG4gIF9pbmhlcml0cyhMb2NhbFZpZGVvVHJhY2tQdWJsaWNhdGlvbiwgX0xvY2FsVHJhY2tQdWJsaWNhdGlvKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIExvY2FsVmlkZW9UcmFja1B1YmxpY2F0aW9ufS5cbiAgICogQHBhcmFtIHtMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IHNpZ25hbGluZyAtIFRoZSBjb3JyZXNwb25kaW5nXG4gICAqICAge0BsaW5rIExvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ31cbiAgICogQHBhcmFtIHtMb2NhbFZpZGVvVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBMb2NhbFZpZGVvVHJhY2t9XG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oTG9jYWxUcmFja1B1YmxpY2F0aW9uKTogdm9pZH0gdW5wdWJsaXNoIC0gVGhlIGNhbGxiYWNrXG4gICAqICAgIHRoYXQgdW5wdWJsaXNoZXMgdGhlIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb259XG4gICAqIEBwYXJhbSB7VHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9ufSBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBMb2NhbFZpZGVvVHJhY2tQdWJsaWNhdGlvbihzaWduYWxpbmcsIHRyYWNrLCB1bnB1Ymxpc2gsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9jYWxWaWRlb1RyYWNrUHVibGljYXRpb24pO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMb2NhbFZpZGVvVHJhY2tQdWJsaWNhdGlvbi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvY2FsVmlkZW9UcmFja1B1YmxpY2F0aW9uKSkuY2FsbCh0aGlzLCBzaWduYWxpbmcsIHRyYWNrLCB1bnB1Ymxpc2gsIG9wdGlvbnMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2NhbFZpZGVvVHJhY2tQdWJsaWNhdGlvbiwgW3tcbiAgICBrZXk6ICd0b1N0cmluZycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuICdbTG9jYWxWaWRlb1RyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvY2FsVmlkZW9UcmFja1B1YmxpY2F0aW9uO1xufShMb2NhbFRyYWNrUHVibGljYXRpb24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsVmlkZW9UcmFja1B1YmxpY2F0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/localvideotrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/mediatrack.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/mediatrack.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaStream = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\").MediaStream;\nvar Track = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/media/track/index.js\");\n\n/**\n * A {@link MediaTrack} represents audio or video that can be sent to or\n * received from a {@link Room}.\n * @extends Track\n * @property {Track.ID} id - This {@link Track}'s ID\n * @property {boolean} isStarted - Whether or not the {@link MediaTrack} has\n *   started\n * @property {boolean} isEnabled - Whether or not the {@link MediaTrack} is\n *   enabled (i.e., whether it is paused or muted)\n * @property {Track.Kind} kind - The kind of the underlying\n *   MediaStreamTrack, \"audio\" or \"video\"\n * @property {MediaStreamTrack} mediaStreamTrack - The underlying\n *   MediaStreamTrack\n * @emits MediaTrack#disabled\n * @emits MediaTrack#enabled\n * @emits MediaTrack#started\n */\n\nvar MediaTrack = function (_Track) {\n  _inherits(MediaTrack, _Track);\n\n  /**\n   * Construct a {@link MediaTrack}.\n   * @param {MediaTrackTransceiver} mediaTrackTransceiver\n   * @param {{log: Log}} options\n   */\n  function MediaTrack(mediaTrackTransceiver, options) {\n    _classCallCheck(this, MediaTrack);\n\n    var _this = _possibleConstructorReturn(this, (MediaTrack.__proto__ || Object.getPrototypeOf(MediaTrack)).call(this, mediaTrackTransceiver.id, mediaTrackTransceiver.kind, options));\n\n    var isStarted = false;\n\n    options = Object.assign({\n      MediaStream: MediaStream\n    }, options);\n\n    /* istanbul ignore next */\n    Object.defineProperties(_this, {\n      _attachments: {\n        value: new Set()\n      },\n      _dummyEl: {\n        value: null,\n        writable: true\n      },\n      _isStarted: {\n        get: function get() {\n          return isStarted;\n        },\n        set: function set(_isStarted) {\n          isStarted = _isStarted;\n        }\n      },\n      _MediaStream: {\n        value: options.MediaStream\n      },\n      isStarted: {\n        enumerable: true,\n        get: function get() {\n          return isStarted;\n        }\n      },\n      mediaStreamTrack: {\n        enumerable: true,\n        get: function get() {\n          return mediaTrackTransceiver.track;\n        }\n      }\n    });\n\n    _this._initialize();\n    return _this;\n  }\n\n  /**\n   * @private\n   */\n\n\n  _createClass(MediaTrack, [{\n    key: '_start',\n    value: function _start() {\n      this._log.debug('Started');\n      this._isStarted = true;\n      if (this._dummyEl) {\n        this._dummyEl.oncanplay = null;\n      }\n      // eslint-disable-next-line no-use-before-define\n      this.emit('started', this);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_initialize',\n    value: function _initialize() {\n      var self = this;\n\n      this._log.debug('Initializing');\n      this._dummyEl = this._createElement();\n\n      this.mediaStreamTrack.addEventListener('ended', function onended() {\n        self._end();\n        self.mediaStreamTrack.removeEventListener('ended', onended);\n      });\n\n      if (this._dummyEl) {\n        this._dummyEl.muted = true;\n        this._dummyEl.oncanplay = this._start.bind(this, this._dummyEl);\n        this._attach(this._dummyEl);\n        this._attachments.delete(this._dummyEl);\n      }\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      this._log.debug('Ended');\n      if (this._dummyEl) {\n        this._detachElement(this._dummyEl);\n        this._dummyEl.oncanplay = null;\n      }\n    }\n  }, {\n    key: 'attach',\n    value: function attach(el) {\n      if (typeof el === 'string') {\n        el = this._selectElement(el);\n      } else if (!el) {\n        el = this._createElement();\n      }\n      this._log.debug('Attempting to attach to element:', el);\n      el = this._attach(el);\n\n      return el;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_attach',\n    value: function _attach(el) {\n      var mediaStream = el.srcObject;\n      if (!(mediaStream instanceof this._MediaStream)) {\n        mediaStream = new this._MediaStream();\n      }\n\n      var getTracks = this.mediaStreamTrack.kind === 'audio' ? 'getAudioTracks' : 'getVideoTracks';\n\n      mediaStream[getTracks]().forEach(function (mediaStreamTrack) {\n        mediaStream.removeTrack(mediaStreamTrack);\n      });\n      mediaStream.addTrack(this.mediaStreamTrack);\n\n      // NOTE(mpatwardhan): resetting `srcObject` here, causes flicker (JSDK-2641), but it lets us\n      // to sidestep the a chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=1052353\n      //\n      el.srcObject = mediaStream;\n      el.autoplay = true;\n      el.playsInline = true;\n\n      if (!this._attachments.has(el)) {\n        this._attachments.add(el);\n      }\n\n      return el;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_selectElement',\n    value: function _selectElement(selector) {\n      var el = document.querySelector(selector);\n\n      if (!el) {\n        throw new Error('Selector matched no element: ' + selector);\n      }\n\n      return el;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_createElement',\n    value: function _createElement() {\n      return typeof document !== 'undefined' ? document.createElement(this.kind) : null;\n    }\n  }, {\n    key: 'detach',\n    value: function detach(el) {\n      var els = void 0;\n\n      if (typeof el === 'string') {\n        els = [this._selectElement(el)];\n      } else if (!el) {\n        els = this._getAllAttachedElements();\n      } else {\n        els = [el];\n      }\n\n      this._log.debug('Attempting to detach from elements:', els);\n      this._detachElements(els);\n      return el ? els[0] : els;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_detachElements',\n    value: function _detachElements(elements) {\n      return elements.map(this._detachElement.bind(this));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_detachElement',\n    value: function _detachElement(el) {\n      if (!this._attachments.has(el)) {\n        return el;\n      }\n\n      var mediaStream = el.srcObject;\n      if (mediaStream instanceof this._MediaStream) {\n        mediaStream.removeTrack(this.mediaStreamTrack);\n      }\n\n      this._attachments.delete(el);\n      return el;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getAllAttachedElements',\n    value: function _getAllAttachedElements() {\n      var els = [];\n\n      this._attachments.forEach(function (el) {\n        els.push(el);\n      });\n\n      return els;\n    }\n  }]);\n\n  return MediaTrack;\n}(Track);\n\nmodule.exports = MediaTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/mediatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/receiver.js":
/*!***************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/receiver.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaTrackTransceiver = __webpack_require__(/*! ./transceiver */ \"./node_modules/twilio-video/es5/media/track/transceiver.js\");\n\n/**\n * A {@link MediaTrackReceiver} represents a remote MediaStreamTrack.\n * @extends MediaTrackTransceiver\n */\n\nvar MediaTrackReceiver = function (_MediaTrackTransceive) {\n  _inherits(MediaTrackReceiver, _MediaTrackTransceive);\n\n  /**\n   * Construct a {@link MediaTrackReceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack - The remote MediaStreamTrack\n   */\n  function MediaTrackReceiver(id, mediaStreamTrack) {\n    _classCallCheck(this, MediaTrackReceiver);\n\n    return _possibleConstructorReturn(this, (MediaTrackReceiver.__proto__ || Object.getPrototypeOf(MediaTrackReceiver)).call(this, id, mediaStreamTrack));\n  }\n\n  return MediaTrackReceiver;\n}(MediaTrackTransceiver);\n\nmodule.exports = MediaTrackReceiver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZWNlaXZlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL3JlY2VpdmVyLmpzP2VkYjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBNZWRpYVRyYWNrVHJhbnNjZWl2ZXIgPSByZXF1aXJlKCcuL3RyYW5zY2VpdmVyJyk7XG5cbi8qKlxuICogQSB7QGxpbmsgTWVkaWFUcmFja1JlY2VpdmVyfSByZXByZXNlbnRzIGEgcmVtb3RlIE1lZGlhU3RyZWFtVHJhY2suXG4gKiBAZXh0ZW5kcyBNZWRpYVRyYWNrVHJhbnNjZWl2ZXJcbiAqL1xuXG52YXIgTWVkaWFUcmFja1JlY2VpdmVyID0gZnVuY3Rpb24gKF9NZWRpYVRyYWNrVHJhbnNjZWl2ZSkge1xuICBfaW5oZXJpdHMoTWVkaWFUcmFja1JlY2VpdmVyLCBfTWVkaWFUcmFja1RyYW5zY2VpdmUpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTWVkaWFUcmFja1JlY2VpdmVyfS5cbiAgICogQHBhcmFtIHtUcmFjay5JRH0gaWQgLSBUaGUgTWVkaWFTdHJlYW1UcmFjayBJRCBzaWduYWxlZCB0aHJvdWdoIFJTUC9TRFBcbiAgICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfSBtZWRpYVN0cmVhbVRyYWNrIC0gVGhlIHJlbW90ZSBNZWRpYVN0cmVhbVRyYWNrXG4gICAqL1xuICBmdW5jdGlvbiBNZWRpYVRyYWNrUmVjZWl2ZXIoaWQsIG1lZGlhU3RyZWFtVHJhY2spIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVkaWFUcmFja1JlY2VpdmVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTWVkaWFUcmFja1JlY2VpdmVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTWVkaWFUcmFja1JlY2VpdmVyKSkuY2FsbCh0aGlzLCBpZCwgbWVkaWFTdHJlYW1UcmFjaykpO1xuICB9XG5cbiAgcmV0dXJuIE1lZGlhVHJhY2tSZWNlaXZlcjtcbn0oTWVkaWFUcmFja1RyYW5zY2VpdmVyKTtcblxubW9kdWxlLmV4cG9ydHMgPSBNZWRpYVRyYWNrUmVjZWl2ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/receiver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remoteaudiotrack.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remoteaudiotrack.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AudioTrack = __webpack_require__(/*! ./audiotrack */ \"./node_modules/twilio-video/es5/media/track/audiotrack.js\");\nvar mixinRemoteMediaTrack = __webpack_require__(/*! ./remotemediatrack */ \"./node_modules/twilio-video/es5/media/track/remotemediatrack.js\");\n\nvar RemoteMediaAudioTrack = mixinRemoteMediaTrack(AudioTrack);\n\n/**\n * A {@link RemoteAudioTrack} represents an {@link AudioTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends AudioTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteAudioTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteAudioTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteAudioTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteAudioTrack}\n * @emits RemoteAudioTrack#disabled\n * @emits RemoteAudioTrack#enabled\n * @emits RemoteAudioTrack#started\n * @emits RemoteAudioTrack#switchedOff\n * @emits RemoteAudioTrack#switchedOn\n */\n\nvar RemoteAudioTrack = function (_RemoteMediaAudioTrac) {\n  _inherits(RemoteAudioTrack, _RemoteMediaAudioTrac);\n\n  /**\n   * Construct a {@link RemoteAudioTrack}.\n   * @param {Track.SID} sid - The {@link RemoteAudioTrack}'s SID\n   * @param {MediaTrackReceiver} mediaTrackReceiver - An audio MediaStreamTrack container\n   * @param {boolean} isEnabled - Whether the {@link RemoteAudioTrack} is enabled\n   * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n   *  {@link Track.Priority} of the {@link RemoteAudioTrack}\n   * @param {{log: Log}} options - The {@link RemoteTrack} options\n   */\n  function RemoteAudioTrack(sid, mediaTrackReceiver, isEnabled, setPriority, options) {\n    _classCallCheck(this, RemoteAudioTrack);\n\n    return _possibleConstructorReturn(this, (RemoteAudioTrack.__proto__ || Object.getPrototypeOf(RemoteAudioTrack)).call(this, sid, mediaTrackReceiver, isEnabled, setPriority, options));\n  }\n\n  _createClass(RemoteAudioTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteAudioTrack #' + this._instanceId + ': ' + this.sid + ']';\n    }\n\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteAudioTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   Currently setPriority has no effect on audio tracks.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n\n  }, {\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      return _get(RemoteAudioTrack.prototype.__proto__ || Object.getPrototypeOf(RemoteAudioTrack.prototype), 'setPriority', this).call(this, priority);\n    }\n  }]);\n\n  return RemoteAudioTrack;\n}(RemoteMediaAudioTrack);\n\n/**\n * The {@link RemoteAudioTrack} was disabled, i.e. \"muted\".\n * @param {RemoteAudioTrack} track - The {@link RemoteAudioTrack} that was\n *   disabled\n * @event RemoteAudioTrack#disabled\n */\n\n/**\n * The {@link RemoteAudioTrack} was enabled, i.e. \"unmuted\".\n * @param {RemoteAudioTrack} track - The {@link RemoteAudioTrack} that was\n *   enabled\n * @event RemoteAudioTrack#enabled\n */\n\n/**\n * The {@link RemoteAudioTrack} started. This means there is enough audio data\n * to begin playback.\n * @param {RemoteAudioTrack} track - The {@link RemoteAudioTrack} that started\n * @event RemoteAudioTrack#started\n */\n\n/**\n * A {@link RemoteAudioTrack} was switched off.\n * @param {RemoteAudioTrack} track - The {@link RemoteAudioTrack} that was\n *   switched off\n * @event RemoteAudioTrack#switchedOff\n */\n\n/**\n * A {@link RemoteAudioTrack} was switched on.\n * @param {RemoteAudioTrack} track - The {@link RemoteAudioTrack} that was\n *   switched on\n * @event RemoteAudioTrack#switchedOn\n */\n\nmodule.exports = RemoteAudioTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remoteaudiotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remoteaudiotrackpublication.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remoteaudiotrackpublication.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackPublication = __webpack_require__(/*! ./remotetrackpublication */ \"./node_modules/twilio-video/es5/media/track/remotetrackpublication.js\");\n\n/**\n * A {@link RemoteAudioTrackPublication} represents a {@link RemoteAudioTrack}\n * that has been published to a {@link Room}.\n * @property {Track.Kind} kind - \"audio\"\n * @property {?RemoteAudioTrack} track - unless you have subscribed to the\n *   {@link RemoteAudioTrack}, this property is null\n * @emits RemoteAudioTrackPublication#subscribed\n * @emits RemoteAudioTrackPublication#subscriptionFailed\n * @emits RemoteAudioTrackPublication#trackDisabled\n * @emits RemoteAudioTrackPublication#trackEnabled\n * @emits RemoteAudioTrackPublication#unsubscribed\n */\n\nvar RemoteAudioTrackPublication = function (_RemoteTrackPublicati) {\n  _inherits(RemoteAudioTrackPublication, _RemoteTrackPublicati);\n\n  /**\n   * Construct a {@link RemoteAudioTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  function RemoteAudioTrackPublication(signaling, options) {\n    _classCallCheck(this, RemoteAudioTrackPublication);\n\n    return _possibleConstructorReturn(this, (RemoteAudioTrackPublication.__proto__ || Object.getPrototypeOf(RemoteAudioTrackPublication)).call(this, signaling, options));\n  }\n\n  _createClass(RemoteAudioTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteAudioTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return RemoteAudioTrackPublication;\n}(RemoteTrackPublication);\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteAudioTrack}.\n * @param {RemoteAudioTrack} track - the {@link RemoteAudioTrack} that was subscribed to\n * @event RemoteAudioTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteAudioTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteAudioTrack} could not be\n *   subscribed to\n * @event RemoteAudioTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteAudioTrack} was disabled.\n * @event RemoteAudioTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteAudioTrack} was enabled.\n * @event RemoteAudioTrackPublication#trackEnabled\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteAudioTrack}.\n * @param {RemoteAudioTrack} track - the {@link RemoteAudioTrack} that was unsubscribed from\n * @event RemoteAudioTrackPublication#unsubscribed\n */\n\nmodule.exports = RemoteAudioTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGVhdWRpb3RyYWNrcHVibGljYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGVhdWRpb3RyYWNrcHVibGljYXRpb24uanM/ZjJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlbW90ZVRyYWNrUHVibGljYXRpb24gPSByZXF1aXJlKCcuL3JlbW90ZXRyYWNrcHVibGljYXRpb24nKTtcblxuLyoqXG4gKiBBIHtAbGluayBSZW1vdGVBdWRpb1RyYWNrUHVibGljYXRpb259IHJlcHJlc2VudHMgYSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja31cbiAqIHRoYXQgaGFzIGJlZW4gcHVibGlzaGVkIHRvIGEge0BsaW5rIFJvb219LlxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kIC0gXCJhdWRpb1wiXG4gKiBAcHJvcGVydHkgez9SZW1vdGVBdWRpb1RyYWNrfSB0cmFjayAtIHVubGVzcyB5b3UgaGF2ZSBzdWJzY3JpYmVkIHRvIHRoZVxuICogICB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja30sIHRoaXMgcHJvcGVydHkgaXMgbnVsbFxuICogQGVtaXRzIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKiBAZW1pdHMgUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9uI3N1YnNjcmlwdGlvbkZhaWxlZFxuICogQGVtaXRzIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0Rpc2FibGVkXG4gKiBAZW1pdHMgUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9uI3RyYWNrRW5hYmxlZFxuICogQGVtaXRzIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiN1bnN1YnNjcmliZWRcbiAqL1xuXG52YXIgUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9uID0gZnVuY3Rpb24gKF9SZW1vdGVUcmFja1B1YmxpY2F0aSkge1xuICBfaW5oZXJpdHMoUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9uLCBfUmVtb3RlVHJhY2tQdWJsaWNhdGkpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9ufS5cbiAgICogQHBhcmFtIHtSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfSBzaWduYWxpbmcgLSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbn0gc2lnbmFsaW5nXG4gICAqIEBwYXJhbSB7UmVtb3RlVHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbn1cbiAgICogICBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVBdWRpb1RyYWNrUHVibGljYXRpb24oc2lnbmFsaW5nLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbikpLmNhbGwodGhpcywgc2lnbmFsaW5nLCBvcHRpb25zKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9uLCBbe1xuICAgIGtleTogJ3RvU3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gJ1tSZW1vdGVBdWRpb1RyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbjtcbn0oUmVtb3RlVHJhY2tQdWJsaWNhdGlvbik7XG5cbi8qKlxuICogWW91ciB7QGxpbmsgTG9jYWxQYXJ0aWNpcGFudH0gc3Vic2NyaWJlZCB0byB0aGUge0BsaW5rIFJlbW90ZUF1ZGlvVHJhY2t9LlxuICogQHBhcmFtIHtSZW1vdGVBdWRpb1RyYWNrfSB0cmFjayAtIHRoZSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja30gdGhhdCB3YXMgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKi9cblxuLyoqXG4gKiBZb3VyIHtAbGluayBMb2NhbFBhcnRpY2lwYW50fSBmYWlsZWQgdG8gc3Vic2NyaWJlIHRvIHRoZSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja30uXG4gKiBAcGFyYW0ge1R3aWxpb0Vycm9yfSBlcnJvciAtIHRoZSByZWFzb24gdGhlIHtAbGluayBSZW1vdGVBdWRpb1RyYWNrfSBjb3VsZCBub3QgYmVcbiAqICAgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpcHRpb25GYWlsZWRcbiAqL1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja30gd2FzIGRpc2FibGVkLlxuICogQGV2ZW50IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0Rpc2FibGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZUF1ZGlvVHJhY2t9IHdhcyBlbmFibGVkLlxuICogQGV2ZW50IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0VuYWJsZWRcbiAqL1xuXG4vKipcbiAqIFlvdXIge0BsaW5rIExvY2FsUGFydGljaXBhbnR9IHVuc3Vic2NyaWJlZCBmcm9tIHRoZSB7QGxpbmsgUmVtb3RlQXVkaW9UcmFja30uXG4gKiBAcGFyYW0ge1JlbW90ZUF1ZGlvVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBSZW1vdGVBdWRpb1RyYWNrfSB0aGF0IHdhcyB1bnN1YnNjcmliZWQgZnJvbVxuICogQGV2ZW50IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbiN1bnN1YnNjcmliZWRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remoteaudiotrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotedatatrack.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotedatatrack.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Track = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/media/track/index.js\");\n\nvar _require = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    E = _require.typeErrors,\n    trackPriority = _require.trackPriority;\n\n/**\n * A {@link RemoteDataTrack} represents data published to a {@link Room} by a\n * {@link RemoteParticipant}.\n * @extends Track\n * @property {boolean} isEnabled - true\n * @property {boolean} isSubscribed - Whether the {@link RemoteDataTrack} is\n *   subscribed to\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteDataTrack} is\n *   switched off\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which data will be transmitted or\n *   retransmitted if not acknowledged on the underlying RTCDataChannel.\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the data will be retransmitted if not successfully received on the\n *   underlying RTCDataChannel.\n * @property {boolean} ordered - true if data on the {@link RemoteDataTrack} can\n *   be received out-of-order.\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteDataTrack}\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of retransmits that will be attempted, ensuring \"reliable\"\n *   transmission.\n * @property {Track.SID} sid - The SID assigned to the {@link RemoteDataTrack}\n * @emits RemoteDataTrack#message\n * @emits RemoteDataTrack#switchedOff\n * @emits RemoteDataTrack#switchedOn\n */\n\n\nvar RemoteDataTrack = function (_Track) {\n  _inherits(RemoteDataTrack, _Track);\n\n  /**\n   * Construct a {@link RemoteDataTrack} from a {@link DataTrackReceiver}.\n   * @param {Track.SID} sid\n   * @param {DataTrackReceiver} dataTrackReceiver\n   * @param {{log: Log, name: ?string}} options\n   */\n  function RemoteDataTrack(sid, dataTrackReceiver, options) {\n    _classCallCheck(this, RemoteDataTrack);\n\n    var _this = _possibleConstructorReturn(this, (RemoteDataTrack.__proto__ || Object.getPrototypeOf(RemoteDataTrack)).call(this, dataTrackReceiver.id, 'data', options));\n\n    Object.defineProperties(_this, {\n      _isSwitchedOff: {\n        value: false,\n        writable: true\n      },\n      _priority: {\n        value: null,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        value: true\n      },\n      isSwitchedOff: {\n        enumerable: true,\n        get: function get() {\n          return this._isSwitchedOff;\n        }\n      },\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: dataTrackReceiver.maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: dataTrackReceiver.ordered\n      },\n      priority: {\n        enumerable: true,\n        get: function get() {\n          return this._priority;\n        }\n      },\n      reliable: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime === null && dataTrackReceiver.maxRetransmits === null\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    dataTrackReceiver.on('message', function (data) {\n      _this.emit('message', data, _this);\n    });\n    return _this;\n  }\n\n  /**\n   * Update the subscriber {@link Track.Priority} of the {@link RemoteDataTrack}.\n   * @param {?Track.Priority} priority - the new {@link Track.priority};\n   *   Currently setPriority has no effect on data tracks.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n\n\n  _createClass(RemoteDataTrack, [{\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      var priorityValues = [null].concat(_toConsumableArray(Object.values(trackPriority)));\n      if (!priorityValues.includes(priority)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_VALUE('priority', priorityValues);\n      }\n\n      // Note: priority has no real effect on the data tracks.\n      this._priority = priority;\n      return this;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_setEnabled',\n    value: function _setEnabled() {}\n    // Do nothing.\n\n\n    /**\n     * @private\n     * @param {boolean} isSwitchedOff\n     */\n\n  }, {\n    key: '_setSwitchedOff',\n    value: function _setSwitchedOff(isSwitchedOff) {\n      if (this._isSwitchedOff !== isSwitchedOff) {\n        this._isSwitchedOff = isSwitchedOff;\n        this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n      }\n    }\n  }]);\n\n  return RemoteDataTrack;\n}(Track);\n\n/**\n * A message was received over the {@link RemoteDataTrack}.\n * @event RemoteDataTrack#message\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that received\n *   the message\n */\n\n/**\n * A {@link RemoteDataTrack} was switched off.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched off\n * @event RemoteDataTrack#switchedOff\n */\n\n/**\n * A {@link RemoteDataTrack} was switched on.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched on\n * @event RemoteDataTrack#switchedOn\n */\n\nmodule.exports = RemoteDataTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotedatatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotedatatrackpublication.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotedatatrackpublication.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackPublication = __webpack_require__(/*! ./remotetrackpublication */ \"./node_modules/twilio-video/es5/media/track/remotetrackpublication.js\");\n\n/**\n * A {@link RemoteDataTrackPublication} represents a {@link RemoteDataTrack}\n * that has been published to a {@link Room}.\n * @property {Track.Kind} kind - \"data\"\n * @property {?RemoteDataTrack} track - unless you have subscribed to the\n *   {@link RemoteDataTrack}, this property is null\n * @emits RemoteDataTrackPublication#subscribed\n * @emits RemoteDataTrackPublication#subscriptionFailed\n * @emits RemoteDataTrackPublication#unsubscribed\n */\n\nvar RemoteDataTrackPublication = function (_RemoteTrackPublicati) {\n  _inherits(RemoteDataTrackPublication, _RemoteTrackPublicati);\n\n  /**\n   * Construct a {@link RemoteDataTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  function RemoteDataTrackPublication(signaling, options) {\n    _classCallCheck(this, RemoteDataTrackPublication);\n\n    return _possibleConstructorReturn(this, (RemoteDataTrackPublication.__proto__ || Object.getPrototypeOf(RemoteDataTrackPublication)).call(this, signaling, options));\n  }\n\n  _createClass(RemoteDataTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteDataTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return RemoteDataTrackPublication;\n}(RemoteTrackPublication);\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteDataTrack}.\n * @param {RemoteDataTrack} track - the {@link RemoteDataTrack} that was subscribed to\n * @event RemoteDataTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteDataTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteDataTrack} could not be\n *   subscribed to\n * @event RemoteDataTrackPublication#subscriptionFailed\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteDataTrack}.\n * @param {RemoteDataTrack} track - the {@link RemoteDataTrack} that was unsubscribed from\n * @event RemoteDataTrackPublication#unsubscribed\n */\n\nmodule.exports = RemoteDataTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGVkYXRhdHJhY2twdWJsaWNhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL3JlbW90ZWRhdGF0cmFja3B1YmxpY2F0aW9uLmpzPzliY2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZW1vdGVUcmFja1B1YmxpY2F0aW9uID0gcmVxdWlyZSgnLi9yZW1vdGV0cmFja3B1YmxpY2F0aW9uJyk7XG5cbi8qKlxuICogQSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb259IHJlcHJlc2VudHMgYSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfVxuICogdGhhdCBoYXMgYmVlbiBwdWJsaXNoZWQgdG8gYSB7QGxpbmsgUm9vbX0uXG4gKiBAcHJvcGVydHkge1RyYWNrLktpbmR9IGtpbmQgLSBcImRhdGFcIlxuICogQHByb3BlcnR5IHs/UmVtb3RlRGF0YVRyYWNrfSB0cmFjayAtIHVubGVzcyB5b3UgaGF2ZSBzdWJzY3JpYmVkIHRvIHRoZVxuICogICB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfSwgdGhpcyBwcm9wZXJ0eSBpcyBudWxsXG4gKiBAZW1pdHMgUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb24jc3Vic2NyaWJlZFxuICogQGVtaXRzIFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uI3N1YnNjcmlwdGlvbkZhaWxlZFxuICogQGVtaXRzIFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uI3Vuc3Vic2NyaWJlZFxuICovXG5cbnZhciBSZW1vdGVEYXRhVHJhY2tQdWJsaWNhdGlvbiA9IGZ1bmN0aW9uIChfUmVtb3RlVHJhY2tQdWJsaWNhdGkpIHtcbiAgX2luaGVyaXRzKFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uLCBfUmVtb3RlVHJhY2tQdWJsaWNhdGkpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb259LlxuICAgKiBAcGFyYW0ge1JlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IHNpZ25hbGluZyAtIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9ufSBzaWduYWxpbmdcbiAgICogQHBhcmFtIHtSZW1vdGVUcmFja1B1YmxpY2F0aW9uT3B0aW9uc30gb3B0aW9ucyAtIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9ufVxuICAgKiAgIG9wdGlvbnNcbiAgICovXG4gIGZ1bmN0aW9uIFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uKHNpZ25hbGluZywgb3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZW1vdGVEYXRhVHJhY2tQdWJsaWNhdGlvbik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb24pKS5jYWxsKHRoaXMsIHNpZ25hbGluZywgb3B0aW9ucykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uLCBbe1xuICAgIGtleTogJ3RvU3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gJ1tSZW1vdGVEYXRhVHJhY2tQdWJsaWNhdGlvbiAjJyArIHRoaXMuX2luc3RhbmNlSWQgKyAnOiAnICsgdGhpcy50cmFja1NpZCArICddJztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb247XG59KFJlbW90ZVRyYWNrUHVibGljYXRpb24pO1xuXG4vKipcbiAqIFlvdXIge0BsaW5rIExvY2FsUGFydGljaXBhbnR9IHN1YnNjcmliZWQgdG8gdGhlIHtAbGluayBSZW1vdGVEYXRhVHJhY2t9LlxuICogQHBhcmFtIHtSZW1vdGVEYXRhVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBSZW1vdGVEYXRhVHJhY2t9IHRoYXQgd2FzIHN1YnNjcmliZWQgdG9cbiAqIEBldmVudCBSZW1vdGVEYXRhVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKi9cblxuLyoqXG4gKiBZb3VyIHtAbGluayBMb2NhbFBhcnRpY2lwYW50fSBmYWlsZWQgdG8gc3Vic2NyaWJlIHRvIHRoZSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfS5cbiAqIEBwYXJhbSB7VHdpbGlvRXJyb3J9IGVycm9yIC0gdGhlIHJlYXNvbiB0aGUge0BsaW5rIFJlbW90ZURhdGFUcmFja30gY291bGQgbm90IGJlXG4gKiAgIHN1YnNjcmliZWQgdG9cbiAqIEBldmVudCBSZW1vdGVEYXRhVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpcHRpb25GYWlsZWRcbiAqL1xuXG4vKipcbiAqIFlvdXIge0BsaW5rIExvY2FsUGFydGljaXBhbnR9IHVuc3Vic2NyaWJlZCBmcm9tIHRoZSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfS5cbiAqIEBwYXJhbSB7UmVtb3RlRGF0YVRyYWNrfSB0cmFjayAtIHRoZSB7QGxpbmsgUmVtb3RlRGF0YVRyYWNrfSB0aGF0IHdhcyB1bnN1YnNjcmliZWQgZnJvbVxuICogQGV2ZW50IFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9uI3Vuc3Vic2NyaWJlZFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVtb3RlRGF0YVRyYWNrUHVibGljYXRpb247Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotedatatrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotemediatrack.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotemediatrack.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    E = _require.typeErrors,\n    trackPriority = _require.trackPriority;\n\nvar _require2 = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require2.guessBrowser;\n\nvar documentVisibilityMonitor = __webpack_require__(/*! ../../util/documentvisibilitymonitor.js */ \"./node_modules/twilio-video/es5/util/documentvisibilitymonitor.js\");\n\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return function (_AudioOrVideoTrack) {\n    _inherits(RemoteMediaTrack, _AudioOrVideoTrack);\n\n    /**\n     * Construct a {@link RemoteMediaTrack}.\n     * @param {Track.SID} sid\n     * @param {MediaTrackReceiver} mediaTrackReceiver\n     * @param {boolean} isEnabled\n     * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n     *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n     * @param {{log: Log, name: ?string}} options\n     */\n    function RemoteMediaTrack(sid, mediaTrackReceiver, isEnabled, setPriority, options) {\n      _classCallCheck(this, RemoteMediaTrack);\n\n      // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n      // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n      // playing before safari lost foreground.\n      var _this = _possibleConstructorReturn(this, (RemoteMediaTrack.__proto__ || Object.getPrototypeOf(RemoteMediaTrack)).call(this, mediaTrackReceiver, options));\n\n      var workaroundWebKitBug212780 = guessBrowser() === 'safari' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object' && typeof document.addEventListener === 'function' && typeof document.visibilityState === 'string';\n\n      Object.defineProperties(_this, {\n        _isEnabled: {\n          value: isEnabled,\n          writable: true\n        },\n        _isSwitchedOff: {\n          value: false,\n          writable: true\n        },\n        _priority: {\n          value: null,\n          writable: true\n        },\n        _setPriority: {\n          value: setPriority\n        },\n        isEnabled: {\n          enumerable: true,\n          get: function get() {\n            return this._isEnabled;\n          }\n        },\n        isSwitchedOff: {\n          enumerable: true,\n          get: function get() {\n            return this._isSwitchedOff;\n          }\n        },\n        priority: {\n          enumerable: true,\n          get: function get() {\n            return this._priority;\n          }\n        },\n        sid: {\n          enumerable: true,\n          value: sid\n        },\n        _workaroundWebKitBug212780: {\n          value: workaroundWebKitBug212780\n        },\n        _workaroundWebKitBug212780Cleanup: {\n          value: null,\n          writable: true\n        }\n      });\n      return _this;\n    }\n\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n\n\n    _createClass(RemoteMediaTrack, [{\n      key: 'setPriority',\n      value: function setPriority(priority) {\n        var priorityValues = [null].concat(_toConsumableArray(Object.values(trackPriority)));\n        if (!priorityValues.includes(priority)) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_VALUE('priority', priorityValues);\n        }\n        if (this._priority !== priority) {\n          this._priority = priority;\n          this._setPriority(priority);\n        }\n        return this;\n      }\n\n      /**\n       * @private\n       * @param {boolean} isEnabled\n       */\n\n    }, {\n      key: '_setEnabled',\n      value: function _setEnabled(isEnabled) {\n        if (this._isEnabled !== isEnabled) {\n          this._isEnabled = isEnabled;\n          this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n        }\n      }\n\n      /**\n       * @private\n       * @param {boolean} isSwitchedOff\n       */\n\n    }, {\n      key: '_setSwitchedOff',\n      value: function _setSwitchedOff(isSwitchedOff) {\n        if (this._isSwitchedOff !== isSwitchedOff) {\n          this._isSwitchedOff = isSwitchedOff;\n          this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n        }\n      }\n    }, {\n      key: 'attach',\n      value: function attach(el) {\n        var result = _get(RemoteMediaTrack.prototype.__proto__ || Object.getPrototypeOf(RemoteMediaTrack.prototype), 'attach', this).call(this, el);\n        if (this.mediaStreamTrack.enabled !== true) {\n          // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n          // are no attachments to it (see notes below). Now that there\n          // are attachments re-enable the track.\n          this.mediaStreamTrack.enabled = true;\n        }\n        if (this._workaroundWebKitBug212780) {\n          this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup || playIfPausedWhileInBackground(this);\n          shimMediaElement(result);\n        }\n\n        return result;\n      }\n    }, {\n      key: 'detach',\n      value: function detach(el) {\n        var result = _get(RemoteMediaTrack.prototype.__proto__ || Object.getPrototypeOf(RemoteMediaTrack.prototype), 'detach', this).call(this, el);\n        if (this._workaroundWebKitBug212780) {\n          var elements = Array.isArray(result) ? result : [result];\n          elements.forEach(function (element) {\n            return removeShim(element);\n          });\n        }\n        if (this._attachments.size === 0) {\n          // NOTE(mpatwardhan): chrome continues playing webrtc audio\n          // track even after audio element is removed from the DOM.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n          // to workaround: here disable the track when\n          // there are no elements attached to it.\n          this.mediaStreamTrack.enabled = false;\n\n          if (this._workaroundWebKitBug212780Cleanup) {\n            // unhook visibility change\n            this._workaroundWebKitBug212780Cleanup();\n            this._workaroundWebKitBug212780Cleanup = null;\n          }\n        }\n        return result;\n      }\n    }]);\n\n    return RemoteMediaTrack;\n  }(AudioOrVideoTrack);\n}\n\nvar shimmedElements = new WeakMap();\n\nfunction removeShim(mediaElement) {\n  var el = shimmedElements.get(mediaElement);\n  if (el) {\n    el.unShim();\n    shimmedElements.delete(mediaElement);\n  }\n}\n\n/**\n * shims given media element to overwrites its play and paused methods.\n * overwritten methods call base method after keeping track of last call in `pausedIntentionally`\n * @param {HTMLAudioElement|HTMLVideoElement} mediaElement\n */\nfunction shimMediaElement(mediaElement) {\n  var realPlay = mediaElement.play;\n  var realPause = mediaElement.pause;\n  var pausedIntentionally = false;\n\n  mediaElement.play = function () {\n    pausedIntentionally = false;\n    return realPlay.call(mediaElement);\n  };\n\n  mediaElement.pause = function () {\n    pausedIntentionally = true;\n    return realPause.call(mediaElement);\n  };\n\n  var unShim = function unShim() {\n    mediaElement.play = realPlay;\n    mediaElement.pause = realPause;\n  };\n\n  var isPausedIntentionally = function isPausedIntentionally() {\n    return pausedIntentionally;\n  };\n  shimmedElements.set(mediaElement, { unShim: unShim, isPausedIntentionally: isPausedIntentionally });\n}\n\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  var log = remoteMediaTrack._log,\n      kind = remoteMediaTrack.kind;\n\n\n  function onVisibilityChanged() {\n    remoteMediaTrack._attachments.forEach(function (el) {\n      var shim = shimmedElements.get(el);\n      var isInadvertentlyPaused = el.paused && shim && !shim.isPausedIntentionally();\n      if (isInadvertentlyPaused) {\n        log.info('Playing inadvertently paused <' + kind + '> element');\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(function () {\n          log.info('Successfully played inadvertently paused <' + kind + '> element');\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(function (err) {\n          log.warn('Error while playing inadvertently paused <' + kind + '> element:', err, el, remoteMediaTrack);\n        });\n      }\n    });\n  }\n\n  // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n  documentVisibilityMonitor.onVisible(2, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisible(2, onVisibilityChanged);\n  };\n}\n\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n\nmodule.exports = mixinRemoteMediaTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotemediatrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotetrackpublication.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotetrackpublication.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackPublication = __webpack_require__(/*! ./trackpublication */ \"./node_modules/twilio-video/es5/media/track/trackpublication.js\");\n\n/**\n * A {@link RemoteTrackPublication} represents a {@link RemoteTrack} that has\n * been published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isSubscribed - whether the published {@link RemoteTrack}\n *   is subscribed to\n * @property {boolean} isTrackEnabled - whether the published\n *   {@link RemoteTrack} is enabled\n * @property {Track.Kind} kind - kind of the published {@link RemoteTrack}\n * @property {Track.Priority} publishPriority - the {@link Track.Priority} of the published\n *   {@link RemoteTrack} set by the {@link RemoteParticipant}\n * @property {?RemoteTrack} track - Unless you have subscribed to the\n *   {@link RemoteTrack}, this property is null\n * @emits RemoteTrackPublication#publishPriorityChanged\n * @emits RemoteTrackPublication#subscribed\n * @emits RemoteTrackPublication#subscriptionFailed\n * @emits RemoteTrackPublication#trackDisabled\n * @emits RemoteTrackPublication#trackEnabled\n * @emits RemoteTrackPublication#trackSwitchedOff\n * @emits RemoteTrackPublication#trackSwitchedOn\n * @emits RemoteTrackPublication#unsubscribed\n *\n */\n\nvar RemoteTrackPublication = function (_TrackPublication) {\n  _inherits(RemoteTrackPublication, _TrackPublication);\n\n  /**\n   * Construct a {@link RemoteTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  function RemoteTrackPublication(signaling, options) {\n    _classCallCheck(this, RemoteTrackPublication);\n\n    var _this = _possibleConstructorReturn(this, (RemoteTrackPublication.__proto__ || Object.getPrototypeOf(RemoteTrackPublication)).call(this, signaling.name, signaling.sid, options));\n\n    Object.defineProperties(_this, {\n      _signaling: {\n        value: signaling\n      },\n      _track: {\n        value: null,\n        writable: true\n      },\n      isSubscribed: {\n        enumerable: true,\n        get: function get() {\n          return !!this._track;\n        }\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get: function get() {\n          return signaling.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: signaling.kind\n      },\n      publishPriority: {\n        enumerable: true,\n        get: function get() {\n          return signaling.priority;\n        }\n      },\n      track: {\n        enumerable: true,\n        get: function get() {\n          return this._track;\n        }\n      }\n    });\n\n    // remember original state, and fire events only on change.\n    var error = signaling.error,\n        isEnabled = signaling.isEnabled,\n        isSwitchedOff = signaling.isSwitchedOff,\n        priority = signaling.priority;\n\n\n    signaling.on('updated', function () {\n      if (error !== signaling.error) {\n        error = signaling.error;\n        _this.emit('subscriptionFailed', signaling.error);\n        return;\n      }\n      if (isEnabled !== signaling.isEnabled) {\n        isEnabled = signaling.isEnabled;\n        if (_this.track) {\n          _this.track._setEnabled(signaling.isEnabled);\n        }\n        _this.emit(signaling.isEnabled ? 'trackEnabled' : 'trackDisabled');\n      }\n      if (isSwitchedOff !== signaling.isSwitchedOff) {\n        isSwitchedOff = signaling.isSwitchedOff;\n        if (_this.track) {\n          _this.track._setSwitchedOff(signaling.isSwitchedOff);\n          _this.emit(signaling.isSwitchedOff ? 'trackSwitchedOff' : 'trackSwitchedOn', _this.track);\n        }\n      }\n      if (priority !== signaling.priority) {\n        priority = signaling.priority;\n        _this.emit('publishPriorityChanged', priority);\n      }\n    });\n    return _this;\n  }\n\n  _createClass(RemoteTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrack} track\n     */\n\n  }, {\n    key: '_subscribed',\n    value: function _subscribed(track) {\n      if (!this._track && track) {\n        this._track = track;\n        this.emit('subscribed', track);\n      }\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe() {\n      if (this._track) {\n        var track = this._track;\n        this._track = null;\n        this.emit('unsubscribed', track);\n      }\n    }\n  }]);\n\n  return RemoteTrackPublication;\n}(TrackPublication);\n\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority}; RemoteTrackPublication#publishPriority is also\n *   updated accordingly\n * @event RemoteTrackPublication#publishPriorityChanged\n */\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was subscribed to\n * @event RemoteTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @event RemoteTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteTrack} was disabled.\n * @event RemoteTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteTrack} was enabled.\n * @event RemoteTrackPublication#trackEnabled\n */\n\n/**\n * The {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched off\n * @event RemoteTrackPublication#trackSwitchedOff\n */\n\n/**\n * The {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched on\n * @event RemoteTrackPublication#trackSwitchedOn\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteTrackPublication#unsubscribed\n */\n\n/**\n * {@link RemoteTrackPublication} options\n * @typedef {object} RemoteTrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\n\nmodule.exports = RemoteTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGV0cmFja3B1YmxpY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svcmVtb3RldHJhY2twdWJsaWNhdGlvbi5qcz9mODQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgVHJhY2tQdWJsaWNhdGlvbiA9IHJlcXVpcmUoJy4vdHJhY2twdWJsaWNhdGlvbicpO1xuXG4vKipcbiAqIEEge0BsaW5rIFJlbW90ZVRyYWNrUHVibGljYXRpb259IHJlcHJlc2VudHMgYSB7QGxpbmsgUmVtb3RlVHJhY2t9IHRoYXQgaGFzXG4gKiBiZWVuIHB1Ymxpc2hlZCB0byBhIHtAbGluayBSb29tfS5cbiAqIEBleHRlbmRzIFRyYWNrUHVibGljYXRpb25cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaXNTdWJzY3JpYmVkIC0gd2hldGhlciB0aGUgcHVibGlzaGVkIHtAbGluayBSZW1vdGVUcmFja31cbiAqICAgaXMgc3Vic2NyaWJlZCB0b1xuICogQHByb3BlcnR5IHtib29sZWFufSBpc1RyYWNrRW5hYmxlZCAtIHdoZXRoZXIgdGhlIHB1Ymxpc2hlZFxuICogICB7QGxpbmsgUmVtb3RlVHJhY2t9IGlzIGVuYWJsZWRcbiAqIEBwcm9wZXJ0eSB7VHJhY2suS2luZH0ga2luZCAtIGtpbmQgb2YgdGhlIHB1Ymxpc2hlZCB7QGxpbmsgUmVtb3RlVHJhY2t9XG4gKiBAcHJvcGVydHkge1RyYWNrLlByaW9yaXR5fSBwdWJsaXNoUHJpb3JpdHkgLSB0aGUge0BsaW5rIFRyYWNrLlByaW9yaXR5fSBvZiB0aGUgcHVibGlzaGVkXG4gKiAgIHtAbGluayBSZW1vdGVUcmFja30gc2V0IGJ5IHRoZSB7QGxpbmsgUmVtb3RlUGFydGljaXBhbnR9XG4gKiBAcHJvcGVydHkgez9SZW1vdGVUcmFja30gdHJhY2sgLSBVbmxlc3MgeW91IGhhdmUgc3Vic2NyaWJlZCB0byB0aGVcbiAqICAge0BsaW5rIFJlbW90ZVRyYWNrfSwgdGhpcyBwcm9wZXJ0eSBpcyBudWxsXG4gKiBAZW1pdHMgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiNwdWJsaXNoUHJpb3JpdHlDaGFuZ2VkXG4gKiBAZW1pdHMgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKiBAZW1pdHMgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpcHRpb25GYWlsZWRcbiAqIEBlbWl0cyBSZW1vdGVUcmFja1B1YmxpY2F0aW9uI3RyYWNrRGlzYWJsZWRcbiAqIEBlbWl0cyBSZW1vdGVUcmFja1B1YmxpY2F0aW9uI3RyYWNrRW5hYmxlZFxuICogQGVtaXRzIFJlbW90ZVRyYWNrUHVibGljYXRpb24jdHJhY2tTd2l0Y2hlZE9mZlxuICogQGVtaXRzIFJlbW90ZVRyYWNrUHVibGljYXRpb24jdHJhY2tTd2l0Y2hlZE9uXG4gKiBAZW1pdHMgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiN1bnN1YnNjcmliZWRcbiAqXG4gKi9cblxudmFyIFJlbW90ZVRyYWNrUHVibGljYXRpb24gPSBmdW5jdGlvbiAoX1RyYWNrUHVibGljYXRpb24pIHtcbiAgX2luaGVyaXRzKFJlbW90ZVRyYWNrUHVibGljYXRpb24sIF9UcmFja1B1YmxpY2F0aW9uKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFJlbW90ZVRyYWNrUHVibGljYXRpb259LlxuICAgKiBAcGFyYW0ge1JlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IHNpZ25hbGluZyAtIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9ufSBzaWduYWxpbmdcbiAgICogQHBhcmFtIHtSZW1vdGVUcmFja1B1YmxpY2F0aW9uT3B0aW9uc30gb3B0aW9ucyAtIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9ufVxuICAgKiAgIG9wdGlvbnNcbiAgICovXG4gIGZ1bmN0aW9uIFJlbW90ZVRyYWNrUHVibGljYXRpb24oc2lnbmFsaW5nLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZVRyYWNrUHVibGljYXRpb24pO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZVRyYWNrUHVibGljYXRpb24uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVUcmFja1B1YmxpY2F0aW9uKSkuY2FsbCh0aGlzLCBzaWduYWxpbmcubmFtZSwgc2lnbmFsaW5nLnNpZCwgb3B0aW9ucykpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIF9zaWduYWxpbmc6IHtcbiAgICAgICAgdmFsdWU6IHNpZ25hbGluZ1xuICAgICAgfSxcbiAgICAgIF90cmFjazoge1xuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBpc1N1YnNjcmliZWQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuICEhdGhpcy5fdHJhY2s7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpc1RyYWNrRW5hYmxlZDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gc2lnbmFsaW5nLmlzRW5hYmxlZDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGtpbmQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHNpZ25hbGluZy5raW5kXG4gICAgICB9LFxuICAgICAgcHVibGlzaFByaW9yaXR5OiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBzaWduYWxpbmcucHJpb3JpdHk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0cmFjazoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2s7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIHJlbWVtYmVyIG9yaWdpbmFsIHN0YXRlLCBhbmQgZmlyZSBldmVudHMgb25seSBvbiBjaGFuZ2UuXG4gICAgdmFyIGVycm9yID0gc2lnbmFsaW5nLmVycm9yLFxuICAgICAgICBpc0VuYWJsZWQgPSBzaWduYWxpbmcuaXNFbmFibGVkLFxuICAgICAgICBpc1N3aXRjaGVkT2ZmID0gc2lnbmFsaW5nLmlzU3dpdGNoZWRPZmYsXG4gICAgICAgIHByaW9yaXR5ID0gc2lnbmFsaW5nLnByaW9yaXR5O1xuXG5cbiAgICBzaWduYWxpbmcub24oJ3VwZGF0ZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoZXJyb3IgIT09IHNpZ25hbGluZy5lcnJvcikge1xuICAgICAgICBlcnJvciA9IHNpZ25hbGluZy5lcnJvcjtcbiAgICAgICAgX3RoaXMuZW1pdCgnc3Vic2NyaXB0aW9uRmFpbGVkJywgc2lnbmFsaW5nLmVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGlzRW5hYmxlZCAhPT0gc2lnbmFsaW5nLmlzRW5hYmxlZCkge1xuICAgICAgICBpc0VuYWJsZWQgPSBzaWduYWxpbmcuaXNFbmFibGVkO1xuICAgICAgICBpZiAoX3RoaXMudHJhY2spIHtcbiAgICAgICAgICBfdGhpcy50cmFjay5fc2V0RW5hYmxlZChzaWduYWxpbmcuaXNFbmFibGVkKTtcbiAgICAgICAgfVxuICAgICAgICBfdGhpcy5lbWl0KHNpZ25hbGluZy5pc0VuYWJsZWQgPyAndHJhY2tFbmFibGVkJyA6ICd0cmFja0Rpc2FibGVkJyk7XG4gICAgICB9XG4gICAgICBpZiAoaXNTd2l0Y2hlZE9mZiAhPT0gc2lnbmFsaW5nLmlzU3dpdGNoZWRPZmYpIHtcbiAgICAgICAgaXNTd2l0Y2hlZE9mZiA9IHNpZ25hbGluZy5pc1N3aXRjaGVkT2ZmO1xuICAgICAgICBpZiAoX3RoaXMudHJhY2spIHtcbiAgICAgICAgICBfdGhpcy50cmFjay5fc2V0U3dpdGNoZWRPZmYoc2lnbmFsaW5nLmlzU3dpdGNoZWRPZmYpO1xuICAgICAgICAgIF90aGlzLmVtaXQoc2lnbmFsaW5nLmlzU3dpdGNoZWRPZmYgPyAndHJhY2tTd2l0Y2hlZE9mZicgOiAndHJhY2tTd2l0Y2hlZE9uJywgX3RoaXMudHJhY2spO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocHJpb3JpdHkgIT09IHNpZ25hbGluZy5wcmlvcml0eSkge1xuICAgICAgICBwcmlvcml0eSA9IHNpZ25hbGluZy5wcmlvcml0eTtcbiAgICAgICAgX3RoaXMuZW1pdCgncHVibGlzaFByaW9yaXR5Q2hhbmdlZCcsIHByaW9yaXR5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiwgW3tcbiAgICBrZXk6ICd0b1N0cmluZycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuICdbUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiAjJyArIHRoaXMuX2luc3RhbmNlSWQgKyAnOiAnICsgdGhpcy50cmFja1NpZCArICddJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7UmVtb3RlVHJhY2t9IHRyYWNrXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ19zdWJzY3JpYmVkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3N1YnNjcmliZWQodHJhY2spIHtcbiAgICAgIGlmICghdGhpcy5fdHJhY2sgJiYgdHJhY2spIHtcbiAgICAgICAgdGhpcy5fdHJhY2sgPSB0cmFjaztcbiAgICAgICAgdGhpcy5lbWl0KCdzdWJzY3JpYmVkJywgdHJhY2spO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ191bnN1YnNjcmliZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF91bnN1YnNjcmliZSgpIHtcbiAgICAgIGlmICh0aGlzLl90cmFjaykge1xuICAgICAgICB2YXIgdHJhY2sgPSB0aGlzLl90cmFjaztcbiAgICAgICAgdGhpcy5fdHJhY2sgPSBudWxsO1xuICAgICAgICB0aGlzLmVtaXQoJ3Vuc3Vic2NyaWJlZCcsIHRyYWNrKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVtb3RlVHJhY2tQdWJsaWNhdGlvbjtcbn0oVHJhY2tQdWJsaWNhdGlvbik7XG5cbi8qKlxuICogVGhlIHtAbGluayBSZW1vdGVUcmFja30ncyBwdWJsaXNoIHtAbGluayBUcmFjay5Qcmlvcml0eX0gd2FzIGNoYW5nZWQgYnkgdGhlXG4gKiB7QGxpbmsgUmVtb3RlUGFydGljaXBhbnR9LlxuICogQHBhcmFtIHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHkgLSB0aGUge0BsaW5rIFJlbW90ZVRyYWNrfSdzIG5ldyBwdWJsaXNoXG4gKiAgIHtAbGluayBUcmFjay5Qcmlvcml0eX07IFJlbW90ZVRyYWNrUHVibGljYXRpb24jcHVibGlzaFByaW9yaXR5IGlzIGFsc29cbiAqICAgdXBkYXRlZCBhY2NvcmRpbmdseVxuICogQGV2ZW50IFJlbW90ZVRyYWNrUHVibGljYXRpb24jcHVibGlzaFByaW9yaXR5Q2hhbmdlZFxuICovXG5cbi8qKlxuICogWW91ciB7QGxpbmsgTG9jYWxQYXJ0aWNpcGFudH0gc3Vic2NyaWJlZCB0byB0aGUge0BsaW5rIFJlbW90ZVRyYWNrfS5cbiAqIEBwYXJhbSB7UmVtb3RlVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBSZW1vdGVUcmFja30gdGhhdCB3YXMgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZVRyYWNrUHVibGljYXRpb24jc3Vic2NyaWJlZFxuICovXG5cbi8qKlxuICogWW91ciB7QGxpbmsgTG9jYWxQYXJ0aWNpcGFudH0gZmFpbGVkIHRvIHN1YnNjcmliZSB0byB0aGUge0BsaW5rIFJlbW90ZVRyYWNrfS5cbiAqIEBwYXJhbSB7VHdpbGlvRXJyb3J9IGVycm9yIC0gdGhlIHJlYXNvbiB0aGUge0BsaW5rIFJlbW90ZVRyYWNrfSBjb3VsZCBub3QgYmVcbiAqICAgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZVRyYWNrUHVibGljYXRpb24jc3Vic2NyaXB0aW9uRmFpbGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVRyYWNrfSB3YXMgZGlzYWJsZWQuXG4gKiBAZXZlbnQgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiN0cmFja0Rpc2FibGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVRyYWNrfSB3YXMgZW5hYmxlZC5cbiAqIEBldmVudCBSZW1vdGVUcmFja1B1YmxpY2F0aW9uI3RyYWNrRW5hYmxlZFxuICovXG5cbi8qKlxuICogVGhlIHtAbGluayBSZW1vdGVUcmFja30gd2FzIHN3aXRjaGVkIG9mZi5cbiAqIEBwYXJhbSB7UmVtb3RlVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBSZW1vdGVUcmFja30gdGhhdCB3YXMgc3dpdGNoZWQgb2ZmXG4gKiBAZXZlbnQgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiN0cmFja1N3aXRjaGVkT2ZmXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVRyYWNrfSB3YXMgc3dpdGNoZWQgb24uXG4gKiBAcGFyYW0ge1JlbW90ZVRyYWNrfSB0cmFjayAtIHRoZSB7QGxpbmsgUmVtb3RlVHJhY2t9IHRoYXQgd2FzIHN3aXRjaGVkIG9uXG4gKiBAZXZlbnQgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbiN0cmFja1N3aXRjaGVkT25cbiAqL1xuXG4vKipcbiAqIFlvdXIge0BsaW5rIExvY2FsUGFydGljaXBhbnR9IHVuc3Vic2NyaWJlZCBmcm9tIHRoZSB7QGxpbmsgUmVtb3RlVHJhY2t9LlxuICogQHBhcmFtIHtSZW1vdGVUcmFja30gdHJhY2sgLSB0aGUge0BsaW5rIFJlbW90ZVRyYWNrfSB0aGF0IHdhcyB1bnN1YnNjcmliZWQgZnJvbVxuICogQGV2ZW50IFJlbW90ZVRyYWNrUHVibGljYXRpb24jdW5zdWJzY3JpYmVkXG4gKi9cblxuLyoqXG4gKiB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbn0gb3B0aW9uc1xuICogQHR5cGVkZWYge29iamVjdH0gUmVtb3RlVHJhY2tQdWJsaWNhdGlvbk9wdGlvbnNcbiAqIEBwcm9wZXJ0eSB7TG9nTGV2ZWx8TG9nTGV2ZWxzfSBsb2dMZXZlbCAtIExvZyBsZXZlbCBmb3IgJ21lZGlhJyBtb2R1bGVzXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZW1vdGVUcmFja1B1YmxpY2F0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotetrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotevideotrack.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotevideotrack.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar mixinRemoteMediaTrack = __webpack_require__(/*! ./remotemediatrack */ \"./node_modules/twilio-video/es5/media/track/remotemediatrack.js\");\nvar VideoTrack = __webpack_require__(/*! ./videotrack */ \"./node_modules/twilio-video/es5/media/track/videotrack.js\");\n\nvar RemoteMediaVideoTrack = mixinRemoteMediaTrack(VideoTrack);\n\n/**\n * A {@link RemoteVideoTrack} represents a {@link VideoTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends VideoTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteVideoTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteVideoTrack}\n * @emits RemoteVideoTrack#dimensionsChanged\n * @emits RemoteVideoTrack#disabled\n * @emits RemoteVideoTrack#enabled\n * @emits RemoteVideoTrack#started\n * @emits RemoteVideoTrack#switchedOff\n * @emits RemoteVideoTrack#switchedOn\n */\n\nvar RemoteVideoTrack = function (_RemoteMediaVideoTrac) {\n  _inherits(RemoteVideoTrack, _RemoteMediaVideoTrac);\n\n  /**\n   * Construct a {@link RemoteVideoTrack}.\n   * @param {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n   * @param {MediaTrackReceiver} mediaTrackReceiver - A video MediaStreamTrack container\n   * @param {boolean} isEnabled - whether the {@link RemoteVideoTrack} is enabled\n   * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n   *  {@link Track.Priority} of the {@link RemoteVideoTrack}\n   * @param {{log: Log}} options - The {@link RemoteTrack} options\n   */\n  function RemoteVideoTrack(sid, mediaTrackReceiver, isEnabled, setPriority, options) {\n    _classCallCheck(this, RemoteVideoTrack);\n\n    return _possibleConstructorReturn(this, (RemoteVideoTrack.__proto__ || Object.getPrototypeOf(RemoteVideoTrack)).call(this, sid, mediaTrackReceiver, isEnabled, setPriority, options));\n  }\n\n  _createClass(RemoteVideoTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteVideoTrack #' + this._instanceId + ': ' + this.sid + ']';\n    }\n\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteVideoTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n\n  }, {\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      return _get(RemoteVideoTrack.prototype.__proto__ || Object.getPrototypeOf(RemoteVideoTrack.prototype), 'setPriority', this).call(this, priority);\n    }\n  }]);\n\n  return RemoteVideoTrack;\n}(RemoteMediaVideoTrack);\n\n/**\n * The {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose\n *   dimensions changed\n * @event RemoteVideoTrack#dimensionsChanged\n */\n\n/**\n * The {@link RemoteVideoTrack} was disabled, i.e. \"paused\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   disabled\n * @event RemoteVideoTrack#disabled\n */\n\n/**\n * The {@link RemoteVideoTrack} was enabled, i.e. \"resumed\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   enabled\n * @event RemoteVideoTrack#enabled\n */\n\n/**\n * The {@link RemoteVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that started\n * @event RemoteVideoTrack#started\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched off.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched off\n * @event RemoteVideoTrack#switchedOff\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched on.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched on\n * @event RemoteVideoTrack#switchedOn\n */\n\nmodule.exports = RemoteVideoTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGV2aWRlb3RyYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svcmVtb3RldmlkZW90cmFjay5qcz8wZWNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBtaXhpblJlbW90ZU1lZGlhVHJhY2sgPSByZXF1aXJlKCcuL3JlbW90ZW1lZGlhdHJhY2snKTtcbnZhciBWaWRlb1RyYWNrID0gcmVxdWlyZSgnLi92aWRlb3RyYWNrJyk7XG5cbnZhciBSZW1vdGVNZWRpYVZpZGVvVHJhY2sgPSBtaXhpblJlbW90ZU1lZGlhVHJhY2soVmlkZW9UcmFjayk7XG5cbi8qKlxuICogQSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gcmVwcmVzZW50cyBhIHtAbGluayBWaWRlb1RyYWNrfSBwdWJsaXNoZWQgdG8gYVxuICoge0BsaW5rIFJvb219IGJ5IGEge0BsaW5rIFJlbW90ZVBhcnRpY2lwYW50fS5cbiAqIEBleHRlbmRzIFZpZGVvVHJhY2tcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaXNFbmFibGVkIC0gV2hldGhlciB0aGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IGlzIGVuYWJsZWRcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaXNTd2l0Y2hlZE9mZiAtIFdoZXRoZXIgdGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfSBpcyBzd2l0Y2hlZCBvZmZcbiAqIEBwcm9wZXJ0eSB7VHJhY2suU0lEfSBzaWQgLSBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9J3MgU0lEXG4gKiBAcHJvcGVydHkgez9UcmFjay5Qcmlvcml0eX0gcHJpb3JpdHkgLSBUaGUgc3Vic2NyaWJlIHByaW9yaXR5IG9mIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja31cbiAqIEBlbWl0cyBSZW1vdGVWaWRlb1RyYWNrI2RpbWVuc2lvbnNDaGFuZ2VkXG4gKiBAZW1pdHMgUmVtb3RlVmlkZW9UcmFjayNkaXNhYmxlZFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2sjZW5hYmxlZFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2sjc3RhcnRlZFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2sjc3dpdGNoZWRPZmZcbiAqIEBlbWl0cyBSZW1vdGVWaWRlb1RyYWNrI3N3aXRjaGVkT25cbiAqL1xuXG52YXIgUmVtb3RlVmlkZW9UcmFjayA9IGZ1bmN0aW9uIChfUmVtb3RlTWVkaWFWaWRlb1RyYWMpIHtcbiAgX2luaGVyaXRzKFJlbW90ZVZpZGVvVHJhY2ssIF9SZW1vdGVNZWRpYVZpZGVvVHJhYyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfS5cbiAgICogQHBhcmFtIHtUcmFjay5TSUR9IHNpZCAtIFRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30ncyBTSURcbiAgICogQHBhcmFtIHtNZWRpYVRyYWNrUmVjZWl2ZXJ9IG1lZGlhVHJhY2tSZWNlaXZlciAtIEEgdmlkZW8gTWVkaWFTdHJlYW1UcmFjayBjb250YWluZXJcbiAgICogQHBhcmFtIHtib29sZWFufSBpc0VuYWJsZWQgLSB3aGV0aGVyIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gaXMgZW5hYmxlZFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKD9UcmFjay5Qcmlvcml0eSk6IHZvaWR9IHNldFByaW9yaXR5IC0gU2V0IG9yIGNsZWFyIHRoZSBzdWJzY3JpYmVcbiAgICogIHtAbGluayBUcmFjay5Qcmlvcml0eX0gb2YgdGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfVxuICAgKiBAcGFyYW0ge3tsb2c6IExvZ319IG9wdGlvbnMgLSBUaGUge0BsaW5rIFJlbW90ZVRyYWNrfSBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVWaWRlb1RyYWNrKHNpZCwgbWVkaWFUcmFja1JlY2VpdmVyLCBpc0VuYWJsZWQsIHNldFByaW9yaXR5LCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZVZpZGVvVHJhY2spO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChSZW1vdGVWaWRlb1RyYWNrLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVtb3RlVmlkZW9UcmFjaykpLmNhbGwodGhpcywgc2lkLCBtZWRpYVRyYWNrUmVjZWl2ZXIsIGlzRW5hYmxlZCwgc2V0UHJpb3JpdHksIG9wdGlvbnMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhSZW1vdGVWaWRlb1RyYWNrLCBbe1xuICAgIGtleTogJ3RvU3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gJ1tSZW1vdGVWaWRlb1RyYWNrICMnICsgdGhpcy5faW5zdGFuY2VJZCArICc6ICcgKyB0aGlzLnNpZCArICddJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHN1YnNjcmliZSB7QGxpbmsgVHJhY2suUHJpb3JpdHl9IG9mIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30uXG4gICAgICogQHBhcmFtIHs/VHJhY2suUHJpb3JpdHl9IHByaW9yaXR5IC0gdGhlIG5ldyBzdWJzY3JpYmUge0BsaW5rIFRyYWNrLlByaW9yaXR5fTtcbiAgICAgKiAgIElmIDxjb2RlPm51bGw8L2NvZGU+LCB0aGVuIHRoZSBzdWJzY3JpYmUge0BsaW5rIFRyYWNrLlByaW9yaXR5fSBpcyBjbGVhcmVkLCB3aGljaFxuICAgICAqICAgbWVhbnMgdGhlIHtAbGluayBUcmFjay5Qcmlvcml0eX0gc2V0IGJ5IHRoZSBwdWJsaXNoZXIgaXMgbm93IHRoZSBlZmZlY3RpdmUgcHJpb3JpdHkuXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICogQHRocm93cyB7UmFuZ2VFcnJvcn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc2V0UHJpb3JpdHknLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRQcmlvcml0eShwcmlvcml0eSkge1xuICAgICAgcmV0dXJuIF9nZXQoUmVtb3RlVmlkZW9UcmFjay5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVWaWRlb1RyYWNrLnByb3RvdHlwZSksICdzZXRQcmlvcml0eScsIHRoaXMpLmNhbGwodGhpcywgcHJpb3JpdHkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZW1vdGVWaWRlb1RyYWNrO1xufShSZW1vdGVNZWRpYVZpZGVvVHJhY2spO1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30ncyBkaW1lbnNpb25zIGNoYW5nZWQuXG4gKiBAcGFyYW0ge1JlbW90ZVZpZGVvVHJhY2t9IHRyYWNrIC0gVGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfSB3aG9zZVxuICogICBkaW1lbnNpb25zIGNoYW5nZWRcbiAqIEBldmVudCBSZW1vdGVWaWRlb1RyYWNrI2RpbWVuc2lvbnNDaGFuZ2VkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHdhcyBkaXNhYmxlZCwgaS5lLiBcInBhdXNlZFwiLlxuICogQHBhcmFtIHtSZW1vdGVWaWRlb1RyYWNrfSB0cmFjayAtIFRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gdGhhdCB3YXNcbiAqICAgZGlzYWJsZWRcbiAqIEBldmVudCBSZW1vdGVWaWRlb1RyYWNrI2Rpc2FibGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHdhcyBlbmFibGVkLCBpLmUuIFwicmVzdW1lZFwiLlxuICogQHBhcmFtIHtSZW1vdGVWaWRlb1RyYWNrfSB0cmFjayAtIFRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gdGhhdCB3YXNcbiAqICAgZW5hYmxlZFxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2sjZW5hYmxlZFxuICovXG5cbi8qKlxuICogVGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfSBzdGFydGVkLiBUaGlzIG1lYW5zIHRoZXJlIGlzIGVub3VnaCB2aWRlbyBkYXRhXG4gKiB0byBiZWdpbiBwbGF5YmFjay5cbiAqIEBwYXJhbSB7UmVtb3RlVmlkZW9UcmFja30gdHJhY2sgLSBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHRoYXQgc3RhcnRlZFxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2sjc3RhcnRlZFxuICovXG5cbi8qKlxuICogQSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gd2FzIHN3aXRjaGVkIG9mZi5cbiAqIEBwYXJhbSB7UmVtb3RlVmlkZW9UcmFja30gdHJhY2sgLSBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHRoYXQgd2FzXG4gKiAgIHN3aXRjaGVkIG9mZlxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2sjc3dpdGNoZWRPZmZcbiAqL1xuXG4vKipcbiAqIEEge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHdhcyBzd2l0Y2hlZCBvbi5cbiAqIEBwYXJhbSB7UmVtb3RlVmlkZW9UcmFja30gdHJhY2sgLSBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHRoYXQgd2FzXG4gKiAgIHN3aXRjaGVkIG9uXG4gKiBAZXZlbnQgUmVtb3RlVmlkZW9UcmFjayNzd2l0Y2hlZE9uXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZW1vdGVWaWRlb1RyYWNrOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotevideotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/remotevideotrackpublication.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/remotevideotrackpublication.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackPublication = __webpack_require__(/*! ./remotetrackpublication */ \"./node_modules/twilio-video/es5/media/track/remotetrackpublication.js\");\n\n/**\n * A {@link RemoteVideoTrackPublication} represents a {@link RemoteVideoTrack}\n * that has been published to a {@link Room}.\n * @property {Track.Kind} kind - \"video\"\n * @property {?RemoteVideoTrack} track - unless you have subscribed to the\n *   {@link RemoteVideoTrack}, this property is null\n * @emits RemoteVideoTrackPublication#subscribed\n * @emits RemoteVideoTrackPublication#subscriptionFailed\n * @emits RemoteVideoTrackPublication#trackDisabled\n * @emits RemoteVideoTrackPublication#trackEnabled\n * @emits RemoteVideoTrackPublication#unsubscribed\n */\n\nvar RemoteVideoTrackPublication = function (_RemoteTrackPublicati) {\n  _inherits(RemoteVideoTrackPublication, _RemoteTrackPublicati);\n\n  /**\n   * Construct a {@link RemoteVideoTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  function RemoteVideoTrackPublication(signaling, options) {\n    _classCallCheck(this, RemoteVideoTrackPublication);\n\n    return _possibleConstructorReturn(this, (RemoteVideoTrackPublication.__proto__ || Object.getPrototypeOf(RemoteVideoTrackPublication)).call(this, signaling, options));\n  }\n\n  _createClass(RemoteVideoTrackPublication, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteVideoTrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return RemoteVideoTrackPublication;\n}(RemoteTrackPublication);\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteVideoTrack}.\n * @param {RemoteVideoTrack} track - the {@link RemoteVideoTrack} that was subscribed to\n * @event RemoteVideoTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteVideoTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteVideoTrack} could not be\n *   subscribed to\n * @event RemoteVideoTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteVideoTrack} was disabled.\n * @event RemoteVideoTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteVideoTrack} was enabled.\n * @event RemoteVideoTrackPublication#trackEnabled\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteVideoTrack}.\n * @param {RemoteVideoTrack} track - the {@link RemoteVideoTrack} that was unsubscribed from\n * @event RemoteVideoTrackPublication#unsubscribed\n */\n\nmodule.exports = RemoteVideoTrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGV2aWRlb3RyYWNrcHVibGljYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9yZW1vdGV2aWRlb3RyYWNrcHVibGljYXRpb24uanM/ZWFmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlbW90ZVRyYWNrUHVibGljYXRpb24gPSByZXF1aXJlKCcuL3JlbW90ZXRyYWNrcHVibGljYXRpb24nKTtcblxuLyoqXG4gKiBBIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrUHVibGljYXRpb259IHJlcHJlc2VudHMgYSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja31cbiAqIHRoYXQgaGFzIGJlZW4gcHVibGlzaGVkIHRvIGEge0BsaW5rIFJvb219LlxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kIC0gXCJ2aWRlb1wiXG4gKiBAcHJvcGVydHkgez9SZW1vdGVWaWRlb1RyYWNrfSB0cmFjayAtIHVubGVzcyB5b3UgaGF2ZSBzdWJzY3JpYmVkIHRvIHRoZVxuICogICB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30sIHRoaXMgcHJvcGVydHkgaXMgbnVsbFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKiBAZW1pdHMgUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9uI3N1YnNjcmlwdGlvbkZhaWxlZFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0Rpc2FibGVkXG4gKiBAZW1pdHMgUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9uI3RyYWNrRW5hYmxlZFxuICogQGVtaXRzIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiN1bnN1YnNjcmliZWRcbiAqL1xuXG52YXIgUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9uID0gZnVuY3Rpb24gKF9SZW1vdGVUcmFja1B1YmxpY2F0aSkge1xuICBfaW5oZXJpdHMoUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9uLCBfUmVtb3RlVHJhY2tQdWJsaWNhdGkpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9ufS5cbiAgICogQHBhcmFtIHtSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfSBzaWduYWxpbmcgLSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbn0gc2lnbmFsaW5nXG4gICAqIEBwYXJhbSB7UmVtb3RlVHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvbn1cbiAgICogICBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVWaWRlb1RyYWNrUHVibGljYXRpb24oc2lnbmFsaW5nLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbikpLmNhbGwodGhpcywgc2lnbmFsaW5nLCBvcHRpb25zKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9uLCBbe1xuICAgIGtleTogJ3RvU3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gJ1tSZW1vdGVWaWRlb1RyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbjtcbn0oUmVtb3RlVHJhY2tQdWJsaWNhdGlvbik7XG5cbi8qKlxuICogWW91ciB7QGxpbmsgTG9jYWxQYXJ0aWNpcGFudH0gc3Vic2NyaWJlZCB0byB0aGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9LlxuICogQHBhcmFtIHtSZW1vdGVWaWRlb1RyYWNrfSB0cmFjayAtIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gdGhhdCB3YXMgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpYmVkXG4gKi9cblxuLyoqXG4gKiBZb3VyIHtAbGluayBMb2NhbFBhcnRpY2lwYW50fSBmYWlsZWQgdG8gc3Vic2NyaWJlIHRvIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30uXG4gKiBAcGFyYW0ge1R3aWxpb0Vycm9yfSBlcnJvciAtIHRoZSByZWFzb24gdGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfSBjb3VsZCBub3QgYmVcbiAqICAgc3Vic2NyaWJlZCB0b1xuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiNzdWJzY3JpcHRpb25GYWlsZWRcbiAqL1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30gd2FzIGRpc2FibGVkLlxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0Rpc2FibGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2t9IHdhcyBlbmFibGVkLlxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiN0cmFja0VuYWJsZWRcbiAqL1xuXG4vKipcbiAqIFlvdXIge0BsaW5rIExvY2FsUGFydGljaXBhbnR9IHVuc3Vic2NyaWJlZCBmcm9tIHRoZSB7QGxpbmsgUmVtb3RlVmlkZW9UcmFja30uXG4gKiBAcGFyYW0ge1JlbW90ZVZpZGVvVHJhY2t9IHRyYWNrIC0gdGhlIHtAbGluayBSZW1vdGVWaWRlb1RyYWNrfSB0aGF0IHdhcyB1bnN1YnNjcmliZWQgZnJvbVxuICogQGV2ZW50IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbiN1bnN1YnNjcmliZWRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/remotevideotrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/sender.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/sender.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaTrackTransceiver = __webpack_require__(/*! ./transceiver */ \"./node_modules/twilio-video/es5/media/track/transceiver.js\");\n\n/**\n * A {@link MediaTrackSender} represents one or more local RTCRtpSenders.\n * @extends MediaTrackTransceiver\n */\n\nvar MediaTrackSender = function (_MediaTrackTransceive) {\n  _inherits(MediaTrackSender, _MediaTrackTransceive);\n\n  /**\n   * Construct a {@link MediaTrackSender}.\n   * @param {MediaStreamTrack} mediaStreamTrack\n   */\n  function MediaTrackSender(mediaStreamTrack) {\n    _classCallCheck(this, MediaTrackSender);\n\n    var _this = _possibleConstructorReturn(this, (MediaTrackSender.__proto__ || Object.getPrototypeOf(MediaTrackSender)).call(this, mediaStreamTrack.id, mediaStreamTrack));\n\n    Object.defineProperties(_this, {\n      _clones: {\n        value: new Set()\n      },\n      _senders: {\n        value: new Set()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Return a new {@link MediaTrackSender} containing a clone of the underlying\n   * MediaStreamTrack. No RTCRtpSenders are copied.\n   * @returns {MediaTrackSender}\n   */\n\n\n  _createClass(MediaTrackSender, [{\n    key: 'clone',\n    value: function clone() {\n      var clone = new MediaTrackSender(this.track.clone());\n      this._clones.add(clone);\n      return clone;\n    }\n\n    /**\n     * Remove a cloned {@link MediaTrackSender}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeClone',\n    value: function removeClone(clone) {\n      this._clones.delete(clone);\n    }\n\n    /**\n     * Set the given MediaStreamTrack.\n     * @param {MediaStreamTrack} mediaStreamTrack\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: 'setMediaStreamTrack',\n    value: function setMediaStreamTrack(mediaStreamTrack) {\n      var _this2 = this;\n\n      var clones = Array.from(this._clones);\n      var senders = Array.from(this._senders);\n      return Promise.all(clones.map(function (clone) {\n        return clone.setMediaStreamTrack(mediaStreamTrack.clone());\n      }).concat(senders.map(function (sender) {\n        return sender.replaceTrack(mediaStreamTrack);\n      }))).finally(function () {\n        _this2._track = mediaStreamTrack;\n      });\n    }\n\n    /**\n     * Add an RTCRtpSender.\n     * @param {RTCRtpSender} sender\n     * @returns {this}\n     */\n\n  }, {\n    key: 'addSender',\n    value: function addSender(sender) {\n      this._senders.add(sender);\n      return this;\n    }\n\n    /**\n     * Remove an RTCRtpSender.\n     * @param {RTCRtpSender} sender\n     * @returns {this}\n     */\n\n  }, {\n    key: 'removeSender',\n    value: function removeSender(sender) {\n      this._senders.delete(sender);\n      return this;\n    }\n  }]);\n\n  return MediaTrackSender;\n}(MediaTrackTransceiver);\n\nmodule.exports = MediaTrackSender;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9zZW5kZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay9zZW5kZXIuanM/M2I2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE1lZGlhVHJhY2tUcmFuc2NlaXZlciA9IHJlcXVpcmUoJy4vdHJhbnNjZWl2ZXInKTtcblxuLyoqXG4gKiBBIHtAbGluayBNZWRpYVRyYWNrU2VuZGVyfSByZXByZXNlbnRzIG9uZSBvciBtb3JlIGxvY2FsIFJUQ1J0cFNlbmRlcnMuXG4gKiBAZXh0ZW5kcyBNZWRpYVRyYWNrVHJhbnNjZWl2ZXJcbiAqL1xuXG52YXIgTWVkaWFUcmFja1NlbmRlciA9IGZ1bmN0aW9uIChfTWVkaWFUcmFja1RyYW5zY2VpdmUpIHtcbiAgX2luaGVyaXRzKE1lZGlhVHJhY2tTZW5kZXIsIF9NZWRpYVRyYWNrVHJhbnNjZWl2ZSk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBNZWRpYVRyYWNrU2VuZGVyfS5cbiAgICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfSBtZWRpYVN0cmVhbVRyYWNrXG4gICAqL1xuICBmdW5jdGlvbiBNZWRpYVRyYWNrU2VuZGVyKG1lZGlhU3RyZWFtVHJhY2spIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVkaWFUcmFja1NlbmRlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTWVkaWFUcmFja1NlbmRlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1lZGlhVHJhY2tTZW5kZXIpKS5jYWxsKHRoaXMsIG1lZGlhU3RyZWFtVHJhY2suaWQsIG1lZGlhU3RyZWFtVHJhY2spKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBfY2xvbmVzOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgU2V0KClcbiAgICAgIH0sXG4gICAgICBfc2VuZGVyczoge1xuICAgICAgICB2YWx1ZTogbmV3IFNldCgpXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBhIG5ldyB7QGxpbmsgTWVkaWFUcmFja1NlbmRlcn0gY29udGFpbmluZyBhIGNsb25lIG9mIHRoZSB1bmRlcmx5aW5nXG4gICAqIE1lZGlhU3RyZWFtVHJhY2suIE5vIFJUQ1J0cFNlbmRlcnMgYXJlIGNvcGllZC5cbiAgICogQHJldHVybnMge01lZGlhVHJhY2tTZW5kZXJ9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKE1lZGlhVHJhY2tTZW5kZXIsIFt7XG4gICAga2V5OiAnY2xvbmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgIHZhciBjbG9uZSA9IG5ldyBNZWRpYVRyYWNrU2VuZGVyKHRoaXMudHJhY2suY2xvbmUoKSk7XG4gICAgICB0aGlzLl9jbG9uZXMuYWRkKGNsb25lKTtcbiAgICAgIHJldHVybiBjbG9uZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYSBjbG9uZWQge0BsaW5rIE1lZGlhVHJhY2tTZW5kZXJ9LlxuICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmVDbG9uZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZUNsb25lKGNsb25lKSB7XG4gICAgICB0aGlzLl9jbG9uZXMuZGVsZXRlKGNsb25lKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGdpdmVuIE1lZGlhU3RyZWFtVHJhY2suXG4gICAgICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfSBtZWRpYVN0cmVhbVRyYWNrXG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3NldE1lZGlhU3RyZWFtVHJhY2snLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRNZWRpYVN0cmVhbVRyYWNrKG1lZGlhU3RyZWFtVHJhY2spIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgY2xvbmVzID0gQXJyYXkuZnJvbSh0aGlzLl9jbG9uZXMpO1xuICAgICAgdmFyIHNlbmRlcnMgPSBBcnJheS5mcm9tKHRoaXMuX3NlbmRlcnMpO1xuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGNsb25lcy5tYXAoZnVuY3Rpb24gKGNsb25lKSB7XG4gICAgICAgIHJldHVybiBjbG9uZS5zZXRNZWRpYVN0cmVhbVRyYWNrKG1lZGlhU3RyZWFtVHJhY2suY2xvbmUoKSk7XG4gICAgICB9KS5jb25jYXQoc2VuZGVycy5tYXAoZnVuY3Rpb24gKHNlbmRlcikge1xuICAgICAgICByZXR1cm4gc2VuZGVyLnJlcGxhY2VUcmFjayhtZWRpYVN0cmVhbVRyYWNrKTtcbiAgICAgIH0pKSkuZmluYWxseShmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMi5fdHJhY2sgPSBtZWRpYVN0cmVhbVRyYWNrO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGFuIFJUQ1J0cFNlbmRlci5cbiAgICAgKiBAcGFyYW0ge1JUQ1J0cFNlbmRlcn0gc2VuZGVyXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2FkZFNlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFNlbmRlcihzZW5kZXIpIHtcbiAgICAgIHRoaXMuX3NlbmRlcnMuYWRkKHNlbmRlcik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYW4gUlRDUnRwU2VuZGVyLlxuICAgICAqIEBwYXJhbSB7UlRDUnRwU2VuZGVyfSBzZW5kZXJcbiAgICAgKiBAcmV0dXJucyB7dGhpc31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlU2VuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlU2VuZGVyKHNlbmRlcikge1xuICAgICAgdGhpcy5fc2VuZGVycy5kZWxldGUoc2VuZGVyKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNZWRpYVRyYWNrU2VuZGVyO1xufShNZWRpYVRyYWNrVHJhbnNjZWl2ZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lZGlhVHJhY2tTZW5kZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/sender.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/trackpublication.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/trackpublication.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! ../../eventemitter */ \"./node_modules/twilio-video/es5/eventemitter.js\");\n\nvar _require = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    buildLogLevels = _require.buildLogLevels,\n    valueToJSON = _require.valueToJSON;\n\nvar _require2 = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    DEFAULT_LOG_LEVEL = _require2.DEFAULT_LOG_LEVEL;\n\nvar Log = __webpack_require__(/*! ../../util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\nvar nInstances = 0;\n\n/**\n * A {@link TrackPublication} represents a {@link Track} that\n * has been published to a {@link Room}.\n * @property {string} trackName - the published {@link Track}'s name\n * @property {Track.SID} trackSid - SID assigned to the published {@link Track}\n * @emits TrackPublication#trackDisabled\n * @emits TrackPublication#trackEnabled\n */\n\nvar TrackPublication = function (_EventEmitter) {\n  _inherits(TrackPublication, _EventEmitter);\n\n  /**\n   * Construct a {@link TrackPublication}.\n   * @param {string} trackName - the published {@link Track}'s name\n   * @param {Track.SID} trackSid - SID assigned to the {@link Track}\n   * @param {TrackPublicationOptions} options - {@link TrackPublication} options\n   */\n  function TrackPublication(trackName, trackSid, options) {\n    _classCallCheck(this, TrackPublication);\n\n    var _this = _possibleConstructorReturn(this, (TrackPublication.__proto__ || Object.getPrototypeOf(TrackPublication)).call(this));\n\n    options = Object.assign({\n      logLevel: DEFAULT_LOG_LEVEL\n    }, options);\n\n    var logLevels = buildLogLevels(options.logLevel);\n\n    Object.defineProperties(_this, {\n      _instanceId: {\n        value: nInstances++\n      },\n      _log: {\n        value: options.log || new Log('default', _this, logLevels)\n      },\n      trackName: {\n        enumerable: true,\n        value: trackName\n      },\n      trackSid: {\n        enumerable: true,\n        value: trackSid\n      }\n    });\n    return _this;\n  }\n\n  _createClass(TrackPublication, [{\n    key: 'toJSON',\n    value: function toJSON() {\n      return valueToJSON(this);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[TrackPublication #' + this._instanceId + ': ' + this.trackSid + ']';\n    }\n  }]);\n\n  return TrackPublication;\n}(EventEmitter);\n\n/**\n * The published {@link Track} was disabled.\n * @event TrackPublication#trackDisabled\n */\n\n/**\n * The published {@link Track} was enabled.\n * @event TrackPublication#trackEnabled\n */\n\n/**\n * A {@link LocalAudioTrackPublication} or a {@link RemoteAudioTrackPublication}.\n * @typedef {LocalAudioTrackPublication|RemoteAudioTrackPublication} AudioTrackPublication\n */\n\n/**\n * A {@link LocalDataTrackPublication} or a {@link RemoteDataTrackPublication}.\n * @typedef {LocalDataTrackPublication|RemoteDataTrackPublication} DataTrackPublication\n */\n\n/**\n * A {@link LocalVideoTrackPublication} or a {@link RemoteVideoTrackPublication}.\n * @typedef {LocalVideoTrackPublication|RemoteVideoTrackPublication} VideoTrackPublication\n */\n\n/**\n * {@link TrackPublication} options\n * @typedef {object} TrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\n\nmodule.exports = TrackPublication;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay90cmFja3B1YmxpY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svdHJhY2twdWJsaWNhdGlvbi5qcz9iNjM2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnLi4vLi4vZXZlbnRlbWl0dGVyJyk7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4uLy4uL3V0aWwnKSxcbiAgICBidWlsZExvZ0xldmVscyA9IF9yZXF1aXJlLmJ1aWxkTG9nTGV2ZWxzLFxuICAgIHZhbHVlVG9KU09OID0gX3JlcXVpcmUudmFsdWVUb0pTT047XG5cbnZhciBfcmVxdWlyZTIgPSByZXF1aXJlKCcuLi8uLi91dGlsL2NvbnN0YW50cycpLFxuICAgIERFRkFVTFRfTE9HX0xFVkVMID0gX3JlcXVpcmUyLkRFRkFVTFRfTE9HX0xFVkVMO1xuXG52YXIgTG9nID0gcmVxdWlyZSgnLi4vLi4vdXRpbC9sb2cnKTtcbnZhciBuSW5zdGFuY2VzID0gMDtcblxuLyoqXG4gKiBBIHtAbGluayBUcmFja1B1YmxpY2F0aW9ufSByZXByZXNlbnRzIGEge0BsaW5rIFRyYWNrfSB0aGF0XG4gKiBoYXMgYmVlbiBwdWJsaXNoZWQgdG8gYSB7QGxpbmsgUm9vbX0uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdHJhY2tOYW1lIC0gdGhlIHB1Ymxpc2hlZCB7QGxpbmsgVHJhY2t9J3MgbmFtZVxuICogQHByb3BlcnR5IHtUcmFjay5TSUR9IHRyYWNrU2lkIC0gU0lEIGFzc2lnbmVkIHRvIHRoZSBwdWJsaXNoZWQge0BsaW5rIFRyYWNrfVxuICogQGVtaXRzIFRyYWNrUHVibGljYXRpb24jdHJhY2tEaXNhYmxlZFxuICogQGVtaXRzIFRyYWNrUHVibGljYXRpb24jdHJhY2tFbmFibGVkXG4gKi9cblxudmFyIFRyYWNrUHVibGljYXRpb24gPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoVHJhY2tQdWJsaWNhdGlvbiwgX0V2ZW50RW1pdHRlcik7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBUcmFja1B1YmxpY2F0aW9ufS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRyYWNrTmFtZSAtIHRoZSBwdWJsaXNoZWQge0BsaW5rIFRyYWNrfSdzIG5hbWVcbiAgICogQHBhcmFtIHtUcmFjay5TSUR9IHRyYWNrU2lkIC0gU0lEIGFzc2lnbmVkIHRvIHRoZSB7QGxpbmsgVHJhY2t9XG4gICAqIEBwYXJhbSB7VHJhY2tQdWJsaWNhdGlvbk9wdGlvbnN9IG9wdGlvbnMgLSB7QGxpbmsgVHJhY2tQdWJsaWNhdGlvbn0gb3B0aW9uc1xuICAgKi9cbiAgZnVuY3Rpb24gVHJhY2tQdWJsaWNhdGlvbih0cmFja05hbWUsIHRyYWNrU2lkLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYWNrUHVibGljYXRpb24pO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFRyYWNrUHVibGljYXRpb24uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihUcmFja1B1YmxpY2F0aW9uKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBsb2dMZXZlbDogREVGQVVMVF9MT0dfTEVWRUxcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIHZhciBsb2dMZXZlbHMgPSBidWlsZExvZ0xldmVscyhvcHRpb25zLmxvZ0xldmVsKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBfaW5zdGFuY2VJZDoge1xuICAgICAgICB2YWx1ZTogbkluc3RhbmNlcysrXG4gICAgICB9LFxuICAgICAgX2xvZzoge1xuICAgICAgICB2YWx1ZTogb3B0aW9ucy5sb2cgfHwgbmV3IExvZygnZGVmYXVsdCcsIF90aGlzLCBsb2dMZXZlbHMpXG4gICAgICB9LFxuICAgICAgdHJhY2tOYW1lOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB0cmFja05hbWVcbiAgICAgIH0sXG4gICAgICB0cmFja1NpZDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogdHJhY2tTaWRcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVHJhY2tQdWJsaWNhdGlvbiwgW3tcbiAgICBrZXk6ICd0b0pTT04nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgICByZXR1cm4gdmFsdWVUb0pTT04odGhpcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndG9TdHJpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiAnW1RyYWNrUHVibGljYXRpb24gIycgKyB0aGlzLl9pbnN0YW5jZUlkICsgJzogJyArIHRoaXMudHJhY2tTaWQgKyAnXSc7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRyYWNrUHVibGljYXRpb247XG59KEV2ZW50RW1pdHRlcik7XG5cbi8qKlxuICogVGhlIHB1Ymxpc2hlZCB7QGxpbmsgVHJhY2t9IHdhcyBkaXNhYmxlZC5cbiAqIEBldmVudCBUcmFja1B1YmxpY2F0aW9uI3RyYWNrRGlzYWJsZWRcbiAqL1xuXG4vKipcbiAqIFRoZSBwdWJsaXNoZWQge0BsaW5rIFRyYWNrfSB3YXMgZW5hYmxlZC5cbiAqIEBldmVudCBUcmFja1B1YmxpY2F0aW9uI3RyYWNrRW5hYmxlZFxuICovXG5cbi8qKlxuICogQSB7QGxpbmsgTG9jYWxBdWRpb1RyYWNrUHVibGljYXRpb259IG9yIGEge0BsaW5rIFJlbW90ZUF1ZGlvVHJhY2tQdWJsaWNhdGlvbn0uXG4gKiBAdHlwZWRlZiB7TG9jYWxBdWRpb1RyYWNrUHVibGljYXRpb258UmVtb3RlQXVkaW9UcmFja1B1YmxpY2F0aW9ufSBBdWRpb1RyYWNrUHVibGljYXRpb25cbiAqL1xuXG4vKipcbiAqIEEge0BsaW5rIExvY2FsRGF0YVRyYWNrUHVibGljYXRpb259IG9yIGEge0BsaW5rIFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9ufS5cbiAqIEB0eXBlZGVmIHtMb2NhbERhdGFUcmFja1B1YmxpY2F0aW9ufFJlbW90ZURhdGFUcmFja1B1YmxpY2F0aW9ufSBEYXRhVHJhY2tQdWJsaWNhdGlvblxuICovXG5cbi8qKlxuICogQSB7QGxpbmsgTG9jYWxWaWRlb1RyYWNrUHVibGljYXRpb259IG9yIGEge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2tQdWJsaWNhdGlvbn0uXG4gKiBAdHlwZWRlZiB7TG9jYWxWaWRlb1RyYWNrUHVibGljYXRpb258UmVtb3RlVmlkZW9UcmFja1B1YmxpY2F0aW9ufSBWaWRlb1RyYWNrUHVibGljYXRpb25cbiAqL1xuXG4vKipcbiAqIHtAbGluayBUcmFja1B1YmxpY2F0aW9ufSBvcHRpb25zXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBUcmFja1B1YmxpY2F0aW9uT3B0aW9uc1xuICogQHByb3BlcnR5IHtMb2dMZXZlbHxMb2dMZXZlbHN9IGxvZ0xldmVsIC0gTG9nIGxldmVsIGZvciAnbWVkaWEnIG1vZHVsZXNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYWNrUHVibGljYXRpb247Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/trackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/transceiver.js":
/*!******************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/transceiver.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackTransceiver = __webpack_require__(/*! ../../transceiver */ \"./node_modules/twilio-video/es5/transceiver.js\");\n\n/**\n * A {@link MediaTrackTransceiver} represents either one or more local\n * RTCRtpSenders, or a single RTCRtpReceiver.\n * @extends TrackTransceiver\n * @property {MediaStreamTrack} track\n */\n\nvar MediaTrackTransceiver = function (_TrackTransceiver) {\n  _inherits(MediaTrackTransceiver, _TrackTransceiver);\n\n  /**\n   * Construct a {@link MediaTrackTransceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack\n   */\n  function MediaTrackTransceiver(id, mediaStreamTrack) {\n    _classCallCheck(this, MediaTrackTransceiver);\n\n    var _this = _possibleConstructorReturn(this, (MediaTrackTransceiver.__proto__ || Object.getPrototypeOf(MediaTrackTransceiver)).call(this, id, mediaStreamTrack.kind));\n\n    Object.defineProperties(_this, {\n      _track: {\n        value: mediaStreamTrack,\n        writable: true\n      },\n      enabled: {\n        enumerable: true,\n        get: function get() {\n          return this._track.enabled;\n        }\n      },\n      readyState: {\n        enumerable: true,\n        get: function get() {\n          return this._track.readyState;\n        }\n      },\n      track: {\n        enumerable: true,\n        get: function get() {\n          return this._track;\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MediaTrackTransceiver, [{\n    key: 'stop',\n    value: function stop() {\n      this.track.stop();\n      _get(MediaTrackTransceiver.prototype.__proto__ || Object.getPrototypeOf(MediaTrackTransceiver.prototype), 'stop', this).call(this);\n    }\n  }]);\n\n  return MediaTrackTransceiver;\n}(TrackTransceiver);\n\nmodule.exports = MediaTrackTransceiver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay90cmFuc2NlaXZlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L21lZGlhL3RyYWNrL3RyYW5zY2VpdmVyLmpzP2I4MTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFRyYWNrVHJhbnNjZWl2ZXIgPSByZXF1aXJlKCcuLi8uLi90cmFuc2NlaXZlcicpO1xuXG4vKipcbiAqIEEge0BsaW5rIE1lZGlhVHJhY2tUcmFuc2NlaXZlcn0gcmVwcmVzZW50cyBlaXRoZXIgb25lIG9yIG1vcmUgbG9jYWxcbiAqIFJUQ1J0cFNlbmRlcnMsIG9yIGEgc2luZ2xlIFJUQ1J0cFJlY2VpdmVyLlxuICogQGV4dGVuZHMgVHJhY2tUcmFuc2NlaXZlclxuICogQHByb3BlcnR5IHtNZWRpYVN0cmVhbVRyYWNrfSB0cmFja1xuICovXG5cbnZhciBNZWRpYVRyYWNrVHJhbnNjZWl2ZXIgPSBmdW5jdGlvbiAoX1RyYWNrVHJhbnNjZWl2ZXIpIHtcbiAgX2luaGVyaXRzKE1lZGlhVHJhY2tUcmFuc2NlaXZlciwgX1RyYWNrVHJhbnNjZWl2ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTWVkaWFUcmFja1RyYW5zY2VpdmVyfS5cbiAgICogQHBhcmFtIHtUcmFjay5JRH0gaWQgLSBUaGUgTWVkaWFTdHJlYW1UcmFjayBJRCBzaWduYWxlZCB0aHJvdWdoIFJTUC9TRFBcbiAgICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfSBtZWRpYVN0cmVhbVRyYWNrXG4gICAqL1xuICBmdW5jdGlvbiBNZWRpYVRyYWNrVHJhbnNjZWl2ZXIoaWQsIG1lZGlhU3RyZWFtVHJhY2spIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVkaWFUcmFja1RyYW5zY2VpdmVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChNZWRpYVRyYWNrVHJhbnNjZWl2ZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihNZWRpYVRyYWNrVHJhbnNjZWl2ZXIpKS5jYWxsKHRoaXMsIGlkLCBtZWRpYVN0cmVhbVRyYWNrLmtpbmQpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBfdHJhY2s6IHtcbiAgICAgICAgdmFsdWU6IG1lZGlhU3RyZWFtVHJhY2ssXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgZW5hYmxlZDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2suZW5hYmxlZDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJlYWR5U3RhdGU6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX3RyYWNrLnJlYWR5U3RhdGU7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0cmFjazoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2s7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWVkaWFUcmFja1RyYW5zY2VpdmVyLCBbe1xuICAgIGtleTogJ3N0b3AnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgdGhpcy50cmFjay5zdG9wKCk7XG4gICAgICBfZ2V0KE1lZGlhVHJhY2tUcmFuc2NlaXZlci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihNZWRpYVRyYWNrVHJhbnNjZWl2ZXIucHJvdG90eXBlKSwgJ3N0b3AnLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNZWRpYVRyYWNrVHJhbnNjZWl2ZXI7XG59KFRyYWNrVHJhbnNjZWl2ZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lZGlhVHJhY2tUcmFuc2NlaXZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/transceiver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/media/track/videotrack.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/media/track/videotrack.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaTrack = __webpack_require__(/*! ./mediatrack */ \"./node_modules/twilio-video/es5/media/track/mediatrack.js\");\n\n/**\n * A {@link VideoTrack} is a {@link Track} representing video.\n * @extends Track\n * @property {boolean} isStarted - Whether or not the {@link VideoTrack} has\n *   started; if the {@link VideoTrack} started, there is enough video data to\n *   begin playback\n * @property {boolean} isEnabled - Whether or not the {@link VideoTrack} is\n *   enabled; if the {@link VideoTrack} is not enabled, it is \"paused\"\n * @property {VideoTrack.Dimensions} dimensions - The {@link VideoTrack}'s\n *   {@link VideoTrack.Dimensions}\n * @property {Track.Kind} kind - \"video\"\n * @property {MediaStreamTrack} mediaStreamTrack - A video MediaStreamTrack\n * @emits VideoTrack#dimensionsChanged\n * @emits VideoTrack#disabled\n * @emits VideoTrack#enabled\n * @emits VideoTrack#started\n */\n\nvar VideoTrack = function (_MediaTrack) {\n  _inherits(VideoTrack, _MediaTrack);\n\n  /**\n   * Construct a {@link VideoTrack}.\n   * @param {MediaTrackTransceiver} mediaTrackTransceiver\n   * @param {{log: Log}} options\n   */\n  function VideoTrack(mediaTrackTransceiver, options) {\n    var _ret;\n\n    _classCallCheck(this, VideoTrack);\n\n    var _this = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this, mediaTrackTransceiver, options));\n\n    Object.defineProperties(_this, {\n      dimensions: {\n        enumerable: true,\n        value: {\n          width: null,\n          height: null\n        }\n      }\n    });\n    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @private\n   */\n\n\n  _createClass(VideoTrack, [{\n    key: '_initialize',\n    value: function _initialize() {\n      var _this2 = this;\n\n      _get(VideoTrack.prototype.__proto__ || Object.getPrototypeOf(VideoTrack.prototype), '_initialize', this).call(this);\n      if (this._dummyEl) {\n        this._dummyEl.onloadedmetadata = function () {\n          if (dimensionsChanged(_this2, _this2._dummyEl)) {\n            _this2.dimensions.width = _this2._dummyEl.videoWidth;\n            _this2.dimensions.height = _this2._dummyEl.videoHeight;\n          }\n        };\n        this._dummyEl.onresize = function () {\n          if (dimensionsChanged(_this2, _this2._dummyEl)) {\n            _this2.dimensions.width = _this2._dummyEl.videoWidth;\n            _this2.dimensions.height = _this2._dummyEl.videoHeight;\n            if (_this2.isStarted) {\n              _this2._log.debug('Dimensions changed:', _this2.dimensions);\n              _this2.emit(VideoTrack.DIMENSIONS_CHANGED, _this2);\n            }\n          }\n        };\n      }\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_start',\n    value: function _start(dummyEl) {\n      this.dimensions.width = dummyEl.videoWidth;\n      this.dimensions.height = dummyEl.videoHeight;\n\n      this._log.debug('Dimensions:', this.dimensions);\n      return _get(VideoTrack.prototype.__proto__ || Object.getPrototypeOf(VideoTrack.prototype), '_start', this).call(this, dummyEl);\n    }\n\n    /**\n     * Create an HTMLVideoElement and attach the {@link VideoTrack} to it.\n     *\n     * The HTMLVideoElement's <code>srcObject</code> will be set to a new\n     * MediaStream containing the {@link VideoTrack}'s MediaStreamTrack.\n     *\n     * @returns {HTMLVideoElement} videoElement\n     * @example\n     * const Video = require('twilio-video');\n     *\n     * Video.createLocalVideoTrack().then(function(videoTrack) {\n     *   const videoElement = videoTrack.attach();\n     *   document.body.appendChild(videoElement);\n     * });\n    */ /**\n       * Attach the {@link VideoTrack} to an existing HTMLMediaElement. The\n       * HTMLMediaElement could be an HTMLAudioElement or an HTMLVideoElement.\n       *\n       * If the HTMLMediaElement's <code>srcObject</code> is not set to a MediaStream,\n       * this method sets it to a new MediaStream containing the {@link VideoTrack}'s\n       * MediaStreamTrack; otherwise, it adds the {@link MediaTrack}'s\n       * MediaStreamTrack to the existing MediaStream. Finally, if there are any other\n       * MediaStreamTracks of the same kind on the MediaStream, this method removes\n       * them.\n       *\n       * @param {HTMLMediaElement} mediaElement - The HTMLMediaElement to attach to\n       * @returns {HTMLMediaElement} mediaElement\n       * @example\n       * const Video = require('twilio-video');\n       *\n       * const videoElement = document.createElement('video');\n       * document.body.appendChild(videoElement);\n       *\n       * Video.createLocalVideoTrack().then(function(videoTrack) {\n       *   videoTrack.attach(videoElement);\n       * });\n       */ /**\n          * Attach the {@link VideoTrack} to an HTMLMediaElement selected by\n          * <code>document.querySelector</code>. The HTMLMediaElement could be an\n          * HTMLAudioElement or an HTMLVideoElement.\n          *\n          * If the HTMLMediaElement's <code>srcObject</code> is not set to a MediaStream,\n          * this method sets it to a new MediaStream containing the {@link VideoTrack}'s\n          * MediaStreamTrack; otherwise, it adds the {@link VideoTrack}'s\n          * MediaStreamTrack to the existing MediaStream. Finally, if there are any other\n          * MediaStreamTracks of the same kind on the MediaStream, this method removes\n          * them.\n          *\n          * @param {string} selector - A query selector for the HTMLMediaElement to\n          *   attach to\n          * @returns {HTMLMediaElement} mediaElement\n          * @example\n          * const Video = require('twilio-video');\n          *\n          * const videoElement = document.createElement('video');\n          * videoElement.id = 'my-video-element';\n          * document.body.appendChild(videoElement);\n          *\n          * Video.createLocalVideoTrack().then(function(track) {\n          *   track.attach('#my-video-element');\n          * });\n          */\n\n  }, {\n    key: 'attach',\n    value: function attach() {\n      return _get(VideoTrack.prototype.__proto__ || Object.getPrototypeOf(VideoTrack.prototype), 'attach', this).apply(this, arguments);\n    }\n\n    /**\n     * Detach the {@link VideoTrack} from all previously attached HTMLMediaElements.\n     * @returns {Array<HTMLMediaElement>} mediaElements\n     * @example\n     * const mediaElements = videoTrack.detach();\n     * mediaElements.forEach(mediaElement => mediaElement.remove());\n    */ /**\n       * Detach the {@link VideoTrack} from a previously attached HTMLMediaElement.\n       * @param {HTMLMediaElement} mediaElement - One of the HTMLMediaElements to\n       *   which the {@link VideoTrack} is attached\n       * @returns {HTMLMediaElement} mediaElement\n       * @example\n       * const videoElement = document.getElementById('my-video-element');\n       * videoTrack.detach(videoElement).remove();\n       */ /**\n          * Detach the {@link VideoTrack} from a previously attached HTMLMediaElement\n          *   specified by <code>document.querySelector</code>.\n          * @param {string} selector - The query selector of HTMLMediaElement to which\n          *    the {@link VideoTrack} is attached\n          * @returns {HTMLMediaElement} mediaElement\n          * @example\n          * videoTrack.detach('#my-video-element').remove();\n          */\n\n  }, {\n    key: 'detach',\n    value: function detach() {\n      return _get(VideoTrack.prototype.__proto__ || Object.getPrototypeOf(VideoTrack.prototype), 'detach', this).apply(this, arguments);\n    }\n  }]);\n\n  return VideoTrack;\n}(MediaTrack);\n\nVideoTrack.DIMENSIONS_CHANGED = 'dimensionsChanged';\n\nfunction dimensionsChanged(track, elem) {\n  return track.dimensions.width !== elem.videoWidth || track.dimensions.height !== elem.videoHeight;\n}\n\n/**\n * A {@link VideoTrack}'s width and height.\n * @typedef {object} VideoTrack.Dimensions\n * @property {?number} width - The {@link VideoTrack}'s width or null if the\n *   {@link VideoTrack} has not yet started\n * @property {?number} height - The {@link VideoTrack}'s height or null if the\n *   {@link VideoTrack} has not yet started\n */\n\n/**\n * The {@link VideoTrack}'s dimensions changed.\n * @param {VideoTrack} track - The {@link VideoTrack} whose dimensions changed\n * @event VideoTrack#dimensionsChanged\n */\n\n/**\n * The {@link VideoTrack} was disabled, i.e. \"paused\".\n * @param {VideoTrack} track - The {@link VideoTrack} that was disabled\n * @event VideoTrack#disabled\n */\n\n/**\n * The {@link VideoTrack} was enabled, i.e. \"unpaused\".\n * @param {VideoTrack} track - The {@link VideoTrack} that was enabled\n * @event VideoTrack#enabled\n */\n\n/**\n * The {@link VideoTrack} started. This means there is enough video data to\n * begin playback.\n * @param {VideoTrack} track - The {@link VideoTrack} that started\n * @event VideoTrack#started\n */\n\nmodule.exports = VideoTrack;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9tZWRpYS90cmFjay92aWRlb3RyYWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvbWVkaWEvdHJhY2svdmlkZW90cmFjay5qcz9mNDU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBNZWRpYVRyYWNrID0gcmVxdWlyZSgnLi9tZWRpYXRyYWNrJyk7XG5cbi8qKlxuICogQSB7QGxpbmsgVmlkZW9UcmFja30gaXMgYSB7QGxpbmsgVHJhY2t9IHJlcHJlc2VudGluZyB2aWRlby5cbiAqIEBleHRlbmRzIFRyYWNrXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGlzU3RhcnRlZCAtIFdoZXRoZXIgb3Igbm90IHRoZSB7QGxpbmsgVmlkZW9UcmFja30gaGFzXG4gKiAgIHN0YXJ0ZWQ7IGlmIHRoZSB7QGxpbmsgVmlkZW9UcmFja30gc3RhcnRlZCwgdGhlcmUgaXMgZW5vdWdoIHZpZGVvIGRhdGEgdG9cbiAqICAgYmVnaW4gcGxheWJhY2tcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaXNFbmFibGVkIC0gV2hldGhlciBvciBub3QgdGhlIHtAbGluayBWaWRlb1RyYWNrfSBpc1xuICogICBlbmFibGVkOyBpZiB0aGUge0BsaW5rIFZpZGVvVHJhY2t9IGlzIG5vdCBlbmFibGVkLCBpdCBpcyBcInBhdXNlZFwiXG4gKiBAcHJvcGVydHkge1ZpZGVvVHJhY2suRGltZW5zaW9uc30gZGltZW5zaW9ucyAtIFRoZSB7QGxpbmsgVmlkZW9UcmFja30nc1xuICogICB7QGxpbmsgVmlkZW9UcmFjay5EaW1lbnNpb25zfVxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kIC0gXCJ2aWRlb1wiXG4gKiBAcHJvcGVydHkge01lZGlhU3RyZWFtVHJhY2t9IG1lZGlhU3RyZWFtVHJhY2sgLSBBIHZpZGVvIE1lZGlhU3RyZWFtVHJhY2tcbiAqIEBlbWl0cyBWaWRlb1RyYWNrI2RpbWVuc2lvbnNDaGFuZ2VkXG4gKiBAZW1pdHMgVmlkZW9UcmFjayNkaXNhYmxlZFxuICogQGVtaXRzIFZpZGVvVHJhY2sjZW5hYmxlZFxuICogQGVtaXRzIFZpZGVvVHJhY2sjc3RhcnRlZFxuICovXG5cbnZhciBWaWRlb1RyYWNrID0gZnVuY3Rpb24gKF9NZWRpYVRyYWNrKSB7XG4gIF9pbmhlcml0cyhWaWRlb1RyYWNrLCBfTWVkaWFUcmFjayk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBWaWRlb1RyYWNrfS5cbiAgICogQHBhcmFtIHtNZWRpYVRyYWNrVHJhbnNjZWl2ZXJ9IG1lZGlhVHJhY2tUcmFuc2NlaXZlclxuICAgKiBAcGFyYW0ge3tsb2c6IExvZ319IG9wdGlvbnNcbiAgICovXG4gIGZ1bmN0aW9uIFZpZGVvVHJhY2sobWVkaWFUcmFja1RyYW5zY2VpdmVyLCBvcHRpb25zKSB7XG4gICAgdmFyIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmlkZW9UcmFjayk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoVmlkZW9UcmFjay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFZpZGVvVHJhY2spKS5jYWxsKHRoaXMsIG1lZGlhVHJhY2tUcmFuc2NlaXZlciwgb3B0aW9ucykpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGRpbWVuc2lvbnM6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICB3aWR0aDogbnVsbCxcbiAgICAgICAgICBoZWlnaHQ6IG51bGxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfcmV0ID0gX3RoaXMsIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhWaWRlb1RyYWNrLCBbe1xuICAgIGtleTogJ19pbml0aWFsaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2luaXRpYWxpemUoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgX2dldChWaWRlb1RyYWNrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFZpZGVvVHJhY2sucHJvdG90eXBlKSwgJ19pbml0aWFsaXplJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgIGlmICh0aGlzLl9kdW1teUVsKSB7XG4gICAgICAgIHRoaXMuX2R1bW15RWwub25sb2FkZWRtZXRhZGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoZGltZW5zaW9uc0NoYW5nZWQoX3RoaXMyLCBfdGhpczIuX2R1bW15RWwpKSB7XG4gICAgICAgICAgICBfdGhpczIuZGltZW5zaW9ucy53aWR0aCA9IF90aGlzMi5fZHVtbXlFbC52aWRlb1dpZHRoO1xuICAgICAgICAgICAgX3RoaXMyLmRpbWVuc2lvbnMuaGVpZ2h0ID0gX3RoaXMyLl9kdW1teUVsLnZpZGVvSGVpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fZHVtbXlFbC5vbnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoZGltZW5zaW9uc0NoYW5nZWQoX3RoaXMyLCBfdGhpczIuX2R1bW15RWwpKSB7XG4gICAgICAgICAgICBfdGhpczIuZGltZW5zaW9ucy53aWR0aCA9IF90aGlzMi5fZHVtbXlFbC52aWRlb1dpZHRoO1xuICAgICAgICAgICAgX3RoaXMyLmRpbWVuc2lvbnMuaGVpZ2h0ID0gX3RoaXMyLl9kdW1teUVsLnZpZGVvSGVpZ2h0O1xuICAgICAgICAgICAgaWYgKF90aGlzMi5pc1N0YXJ0ZWQpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLl9sb2cuZGVidWcoJ0RpbWVuc2lvbnMgY2hhbmdlZDonLCBfdGhpczIuZGltZW5zaW9ucyk7XG4gICAgICAgICAgICAgIF90aGlzMi5lbWl0KFZpZGVvVHJhY2suRElNRU5TSU9OU19DSEFOR0VELCBfdGhpczIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdfc3RhcnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc3RhcnQoZHVtbXlFbCkge1xuICAgICAgdGhpcy5kaW1lbnNpb25zLndpZHRoID0gZHVtbXlFbC52aWRlb1dpZHRoO1xuICAgICAgdGhpcy5kaW1lbnNpb25zLmhlaWdodCA9IGR1bW15RWwudmlkZW9IZWlnaHQ7XG5cbiAgICAgIHRoaXMuX2xvZy5kZWJ1ZygnRGltZW5zaW9uczonLCB0aGlzLmRpbWVuc2lvbnMpO1xuICAgICAgcmV0dXJuIF9nZXQoVmlkZW9UcmFjay5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihWaWRlb1RyYWNrLnByb3RvdHlwZSksICdfc3RhcnQnLCB0aGlzKS5jYWxsKHRoaXMsIGR1bW15RWwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBIVE1MVmlkZW9FbGVtZW50IGFuZCBhdHRhY2ggdGhlIHtAbGluayBWaWRlb1RyYWNrfSB0byBpdC5cbiAgICAgKlxuICAgICAqIFRoZSBIVE1MVmlkZW9FbGVtZW50J3MgPGNvZGU+c3JjT2JqZWN0PC9jb2RlPiB3aWxsIGJlIHNldCB0byBhIG5ld1xuICAgICAqIE1lZGlhU3RyZWFtIGNvbnRhaW5pbmcgdGhlIHtAbGluayBWaWRlb1RyYWNrfSdzIE1lZGlhU3RyZWFtVHJhY2suXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7SFRNTFZpZGVvRWxlbWVudH0gdmlkZW9FbGVtZW50XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCBWaWRlbyA9IHJlcXVpcmUoJ3R3aWxpby12aWRlbycpO1xuICAgICAqXG4gICAgICogVmlkZW8uY3JlYXRlTG9jYWxWaWRlb1RyYWNrKCkudGhlbihmdW5jdGlvbih2aWRlb1RyYWNrKSB7XG4gICAgICogICBjb25zdCB2aWRlb0VsZW1lbnQgPSB2aWRlb1RyYWNrLmF0dGFjaCgpO1xuICAgICAqICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2aWRlb0VsZW1lbnQpO1xuICAgICAqIH0pO1xuICAgICovIC8qKlxuICAgICAgICogQXR0YWNoIHRoZSB7QGxpbmsgVmlkZW9UcmFja30gdG8gYW4gZXhpc3RpbmcgSFRNTE1lZGlhRWxlbWVudC4gVGhlXG4gICAgICAgKiBIVE1MTWVkaWFFbGVtZW50IGNvdWxkIGJlIGFuIEhUTUxBdWRpb0VsZW1lbnQgb3IgYW4gSFRNTFZpZGVvRWxlbWVudC5cbiAgICAgICAqXG4gICAgICAgKiBJZiB0aGUgSFRNTE1lZGlhRWxlbWVudCdzIDxjb2RlPnNyY09iamVjdDwvY29kZT4gaXMgbm90IHNldCB0byBhIE1lZGlhU3RyZWFtLFxuICAgICAgICogdGhpcyBtZXRob2Qgc2V0cyBpdCB0byBhIG5ldyBNZWRpYVN0cmVhbSBjb250YWluaW5nIHRoZSB7QGxpbmsgVmlkZW9UcmFja30nc1xuICAgICAgICogTWVkaWFTdHJlYW1UcmFjazsgb3RoZXJ3aXNlLCBpdCBhZGRzIHRoZSB7QGxpbmsgTWVkaWFUcmFja30nc1xuICAgICAgICogTWVkaWFTdHJlYW1UcmFjayB0byB0aGUgZXhpc3RpbmcgTWVkaWFTdHJlYW0uIEZpbmFsbHksIGlmIHRoZXJlIGFyZSBhbnkgb3RoZXJcbiAgICAgICAqIE1lZGlhU3RyZWFtVHJhY2tzIG9mIHRoZSBzYW1lIGtpbmQgb24gdGhlIE1lZGlhU3RyZWFtLCB0aGlzIG1ldGhvZCByZW1vdmVzXG4gICAgICAgKiB0aGVtLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7SFRNTE1lZGlhRWxlbWVudH0gbWVkaWFFbGVtZW50IC0gVGhlIEhUTUxNZWRpYUVsZW1lbnQgdG8gYXR0YWNoIHRvXG4gICAgICAgKiBAcmV0dXJucyB7SFRNTE1lZGlhRWxlbWVudH0gbWVkaWFFbGVtZW50XG4gICAgICAgKiBAZXhhbXBsZVxuICAgICAgICogY29uc3QgVmlkZW8gPSByZXF1aXJlKCd0d2lsaW8tdmlkZW8nKTtcbiAgICAgICAqXG4gICAgICAgKiBjb25zdCB2aWRlb0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2aWRlbycpO1xuICAgICAgICogZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2aWRlb0VsZW1lbnQpO1xuICAgICAgICpcbiAgICAgICAqIFZpZGVvLmNyZWF0ZUxvY2FsVmlkZW9UcmFjaygpLnRoZW4oZnVuY3Rpb24odmlkZW9UcmFjaykge1xuICAgICAgICogICB2aWRlb1RyYWNrLmF0dGFjaCh2aWRlb0VsZW1lbnQpO1xuICAgICAgICogfSk7XG4gICAgICAgKi8gLyoqXG4gICAgICAgICAgKiBBdHRhY2ggdGhlIHtAbGluayBWaWRlb1RyYWNrfSB0byBhbiBIVE1MTWVkaWFFbGVtZW50IHNlbGVjdGVkIGJ5XG4gICAgICAgICAgKiA8Y29kZT5kb2N1bWVudC5xdWVyeVNlbGVjdG9yPC9jb2RlPi4gVGhlIEhUTUxNZWRpYUVsZW1lbnQgY291bGQgYmUgYW5cbiAgICAgICAgICAqIEhUTUxBdWRpb0VsZW1lbnQgb3IgYW4gSFRNTFZpZGVvRWxlbWVudC5cbiAgICAgICAgICAqXG4gICAgICAgICAgKiBJZiB0aGUgSFRNTE1lZGlhRWxlbWVudCdzIDxjb2RlPnNyY09iamVjdDwvY29kZT4gaXMgbm90IHNldCB0byBhIE1lZGlhU3RyZWFtLFxuICAgICAgICAgICogdGhpcyBtZXRob2Qgc2V0cyBpdCB0byBhIG5ldyBNZWRpYVN0cmVhbSBjb250YWluaW5nIHRoZSB7QGxpbmsgVmlkZW9UcmFja30nc1xuICAgICAgICAgICogTWVkaWFTdHJlYW1UcmFjazsgb3RoZXJ3aXNlLCBpdCBhZGRzIHRoZSB7QGxpbmsgVmlkZW9UcmFja30nc1xuICAgICAgICAgICogTWVkaWFTdHJlYW1UcmFjayB0byB0aGUgZXhpc3RpbmcgTWVkaWFTdHJlYW0uIEZpbmFsbHksIGlmIHRoZXJlIGFyZSBhbnkgb3RoZXJcbiAgICAgICAgICAqIE1lZGlhU3RyZWFtVHJhY2tzIG9mIHRoZSBzYW1lIGtpbmQgb24gdGhlIE1lZGlhU3RyZWFtLCB0aGlzIG1ldGhvZCByZW1vdmVzXG4gICAgICAgICAgKiB0aGVtLlxuICAgICAgICAgICpcbiAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvciAtIEEgcXVlcnkgc2VsZWN0b3IgZm9yIHRoZSBIVE1MTWVkaWFFbGVtZW50IHRvXG4gICAgICAgICAgKiAgIGF0dGFjaCB0b1xuICAgICAgICAgICogQHJldHVybnMge0hUTUxNZWRpYUVsZW1lbnR9IG1lZGlhRWxlbWVudFxuICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAqIGNvbnN0IFZpZGVvID0gcmVxdWlyZSgndHdpbGlvLXZpZGVvJyk7XG4gICAgICAgICAgKlxuICAgICAgICAgICogY29uc3QgdmlkZW9FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKTtcbiAgICAgICAgICAqIHZpZGVvRWxlbWVudC5pZCA9ICdteS12aWRlby1lbGVtZW50JztcbiAgICAgICAgICAqIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodmlkZW9FbGVtZW50KTtcbiAgICAgICAgICAqXG4gICAgICAgICAgKiBWaWRlby5jcmVhdGVMb2NhbFZpZGVvVHJhY2soKS50aGVuKGZ1bmN0aW9uKHRyYWNrKSB7XG4gICAgICAgICAgKiAgIHRyYWNrLmF0dGFjaCgnI215LXZpZGVvLWVsZW1lbnQnKTtcbiAgICAgICAgICAqIH0pO1xuICAgICAgICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2F0dGFjaCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGF0dGFjaCgpIHtcbiAgICAgIHJldHVybiBfZ2V0KFZpZGVvVHJhY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVmlkZW9UcmFjay5wcm90b3R5cGUpLCAnYXR0YWNoJywgdGhpcykuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZXRhY2ggdGhlIHtAbGluayBWaWRlb1RyYWNrfSBmcm9tIGFsbCBwcmV2aW91c2x5IGF0dGFjaGVkIEhUTUxNZWRpYUVsZW1lbnRzLlxuICAgICAqIEByZXR1cm5zIHtBcnJheTxIVE1MTWVkaWFFbGVtZW50Pn0gbWVkaWFFbGVtZW50c1xuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3QgbWVkaWFFbGVtZW50cyA9IHZpZGVvVHJhY2suZGV0YWNoKCk7XG4gICAgICogbWVkaWFFbGVtZW50cy5mb3JFYWNoKG1lZGlhRWxlbWVudCA9PiBtZWRpYUVsZW1lbnQucmVtb3ZlKCkpO1xuICAgICovIC8qKlxuICAgICAgICogRGV0YWNoIHRoZSB7QGxpbmsgVmlkZW9UcmFja30gZnJvbSBhIHByZXZpb3VzbHkgYXR0YWNoZWQgSFRNTE1lZGlhRWxlbWVudC5cbiAgICAgICAqIEBwYXJhbSB7SFRNTE1lZGlhRWxlbWVudH0gbWVkaWFFbGVtZW50IC0gT25lIG9mIHRoZSBIVE1MTWVkaWFFbGVtZW50cyB0b1xuICAgICAgICogICB3aGljaCB0aGUge0BsaW5rIFZpZGVvVHJhY2t9IGlzIGF0dGFjaGVkXG4gICAgICAgKiBAcmV0dXJucyB7SFRNTE1lZGlhRWxlbWVudH0gbWVkaWFFbGVtZW50XG4gICAgICAgKiBAZXhhbXBsZVxuICAgICAgICogY29uc3QgdmlkZW9FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LXZpZGVvLWVsZW1lbnQnKTtcbiAgICAgICAqIHZpZGVvVHJhY2suZGV0YWNoKHZpZGVvRWxlbWVudCkucmVtb3ZlKCk7XG4gICAgICAgKi8gLyoqXG4gICAgICAgICAgKiBEZXRhY2ggdGhlIHtAbGluayBWaWRlb1RyYWNrfSBmcm9tIGEgcHJldmlvdXNseSBhdHRhY2hlZCBIVE1MTWVkaWFFbGVtZW50XG4gICAgICAgICAgKiAgIHNwZWNpZmllZCBieSA8Y29kZT5kb2N1bWVudC5xdWVyeVNlbGVjdG9yPC9jb2RlPi5cbiAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvciAtIFRoZSBxdWVyeSBzZWxlY3RvciBvZiBIVE1MTWVkaWFFbGVtZW50IHRvIHdoaWNoXG4gICAgICAgICAgKiAgICB0aGUge0BsaW5rIFZpZGVvVHJhY2t9IGlzIGF0dGFjaGVkXG4gICAgICAgICAgKiBAcmV0dXJucyB7SFRNTE1lZGlhRWxlbWVudH0gbWVkaWFFbGVtZW50XG4gICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICogdmlkZW9UcmFjay5kZXRhY2goJyNteS12aWRlby1lbGVtZW50JykucmVtb3ZlKCk7XG4gICAgICAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGV0YWNoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGV0YWNoKCkge1xuICAgICAgcmV0dXJuIF9nZXQoVmlkZW9UcmFjay5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihWaWRlb1RyYWNrLnByb3RvdHlwZSksICdkZXRhY2gnLCB0aGlzKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBWaWRlb1RyYWNrO1xufShNZWRpYVRyYWNrKTtcblxuVmlkZW9UcmFjay5ESU1FTlNJT05TX0NIQU5HRUQgPSAnZGltZW5zaW9uc0NoYW5nZWQnO1xuXG5mdW5jdGlvbiBkaW1lbnNpb25zQ2hhbmdlZCh0cmFjaywgZWxlbSkge1xuICByZXR1cm4gdHJhY2suZGltZW5zaW9ucy53aWR0aCAhPT0gZWxlbS52aWRlb1dpZHRoIHx8IHRyYWNrLmRpbWVuc2lvbnMuaGVpZ2h0ICE9PSBlbGVtLnZpZGVvSGVpZ2h0O1xufVxuXG4vKipcbiAqIEEge0BsaW5rIFZpZGVvVHJhY2t9J3Mgd2lkdGggYW5kIGhlaWdodC5cbiAqIEB0eXBlZGVmIHtvYmplY3R9IFZpZGVvVHJhY2suRGltZW5zaW9uc1xuICogQHByb3BlcnR5IHs/bnVtYmVyfSB3aWR0aCAtIFRoZSB7QGxpbmsgVmlkZW9UcmFja30ncyB3aWR0aCBvciBudWxsIGlmIHRoZVxuICogICB7QGxpbmsgVmlkZW9UcmFja30gaGFzIG5vdCB5ZXQgc3RhcnRlZFxuICogQHByb3BlcnR5IHs/bnVtYmVyfSBoZWlnaHQgLSBUaGUge0BsaW5rIFZpZGVvVHJhY2t9J3MgaGVpZ2h0IG9yIG51bGwgaWYgdGhlXG4gKiAgIHtAbGluayBWaWRlb1RyYWNrfSBoYXMgbm90IHlldCBzdGFydGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFZpZGVvVHJhY2t9J3MgZGltZW5zaW9ucyBjaGFuZ2VkLlxuICogQHBhcmFtIHtWaWRlb1RyYWNrfSB0cmFjayAtIFRoZSB7QGxpbmsgVmlkZW9UcmFja30gd2hvc2UgZGltZW5zaW9ucyBjaGFuZ2VkXG4gKiBAZXZlbnQgVmlkZW9UcmFjayNkaW1lbnNpb25zQ2hhbmdlZFxuICovXG5cbi8qKlxuICogVGhlIHtAbGluayBWaWRlb1RyYWNrfSB3YXMgZGlzYWJsZWQsIGkuZS4gXCJwYXVzZWRcIi5cbiAqIEBwYXJhbSB7VmlkZW9UcmFja30gdHJhY2sgLSBUaGUge0BsaW5rIFZpZGVvVHJhY2t9IHRoYXQgd2FzIGRpc2FibGVkXG4gKiBAZXZlbnQgVmlkZW9UcmFjayNkaXNhYmxlZFxuICovXG5cbi8qKlxuICogVGhlIHtAbGluayBWaWRlb1RyYWNrfSB3YXMgZW5hYmxlZCwgaS5lLiBcInVucGF1c2VkXCIuXG4gKiBAcGFyYW0ge1ZpZGVvVHJhY2t9IHRyYWNrIC0gVGhlIHtAbGluayBWaWRlb1RyYWNrfSB0aGF0IHdhcyBlbmFibGVkXG4gKiBAZXZlbnQgVmlkZW9UcmFjayNlbmFibGVkXG4gKi9cblxuLyoqXG4gKiBUaGUge0BsaW5rIFZpZGVvVHJhY2t9IHN0YXJ0ZWQuIFRoaXMgbWVhbnMgdGhlcmUgaXMgZW5vdWdoIHZpZGVvIGRhdGEgdG9cbiAqIGJlZ2luIHBsYXliYWNrLlxuICogQHBhcmFtIHtWaWRlb1RyYWNrfSB0cmFjayAtIFRoZSB7QGxpbmsgVmlkZW9UcmFja30gdGhhdCBzdGFydGVkXG4gKiBAZXZlbnQgVmlkZW9UcmFjayNzdGFydGVkXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBWaWRlb1RyYWNrOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/media/track/videotrack.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/networkqualityconfiguration.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/networkqualityconfiguration.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\nvar _require2 = __webpack_require__(/*! ./util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    DEFAULT_NQ_LEVEL_LOCAL = _require2.DEFAULT_NQ_LEVEL_LOCAL,\n    DEFAULT_NQ_LEVEL_REMOTE = _require2.DEFAULT_NQ_LEVEL_REMOTE,\n    MAX_NQ_LEVEL = _require2.MAX_NQ_LEVEL;\n\nvar _require3 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    inRange = _require3.inRange;\n\n/**\n * {@link NetworkQualityConfigurationImpl} represents an object which notifies its\n * listeners of any changes in the values of its properties.\n * @extends EventEmitter\n * @implements NetworkQualityConfiguration\n * @property {?NetworkQualityVerbosity} local - Verbosity level for {@link LocalParticipant}\n * @property {?NetworkQualityVerbosity} remote - Verbosity level for {@link RemoteParticipant}s\n */\n\n\nvar NetworkQualityConfigurationImpl = function (_EventEmitter) {\n  _inherits(NetworkQualityConfigurationImpl, _EventEmitter);\n\n  /**\n   * Construct an {@link NetworkQualityConfigurationImpl}.\n   * @param {NetworkQualityConfiguration} networkQualityConfiguration - Initial {@link NetworkQualityConfiguration}\n   */\n  function NetworkQualityConfigurationImpl(networkQualityConfiguration) {\n    _classCallCheck(this, NetworkQualityConfigurationImpl);\n\n    var _this = _possibleConstructorReturn(this, (NetworkQualityConfigurationImpl.__proto__ || Object.getPrototypeOf(NetworkQualityConfigurationImpl)).call(this));\n\n    networkQualityConfiguration = Object.assign({\n      local: DEFAULT_NQ_LEVEL_LOCAL,\n      remote: DEFAULT_NQ_LEVEL_REMOTE\n    }, networkQualityConfiguration);\n\n    Object.defineProperties(_this, {\n      local: {\n        value: inRange(networkQualityConfiguration.local, DEFAULT_NQ_LEVEL_LOCAL, MAX_NQ_LEVEL) ? networkQualityConfiguration.local : DEFAULT_NQ_LEVEL_LOCAL,\n        writable: true\n      },\n      remote: {\n        value: inRange(networkQualityConfiguration.remote, DEFAULT_NQ_LEVEL_REMOTE, MAX_NQ_LEVEL) ? networkQualityConfiguration.remote : DEFAULT_NQ_LEVEL_REMOTE,\n        writable: true\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Update the verbosity levels for network quality information for\n   * {@link LocalParticipant} and {@link RemoteParticipant} with those\n   * in the given {@link NetworkQualityConfiguration}.\n   * @param {NetworkQualityConfiguration} networkQualityConfiguration - The new {@link NetworkQualityConfiguration}\n   */\n\n\n  _createClass(NetworkQualityConfigurationImpl, [{\n    key: 'update',\n    value: function update(networkQualityConfiguration) {\n      var _this2 = this;\n\n      networkQualityConfiguration = Object.assign({\n        local: this.local,\n        remote: this.remote\n      }, networkQualityConfiguration);\n\n      [['local', DEFAULT_NQ_LEVEL_LOCAL, 3], ['remote', DEFAULT_NQ_LEVEL_REMOTE, 3]].forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            localOrRemote = _ref2[0],\n            min = _ref2[1],\n            max = _ref2[2];\n\n        _this2[localOrRemote] = typeof networkQualityConfiguration[localOrRemote] === 'number' && inRange(networkQualityConfiguration[localOrRemote], min, max) ? networkQualityConfiguration[localOrRemote] : min;\n      });\n    }\n  }]);\n\n  return NetworkQualityConfigurationImpl;\n}(EventEmitter);\n\nmodule.exports = NetworkQualityConfigurationImpl;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/networkqualityconfiguration.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/participant.js":
/*!******************************************************!*\
  !*** ./node_modules/twilio-video/es5/participant.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! ./eventemitter */ \"./node_modules/twilio-video/es5/eventemitter.js\");\nvar RemoteAudioTrack = __webpack_require__(/*! ./media/track/remoteaudiotrack */ \"./node_modules/twilio-video/es5/media/track/remoteaudiotrack.js\");\nvar RemoteAudioTrackPublication = __webpack_require__(/*! ./media/track/remoteaudiotrackpublication */ \"./node_modules/twilio-video/es5/media/track/remoteaudiotrackpublication.js\");\nvar RemoteDataTrack = __webpack_require__(/*! ./media/track/remotedatatrack */ \"./node_modules/twilio-video/es5/media/track/remotedatatrack.js\");\nvar RemoteDataTrackPublication = __webpack_require__(/*! ./media/track/remotedatatrackpublication */ \"./node_modules/twilio-video/es5/media/track/remotedatatrackpublication.js\");\nvar RemoteVideoTrack = __webpack_require__(/*! ./media/track/remotevideotrack */ \"./node_modules/twilio-video/es5/media/track/remotevideotrack.js\");\nvar RemoteVideoTrackPublication = __webpack_require__(/*! ./media/track/remotevideotrackpublication */ \"./node_modules/twilio-video/es5/media/track/remotevideotrackpublication.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\");\n\nvar nInstances = 0;\n\n/**\n * {@link NetworkQualityLevel} is a value from 0–5, inclusive, representing the\n * quality of a network connection.\n * @typedef {number} NetworkQualityLevel\n */\n\n/**\n * @extends EventEmitter\n * @property {Map<Track.SID, AudioTrackPublication>} audioTracks -\n *    The {@link Participant}'s {@link AudioTrackPublication}s\n * @property {Map<Track.SID, DataTrackPublication>} dataTracks -\n *    The {@link Participant}'s {@link DataTrackPublication}s.\n * @property {Participant.Identity} identity - The identity of the {@link Participant}\n * @property {?NetworkQualityLevel} networkQualityLevel - The\n *    {@link Participant}'s current {@link NetworkQualityLevel}, if any\n * @property {?NetworkQualityStats} networkQualityStats - The\n *    {@link Participant}'s current {@link NetworkQualityStats}, if any\n * @property {Participant.SID} sid - The {@link Participant}'s SID\n * @property {string} state - \"connected\", \"disconnected\" or \"reconnecting\"\n * @property {Map<Track.SID, TrackPublication>} tracks -\n *    The {@link Participant}'s {@link TrackPublication}s\n * @property {Map<Track.SID, VideoTrackPublication>} videoTracks -\n *    The {@link Participant}'s {@link VideoTrackPublication}s\n * @emits Participant#disconnected\n * @emits Participant#networkQualityLevelChanged\n * @emits Participant#reconnected\n * @emits Participant#reconnecting\n * @emits Participant#trackDimensionsChanged\n * @emits Participant#trackStarted\n */\n\nvar Participant = function (_EventEmitter) {\n  _inherits(Participant, _EventEmitter);\n\n  /**\n   * Construct a {@link Participant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {object} [options]\n   */\n  function Participant(signaling, options) {\n    _classCallCheck(this, Participant);\n\n    var _this = _possibleConstructorReturn(this, (Participant.__proto__ || Object.getPrototypeOf(Participant)).call(this));\n\n    options = Object.assign({\n      RemoteAudioTrack: RemoteAudioTrack,\n      RemoteAudioTrackPublication: RemoteAudioTrackPublication,\n      RemoteDataTrack: RemoteDataTrack,\n      RemoteDataTrackPublication: RemoteDataTrackPublication,\n      RemoteVideoTrack: RemoteVideoTrack,\n      RemoteVideoTrackPublication: RemoteVideoTrackPublication,\n      tracks: []\n    }, options);\n\n    var indexed = indexTracksById(options.tracks);\n    var log = options.log.createLog('default', _this);\n    var audioTracks = new Map(indexed.audioTracks);\n    var dataTracks = new Map(indexed.dataTracks);\n    var tracks = new Map(indexed.tracks);\n    var videoTracks = new Map(indexed.videoTracks);\n\n    Object.defineProperties(_this, {\n      _RemoteAudioTrack: {\n        value: options.RemoteAudioTrack\n      },\n      _RemoteAudioTrackPublication: {\n        value: options.RemoteAudioTrackPublication\n      },\n      _RemoteDataTrack: {\n        value: options.RemoteDataTrack\n      },\n      _RemoteDataTrackPublication: {\n        value: options.RemoteDataTrackPublication\n      },\n      _RemoteVideoTrack: {\n        value: options.RemoteVideoTrack\n      },\n      _RemoteVideoTrackPublication: {\n        value: options.RemoteVideoTrackPublication\n      },\n      _audioTracks: {\n        value: audioTracks\n      },\n      _dataTracks: {\n        value: dataTracks\n      },\n      _instanceId: {\n        value: ++nInstances\n      },\n      _log: {\n        value: log\n      },\n      _signaling: {\n        value: signaling\n      },\n      _tracks: {\n        value: tracks\n      },\n      _trackEventReemitters: {\n        value: new Map()\n      },\n      _trackPublicationEventReemitters: {\n        value: new Map()\n      },\n      _trackSignalingUpdatedEventCallbacks: {\n        value: new Map()\n      },\n      _videoTracks: {\n        value: videoTracks\n      },\n      audioTracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      dataTracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return signaling.identity;\n        }\n      },\n      networkQualityLevel: {\n        enumerable: true,\n        get: function get() {\n          return signaling.networkQualityLevel;\n        }\n      },\n      networkQualityStats: {\n        enumerable: true,\n        get: function get() {\n          return signaling.networkQualityStats;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return signaling.sid;\n        }\n      },\n      state: {\n        enumerable: true,\n        get: function get() {\n          return signaling.state;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      videoTracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n\n    _this._tracks.forEach(reemitTrackEvents.bind(null, _this));\n    signaling.on('networkQualityLevelChanged', function () {\n      return _this.emit('networkQualityLevelChanged', _this.networkQualityLevel, _this.networkQualityStats && (_this.networkQualityStats.audio || _this.networkQualityStats.video) ? _this.networkQualityStats : null);\n    });\n    reemitSignalingStateChangedEvents(_this, signaling);\n    log.info('Created a new Participant' + (_this.identity ? ': ' + _this.identity : ''));\n    return _this;\n  }\n\n  /**\n   * Get the {@link RemoteTrack} events to re-emit.\n   * @private\n   * @returns {Array<Array<string>>} events\n   */\n\n\n  _createClass(Participant, [{\n    key: '_getTrackEvents',\n    value: function _getTrackEvents() {\n      return [['dimensionsChanged', 'trackDimensionsChanged'], ['message', 'trackMessage'], ['started', 'trackStarted']];\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackPublicationEvents',\n    value: function _getTrackPublicationEvents() {\n      return [];\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[Participant #' + this._instanceId + ': ' + this.sid + ']';\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrack} track\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n\n  }, {\n    key: '_addTrack',\n    value: function _addTrack(track, id) {\n      var log = this._log;\n      if (this._tracks.has(id)) {\n        return null;\n      }\n      this._tracks.set(id, track);\n\n      var tracksByKind = {\n        audio: this._audioTracks,\n        video: this._videoTracks,\n        data: this._dataTracks\n      }[track.kind];\n      tracksByKind.set(id, track);\n      reemitTrackEvents(this, track, id);\n\n      log.info('Added a new ' + util.trackClass(track) + ':', id);\n      log.debug(util.trackClass(track) + ':', track);\n\n      return track;\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n\n  }, {\n    key: '_addTrackPublication',\n    value: function _addTrackPublication(publication) {\n      var log = this._log;\n      if (this.tracks.has(publication.trackSid)) {\n        return null;\n      }\n      this.tracks.set(publication.trackSid, publication);\n\n      var trackPublicationsByKind = {\n        audio: this.audioTracks,\n        data: this.dataTracks,\n        video: this.videoTracks\n      }[publication.kind];\n      trackPublicationsByKind.set(publication.trackSid, publication);\n      reemitTrackPublicationEvents(this, publication);\n\n      log.info('Added a new ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\n      return publication;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_handleTrackSignalingEvents',\n    value: function _handleTrackSignalingEvents() {\n      var log = this._log;\n      var self = this;\n\n      if (this.state === 'disconnected') {\n        return;\n      }\n\n      var RemoteAudioTrack = this._RemoteAudioTrack;\n      var RemoteAudioTrackPublication = this._RemoteAudioTrackPublication;\n      var RemoteVideoTrack = this._RemoteVideoTrack;\n      var RemoteVideoTrackPublication = this._RemoteVideoTrackPublication;\n      var RemoteDataTrack = this._RemoteDataTrack;\n      var RemoteDataTrackPublication = this._RemoteDataTrackPublication;\n      var participantSignaling = this._signaling;\n\n      function trackSignalingAdded(signaling) {\n        var RemoteTrackPublication = {\n          audio: RemoteAudioTrackPublication,\n          data: RemoteDataTrackPublication,\n          video: RemoteVideoTrackPublication\n        }[signaling.kind];\n\n        var publication = new RemoteTrackPublication(signaling, { log: log });\n        self._addTrackPublication(publication);\n\n        var isSubscribed = signaling.isSubscribed;\n        if (isSubscribed) {\n          trackSignalingSubscribed(signaling);\n        }\n\n        self._trackSignalingUpdatedEventCallbacks.set(signaling.sid, function () {\n          if (isSubscribed !== signaling.isSubscribed) {\n            isSubscribed = signaling.isSubscribed;\n            if (isSubscribed) {\n              trackSignalingSubscribed(signaling);\n              return;\n            }\n            trackSignalingUnsubscribed(signaling);\n          }\n        });\n        signaling.on('updated', self._trackSignalingUpdatedEventCallbacks.get(signaling.sid));\n      }\n\n      function trackSignalingRemoved(signaling) {\n        if (signaling.isSubscribed) {\n          signaling.setTrackTransceiver(null);\n        }\n        var updated = self._trackSignalingUpdatedEventCallbacks.get(signaling.sid);\n        if (updated) {\n          signaling.removeListener('updated', updated);\n          self._trackSignalingUpdatedEventCallbacks.delete(signaling.sid);\n        }\n        var publication = self.tracks.get(signaling.sid);\n        if (publication) {\n          self._removeTrackPublication(publication);\n        }\n      }\n\n      function trackSignalingSubscribed(signaling) {\n        var isEnabled = signaling.isEnabled,\n            name = signaling.name,\n            kind = signaling.kind,\n            sid = signaling.sid,\n            trackTransceiver = signaling.trackTransceiver;\n\n        var RemoteTrack = {\n          audio: RemoteAudioTrack,\n          video: RemoteVideoTrack,\n          data: RemoteDataTrack\n        }[kind];\n\n        var publication = self.tracks.get(sid);\n\n        // NOTE(mroberts): It should never be the case that the TrackSignaling and\n        // MediaStreamTrack or DataTrackReceiver kinds disagree; however, just in\n        // case, we handle it here.\n        if (!RemoteTrack || kind !== trackTransceiver.kind) {\n          return;\n        }\n\n        var options = { log: log, name: name };\n        var setPriority = function setPriority(newPriority) {\n          return participantSignaling.updateSubscriberTrackPriority(sid, newPriority);\n        };\n        var track = kind === 'data' ? new RemoteTrack(sid, trackTransceiver, options) : new RemoteTrack(sid, trackTransceiver, isEnabled, setPriority, options);\n\n        self._addTrack(track, publication, trackTransceiver.id);\n      }\n\n      function trackSignalingUnsubscribed(signaling) {\n        var _Array$from$find = Array.from(self._tracks.entries()).find(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              track = _ref2[1];\n\n          return track.sid === signaling.sid;\n        }),\n            _Array$from$find2 = _slicedToArray(_Array$from$find, 2),\n            id = _Array$from$find2[0],\n            track = _Array$from$find2[1];\n\n        var publication = self.tracks.get(signaling.sid);\n        if (track) {\n          self._removeTrack(track, publication, id);\n        }\n      }\n\n      participantSignaling.on('trackAdded', trackSignalingAdded);\n      participantSignaling.on('trackRemoved', trackSignalingRemoved);\n\n      participantSignaling.tracks.forEach(trackSignalingAdded);\n\n      participantSignaling.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          log.debug('Removing event listeners');\n          participantSignaling.removeListener('stateChanged', stateChanged);\n          participantSignaling.removeListener('trackAdded', trackSignalingAdded);\n          participantSignaling.removeListener('trackRemoved', trackSignalingRemoved);\n        } else if (state === 'connected') {\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\n          // successful signaling reconnection, and not a first-time establishment\n          // of the signaling connection.\n          log.info('reconnected');\n\n          // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n          // Do not signal  public events synchronously with lock held.\n          setTimeout(function () {\n            return self.emit('reconnected');\n          }, 0);\n        }\n      });\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrack} track\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(track, id) {\n      if (!this._tracks.has(id)) {\n        return null;\n      }\n      this._tracks.delete(id);\n\n      var tracksByKind = {\n        audio: this._audioTracks,\n        video: this._videoTracks,\n        data: this._dataTracks\n      }[track.kind];\n      tracksByKind.delete(id);\n\n      var reemitters = this._trackEventReemitters.get(id) || new Map();\n      reemitters.forEach(function (reemitter, event) {\n        track.removeListener(event, reemitter);\n      });\n\n      var log = this._log;\n      log.info('Removed a ' + util.trackClass(track) + ':', id);\n      log.debug(util.trackClass(track) + ':', track);\n      return track;\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n\n  }, {\n    key: '_removeTrackPublication',\n    value: function _removeTrackPublication(publication) {\n      publication = this.tracks.get(publication.trackSid);\n      if (!publication) {\n        return null;\n      }\n      this.tracks.delete(publication.trackSid);\n\n      var trackPublicationsByKind = {\n        audio: this.audioTracks,\n        data: this.dataTracks,\n        video: this.videoTracks\n      }[publication.kind];\n      trackPublicationsByKind.delete(publication.trackSid);\n\n      var reemitters = this._trackPublicationEventReemitters.get(publication.trackSid) || new Map();\n      reemitters.forEach(function (reemitter, event) {\n        publication.removeListener(event, reemitter);\n      });\n\n      var log = this._log;\n      log.info('Removed a ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\n      return publication;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return util.valueToJSON(this);\n    }\n  }]);\n\n  return Participant;\n}(EventEmitter);\n\n/**\n * A {@link Participant.SID} is a 34-character string starting with \"PA\"\n * that uniquely identifies a {@link Participant}.\n * @type string\n * @typedef Participant.SID\n */\n\n/**\n * A {@link Participant.Identity} is a string that identifies a\n * {@link Participant}. You can think of it like a name.\n * @typedef {string} Participant.Identity\n */\n\n/**\n * The {@link Participant} has disconnected.\n * @param {Participant} participant - The {@link Participant} that disconnected.\n * @event Participant#disconnected\n */\n\n/**\n * The {@link Participant}'s {@link NetworkQualityLevel} changed.\n * @param {NetworkQualityLevel} networkQualityLevel - The new\n *   {@link NetworkQualityLevel}\n * @param {?NetworkQualityStats} networkQualityStats - The {@link NetworkQualityStats}\n *   based on which {@link NetworkQualityLevel} is calculated, if any\n * @event Participant#networkQualityLevelChanged\n */\n\n/**\n * The {@link Participant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event Participant#reconnected\n */\n\n/**\n * The {@link Participant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event Participant#reconnecting\n */\n\n/**\n * One of the {@link Participant}'s {@link VideoTrack}'s dimensions changed.\n * @param {VideoTrack} track - The {@link VideoTrack} whose dimensions changed\n * @event Participant#trackDimensionsChanged\n */\n\n/**\n * One of the {@link Participant}'s {@link Track}s started.\n * @param {Track} track - The {@link Track} that started\n * @event Participant#trackStarted\n */\n\n/**\n * Indexed {@link Track}s by {@link Track.ID}.\n * @typedef {object} IndexedTracks\n * @property {Array<{0: Track.ID, 1: AudioTrack}>} audioTracks - Indexed\n *   {@link AudioTrack}s\n * @property {Array<{0: Track.ID, 1: DataTrack}>} dataTracks - Indexed\n *   {@link DataTrack}s\n * @property {Array<{0: Track.ID, 1: Track}>} tracks - Indexed {@link Track}s\n * @property {Array<{0: Track.ID, 1: VideoTrack}>} videoTracks - Indexed\n *   {@link VideoTrack}s\n * @private\n */\n\n/**\n * Index tracks by {@link Track.ID}.\n * @param {Array<Track>} tracks\n * @returns {IndexedTracks}\n * @private\n */\n\n\nfunction indexTracksById(tracks) {\n  var indexedTracks = tracks.map(function (track) {\n    return [track.id, track];\n  });\n  var indexedAudioTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'audio';\n  });\n  var indexedVideoTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'video';\n  });\n  var indexedDataTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'data';\n  });\n\n  return {\n    audioTracks: indexedAudioTracks,\n    dataTracks: indexedDataTracks,\n    tracks: indexedTracks,\n    videoTracks: indexedVideoTracks\n  };\n}\n\n/**\n * Re-emit {@link ParticipantSignaling} 'stateChanged' events.\n * @param {Participant} participant\n * @param {ParticipantSignaling} signaling\n * @private\n */\nfunction reemitSignalingStateChangedEvents(participant, signaling) {\n  var log = participant._log;\n\n  if (participant.state === 'disconnected') {\n    return;\n  }\n\n  // Reemit state transition events from the ParticipantSignaling.\n  signaling.on('stateChanged', function stateChanged(state) {\n    log.debug('Transitioned to state:', state);\n    participant.emit(state, participant);\n    if (state === 'disconnected') {\n      log.debug('Removing Track event reemitters');\n      signaling.removeListener('stateChanged', stateChanged);\n\n      signaling.tracks.forEach(function (trackSignaling) {\n        var track = participant._tracks.get(trackSignaling.id);\n        var reemitters = participant._trackEventReemitters.get(trackSignaling.id);\n        if (track && reemitters) {\n          reemitters.forEach(function (reemitter, event) {\n            track.removeListener(event, reemitter);\n          });\n        }\n      });\n      participant._trackEventReemitters.clear();\n\n      participant.tracks.forEach(function (publication) {\n        participant._trackPublicationEventReemitters.get(publication.trackSid).forEach(function (reemitter, event) {\n          publication.removeListener(event, reemitter);\n        });\n      });\n      participant._trackPublicationEventReemitters.clear();\n    }\n  });\n}\n\n/**\n * Re-emit {@link Track} events.\n * @param {Participant} participant\n * @param {Track} track\n * @param {Track.ID} id\n * @private\n */\nfunction reemitTrackEvents(participant, track, id) {\n  var trackEventReemitters = new Map();\n\n  if (participant.state === 'disconnected') {\n    return;\n  }\n\n  participant._getTrackEvents().forEach(function (eventPair) {\n    var trackEvent = eventPair[0];\n    var participantEvent = eventPair[1];\n\n    trackEventReemitters.set(trackEvent, function () {\n      var args = [participantEvent].concat([].slice.call(arguments));\n      return participant.emit.apply(participant, _toConsumableArray(args));\n    });\n\n    track.on(trackEvent, trackEventReemitters.get(trackEvent));\n  });\n\n  participant._trackEventReemitters.set(id, trackEventReemitters);\n}\n\n/**\n * Re-emit {@link TrackPublication} events.\n * @private\n * @param {Participant} participant\n * @param {TrackPublication} publication\n */\nfunction reemitTrackPublicationEvents(participant, publication) {\n  var publicationEventReemitters = new Map();\n\n  if (participant.state === 'disconnected') {\n    return;\n  }\n\n  participant._getTrackPublicationEvents().forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        publicationEvent = _ref4[0],\n        participantEvent = _ref4[1];\n\n    publicationEventReemitters.set(publicationEvent, function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      participant.emit.apply(participant, [participantEvent].concat(args, [publication]));\n    });\n    publication.on(publicationEvent, publicationEventReemitters.get(publicationEvent));\n  });\n\n  participant._trackPublicationEventReemitters.set(publication.trackSid, publicationEventReemitters);\n}\n\nmodule.exports = Participant;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/participant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/queueingeventemitter.js":
/*!***************************************************************!*\
  !*** ./node_modules/twilio-video/es5/queueingeventemitter.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n/**\n * A {@link QueueingEventEmitter} can queue events until a listener has been\n * added.\n * @extends EventEmitter\n */\n\nvar QueueingEventEmitter = function (_EventEmitter) {\n  _inherits(QueueingEventEmitter, _EventEmitter);\n\n  /**\n   * Construct a {@link QueueingEventEmitter}\n   */\n  function QueueingEventEmitter() {\n    _classCallCheck(this, QueueingEventEmitter);\n\n    var _this = _possibleConstructorReturn(this, (QueueingEventEmitter.__proto__ || Object.getPrototypeOf(QueueingEventEmitter)).call(this));\n\n    Object.defineProperties(_this, {\n      _queuedEvents: {\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Emit any queued events.\n   * @returns {boolean} true if every event had listeners, false otherwise\n  */ /**\n     * Emit any queued events matching the event name.\n     * @param {string} event\n     * @returns {boolean} true if every event had listeners, false otherwise\n     */\n\n\n  _createClass(QueueingEventEmitter, [{\n    key: 'dequeue',\n    value: function dequeue(event) {\n      var _this2 = this;\n\n      var result = true;\n      if (!event) {\n        this._queuedEvents.forEach(function (_, queuedEvent) {\n          result = this.dequeue(queuedEvent) && result;\n        }, this);\n        return result;\n      }\n      var queue = this._queuedEvents.get(event) || [];\n      this._queuedEvents.delete(event);\n      return queue.reduce(function (result, args) {\n        return _this2.emit.apply(_this2, _toConsumableArray([event].concat(args))) && result;\n      }, result);\n    }\n\n    /**\n     * If the event has listeners, emit the event; otherwise, queue the event.\n     * @param {string} event\n     * @param {...*} args\n     * @returns {boolean} true if the event had listeners, false if the event was queued\n     */\n\n  }, {\n    key: 'queue',\n    value: function queue() {\n      var args = [].slice.call(arguments);\n      if (this.emit.apply(this, _toConsumableArray(args))) {\n        return true;\n      }\n      var event = args[0];\n      if (!this._queuedEvents.has(event)) {\n        this._queuedEvents.set(event, []);\n      }\n      this._queuedEvents.get(event).push(args.slice(1));\n      return false;\n    }\n  }]);\n\n  return QueueingEventEmitter;\n}(EventEmitter);\n\nmodule.exports = QueueingEventEmitter;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9xdWV1ZWluZ2V2ZW50ZW1pdHRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3F1ZXVlaW5nZXZlbnRlbWl0dGVyLmpzPzE3ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG4vKipcbiAqIEEge0BsaW5rIFF1ZXVlaW5nRXZlbnRFbWl0dGVyfSBjYW4gcXVldWUgZXZlbnRzIHVudGlsIGEgbGlzdGVuZXIgaGFzIGJlZW5cbiAqIGFkZGVkLlxuICogQGV4dGVuZHMgRXZlbnRFbWl0dGVyXG4gKi9cblxudmFyIFF1ZXVlaW5nRXZlbnRFbWl0dGVyID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKFF1ZXVlaW5nRXZlbnRFbWl0dGVyLCBfRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFF1ZXVlaW5nRXZlbnRFbWl0dGVyfVxuICAgKi9cbiAgZnVuY3Rpb24gUXVldWVpbmdFdmVudEVtaXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFF1ZXVlaW5nRXZlbnRFbWl0dGVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChRdWV1ZWluZ0V2ZW50RW1pdHRlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFF1ZXVlaW5nRXZlbnRFbWl0dGVyKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX3F1ZXVlZEV2ZW50czoge1xuICAgICAgICB2YWx1ZTogbmV3IE1hcCgpXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEVtaXQgYW55IHF1ZXVlZCBldmVudHMuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGV2ZXJ5IGV2ZW50IGhhZCBsaXN0ZW5lcnMsIGZhbHNlIG90aGVyd2lzZVxuICAqLyAvKipcbiAgICAgKiBFbWl0IGFueSBxdWV1ZWQgZXZlbnRzIG1hdGNoaW5nIHRoZSBldmVudCBuYW1lLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGV2ZXJ5IGV2ZW50IGhhZCBsaXN0ZW5lcnMsIGZhbHNlIG90aGVyd2lzZVxuICAgICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKFF1ZXVlaW5nRXZlbnRFbWl0dGVyLCBbe1xuICAgIGtleTogJ2RlcXVldWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXF1ZXVlKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHJlc3VsdCA9IHRydWU7XG4gICAgICBpZiAoIWV2ZW50KSB7XG4gICAgICAgIHRoaXMuX3F1ZXVlZEV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChfLCBxdWV1ZWRFdmVudCkge1xuICAgICAgICAgIHJlc3VsdCA9IHRoaXMuZGVxdWV1ZShxdWV1ZWRFdmVudCkgJiYgcmVzdWx0O1xuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBxdWV1ZSA9IHRoaXMuX3F1ZXVlZEV2ZW50cy5nZXQoZXZlbnQpIHx8IFtdO1xuICAgICAgdGhpcy5fcXVldWVkRXZlbnRzLmRlbGV0ZShldmVudCk7XG4gICAgICByZXR1cm4gcXVldWUucmVkdWNlKGZ1bmN0aW9uIChyZXN1bHQsIGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5lbWl0LmFwcGx5KF90aGlzMiwgX3RvQ29uc3VtYWJsZUFycmF5KFtldmVudF0uY29uY2F0KGFyZ3MpKSkgJiYgcmVzdWx0O1xuICAgICAgfSwgcmVzdWx0KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJZiB0aGUgZXZlbnQgaGFzIGxpc3RlbmVycywgZW1pdCB0aGUgZXZlbnQ7IG90aGVyd2lzZSwgcXVldWUgdGhlIGV2ZW50LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFxuICAgICAqIEBwYXJhbSB7Li4uKn0gYXJnc1xuICAgICAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIHRoZSBldmVudCBoYWQgbGlzdGVuZXJzLCBmYWxzZSBpZiB0aGUgZXZlbnQgd2FzIHF1ZXVlZFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdxdWV1ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHF1ZXVlKCkge1xuICAgICAgdmFyIGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgICBpZiAodGhpcy5lbWl0LmFwcGx5KHRoaXMsIF90b0NvbnN1bWFibGVBcnJheShhcmdzKSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICB2YXIgZXZlbnQgPSBhcmdzWzBdO1xuICAgICAgaWYgKCF0aGlzLl9xdWV1ZWRFdmVudHMuaGFzKGV2ZW50KSkge1xuICAgICAgICB0aGlzLl9xdWV1ZWRFdmVudHMuc2V0KGV2ZW50LCBbXSk7XG4gICAgICB9XG4gICAgICB0aGlzLl9xdWV1ZWRFdmVudHMuZ2V0KGV2ZW50KS5wdXNoKGFyZ3Muc2xpY2UoMSkpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBRdWV1ZWluZ0V2ZW50RW1pdHRlcjtcbn0oRXZlbnRFbWl0dGVyKTtcblxubW9kdWxlLmV4cG9ydHMgPSBRdWV1ZWluZ0V2ZW50RW1pdHRlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/queueingeventemitter.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/remoteparticipant.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-video/es5/remoteparticipant.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Participant = __webpack_require__(/*! ./participant */ \"./node_modules/twilio-video/es5/participant.js\");\n\n/**\n * A {@link RemoteParticipant} represents a remote {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, RemoteAudioTrackPublication>} audioTracks -\n *    The {@link Participant}'s {@link RemoteAudioTrackPublication}s\n * @property {Map<Track.SID, RemoteDataTrackPublication>} dataTracks -\n *    The {@link Participant}'s {@link RemoteDataTrackPublication}s\n * @property {Map<Track.SID, RemoteTrackPublication>} tracks -\n *    The {@link Participant}'s {@link RemoteTrackPublication}s\n * @property {Map<Track.SID, RemoteVideoTrackPublication>} videoTracks -\n *    The {@link Participant}'s {@link RemoteVideoTrackPublication}s\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits RemoteParticipant#trackDimensionsChanged\n * @emits RemoteParticipant#trackDisabled\n * @emits RemoteParticipant#trackEnabled\n * @emits RemoteParticipant#trackMessage\n * @emits RemoteParticipant#trackPublished\n * @emits RemoteParticipant#trackPublishPriorityChanged\n * @emits RemoteParticipant#trackStarted\n * @emits RemoteParticipant#trackSubscribed\n * @emits RemoteParticipant#trackSubscriptionFailed\n * @emits RemoteParticipant#trackSwitchedOff\n * @emits RemoteParticipant#trackSwitchedOn\n * @emits RemoteParticipant#trackUnpublished\n * @emits RemoteParticipant#trackUnsubscribed\n */\n\nvar RemoteParticipant = function (_Participant) {\n  _inherits(RemoteParticipant, _Participant);\n\n  /**\n   * Construct a {@link RemoteParticipant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {object} [options]\n   */\n  function RemoteParticipant(signaling, options) {\n    _classCallCheck(this, RemoteParticipant);\n\n    var _this = _possibleConstructorReturn(this, (RemoteParticipant.__proto__ || Object.getPrototypeOf(RemoteParticipant)).call(this, signaling, options));\n\n    _this._handleTrackSignalingEvents();\n    _this.once('disconnected', _this._unsubscribeTracks.bind(_this));\n    return _this;\n  }\n\n  _createClass(RemoteParticipant, [{\n    key: 'toString',\n    value: function toString() {\n      return '[RemoteParticipant #' + this._instanceId + (this.sid ? ': ' + this.sid : '') + ']';\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrack} remoteTrack\n     * @param {RemoteTrackPublication} publication\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n\n  }, {\n    key: '_addTrack',\n    value: function _addTrack(remoteTrack, publication, id) {\n      if (!_get(RemoteParticipant.prototype.__proto__ || Object.getPrototypeOf(RemoteParticipant.prototype), '_addTrack', this).call(this, remoteTrack, id)) {\n        return null;\n      }\n      publication._subscribed(remoteTrack);\n      this.emit('trackSubscribed', remoteTrack, publication);\n      return remoteTrack;\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n\n  }, {\n    key: '_addTrackPublication',\n    value: function _addTrackPublication(publication) {\n      var addedPublication = _get(RemoteParticipant.prototype.__proto__ || Object.getPrototypeOf(RemoteParticipant.prototype), '_addTrackPublication', this).call(this, publication);\n      if (!addedPublication) {\n        return null;\n      }\n      this.emit('trackPublished', addedPublication);\n      return addedPublication;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackPublicationEvents',\n    value: function _getTrackPublicationEvents() {\n      return [].concat(_toConsumableArray(_get(RemoteParticipant.prototype.__proto__ || Object.getPrototypeOf(RemoteParticipant.prototype), '_getTrackPublicationEvents', this).call(this)), [['subscriptionFailed', 'trackSubscriptionFailed'], ['trackDisabled', 'trackDisabled'], ['trackEnabled', 'trackEnabled'], ['publishPriorityChanged', 'trackPublishPriorityChanged'], ['trackSwitchedOff', 'trackSwitchedOff'], ['trackSwitchedOn', 'trackSwitchedOn']]);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_unsubscribeTracks',\n    value: function _unsubscribeTracks() {\n      var _this2 = this;\n\n      this.tracks.forEach(function (publication) {\n        if (publication.isSubscribed) {\n          var track = publication.track;\n          publication._unsubscribe();\n          _this2.emit('trackUnsubscribed', track, publication);\n        }\n      });\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrack} remoteTrack\n     * @param {RemoteTrackPublication} publication\n     * @param {Track.ID} id\n     * @returns {?RemoteTrack}\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(remoteTrack, publication, id) {\n      var unsubscribedTrack = this._tracks.get(id);\n      if (!unsubscribedTrack) {\n        return null;\n      }\n\n      _get(RemoteParticipant.prototype.__proto__ || Object.getPrototypeOf(RemoteParticipant.prototype), '_removeTrack', this).call(this, unsubscribedTrack, id);\n      publication._unsubscribe();\n      this.emit('trackUnsubscribed', unsubscribedTrack, publication);\n      return unsubscribedTrack;\n    }\n\n    /**\n     * @private\n     * @param {RemoteTrackPublication} publication\n     * @returns {?RemoteTrackPublication}\n     */\n\n  }, {\n    key: '_removeTrackPublication',\n    value: function _removeTrackPublication(publication) {\n      var removedPublication = _get(RemoteParticipant.prototype.__proto__ || Object.getPrototypeOf(RemoteParticipant.prototype), '_removeTrackPublication', this).call(this, publication);\n      if (!removedPublication) {\n        return null;\n      }\n      this.emit('trackUnpublished', removedPublication);\n      return removedPublication;\n    }\n  }]);\n\n  return RemoteParticipant;\n}(Participant);\n\n/**\n * The {@link RemoteParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnected\n */\n\n/**\n * The {@link RemoteParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event RemoteParticipant#reconnecting\n */\n\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose dimensions changed\n * @event RemoteParticipant#trackDimensionsChanged\n */\n\n/**\n * A {@link RemoteTrack} was disabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the disabled {@link RemoteTrack}\n * @event RemoteParticipant#trackDisabled\n */\n\n/**\n * A {@link RemoteTrack} was enabled by the {@link RemoteParticipant}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} associated with the enabled {@link RemoteTrack}\n * @event RemoteParticipant#trackEnabled\n */\n\n/**\n * A message was received over one of the {@link RemoteParticipant}'s\n * {@link RemoteDataTrack}s.\n * @event RemoteParticipant#trackMessage\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} over which the\n *   message was received\n */\n\n/**\n * A {@link RemoteTrack} was published by the {@link RemoteParticipant} after\n * connecting to the {@link Room}. This event is not emitted for\n * {@link RemoteTrack}s that were published while the {@link RemoteParticipant}\n * was connecting to the {@link Room}.\n * @event RemoteParticipant#trackPublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the published {@link RemoteTrack}\n * @example\n * function trackPublished(publication) {\n *   console.log(`Track ${publication.trackSid} was published`);\n * }\n *\n * room.on('participantConnected', participant => {\n *   // Handle RemoteTracks published while connecting to the Room.\n *   participant.trackPublications.forEach(trackPublished);\n *\n *   // Handle RemoteTracks published after connecting to the Room.\n *   participant.on('trackPublished', trackPublished);\n * });\n */\n\n/**\n * One of the {@link RemoteParticipant}'s {@link RemoteTrack}s started.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that started\n * @event RemoteParticipant#trackStarted\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was subscribed to\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @event RemoteParticipant#trackSubscribed\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} could not be subscribed to.\n * @param {TwilioError} error - The reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that could not\n *   be subscribed to\n * @event RemoteParticipant#trackSubscriptionFailed\n */\n\n/**\n * The {@link RemoteTrackPublication}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority};\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that changed priority\n * @event RemoteParticipant#trackPublishPriorityChanged\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched off\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched off\n * @event RemoteParticipant#trackSwitchedOff\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched on.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was switched on\n * @event RemoteParticipant#trackSwitchedOn\n */\n\n/**\n * A {@link RemoteTrack} was unpublished by the {@link RemoteParticipant}.\n * @event RemoteParticipant#trackUnpublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the unpublished {@link RemoteTrack}\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was unsubscribed from.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was unsubscribed from\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteParticipant#trackUnsubscribed\n */\n\nmodule.exports = RemoteParticipant;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/remoteparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/room.js":
/*!***********************************************!*\
  !*** ./node_modules/twilio-video/es5/room.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! ./eventemitter */ \"./node_modules/twilio-video/es5/eventemitter.js\");\nvar RemoteParticipant = __webpack_require__(/*! ./remoteparticipant */ \"./node_modules/twilio-video/es5/remoteparticipant.js\");\nvar StatsReport = __webpack_require__(/*! ./stats/statsreport */ \"./node_modules/twilio-video/es5/stats/statsreport.js\");\n\nvar _require = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    valueToJSON = _require.valueToJSON;\n\nvar nInstances = 0;\n\n/**\n * A {@link Room} represents communication between you and one or more\n * {@link RemoteParticipant}s sharing {@link AudioTrack}s and\n * {@link VideoTrack}s.\n * <br><br>\n * You can connect to a {@link Room} by calling {@link connect}.\n * @extends EventEmitter\n * @property {?RemoteParticipant} dominantSpeaker - The Dominant Speaker in the\n *   {@link Room}, if any\n * @property {boolean} isRecording - Whether or not the {@link Room} is being\n *   recorded\n * @property {LocalParticipant} localParticipant - Your {@link LocalParticipant}\n *   in the {@link Room}\n * @property {string} mediaRegion - String indicating geographical region\n *    where  media is processed for the {@link Room}.\n * @property {string} name - The {@link Room}'s name\n * @property {Map<Participant.SID, RemoteParticipant>} participants -\n *   The {@link RemoteParticipant}s participating in this {@link Room}\n * @property {Room.SID} sid - The {@link Room}'s SID\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @throws {SignalingConnectionDisconnectedError}\n * @emits Room#disconnected\n * @emits Room#participantConnected\n * @emits Room#participantDisconnected\n * @emits Room#participantReconnected\n * @emits Room#participantReconnecting\n * @emits Room#reconnected\n * @emits Room#reconnecting\n * @emits Room#recordingStarted\n * @emits Room#recordingStopped\n * @emits Room#trackDimensionsChanged\n * @emits Room#trackDisabled\n * @emits Room#trackEnabled\n * @emits Room#trackMessage\n * @emits Room#trackPublished\n * @emits Room#trackPublishPriorityChanged\n * @emits Room#trackStarted\n * @emits Room#trackSubscribed\n * @emits Room#trackSwitchedOff\n * @emits Room#trackSwitchedOn\n * @emits Room#trackUnpublished\n * @emits Room#trackUnsubscribed\n */\n\nvar Room = function (_EventEmitter) {\n  _inherits(Room, _EventEmitter);\n\n  /**\n   * Construct a {@link Room}.\n   * @param {RoomSignaling} signaling\n   * @param {?object} [options={}]\n   */\n  function Room(localParticipant, signaling, options) {\n    _classCallCheck(this, Room);\n\n    var _this = _possibleConstructorReturn(this, (Room.__proto__ || Object.getPrototypeOf(Room)).call(this));\n\n    var log = options.log.createLog('default', _this);\n    var participants = new Map();\n\n    /* istanbul ignore next */\n    Object.defineProperties(_this, {\n      _log: {\n        value: log\n      },\n      _instanceId: {\n        value: ++nInstances\n      },\n      _options: {\n        value: options\n      },\n      _participants: {\n        value: participants\n      },\n      _signaling: {\n        value: signaling\n      },\n      dominantSpeaker: {\n        enumerable: true,\n        get: function get() {\n          return this.participants.get(signaling.dominantSpeakerSid) || null;\n        }\n      },\n      isRecording: {\n        enumerable: true,\n        get: function get() {\n          return signaling.recording.isEnabled || false;\n        }\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: signaling.name\n      },\n      participants: {\n        enumerable: true,\n        value: participants\n      },\n      sid: {\n        enumerable: true,\n        value: signaling.sid\n      },\n      state: {\n        enumerable: true,\n        get: function get() {\n          return signaling.state;\n        }\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: signaling.mediaRegion\n      }\n    });\n\n    handleRecordingEvents(_this, signaling.recording);\n    handleSignalingEvents(_this, signaling);\n\n    log.info('Created a new Room:', _this.name);\n    log.debug('Initial RemoteParticipants:', Array.from(_this._participants.values()));\n    return _this;\n  }\n\n  _createClass(Room, [{\n    key: 'toString',\n    value: function toString() {\n      return '[Room #' + this._instanceId + ': ' + this.sid + ']';\n    }\n\n    /**\n     * Disconnect from the {@link Room}.\n     * @returns {this}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._log.info('Disconnecting');\n      this._signaling.disconnect();\n      return this;\n    }\n\n    /**\n     * Get the {@link Room}'s media statistics. This is not supported in Safari 12.0 or below\n     * due to this bug : https://bugs.webkit.org/show_bug.cgi?id=192601\n     *\n     * @returns {Promise.<Array<StatsReport>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this2 = this;\n\n      return this._signaling.getStats().then(function (responses) {\n        return Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return new StatsReport(id, Object.assign({}, response, {\n            localAudioTrackStats: rewriteLocalTrackIds(_this2, response.localAudioTrackStats),\n            localVideoTrackStats: rewriteLocalTrackIds(_this2, response.localVideoTrackStats)\n          }));\n        });\n      });\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return valueToJSON(this);\n    }\n  }]);\n\n  return Room;\n}(EventEmitter);\n\nfunction rewriteLocalTrackIds(room, trackStats) {\n  var localParticipantSignaling = room.localParticipant._signaling;\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var publication = localParticipantSignaling.tracks.get(trackStat.trackId);\n    var trackSender = localParticipantSignaling.getSender(publication);\n    return trackSender ? [Object.assign({}, trackStat, { trackId: trackSender.id })].concat(trackStats) : trackStats;\n  }, []);\n}\n\n/**\n * A {@link Room.SID} is a 34-character string starting with \"RM\"\n * that uniquely identifies a {@link Room}.\n * @type string\n * @typedef Room.SID\n */\n\n/**\n * The Dominant Speaker in the {@link Room} changed. Either the Dominant Speaker\n * is a new {@link RemoteParticipant} or the Dominant Speaker has been reset and\n * is now null.\n * @param {?RemoteParticipant} dominantSpeaker - The Dominant Speaker in the\n *   {@link Room}, if any\n * @event Room#dominantSpeakerChanged\n */\n\n/**\n * Your {@link LocalParticipant} was disconnected from the {@link Room} and all\n * other {@link RemoteParticipant}s.\n * @param {Room} room - The {@link Room} your\n *   {@link LocalParticipant} was disconnected from\n * @param {?TwilioError} error - Present when the {@link LocalParticipant} got\n *   disconnected from the {@link Room} unexpectedly\n * @event Room#disconnected\n * @example\n * myRoom.on('disconnected', function(room, error) {\n *   if (error) {\n *     console.log('Unexpectedly disconnected:', error);\n *   }\n *   myRoom.localParticipant.tracks.forEach(function(track) {\n *     track.stop();\n *     track.detach();\n *   });\n * });\n */\n\n/**\n * A {@link RemoteParticipant} joined the {@link Room}.\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who joined\n * @event Room#participantConnected\n * @example\n * myRoom.on('participantConnected', function(participant) {\n *   console.log(participant.identity + ' joined the Room');\n * });\n */\n\n/**\n * A {@link RemoteParticipant} left the {@link Room}.\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who left\n * @event Room#participantDisconnected\n * @example\n * myRoom.on('participantDisconnected', function(participant) {\n *   console.log(participant.identity + ' left the Room');\n *   participant.tracks.forEach(function(track) {\n *     track.detach().forEach(function(mediaElement) {\n *       mediaElement.remove();\n *     });\n *   });\n * });\n */\n\n/**\n * A {@link RemoteParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} that has reconnected.\n * @event Room#participantReconnected\n * @example\n * myRoom.on('participantReconnected', participant => {\n *   console.log(participant.identity + ' reconnected to the Room');\n * });\n */\n\n/**\n * A {@link RemoteParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} that is reconnecting.\n * @event Room#participantReconnecting\n * @example\n * myRoom.on('participantReconnecting', participant => {\n *   console.log(participant.identity + ' is reconnecting to the Room');\n * });\n */\n\n/**\n * Your application successfully reconnected to the {@link Room}. When this\n * event is emitted, the {@link Room} is in state \"connected\".\n * @event Room#reconnected\n * @example\n * myRoom.on('reconnected', () => {\n *   console.log('Reconnected!');\n * });\n */\n\n/**\n * Your application is reconnecting to the {@link Room}. This happens when there\n * is a disruption in your signaling connection and/or your media connection. When\n * this event is emitted, the {@link Room} is in state \"reconnecting\". If reconnecting\n * succeeds, the {@link Room} will emit a \"reconnected\" event.\n * @param {MediaConnectionError|SignalingConnectionDisconnectedError} error - A\n *   {@link MediaConnectionError} if your application is reconnecting due to a\n *   disruption in your media connection, or a {@link SignalingConnectionDisconnectedError}\n *   if your application is reconnecting due to a disruption in your signaling connection\n * @event Room#reconnecting\n * @example\n * myRoom.on('reconnecting', error => {\n *   if (error.code === 53001) {\n *     console.log('Reconnecting your signaling connection!', error.message);\n *   } else if (error.code === 53405) {\n *     console.log('Reconnecting your media connection!', error.message);\n *   }\n * });\n */\n\n/**\n * The {@link Room} is now being recorded\n * @event Room#recordingStarted\n */\n\n/**\n * The {@link Room} is no longer being recorded\n * @event Room#recordingStopped\n */\n\n/**\n * One of the {@link RemoteParticipant}'s {@link VideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose dimensions changed\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteVideoTrack}'s dimensions changed\n * @event Room#trackDimensionsChanged\n */\n\n/**\n * A {@link RemoteTrack} was disabled by a {@link RemoteParticipant} in the {@link Room}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} that represents disabled {@link RemoteTrack}\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who\n *   disabled the {@link RemoteTrack}\n * @event Room#trackDisabled\n */\n\n/**\n * A {@link RemoteTrack} was enabled by a {@link RemoteParticipant} in the {@link Room}.\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication} that represents enabled {@link RemoteTrack}\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who\n *   enabled the {@link RemoteTrack}\n * @event Room#trackEnabled\n */\n\n/**\n * A message was received over one of the {@link RemoteParticipant}'s\n * {@link RemoteDataTrack}'s.\n * @param {string|ArrayBuffer} data\n * @param {RemoteVideoTrack} track - The {@link RemoteDataTrack} over which the\n *   message was received\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteDataTrack} received the message\n * @event Room#trackMessage\n */\n\n/**\n * A {@link RemoteTrack} was published by a {@link RemoteParticipant} after\n * connecting to the {@link Room}. This event is not emitted for\n * {@link RemoteTrack}s that were published while the {@link RemoteParticipant}\n * was connecting to the {@link Room}.\n * @event Room#trackPublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the published {@link RemoteTrack}\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who\n *   published the {@link RemoteTrack}\n * @example\n * function trackPublished(publication, participant) {\n *   console.log(`RemoteParticipant ${participant.sid} published Track ${publication.trackSid}`);\n * }\n *\n * // Handle RemoteTracks published after connecting to the Room.\n * room.on('trackPublished', trackPublished);\n *\n * room.on('participantConnected', participant => {\n *   // Handle RemoteTracks published while connecting to the Room.\n *   participant.trackPublications.forEach(publication => trackPublished(publication, participant));\n * });\n */\n\n/**\n * One of a {@link RemoteParticipant}'s {@link RemoteTrack}s in the {@link Room} started.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that started\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} started\n * @event Room#trackStarted\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was subscribed to.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was subscribed\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} was subscribed\n * @event Room#trackSubscribed\n * @example\n * room.on('trackSubscribed', function(track, publication, participant) {\n *   var participantView = document.getElementById('participant-view-' + participant.identity);\n *   participantView.appendChild(track.attach());\n * });\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched off\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} was switched off\n * @event Room#trackSwitchedOff\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was switched on\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was subscribed to\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} was switched on\n * @event Room#trackSwitchedOn\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} could not be subscribed to.\n * @param {TwilioError} error - The reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that could not\n *   be subscribed to\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} could not be subscribed to\n * @event Room#trackSubscriptionFailed\n */\n\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority};\n * @param {RemoteTrackPublication} publication - The\n *   {@link RemoteTrackPublication} for the {@link RemoteTrack} that changed priority\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} changed priority\n * @event Room#trackPublishPriorityChanged\n */\n\n/**\n * A {@link RemoteTrack} was unpublished by a {@link RemoteParticipant} to the {@link Room}.\n * @event Room#trackUnpublished\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   which represents the unpublished {@link RemoteTrack}\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} who\n *   unpublished the {@link RemoteTrack}\n */\n\n/**\n * A {@link RemoteParticipant}'s {@link RemoteTrack} was unsubscribed from.\n * @param {RemoteTrack} track - The {@link RemoteTrack} that was unsubscribed\n * @param {RemoteTrackPublication} publication - The {@link RemoteTrackPublication}\n *   for the {@link RemoteTrack} that was unsubscribed from\n * @param {RemoteParticipant} participant - The {@link RemoteParticipant} whose\n *   {@link RemoteTrack} was unsubscribed\n * @event Room#trackUnsubscribed\n * @example\n * room.on('trackUnsubscribed', function(track, publication, participant) {\n *   track.detach().forEach(function(mediaElement) {\n *     mediaElement.remove();\n *   });\n * });\n */\n\nfunction connectParticipant(room, participantSignaling) {\n  var log = room._log;\n  var participant = new RemoteParticipant(participantSignaling, { log: log });\n\n  log.info('A new RemoteParticipant connected:', participant);\n  room._participants.set(participant.sid, participant);\n  room.emit('participantConnected', participant);\n\n  // Reemit Track and RemoteParticipant events.\n  var eventListeners = [['reconnected', 'participantReconnected'], ['reconnecting', 'participantReconnecting'], 'trackDimensionsChanged', 'trackDisabled', 'trackEnabled', 'trackMessage', 'trackPublished', 'trackPublishPriorityChanged', 'trackStarted', 'trackSubscribed', 'trackSubscriptionFailed', 'trackSwitchedOff', 'trackSwitchedOn', 'trackUnpublished', 'trackUnsubscribed'].map(function (eventOrPair) {\n    var _ref3 = Array.isArray(eventOrPair) ? eventOrPair : [eventOrPair, eventOrPair],\n        _ref4 = _slicedToArray(_ref3, 2),\n        event = _ref4[0],\n        participantEvent = _ref4[1];\n\n    function reemit() {\n      var args = [].slice.call(arguments);\n      args.unshift(participantEvent);\n      args.push(participant);\n      room.emit.apply(room, _toConsumableArray(args));\n    }\n    participant.on(event, reemit);\n    return [event, reemit];\n  });\n\n  participant.once('disconnected', function participantDisconnected() {\n    var dominantSpeaker = room.dominantSpeaker;\n    log.info('RemoteParticipant disconnected:', participant);\n    room._participants.delete(participant.sid);\n    eventListeners.forEach(function (args) {\n      participant.removeListener(args[0], args[1]);\n    });\n    room.emit('participantDisconnected', participant);\n    if (participant === dominantSpeaker) {\n      room.emit('dominantSpeakerChanged', room.dominantSpeaker);\n    }\n  });\n}\n\nfunction handleRecordingEvents(room, recording) {\n  recording.on('updated', function updated() {\n    var started = recording.isEnabled;\n    room._log.info('Recording ' + (started ? 'started' : 'stopped'));\n    room.emit('recording' + (started ? 'Started' : 'Stopped'));\n  });\n}\n\nfunction handleSignalingEvents(room, signaling) {\n  var log = room._log;\n\n  // Reemit RemoteParticipant events from the RoomSignaling.\n  log.debug('Creating a new RemoteParticipant for each ParticipantSignaling ' + 'in the RoomSignaling');\n  signaling.participants.forEach(connectParticipant.bind(null, room));\n  log.debug('Setting up RemoteParticipant creation for all subsequent ' + 'ParticipantSignalings that connect to the RoomSignaling');\n  signaling.on('participantConnected', connectParticipant.bind(null, room));\n\n  signaling.on('dominantSpeakerChanged', function () {\n    return room.emit('dominantSpeakerChanged', room.dominantSpeaker);\n  });\n\n  // Reemit state transition events from the RoomSignaling.\n  signaling.on('stateChanged', function stateChanged(state, error) {\n    log.info('Transitioned to state:', state);\n    switch (state) {\n      case 'disconnected':\n        room.participants.forEach(function (participant) {\n          participant._unsubscribeTracks();\n        });\n        room.emit(state, room, error);\n        signaling.removeListener('stateChanged', stateChanged);\n        break;\n      case 'reconnecting':\n\n        // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n        // Do not signal  public events synchronously with lock held.\n        setTimeout(function () {\n          return room.emit('reconnecting', error);\n        }, 0);\n\n        break;\n      default:\n\n        // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n        // Do not signal  public events synchronously with lock held.\n        setTimeout(function () {\n          return room.emit('reconnected');\n        }, 0);\n    }\n  });\n}\n\nmodule.exports = Room;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/room.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint consistent-return:0 */\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ParticipantSignaling = __webpack_require__(/*! ./participant */ \"./node_modules/twilio-video/es5/signaling/participant.js\");\nvar RoomSignaling = __webpack_require__(/*! ./room */ \"./node_modules/twilio-video/es5/signaling/room.js\");\nvar StateMachine = __webpack_require__(/*! ../statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\n\n/*\nSignaling States\n----------------\n\n              +---------+\n              |         |\n              | opening |\n         +--->|         |\n         |    +---------+\n    +--------+   |   |   +------+\n    |        |<--+   +-->|      |\n    | closed |<----------| open |\n    |        |<--+   +-->|      |\n    +--------+   |   |   +------+\n              +---------+   |\n              |         |<--+\n              | closing |\n              |         |\n              +---------+\n\n*/\n\nvar states = {\n  closed: ['opening'],\n  opening: ['closed', 'open'],\n  open: ['closed', 'closing'],\n  closing: ['closed', 'open']\n};\n\n/**\n * @extends StateMachine\n * @property {string} state - one of \"closed\", \"opening\", \"open\", or \"closing\"\n */\n\nvar Signaling = function (_StateMachine) {\n  _inherits(Signaling, _StateMachine);\n\n  /**\n   * Construct {@link Signaling}.\n   */\n  function Signaling() {\n    _classCallCheck(this, Signaling);\n\n    return _possibleConstructorReturn(this, (Signaling.__proto__ || Object.getPrototypeOf(Signaling)).call(this, 'closed', states));\n  }\n\n  /**\n   * @private\n   */\n  // NOTE(mroberts): This is a dummy implementation suitable for testing.\n\n\n  _createClass(Signaling, [{\n    key: '_close',\n    value: function _close(key) {\n      this.transition('closing', key);\n      this.transition('closed', key);\n      return Promise.resolve(this);\n    }\n\n    /**\n     * @private\n     */\n    // NOTE(mroberts): This is a dummy implementation suitable for testing.\n\n  }, {\n    key: '_connect',\n    value: function _connect(localParticipant, token, encodingParameters, preferredCodecs, options) {\n      localParticipant.connect('PA00000000000000000000000000000000', 'test');\n      var sid = 'RM00000000000000000000000000000000';\n      var promise = Promise.resolve(new RoomSignaling(localParticipant, sid, options));\n      promise.cancel = function cancel() {};\n      return promise;\n    }\n\n    /**\n     * @private\n     */\n    // NOTE(mroberts): This is a dummy implementation suitable for testing.\n\n  }, {\n    key: '_open',\n    value: function _open(key) {\n      this.transition('opening', key);\n      this.transition('open', key);\n      return Promise.resolve(this);\n    }\n\n    /**\n     * Close the {@link Signaling}.\n     * @returns {Promise<this>}\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      var _this2 = this;\n\n      return this.bracket('close', function (key) {\n        switch (_this2.state) {\n          case 'closed':\n            return _this2;\n          case 'open':\n            return _this2._close(key);\n          default:\n            throw new Error('Unexpected Signaling state \"' + _this2.state + '\"');\n        }\n      });\n    }\n\n    /**\n     * Connect to a {@link RoomSignaling}.\n     * @param {ParticipantSignaling} localParticipant\n     * @param {string} token\n     * @param {EncodingParametersImpl} encodingParameters\n     * @param {PreferredCodecs} preferredCodecs\n     * @param {object} options\n     * @returns {Promise<function(): CancelablePromise<RoomSignaling>>}\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(localParticipant, token, encodingParameters, preferredCodecs, options) {\n      var self = this;\n      return this.bracket('connect', function transition(key) {\n        switch (self.state) {\n          case 'closed':\n            return self._open(key).then(transition.bind(null, key));\n          case 'open':\n            // NOTE(mroberts): We don't need to hold the lock in _connect. Instead,\n            // we just need to ensure the Signaling remains open.\n            self.releaseLockCompletely(key);\n            return self._connect(localParticipant, token, encodingParameters, preferredCodecs, options);\n          default:\n            throw new Error('Unexpected Signaling state \"' + self.state + '\"');\n        }\n      });\n    }\n\n    /**\n     * Create a local {@link ParticipantSignaling}.\n     * @returns {ParticipantSignaling}\n     */\n\n  }, {\n    key: 'createLocalParticipantSignaling',\n    value: function createLocalParticipantSignaling() {\n      return new ParticipantSignaling();\n    }\n\n    /**\n     * Open the {@link Signaling}.\n     * @returns {Promise<this>}\n     */\n\n  }, {\n    key: 'open',\n    value: function open() {\n      var _this3 = this;\n\n      return this.bracket('open', function (key) {\n        switch (_this3.state) {\n          case 'closed':\n            return _this3._open(key);\n          case 'open':\n            return _this3;\n          default:\n            throw new Error('Unexpected Signaling state \"' + _this3.state + '\"');\n        }\n      });\n    }\n  }]);\n\n  return Signaling;\n}(StateMachine);\n\nmodule.exports = Signaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/localparticipant.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/localparticipant.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ParticipantSignaling = __webpack_require__(/*! ./participant */ \"./node_modules/twilio-video/es5/signaling/participant.js\");\n\nvar LocalParticipantSignaling = function (_ParticipantSignaling) {\n  _inherits(LocalParticipantSignaling, _ParticipantSignaling);\n\n  function LocalParticipantSignaling() {\n    _classCallCheck(this, LocalParticipantSignaling);\n\n    var _this = _possibleConstructorReturn(this, (LocalParticipantSignaling.__proto__ || Object.getPrototypeOf(LocalParticipantSignaling)).call(this));\n\n    Object.defineProperties(_this, {\n      _publicationsToTrackSenders: {\n        value: new Map()\n      },\n      _trackSendersToPublications: {\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @param {string} name\n   * @param {Track.Priority} priority\n   * @returns {LocalTrackPublicationSignaling} publication\n   */\n\n\n  _createClass(LocalParticipantSignaling, [{\n    key: 'addTrack',\n    value: function addTrack(trackSender, name, priority) {\n      var publication = this._createLocalTrackPublicationSignaling(trackSender, name, priority);\n      this._trackSendersToPublications.set(trackSender, publication);\n      this._publicationsToTrackSenders.set(publication, trackSender);\n      _get(LocalParticipantSignaling.prototype.__proto__ || Object.getPrototypeOf(LocalParticipantSignaling.prototype), 'addTrack', this).call(this, publication);\n      return this;\n    }\n\n    /**\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @returns {?LocalTrackPublicationSignaling}\n     */\n\n  }, {\n    key: 'getPublication',\n    value: function getPublication(trackSender) {\n      return this._trackSendersToPublications.get(trackSender) || null;\n    }\n\n    /**\n     * @param {LocalTrackPublicationSignaling} trackPublication\n     * @returns {?DataTrackSender|MediaTrackSender}\n     */\n\n  }, {\n    key: 'getSender',\n    value: function getSender(trackPublication) {\n      return this._publicationsToTrackSenders.get(trackPublication) || null;\n    }\n\n    /**\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @returns {?LocalTrackPublicationSignaling}\n     */\n\n  }, {\n    key: 'removeTrack',\n    value: function removeTrack(trackSender) {\n      var publication = this._trackSendersToPublications.get(trackSender);\n      if (!publication) {\n        return null;\n      }\n      this._trackSendersToPublications.delete(trackSender);\n      this._publicationsToTrackSenders.delete(publication);\n      var didDelete = _get(LocalParticipantSignaling.prototype.__proto__ || Object.getPrototypeOf(LocalParticipantSignaling.prototype), 'removeTrack', this).call(this, publication);\n      if (didDelete) {\n        publication.stop();\n      }\n      return publication;\n    }\n  }]);\n\n  return LocalParticipantSignaling;\n}(ParticipantSignaling);\n\nmodule.exports = LocalParticipantSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvbG9jYWxwYXJ0aWNpcGFudC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3NpZ25hbGluZy9sb2NhbHBhcnRpY2lwYW50LmpzP2RlODUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFBhcnRpY2lwYW50U2lnbmFsaW5nID0gcmVxdWlyZSgnLi9wYXJ0aWNpcGFudCcpO1xuXG52YXIgTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZyA9IGZ1bmN0aW9uIChfUGFydGljaXBhbnRTaWduYWxpbmcpIHtcbiAgX2luaGVyaXRzKExvY2FsUGFydGljaXBhbnRTaWduYWxpbmcsIF9QYXJ0aWNpcGFudFNpZ25hbGluZyk7XG5cbiAgZnVuY3Rpb24gTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvY2FsUGFydGljaXBhbnRTaWduYWxpbmcpKS5jYWxsKHRoaXMpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBfcHVibGljYXRpb25zVG9UcmFja1NlbmRlcnM6IHtcbiAgICAgICAgdmFsdWU6IG5ldyBNYXAoKVxuICAgICAgfSxcbiAgICAgIF90cmFja1NlbmRlcnNUb1B1YmxpY2F0aW9uczoge1xuICAgICAgICB2YWx1ZTogbmV3IE1hcCgpXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RGF0YVRyYWNrU2VuZGVyfE1lZGlhVHJhY2tTZW5kZXJ9IHRyYWNrU2VuZGVyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7VHJhY2suUHJpb3JpdHl9IHByaW9yaXR5XG4gICAqIEByZXR1cm5zIHtMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IHB1YmxpY2F0aW9uXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKExvY2FsUGFydGljaXBhbnRTaWduYWxpbmcsIFt7XG4gICAga2V5OiAnYWRkVHJhY2snLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRUcmFjayh0cmFja1NlbmRlciwgbmFtZSwgcHJpb3JpdHkpIHtcbiAgICAgIHZhciBwdWJsaWNhdGlvbiA9IHRoaXMuX2NyZWF0ZUxvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZyh0cmFja1NlbmRlciwgbmFtZSwgcHJpb3JpdHkpO1xuICAgICAgdGhpcy5fdHJhY2tTZW5kZXJzVG9QdWJsaWNhdGlvbnMuc2V0KHRyYWNrU2VuZGVyLCBwdWJsaWNhdGlvbik7XG4gICAgICB0aGlzLl9wdWJsaWNhdGlvbnNUb1RyYWNrU2VuZGVycy5zZXQocHVibGljYXRpb24sIHRyYWNrU2VuZGVyKTtcbiAgICAgIF9nZXQoTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZy5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMb2NhbFBhcnRpY2lwYW50U2lnbmFsaW5nLnByb3RvdHlwZSksICdhZGRUcmFjaycsIHRoaXMpLmNhbGwodGhpcywgcHVibGljYXRpb24pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtEYXRhVHJhY2tTZW5kZXJ8TWVkaWFUcmFja1NlbmRlcn0gdHJhY2tTZW5kZXJcbiAgICAgKiBAcmV0dXJucyB7P0xvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZ2V0UHVibGljYXRpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQdWJsaWNhdGlvbih0cmFja1NlbmRlcikge1xuICAgICAgcmV0dXJuIHRoaXMuX3RyYWNrU2VuZGVyc1RvUHVibGljYXRpb25zLmdldCh0cmFja1NlbmRlcikgfHwgbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0xvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ30gdHJhY2tQdWJsaWNhdGlvblxuICAgICAqIEByZXR1cm5zIHs/RGF0YVRyYWNrU2VuZGVyfE1lZGlhVHJhY2tTZW5kZXJ9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2dldFNlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNlbmRlcih0cmFja1B1YmxpY2F0aW9uKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcHVibGljYXRpb25zVG9UcmFja1NlbmRlcnMuZ2V0KHRyYWNrUHVibGljYXRpb24pIHx8IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtEYXRhVHJhY2tTZW5kZXJ8TWVkaWFUcmFja1NlbmRlcn0gdHJhY2tTZW5kZXJcbiAgICAgKiBAcmV0dXJucyB7P0xvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlVHJhY2snLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVUcmFjayh0cmFja1NlbmRlcikge1xuICAgICAgdmFyIHB1YmxpY2F0aW9uID0gdGhpcy5fdHJhY2tTZW5kZXJzVG9QdWJsaWNhdGlvbnMuZ2V0KHRyYWNrU2VuZGVyKTtcbiAgICAgIGlmICghcHVibGljYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB0aGlzLl90cmFja1NlbmRlcnNUb1B1YmxpY2F0aW9ucy5kZWxldGUodHJhY2tTZW5kZXIpO1xuICAgICAgdGhpcy5fcHVibGljYXRpb25zVG9UcmFja1NlbmRlcnMuZGVsZXRlKHB1YmxpY2F0aW9uKTtcbiAgICAgIHZhciBkaWREZWxldGUgPSBfZ2V0KExvY2FsUGFydGljaXBhbnRTaWduYWxpbmcucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZy5wcm90b3R5cGUpLCAncmVtb3ZlVHJhY2snLCB0aGlzKS5jYWxsKHRoaXMsIHB1YmxpY2F0aW9uKTtcbiAgICAgIGlmIChkaWREZWxldGUpIHtcbiAgICAgICAgcHVibGljYXRpb24uc3RvcCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHB1YmxpY2F0aW9uO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2NhbFBhcnRpY2lwYW50U2lnbmFsaW5nO1xufShQYXJ0aWNpcGFudFNpZ25hbGluZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/localparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/localtrackpublication.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/localtrackpublication.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackSignaling = __webpack_require__(/*! ./track */ \"./node_modules/twilio-video/es5/signaling/track.js\");\n\n/**\n * A {@link LocalTrackPublication} implementation\n * @extends TrackSignaling\n * @property {Track.ID} id\n */\n\nvar LocalTrackPublicationSignaling = function (_TrackSignaling) {\n  _inherits(LocalTrackPublicationSignaling, _TrackSignaling);\n\n  /**\n   * Construct a {@link LocalTrackPublicationSignaling}. {@link TrackSenders}\n   * are always cloned.\n   * @param {DataTrackSender|MediaTrackSender} trackSender - the {@link TrackSender}\n   *   of the {@link LocalTrack} to be published\n   * @param {string} name - the name of the {@link LocalTrack} to be published\n   * @param {Track.Priority} priority - initial {@link Track.Priority}\n   */\n  function LocalTrackPublicationSignaling(trackSender, name, priority) {\n    _classCallCheck(this, LocalTrackPublicationSignaling);\n\n    trackSender = trackSender.clone();\n    var enabled = trackSender.kind === 'data' ? true : trackSender.track.enabled;\n\n    var _this = _possibleConstructorReturn(this, (LocalTrackPublicationSignaling.__proto__ || Object.getPrototypeOf(LocalTrackPublicationSignaling)).call(this, name, trackSender.kind, enabled, priority));\n\n    _this.setTrackTransceiver(trackSender);\n    Object.defineProperties(_this, {\n      _updatedPriority: {\n        value: priority,\n        writable: true\n      },\n      id: {\n        enumerable: true,\n        value: trackSender.id\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * The updated {@link Track.Priority} of the {@link LocalTrack}.\n   * @property {Track.priority}\n   */\n\n\n  _createClass(LocalTrackPublicationSignaling, [{\n    key: 'enable',\n\n\n    /**\n     * Enable (or disable) the {@link LocalTrackPublicationSignaling} if it is not\n     * already enabled (or disabled). This also updates the cloned\n     * {@link MediaTrackSender}'s MediaStreamTracks `enabled` state.\n     * @param {boolean} [enabled=true]\n     * @return {this}\n     */\n    value: function enable(enabled) {\n      enabled = typeof enabled === 'boolean' ? enabled : true;\n      this.trackTransceiver.track.enabled = enabled;\n      return _get(LocalTrackPublicationSignaling.prototype.__proto__ || Object.getPrototypeOf(LocalTrackPublicationSignaling.prototype), 'enable', this).call(this, enabled);\n    }\n\n    /**\n     * Rejects the SID's deferred promise with the given Error.\n     * @param {Error} error\n     * @returns {this}\n     */\n\n  }, {\n    key: 'publishFailed',\n    value: function publishFailed(error) {\n      if (setError(this, error)) {\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n     * @param {Track.priority} priority\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      if (this._updatedPriority !== priority) {\n        this._updatedPriority = priority;\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Set the published {@link LocalTrack}'s {@link Track.SID}.\n     * @param {Track.SID} sid\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setSid',\n    value: function setSid(sid) {\n      if (this._error) {\n        return this;\n      }\n      return _get(LocalTrackPublicationSignaling.prototype.__proto__ || Object.getPrototypeOf(LocalTrackPublicationSignaling.prototype), 'setSid', this).call(this, sid);\n    }\n\n    /**\n     * Stop the cloned {@link TrackSender}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.trackTransceiver.stop();\n    }\n  }, {\n    key: 'updatedPriority',\n    get: function get() {\n      return this._updatedPriority;\n    }\n  }]);\n\n  return LocalTrackPublicationSignaling;\n}(TrackSignaling);\n\n/**\n * @param {LocalTrackPublication} publication\n * @param {Error} error\n * @returns {boolean} updated\n */\n\n\nfunction setError(publication, error) {\n  if (publication._sid !== null || publication._error) {\n    return false;\n  }\n  publication._error = error;\n  return true;\n}\n\nmodule.exports = LocalTrackPublicationSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvbG9jYWx0cmFja3B1YmxpY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL2xvY2FsdHJhY2twdWJsaWNhdGlvbi5qcz9iMjE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBUcmFja1NpZ25hbGluZyA9IHJlcXVpcmUoJy4vdHJhY2snKTtcblxuLyoqXG4gKiBBIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb259IGltcGxlbWVudGF0aW9uXG4gKiBAZXh0ZW5kcyBUcmFja1NpZ25hbGluZ1xuICogQHByb3BlcnR5IHtUcmFjay5JRH0gaWRcbiAqL1xuXG52YXIgTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nID0gZnVuY3Rpb24gKF9UcmFja1NpZ25hbGluZykge1xuICBfaW5oZXJpdHMoTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nLCBfVHJhY2tTaWduYWxpbmcpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfS4ge0BsaW5rIFRyYWNrU2VuZGVyc31cbiAgICogYXJlIGFsd2F5cyBjbG9uZWQuXG4gICAqIEBwYXJhbSB7RGF0YVRyYWNrU2VuZGVyfE1lZGlhVHJhY2tTZW5kZXJ9IHRyYWNrU2VuZGVyIC0gdGhlIHtAbGluayBUcmFja1NlbmRlcn1cbiAgICogICBvZiB0aGUge0BsaW5rIExvY2FsVHJhY2t9IHRvIGJlIHB1Ymxpc2hlZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIHRoZSBuYW1lIG9mIHRoZSB7QGxpbmsgTG9jYWxUcmFja30gdG8gYmUgcHVibGlzaGVkXG4gICAqIEBwYXJhbSB7VHJhY2suUHJpb3JpdHl9IHByaW9yaXR5IC0gaW5pdGlhbCB7QGxpbmsgVHJhY2suUHJpb3JpdHl9XG4gICAqL1xuICBmdW5jdGlvbiBMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcodHJhY2tTZW5kZXIsIG5hbWUsIHByaW9yaXR5KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZyk7XG5cbiAgICB0cmFja1NlbmRlciA9IHRyYWNrU2VuZGVyLmNsb25lKCk7XG4gICAgdmFyIGVuYWJsZWQgPSB0cmFja1NlbmRlci5raW5kID09PSAnZGF0YScgPyB0cnVlIDogdHJhY2tTZW5kZXIudHJhY2suZW5hYmxlZDtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcpKS5jYWxsKHRoaXMsIG5hbWUsIHRyYWNrU2VuZGVyLmtpbmQsIGVuYWJsZWQsIHByaW9yaXR5KSk7XG5cbiAgICBfdGhpcy5zZXRUcmFja1RyYW5zY2VpdmVyKHRyYWNrU2VuZGVyKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX3VwZGF0ZWRQcmlvcml0eToge1xuICAgICAgICB2YWx1ZTogcHJpb3JpdHksXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgaWQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHRyYWNrU2VuZGVyLmlkXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSB1cGRhdGVkIHtAbGluayBUcmFjay5Qcmlvcml0eX0gb2YgdGhlIHtAbGluayBMb2NhbFRyYWNrfS5cbiAgICogQHByb3BlcnR5IHtUcmFjay5wcmlvcml0eX1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nLCBbe1xuICAgIGtleTogJ2VuYWJsZScsXG5cblxuICAgIC8qKlxuICAgICAqIEVuYWJsZSAob3IgZGlzYWJsZSkgdGhlIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmd9IGlmIGl0IGlzIG5vdFxuICAgICAqIGFscmVhZHkgZW5hYmxlZCAob3IgZGlzYWJsZWQpLiBUaGlzIGFsc28gdXBkYXRlcyB0aGUgY2xvbmVkXG4gICAgICoge0BsaW5rIE1lZGlhVHJhY2tTZW5kZXJ9J3MgTWVkaWFTdHJlYW1UcmFja3MgYGVuYWJsZWRgIHN0YXRlLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2VuYWJsZWQ9dHJ1ZV1cbiAgICAgKiBAcmV0dXJuIHt0aGlzfVxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBlbmFibGUoZW5hYmxlZCkge1xuICAgICAgZW5hYmxlZCA9IHR5cGVvZiBlbmFibGVkID09PSAnYm9vbGVhbicgPyBlbmFibGVkIDogdHJ1ZTtcbiAgICAgIHRoaXMudHJhY2tUcmFuc2NlaXZlci50cmFjay5lbmFibGVkID0gZW5hYmxlZDtcbiAgICAgIHJldHVybiBfZ2V0KExvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZy5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcucHJvdG90eXBlKSwgJ2VuYWJsZScsIHRoaXMpLmNhbGwodGhpcywgZW5hYmxlZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVqZWN0cyB0aGUgU0lEJ3MgZGVmZXJyZWQgcHJvbWlzZSB3aXRoIHRoZSBnaXZlbiBFcnJvci5cbiAgICAgKiBAcGFyYW0ge0Vycm9yfSBlcnJvclxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdwdWJsaXNoRmFpbGVkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHVibGlzaEZhaWxlZChlcnJvcikge1xuICAgICAgaWYgKHNldEVycm9yKHRoaXMsIGVycm9yKSkge1xuICAgICAgICB0aGlzLmVtaXQoJ3VwZGF0ZWQnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUge0BsaW5rIFRyYWNrLlByaW9yaXR5fSBvZiB0aGUgcHVibGlzaGVkIHtAbGluayBMb2NhbFRyYWNrfS5cbiAgICAgKiBAcGFyYW0ge1RyYWNrLnByaW9yaXR5fSBwcmlvcml0eVxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdzZXRQcmlvcml0eScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFByaW9yaXR5KHByaW9yaXR5KSB7XG4gICAgICBpZiAodGhpcy5fdXBkYXRlZFByaW9yaXR5ICE9PSBwcmlvcml0eSkge1xuICAgICAgICB0aGlzLl91cGRhdGVkUHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5lbWl0KCd1cGRhdGVkJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHB1Ymxpc2hlZCB7QGxpbmsgTG9jYWxUcmFja30ncyB7QGxpbmsgVHJhY2suU0lEfS5cbiAgICAgKiBAcGFyYW0ge1RyYWNrLlNJRH0gc2lkXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3NldFNpZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFNpZChzaWQpIHtcbiAgICAgIGlmICh0aGlzLl9lcnJvcikge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIHJldHVybiBfZ2V0KExvY2FsVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZy5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcucHJvdG90eXBlKSwgJ3NldFNpZCcsIHRoaXMpLmNhbGwodGhpcywgc2lkKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdG9wIHRoZSBjbG9uZWQge0BsaW5rIFRyYWNrU2VuZGVyfS5cbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3RvcCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICB0aGlzLnRyYWNrVHJhbnNjZWl2ZXIuc3RvcCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZWRQcmlvcml0eScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdXBkYXRlZFByaW9yaXR5O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmc7XG59KFRyYWNrU2lnbmFsaW5nKTtcblxuLyoqXG4gKiBAcGFyYW0ge0xvY2FsVHJhY2tQdWJsaWNhdGlvbn0gcHVibGljYXRpb25cbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdXBkYXRlZFxuICovXG5cblxuZnVuY3Rpb24gc2V0RXJyb3IocHVibGljYXRpb24sIGVycm9yKSB7XG4gIGlmIChwdWJsaWNhdGlvbi5fc2lkICE9PSBudWxsIHx8IHB1YmxpY2F0aW9uLl9lcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBwdWJsaWNhdGlvbi5fZXJyb3IgPSBlcnJvcjtcbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/localtrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/participant.js":
/*!****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/participant.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StateMachine = __webpack_require__(/*! ../statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\nvar NetworkQualityStats = __webpack_require__(/*! ../stats/networkqualitystats */ \"./node_modules/twilio-video/es5/stats/networkqualitystats.js\");\n\n/*\nParticipantSignaling States\n----------------------\n\n    +------------+     +-----------+     +--------------+\n    |            |     |           |     |              |\n    | connecting |---->| connected |---->| disconnected |\n    |            |     |           |     |              |\n    +------------+     +-----------+     +--------------+\n                           | ^                    ^\n                           | |  +--------------+  |\n                           | |--|              |  |\n                           |--->| reconnecting |--|\n                                |              |\n                                +--------------+\n*/\n\nvar states = {\n  connecting: ['connected'],\n  connected: ['disconnected', 'reconnecting'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n\n/**\n * A {@link Participant} implementation\n * @extends StateMachine\n * @property {?string} identity\n * @property {?Participant.SID} sid\n * @property {string} state - \"connecting\", \"connected\", or \"disconnected\"\n * @property {Map<Track.ID | Track.SID, TrackSignaling>} tracks\n * @emits ParticipantSignaling#networkQualityLevelChanged\n * @emits ParticipantSignaling#trackAdded\n * @emits ParticipantSignaling#trackRemoved\n */\n\nvar ParticipantSignaling = function (_StateMachine) {\n  _inherits(ParticipantSignaling, _StateMachine);\n\n  /**\n   * Construct a {@link ParticipantSignaling}.\n   */\n  function ParticipantSignaling() {\n    _classCallCheck(this, ParticipantSignaling);\n\n    var _this = _possibleConstructorReturn(this, (ParticipantSignaling.__proto__ || Object.getPrototypeOf(ParticipantSignaling)).call(this, 'connecting', states));\n\n    Object.defineProperties(_this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      },\n      _identity: {\n        writable: true,\n        value: null\n      },\n      _networkQualityLevel: {\n        value: null,\n        writable: true\n      },\n      _networkQualityStats: {\n        value: null,\n        writable: true\n      },\n      _sid: {\n        writable: true,\n        value: null\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return this._identity;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return this._sid;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} networkQualityLevel - initially null\n   */\n\n\n  _createClass(ParticipantSignaling, [{\n    key: 'addTrack',\n\n\n    /**\n     * Add the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} to the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {this}\n     * @fires ParticipantSignaling#trackAdded\n     */\n    value: function addTrack(track) {\n      this.tracks.set(track.id || track.sid, track);\n      this.emit('trackAdded', track);\n      return this;\n    }\n\n    /**\n     * Disconnect the {@link ParticipantSignaling}.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Remove the {@link TrackSignaling}, MediaStreamTrack, or\n     * {@link DataTrackSender} from the {@link ParticipantSignaling}.\n     * @param {TrackSignaling|DataTrackSender|MediaTrackSender} track\n     * @returns {?TrackSignaling}\n     * @fires ParticipantSignaling#trackRemoved\n     */\n\n  }, {\n    key: 'removeTrack',\n    value: function removeTrack(track) {\n      var signaling = this.tracks.get(track.id || track.sid);\n      this.tracks.delete(track.id || track.sid);\n      if (signaling) {\n        this.emit('trackRemoved', track);\n      }\n      return signaling || null;\n    }\n\n    /**\n     * @param {NetworkQualityLevel} networkQualityLevel\n     * @param {?NetworkQualityLevels} [networkQualityLevels=null]\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setNetworkQualityLevel',\n    value: function setNetworkQualityLevel(networkQualityLevel, networkQualityLevels) {\n      if (this._networkQualityLevel !== networkQualityLevel) {\n        this._networkQualityLevel = networkQualityLevel;\n        this._networkQualityStats = networkQualityLevels && (networkQualityLevels.audio || networkQualityLevels.video) ? new NetworkQualityStats(networkQualityLevels) : null;\n        this.emit('networkQualityLevelChanged');\n      }\n    }\n\n    /**\n     * updates the subscriber priority for the given track.\n     * @param {Track.SID} trackSid\n     * @param {?Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: 'updateSubscriberTrackPriority',\n    value: function updateSubscriberTrackPriority(trackSid, priority) {\n      // note the most recent priority update for the track.\n      this._enqueuedPriorityUpdates.set(trackSid, priority);\n      if (this._trackPrioritySignaling) {\n        this._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n      }\n    }\n\n    /**\n     * Set the {@link TrackPrioritySignaling}.\n     * @param {TrackPrioritySignaling} trackPrioritySignaling\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setTrackPrioritySignaling',\n    value: function setTrackPrioritySignaling(trackPrioritySignaling) {\n      var _this2 = this;\n\n      this._trackPrioritySignaling = trackPrioritySignaling;\n      if (trackPrioritySignaling) {\n        this._enqueuedPriorityUpdates.forEach(function (priority, trackSid) {\n          _this2._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n        });\n        // NOTE(mpatwardhan)- we intentionally do not clear _enqueuedPriorityUpdates,\n        // this cache will be used to re-send the priorities in case of VMS-FailOver.\n      }\n      return this;\n    }\n\n    /**\n     * Connect the {@link ParticipantSignaling}.\n     * @param {Participant.SID} sid\n     * @param {string} identity\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(sid, identity) {\n      if (this.state === 'connecting' || this.state === 'reconnecting') {\n        if (!this._sid) {\n          this._sid = sid;\n        }\n        if (!this._identity) {\n          this._identity = identity;\n        }\n        this.preempt('connected');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Transition to \"reconnecting\" state.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'reconnecting',\n    value: function reconnecting() {\n      if (this.state === 'connecting' || this.state === 'connected') {\n        this.preempt('reconnecting');\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'networkQualityLevel',\n    get: function get() {\n      return this._networkQualityLevel;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityStats}\n     * @returns {?NetworkQualityStats} networkQualityStats - initially null\n     */\n\n  }, {\n    key: 'networkQualityStats',\n    get: function get() {\n      return this._networkQualityStats;\n    }\n  }]);\n\n  return ParticipantSignaling;\n}(StateMachine);\n\n/**\n * @event ParticipantSignaling#event:networkQualityLevelChanged\n */\n\n/**\n * {@link TrackSignaling} was added to the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackAdded\n * @param {TrackSignaling} track\n */\n\n/**\n * {@link TrackSignaling} was removed from the {@link ParticipantSignaling}.\n * @event ParticipantSignaling#trackRemoved\n * @param {TrackSignaling} track\n */\n\nmodule.exports = ParticipantSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/participant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/recording.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/recording.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n/**\n * Represents recording state\n * @extends EventEmitter\n * @property {?boolean} isEnabled\n */\n\nvar RecordingSignaling = function (_EventEmitter) {\n  _inherits(RecordingSignaling, _EventEmitter);\n\n  /**\n   * Construct a {@link RecordingSignaling}.\n   */\n  function RecordingSignaling() {\n    _classCallCheck(this, RecordingSignaling);\n\n    var _this = _possibleConstructorReturn(this, (RecordingSignaling.__proto__ || Object.getPrototypeOf(RecordingSignaling)).call(this));\n\n    Object.defineProperties(_this, {\n      _isEnabled: {\n        value: null,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        get: function get() {\n          return this._isEnabled;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Disable the {@link RecordingSignaling} if it is not already disabled.\n   * @return {this}\n   */\n\n\n  _createClass(RecordingSignaling, [{\n    key: 'disable',\n    value: function disable() {\n      return this.enable(false);\n    }\n\n    /**\n     * Enable (or disable) the {@link RecordingSignaling} if it is not already enabled\n     * (or disabled).\n     * @param {boolean} [enabled=true]\n     * @return {this}\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable(enabled) {\n      enabled = typeof enabled === 'boolean' ? enabled : true;\n      if (this.isEnabled !== enabled) {\n        this._isEnabled = enabled;\n        this.emit('updated');\n      }\n      return this;\n    }\n  }]);\n\n  return RecordingSignaling;\n}(EventEmitter);\n\n/**\n * Emitted whenever the {@link RecordingSignaling} is updated\n * @event RecordingSignaling#updated\n */\n\nmodule.exports = RecordingSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvcmVjb3JkaW5nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3JlY29yZGluZy5qcz9jMjVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgcmVjb3JkaW5nIHN0YXRlXG4gKiBAZXh0ZW5kcyBFdmVudEVtaXR0ZXJcbiAqIEBwcm9wZXJ0eSB7P2Jvb2xlYW59IGlzRW5hYmxlZFxuICovXG5cbnZhciBSZWNvcmRpbmdTaWduYWxpbmcgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoUmVjb3JkaW5nU2lnbmFsaW5nLCBfRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFJlY29yZGluZ1NpZ25hbGluZ30uXG4gICAqL1xuICBmdW5jdGlvbiBSZWNvcmRpbmdTaWduYWxpbmcoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlY29yZGluZ1NpZ25hbGluZyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUmVjb3JkaW5nU2lnbmFsaW5nLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVjb3JkaW5nU2lnbmFsaW5nKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2lzRW5hYmxlZDoge1xuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBpc0VuYWJsZWQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2lzRW5hYmxlZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNhYmxlIHRoZSB7QGxpbmsgUmVjb3JkaW5nU2lnbmFsaW5nfSBpZiBpdCBpcyBub3QgYWxyZWFkeSBkaXNhYmxlZC5cbiAgICogQHJldHVybiB7dGhpc31cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUmVjb3JkaW5nU2lnbmFsaW5nLCBbe1xuICAgIGtleTogJ2Rpc2FibGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZW5hYmxlKGZhbHNlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbmFibGUgKG9yIGRpc2FibGUpIHRoZSB7QGxpbmsgUmVjb3JkaW5nU2lnbmFsaW5nfSBpZiBpdCBpcyBub3QgYWxyZWFkeSBlbmFibGVkXG4gICAgICogKG9yIGRpc2FibGVkKS5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtlbmFibGVkPXRydWVdXG4gICAgICogQHJldHVybiB7dGhpc31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZW5hYmxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW5hYmxlKGVuYWJsZWQpIHtcbiAgICAgIGVuYWJsZWQgPSB0eXBlb2YgZW5hYmxlZCA9PT0gJ2Jvb2xlYW4nID8gZW5hYmxlZCA6IHRydWU7XG4gICAgICBpZiAodGhpcy5pc0VuYWJsZWQgIT09IGVuYWJsZWQpIHtcbiAgICAgICAgdGhpcy5faXNFbmFibGVkID0gZW5hYmxlZDtcbiAgICAgICAgdGhpcy5lbWl0KCd1cGRhdGVkJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVjb3JkaW5nU2lnbmFsaW5nO1xufShFdmVudEVtaXR0ZXIpO1xuXG4vKipcbiAqIEVtaXR0ZWQgd2hlbmV2ZXIgdGhlIHtAbGluayBSZWNvcmRpbmdTaWduYWxpbmd9IGlzIHVwZGF0ZWRcbiAqIEBldmVudCBSZWNvcmRpbmdTaWduYWxpbmcjdXBkYXRlZFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVjb3JkaW5nU2lnbmFsaW5nOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/recording.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/remoteparticipant.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/remoteparticipant.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ParticipantSignaling = __webpack_require__(/*! ./participant */ \"./node_modules/twilio-video/es5/signaling/participant.js\");\n\n/**\n * A {@link Participant} implementation\n * @extends ParticipantSignaling\n * @property {string} identity\n * @property {Participant.SID} sid\n */\n\nvar RemoteParticipantSignaling = function (_ParticipantSignaling) {\n  _inherits(RemoteParticipantSignaling, _ParticipantSignaling);\n\n  /**\n   * Construct a {@link RemoteParticipantSignaling}.\n   * @param {Participant.SID} sid\n   * @param {string} identity\n   */\n  function RemoteParticipantSignaling(sid, identity) {\n    _classCallCheck(this, RemoteParticipantSignaling);\n\n    var _this = _possibleConstructorReturn(this, (RemoteParticipantSignaling.__proto__ || Object.getPrototypeOf(RemoteParticipantSignaling)).call(this));\n\n    _this.connect(sid, identity);\n    return _this;\n  }\n\n  return RemoteParticipantSignaling;\n}(ParticipantSignaling);\n\nmodule.exports = RemoteParticipantSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvcmVtb3RlcGFydGljaXBhbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvcmVtb3RlcGFydGljaXBhbnQuanM/MWVjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFBhcnRpY2lwYW50U2lnbmFsaW5nID0gcmVxdWlyZSgnLi9wYXJ0aWNpcGFudCcpO1xuXG4vKipcbiAqIEEge0BsaW5rIFBhcnRpY2lwYW50fSBpbXBsZW1lbnRhdGlvblxuICogQGV4dGVuZHMgUGFydGljaXBhbnRTaWduYWxpbmdcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpZGVudGl0eVxuICogQHByb3BlcnR5IHtQYXJ0aWNpcGFudC5TSUR9IHNpZFxuICovXG5cbnZhciBSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZyA9IGZ1bmN0aW9uIChfUGFydGljaXBhbnRTaWduYWxpbmcpIHtcbiAgX2luaGVyaXRzKFJlbW90ZVBhcnRpY2lwYW50U2lnbmFsaW5nLCBfUGFydGljaXBhbnRTaWduYWxpbmcpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgUmVtb3RlUGFydGljaXBhbnRTaWduYWxpbmd9LlxuICAgKiBAcGFyYW0ge1BhcnRpY2lwYW50LlNJRH0gc2lkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZGVudGl0eVxuICAgKi9cbiAgZnVuY3Rpb24gUmVtb3RlUGFydGljaXBhbnRTaWduYWxpbmcoc2lkLCBpZGVudGl0eSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUmVtb3RlUGFydGljaXBhbnRTaWduYWxpbmcuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZykpLmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuY29ubmVjdChzaWQsIGlkZW50aXR5KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICByZXR1cm4gUmVtb3RlUGFydGljaXBhbnRTaWduYWxpbmc7XG59KFBhcnRpY2lwYW50U2lnbmFsaW5nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/remoteparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/remotetrackpublication.js":
/*!***************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/remotetrackpublication.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackSignaling = __webpack_require__(/*! ./track */ \"./node_modules/twilio-video/es5/signaling/track.js\");\n\n/**\n * A {@link RemoteTrackPublication} implementation\n * @extends TrackSignaling\n */\n\nvar RemoteTrackPublicationSignaling = function (_TrackSignaling) {\n  _inherits(RemoteTrackPublicationSignaling, _TrackSignaling);\n\n  /**\n   * Construct a {@link RemoteTrackPublicationSignaling}.\n   * @param {Track.SID} sid\n   * @param {string} name\n   * @param {Track.Kind} kind\n   * @param {boolean} isEnabled\n   * @param {Track.Priority} priority\n   */\n  function RemoteTrackPublicationSignaling(sid, name, kind, isEnabled, priority) {\n    _classCallCheck(this, RemoteTrackPublicationSignaling);\n\n    var _this = _possibleConstructorReturn(this, (RemoteTrackPublicationSignaling.__proto__ || Object.getPrototypeOf(RemoteTrackPublicationSignaling)).call(this, name, kind, isEnabled, priority));\n\n    Object.defineProperties(_this, {\n      _isSwitchedOff: {\n        value: false,\n        writable: true\n      }\n    });\n    _this.setSid(sid);\n    return _this;\n  }\n\n  /**\n   * Whether the {@link RemoteTrackPublicationSignaling} is subscribed to.\n   * @property {boolean}\n   */\n\n\n  _createClass(RemoteTrackPublicationSignaling, [{\n    key: 'subscribeFailed',\n\n\n    /**\n     * @param {Error} error\n     * @returns {this}\n     */\n    value: function subscribeFailed(error) {\n      if (!this.error) {\n        this._error = error;\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Update the publish {@link Track.Priority}.\n     * @param {Track.Priority} priority\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setPriority',\n    value: function setPriority(priority) {\n      if (this._priority !== priority) {\n        this._priority = priority;\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Updates track switch on/off state.\n     * @param {boolean} isSwitchedOff\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setSwitchedOff',\n    value: function setSwitchedOff(isSwitchedOff) {\n      if (this._isSwitchedOff !== isSwitchedOff) {\n        this._isSwitchedOff = isSwitchedOff;\n        this.emit('updated');\n      }\n      return this;\n    }\n  }, {\n    key: 'isSubscribed',\n    get: function get() {\n      return !!this.trackTransceiver;\n    }\n\n    /**\n     * Whether the {@link RemoteTrackPublicationSignaling} is switched off.\n     * @property {boolean}\n     */\n\n  }, {\n    key: 'isSwitchedOff',\n    get: function get() {\n      return this._isSwitchedOff;\n    }\n  }]);\n\n  return RemoteTrackPublicationSignaling;\n}(TrackSignaling);\n\nmodule.exports = RemoteTrackPublicationSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvcmVtb3RldHJhY2twdWJsaWNhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3NpZ25hbGluZy9yZW1vdGV0cmFja3B1YmxpY2F0aW9uLmpzPzU4NzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBUcmFja1NpZ25hbGluZyA9IHJlcXVpcmUoJy4vdHJhY2snKTtcblxuLyoqXG4gKiBBIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9ufSBpbXBsZW1lbnRhdGlvblxuICogQGV4dGVuZHMgVHJhY2tTaWduYWxpbmdcbiAqL1xuXG52YXIgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZyA9IGZ1bmN0aW9uIChfVHJhY2tTaWduYWxpbmcpIHtcbiAgX2luaGVyaXRzKFJlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmcsIF9UcmFja1NpZ25hbGluZyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfS5cbiAgICogQHBhcmFtIHtUcmFjay5TSUR9IHNpZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge1RyYWNrLktpbmR9IGtpbmRcbiAgICogQHBhcmFtIHtib29sZWFufSBpc0VuYWJsZWRcbiAgICogQHBhcmFtIHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHlcbiAgICovXG4gIGZ1bmN0aW9uIFJlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmcoc2lkLCBuYW1lLCBraW5kLCBpc0VuYWJsZWQsIHByaW9yaXR5KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmcpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmcuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nKSkuY2FsbCh0aGlzLCBuYW1lLCBraW5kLCBpc0VuYWJsZWQsIHByaW9yaXR5KSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2lzU3dpdGNoZWRPZmY6IHtcbiAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIF90aGlzLnNldFNpZChzaWQpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZ30gaXMgc3Vic2NyaWJlZCB0by5cbiAgICogQHByb3BlcnR5IHtib29sZWFufVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nLCBbe1xuICAgIGtleTogJ3N1YnNjcmliZUZhaWxlZCcsXG5cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7RXJyb3J9IGVycm9yXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN1YnNjcmliZUZhaWxlZChlcnJvcikge1xuICAgICAgaWYgKCF0aGlzLmVycm9yKSB7XG4gICAgICAgIHRoaXMuX2Vycm9yID0gZXJyb3I7XG4gICAgICAgIHRoaXMuZW1pdCgndXBkYXRlZCcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBwdWJsaXNoIHtAbGluayBUcmFjay5Qcmlvcml0eX0uXG4gICAgICogQHBhcmFtIHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHlcbiAgICAgKiBAcmV0dXJucyB7dGhpc31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc2V0UHJpb3JpdHknLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRQcmlvcml0eShwcmlvcml0eSkge1xuICAgICAgaWYgKHRoaXMuX3ByaW9yaXR5ICE9PSBwcmlvcml0eSkge1xuICAgICAgICB0aGlzLl9wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgICB0aGlzLmVtaXQoJ3VwZGF0ZWQnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdHJhY2sgc3dpdGNoIG9uL29mZiBzdGF0ZS5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzU3dpdGNoZWRPZmZcbiAgICAgKiBAcmV0dXJucyB7dGhpc31cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc2V0U3dpdGNoZWRPZmYnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTd2l0Y2hlZE9mZihpc1N3aXRjaGVkT2ZmKSB7XG4gICAgICBpZiAodGhpcy5faXNTd2l0Y2hlZE9mZiAhPT0gaXNTd2l0Y2hlZE9mZikge1xuICAgICAgICB0aGlzLl9pc1N3aXRjaGVkT2ZmID0gaXNTd2l0Y2hlZE9mZjtcbiAgICAgICAgdGhpcy5lbWl0KCd1cGRhdGVkJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpc1N1YnNjcmliZWQnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuICEhdGhpcy50cmFja1RyYW5zY2VpdmVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIHtAbGluayBSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nfSBpcyBzd2l0Y2hlZCBvZmYuXG4gICAgICogQHByb3BlcnR5IHtib29sZWFufVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdpc1N3aXRjaGVkT2ZmJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pc1N3aXRjaGVkT2ZmO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nO1xufShUcmFja1NpZ25hbGluZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVtb3RlVHJhY2tQdWJsaWNhdGlvblNpZ25hbGluZzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/remotetrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/room.js":
/*!*********************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/room.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DefaultRecordingSignaling = __webpack_require__(/*! ./recording */ \"./node_modules/twilio-video/es5/signaling/recording.js\");\nvar StateMachine = __webpack_require__(/*! ../statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\nvar DefaultTimeout = __webpack_require__(/*! ../util/timeout */ \"./node_modules/twilio-video/es5/util/timeout.js\");\n\nvar _require = __webpack_require__(/*! ../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    MediaConnectionError = _require.MediaConnectionError,\n    MediaDTLSTransportFailedError = _require.MediaDTLSTransportFailedError,\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError;\n\n/*\nRoomSignaling States\n-----------------------\n\n    +-----------+     +--------------+\n    |           |     |              |\n    | connected |---->| disconnected |\n    |           |     |              |\n    +-----------+     +--------------+\n          |  ^               ^\n          |  |               |\n          |  |   +--------------+\n          |  +---|              |\n          |      | reconnecting |\n          +----->|              |\n                 +--------------+\n\n*/\n\nvar states = {\n  connected: ['reconnecting', 'disconnected'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n\n/**\n * A {@link Room} implementation\n * @extends StateMachine\n * @property {RTCPeerConnectionState} connectionState\n * @property {?Participant.SID} dominantSpeakerSid\n * @property {ParticipantSignaling} localParticipant\n * @property {RTCIceConnectionState} iceConnectionState\n * @property {string} name\n * @property {Map<string, RemoteParticipantSignaling>} participants\n * @property {RecordingSignaling} recording\n * @property {Room.SID} sid\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\n * @property {string} signalingConnectionState - \"connected\",\n *   \"reconnecting\", or \"disconnected\"\n * @emits RoomSignaling#connectionStateChanged\n * @emits RoomSignaling#dominantSpeakerChanged\n * @emits RoomSignaling#iceConnectionStateChanged\n * @emits RoomSignaling#signalingConnectionStateChanged\n */\n\nvar RoomSignaling = function (_StateMachine) {\n  _inherits(RoomSignaling, _StateMachine);\n\n  /**\n   * Construct a {@link RoomSignaling}.\n   * @param {ParticipantSignaling} localParticipant\n   * @param {Room.SID} sid\n   * @param {string} name\n   * @param {object} options\n   */\n  function RoomSignaling(localParticipant, sid, name, options) {\n    _classCallCheck(this, RoomSignaling);\n\n    options = Object.assign({\n      RecordingSignaling: DefaultRecordingSignaling,\n      Timeout: DefaultTimeout\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (RoomSignaling.__proto__ || Object.getPrototypeOf(RoomSignaling)).call(this, 'connected', states));\n\n    var RecordingSignaling = options.RecordingSignaling;\n\n    var sessionTimeout = new options.Timeout(function () {\n      _this._disconnect(_this._reconnectingError);\n    }, options.sessionTimeout, false);\n\n    Object.defineProperties(_this, {\n      _mediaConnectionIsReconnecting: {\n        writable: true,\n        value: false\n      },\n      _options: {\n        value: options\n      },\n      _reconnectingError: {\n        value: null,\n        writable: true\n      },\n      _sessionTimeout: {\n        value: sessionTimeout\n      },\n      dominantSpeakerSid: {\n        enumerable: true,\n        value: null,\n        writable: true\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: name\n      },\n      participants: {\n        enumerable: true,\n        value: new Map()\n      },\n      recording: {\n        enumerable: true,\n        value: new RecordingSignaling()\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    _this.on('connectionStateChanged', function () {\n      if (_this.connectionState === 'failed' && !['disconnected', 'failed'].includes(_this.iceConnectionState)) {\n        _this._disconnect(new MediaDTLSTransportFailedError());\n      }\n    });\n\n    _this.on('iceConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n    _this.on('signalingConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n\n    // NOTE(mmalavalli): In case \"iceConnectionState\" is already failed, update\n    // the RoomSignaling state. setTimeout() ensures that the state is updated\n    // after RoomV2's constructor is fully executed, thereby making \"signalingConnectionState\"\n    // available here.\n    setTimeout(function () {\n      return maybeUpdateState(_this);\n    });\n    return _this;\n  }\n\n  /**\n   * Disconnect, possibly with an Error.\n   * @private\n   * @param {Error} [error]\n   * @returns {boolean}\n   */\n\n\n  _createClass(RoomSignaling, [{\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected', null, [error]);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\n     * @param {RemoteParticipantSignaling} participant\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'connectParticipant',\n    value: function connectParticipant(participant) {\n      var self = this;\n\n      if (participant.state === 'disconnected') {\n        return false;\n      }\n\n      if (this.participants.has(participant.sid)) {\n        return false;\n      }\n\n      this.participants.set(participant.sid, participant);\n\n      participant.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          participant.removeListener('stateChanged', stateChanged);\n          self.participants.delete(participant.sid);\n          self.emit('participantDisconnected', participant);\n        }\n      });\n\n      this.emit('participantConnected', participant);\n\n      return true;\n    }\n\n    /**\n     * Disconnect.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      return this._disconnect();\n    }\n\n    /**\n     * Set (or unset) the Dominant Speaker.\n     * @param {?Participant.SID} dominantSpeakerSid\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setDominantSpeaker',\n    value: function setDominantSpeaker(dominantSpeakerSid) {\n      this.dominantSpeakerSid = dominantSpeakerSid;\n      this.emit('dominantSpeakerChanged');\n    }\n  }]);\n\n  return RoomSignaling;\n}(StateMachine);\n\n/**\n * @event RoomSignaling#event:connectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:dominantSpeakerChanged\n */\n\n/**\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantConnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\n * @event RoomSignaling#event:participantDisconnected\n * @param {RemoteParticipantSignaling} participantSignaling\n */\n\n/**\n * @event RoomSignaling#event:iceConnectionStateChanged\n */\n\n/**\n * @event RoomSignaling#event:signalingConnectionStateChanged\n */\n\n/**\n * Maybe update the {@link RoomSignaling} state.\n * @param {RoomSignaling} roomSignaling\n */\n\n\nfunction maybeUpdateState(roomSignaling) {\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n    roomSignaling._sessionTimeout.clear();\n    return;\n  }\n\n  var newState = void 0;\n\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\n    newState = roomSignaling.signalingConnectionState;\n  } else if (roomSignaling.iceConnectionState === 'failed') {\n    roomSignaling._mediaConnectionIsReconnecting = true;\n    newState = 'reconnecting';\n  } else if (roomSignaling.iceConnectionState === 'new' || roomSignaling.iceConnectionState === 'checking') {\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n  } else {\n    roomSignaling._mediaConnectionIsReconnecting = false;\n    roomSignaling._reconnectingError = null;\n    roomSignaling._sessionTimeout.clear();\n    newState = 'connected';\n  }\n\n  if (newState === roomSignaling.state) {\n    return;\n  }\n\n  if (newState === 'reconnecting') {\n    roomSignaling._reconnectingError = roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError();\n    roomSignaling._sessionTimeout.start();\n    roomSignaling.preempt(newState, null, [roomSignaling._reconnectingError]);\n  } else {\n    roomSignaling.preempt(newState);\n  }\n}\n\nmodule.exports = RoomSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/room.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/track.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/track.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\n/**\n * A {@link Track} implementation\n * @extends EventEmitter\n * @property {Track.Kind} kind\n * @property {string} name\n */\n\n\nvar TrackSignaling = function (_EventEmitter) {\n  _inherits(TrackSignaling, _EventEmitter);\n\n  /**\n   * Construct a {@link TrackSignaling}.\n   * @param {string} name\n   * @param {Track.Kind} kind\n   * @param {boolean} isEnabled\n   * @param {Track.Priority} priority\n   */\n  function TrackSignaling(name, kind, isEnabled, priority) {\n    _classCallCheck(this, TrackSignaling);\n\n    var _this = _possibleConstructorReturn(this, (TrackSignaling.__proto__ || Object.getPrototypeOf(TrackSignaling)).call(this));\n\n    var sid = null;\n    Object.defineProperties(_this, {\n      _error: {\n        value: null,\n        writable: true\n      },\n      _isEnabled: {\n        value: isEnabled,\n        writable: true\n      },\n      _priority: {\n        value: priority,\n        writable: true\n      },\n      _trackTransceiver: {\n        value: null,\n        writable: true\n      },\n      _sid: {\n        get: function get() {\n          return sid;\n        },\n        set: function set(_sid) {\n          if (sid === null) {\n            sid = _sid;\n          }\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: kind\n      },\n      name: {\n        enumerable: true,\n        value: name\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Non-null if publication or subscription failed.\n   * @property {?Error} error\n   */\n\n\n  _createClass(TrackSignaling, [{\n    key: 'disable',\n\n\n    /**\n     * Disable the {@link TrackSignaling} if it is not already disabled.\n     * @return {this}\n     */\n    value: function disable() {\n      return this.enable(false);\n    }\n\n    /**\n     * Enable (or disable) the {@link TrackSignaling} if it is not already enabled\n     * (or disabled).\n     * @param {boolean} [enabled=true]\n     * @return {this}\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable(enabled) {\n      enabled = typeof enabled === 'boolean' ? enabled : true;\n      if (this.isEnabled !== enabled) {\n        this._isEnabled = enabled;\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Set the {@link TrackTransceiver} on the {@link TrackSignaling}.\n     * @param {TrackTransceiver} trackTransceiver\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setTrackTransceiver',\n    value: function setTrackTransceiver(trackTransceiver) {\n      trackTransceiver = trackTransceiver || null;\n      if (this.trackTransceiver !== trackTransceiver) {\n        this._trackTransceiver = trackTransceiver;\n        this.emit('updated');\n      }\n      return this;\n    }\n\n    /**\n     * Set the SID on the {@link TrackSignaling} once.\n     * @param {string} sid\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setSid',\n    value: function setSid(sid) {\n      if (this.sid === null) {\n        this._sid = sid;\n        this.emit('updated');\n      }\n      return this;\n    }\n  }, {\n    key: 'error',\n    get: function get() {\n      return this._error;\n    }\n\n    /**\n     * Whether the {@link TrackSignaling} is enabled.\n     * @property {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    get: function get() {\n      return this._isEnabled;\n    }\n\n    /**\n     * The {@link TrackSignaling}'s priority.\n     * @property {Track.Priority}\n     */\n\n  }, {\n    key: 'priority',\n    get: function get() {\n      return this._priority;\n    }\n\n    /**\n     * The {@link TrackSignaling}'s {@link Track.SID}.\n     * @property {Track.SID}\n     */\n\n  }, {\n    key: 'sid',\n    get: function get() {\n      return this._sid;\n    }\n\n    /**\n     * The {@link TrackSignaling}'s {@link TrackTransceiver}.\n     * @property {TrackTransceiver}\n     */\n\n  }, {\n    key: 'trackTransceiver',\n    get: function get() {\n      return this._trackTransceiver;\n    }\n  }]);\n\n  return TrackSignaling;\n}(EventEmitter);\n\n/**\n * Emitted whenever the {@link TrackSignaling} is updated\n * @event TrackSignaling#updated\n */\n\nmodule.exports = TrackSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/track.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/cancelableroomsignalingpromise.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/cancelableroomsignalingpromise.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar CancelablePromise = __webpack_require__(/*! ../../util/cancelablepromise */ \"./node_modules/twilio-video/es5/util/cancelablepromise.js\");\nvar DefaultPeerConnectionManager = __webpack_require__(/*! ./peerconnectionmanager */ \"./node_modules/twilio-video/es5/signaling/v2/peerconnectionmanager.js\");\nvar DefaultRoomV2 = __webpack_require__(/*! ./room */ \"./node_modules/twilio-video/es5/signaling/v2/room.js\");\nvar DefaultTransport = __webpack_require__(/*! ./twilioconnectiontransport */ \"./node_modules/twilio-video/es5/signaling/v2/twilioconnectiontransport.js\");\n\nvar _require = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError,\n    SignalingIncomingMessageInvalidError = _require.SignalingIncomingMessageInvalidError;\n\nvar _require2 = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    flatMap = _require2.flatMap;\n\nfunction createCancelableRoomSignalingPromise(token, wsServer, localParticipant, encodingParameters, preferredCodecs, options) {\n  options = Object.assign({\n    PeerConnectionManager: DefaultPeerConnectionManager,\n    RoomV2: DefaultRoomV2,\n    Transport: DefaultTransport\n  }, options);\n\n  var _options = options,\n      PeerConnectionManager = _options.PeerConnectionManager,\n      RoomV2 = _options.RoomV2,\n      Transport = _options.Transport,\n      iceServers = _options.iceServers,\n      log = _options.log;\n\n  var peerConnectionManager = new PeerConnectionManager(encodingParameters, preferredCodecs, options);\n  var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n    return [trackV2.trackTransceiver];\n  });\n  peerConnectionManager.setTrackSenders(trackSenders);\n\n  var cancellationError = new Error('Canceled');\n\n  var transport = void 0;\n\n  var cancelablePromise = new CancelablePromise(function (resolve, reject, isCanceled) {\n    var onIced = function onIced(iceServers) {\n      if (isCanceled()) {\n        reject(cancellationError);\n        return Promise.reject(cancellationError);\n      }\n      log.debug('Got ICE servers:', iceServers);\n      options.iceServers = iceServers;\n      peerConnectionManager.setConfiguration(options);\n\n      return peerConnectionManager.createAndOffer().then(function () {\n        if (isCanceled()) {\n          reject(cancellationError);\n          throw cancellationError;\n        }\n        log.debug('createAndOffer() succeeded.');\n        // NOTE(mmalavalli): PeerConnectionManager#createAndOffer() queues the\n        // initial offer in the event queue for the 'description' event. So,\n        // we are dequeueing to prevent the spurious 'update' message sent by\n        // the client after connecting to a room.\n        peerConnectionManager.dequeue('description');\n      }).catch(function (error) {\n        log.error('createAndOffer() failed:', error);\n        reject(error);\n        throw error;\n      });\n    };\n\n    var _options2 = options,\n        InsightsPublisher = _options2.InsightsPublisher,\n        NullInsightsPublisher = _options2.NullInsightsPublisher,\n        automaticSubscription = _options2.automaticSubscription,\n        bandwidthProfile = _options2.bandwidthProfile,\n        dominantSpeaker = _options2.dominantSpeaker,\n        environment = _options2.environment,\n        eventObserver = _options2.eventObserver,\n        logLevel = _options2.logLevel,\n        name = _options2.name,\n        networkMonitor = _options2.networkMonitor,\n        networkQuality = _options2.networkQuality,\n        insights = _options2.insights,\n        realm = _options2.realm,\n        sdpSemantics = _options2.sdpSemantics,\n        wsServerInsights = _options2.wsServerInsights;\n\n\n    var transportOptions = Object.assign({\n      automaticSubscription: automaticSubscription,\n      dominantSpeaker: dominantSpeaker,\n      environment: environment,\n      eventObserver: eventObserver,\n      logLevel: logLevel,\n      networkMonitor: networkMonitor,\n      networkQuality: networkQuality,\n      iceServers: iceServers,\n      insights: insights,\n      onIced: onIced,\n      realm: realm,\n      sdpSemantics: sdpSemantics\n    }, typeof wsServerInsights === 'string' ? {\n      wsServerInsights: wsServerInsights\n    } : {}, InsightsPublisher ? {\n      InsightsPublisher: InsightsPublisher\n    } : {}, NullInsightsPublisher ? {\n      NullInsightsPublisher: NullInsightsPublisher\n    } : {}, bandwidthProfile ? {\n      bandwidthProfile: bandwidthProfile\n    } : {});\n\n    transport = new Transport(name, token, localParticipant, peerConnectionManager, wsServer, transportOptions);\n\n    transport.once('connected', function (initialState) {\n      log.debug('Transport connected:', initialState);\n      if (isCanceled()) {\n        reject(cancellationError);\n        return;\n      }\n      var localParticipantState = initialState.participant;\n\n      if (!localParticipantState) {\n        reject(new SignalingIncomingMessageInvalidError());\n        return;\n      }\n\n      var signalingRegion = initialState.options.signaling_region;\n\n      localParticipant.setSignalingRegion(signalingRegion);\n      resolve(new RoomV2(localParticipant, initialState, transport, peerConnectionManager, options));\n    });\n\n    transport.once('stateChanged', function (state, error) {\n      if (state === 'disconnected') {\n        transport = null;\n        reject(error || new SignalingConnectionDisconnectedError());\n      } else {\n        log.debug('Transport state changed:', state);\n      }\n    });\n  }, function () {\n    if (transport) {\n      transport.disconnect();\n      transport = null;\n    }\n  });\n\n  cancelablePromise.catch(function () {\n    if (transport) {\n      transport.disconnect();\n      transport = null;\n    }\n    peerConnectionManager.close();\n  });\n\n  return cancelablePromise;\n}\n\nmodule.exports = createCancelableRoomSignalingPromise;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvY2FuY2VsYWJsZXJvb21zaWduYWxpbmdwcm9taXNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL2NhbmNlbGFibGVyb29tc2lnbmFsaW5ncHJvbWlzZS5qcz8yYTBlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbGFibGVQcm9taXNlID0gcmVxdWlyZSgnLi4vLi4vdXRpbC9jYW5jZWxhYmxlcHJvbWlzZScpO1xudmFyIERlZmF1bHRQZWVyQ29ubmVjdGlvbk1hbmFnZXIgPSByZXF1aXJlKCcuL3BlZXJjb25uZWN0aW9ubWFuYWdlcicpO1xudmFyIERlZmF1bHRSb29tVjIgPSByZXF1aXJlKCcuL3Jvb20nKTtcbnZhciBEZWZhdWx0VHJhbnNwb3J0ID0gcmVxdWlyZSgnLi90d2lsaW9jb25uZWN0aW9udHJhbnNwb3J0Jyk7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4uLy4uL3V0aWwvdHdpbGlvLXZpZGVvLWVycm9ycycpLFxuICAgIFNpZ25hbGluZ0Nvbm5lY3Rpb25EaXNjb25uZWN0ZWRFcnJvciA9IF9yZXF1aXJlLlNpZ25hbGluZ0Nvbm5lY3Rpb25EaXNjb25uZWN0ZWRFcnJvcixcbiAgICBTaWduYWxpbmdJbmNvbWluZ01lc3NhZ2VJbnZhbGlkRXJyb3IgPSBfcmVxdWlyZS5TaWduYWxpbmdJbmNvbWluZ01lc3NhZ2VJbnZhbGlkRXJyb3I7XG5cbnZhciBfcmVxdWlyZTIgPSByZXF1aXJlKCcuLi8uLi91dGlsJyksXG4gICAgZmxhdE1hcCA9IF9yZXF1aXJlMi5mbGF0TWFwO1xuXG5mdW5jdGlvbiBjcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2UodG9rZW4sIHdzU2VydmVyLCBsb2NhbFBhcnRpY2lwYW50LCBlbmNvZGluZ1BhcmFtZXRlcnMsIHByZWZlcnJlZENvZGVjcywgb3B0aW9ucykge1xuICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgUGVlckNvbm5lY3Rpb25NYW5hZ2VyOiBEZWZhdWx0UGVlckNvbm5lY3Rpb25NYW5hZ2VyLFxuICAgIFJvb21WMjogRGVmYXVsdFJvb21WMixcbiAgICBUcmFuc3BvcnQ6IERlZmF1bHRUcmFuc3BvcnRcbiAgfSwgb3B0aW9ucyk7XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIFBlZXJDb25uZWN0aW9uTWFuYWdlciA9IF9vcHRpb25zLlBlZXJDb25uZWN0aW9uTWFuYWdlcixcbiAgICAgIFJvb21WMiA9IF9vcHRpb25zLlJvb21WMixcbiAgICAgIFRyYW5zcG9ydCA9IF9vcHRpb25zLlRyYW5zcG9ydCxcbiAgICAgIGljZVNlcnZlcnMgPSBfb3B0aW9ucy5pY2VTZXJ2ZXJzLFxuICAgICAgbG9nID0gX29wdGlvbnMubG9nO1xuXG4gIHZhciBwZWVyQ29ubmVjdGlvbk1hbmFnZXIgPSBuZXcgUGVlckNvbm5lY3Rpb25NYW5hZ2VyKGVuY29kaW5nUGFyYW1ldGVycywgcHJlZmVycmVkQ29kZWNzLCBvcHRpb25zKTtcbiAgdmFyIHRyYWNrU2VuZGVycyA9IGZsYXRNYXAobG9jYWxQYXJ0aWNpcGFudC50cmFja3MsIGZ1bmN0aW9uICh0cmFja1YyKSB7XG4gICAgcmV0dXJuIFt0cmFja1YyLnRyYWNrVHJhbnNjZWl2ZXJdO1xuICB9KTtcbiAgcGVlckNvbm5lY3Rpb25NYW5hZ2VyLnNldFRyYWNrU2VuZGVycyh0cmFja1NlbmRlcnMpO1xuXG4gIHZhciBjYW5jZWxsYXRpb25FcnJvciA9IG5ldyBFcnJvcignQ2FuY2VsZWQnKTtcblxuICB2YXIgdHJhbnNwb3J0ID0gdm9pZCAwO1xuXG4gIHZhciBjYW5jZWxhYmxlUHJvbWlzZSA9IG5ldyBDYW5jZWxhYmxlUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0LCBpc0NhbmNlbGVkKSB7XG4gICAgdmFyIG9uSWNlZCA9IGZ1bmN0aW9uIG9uSWNlZChpY2VTZXJ2ZXJzKSB7XG4gICAgICBpZiAoaXNDYW5jZWxlZCgpKSB7XG4gICAgICAgIHJlamVjdChjYW5jZWxsYXRpb25FcnJvcik7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChjYW5jZWxsYXRpb25FcnJvcik7XG4gICAgICB9XG4gICAgICBsb2cuZGVidWcoJ0dvdCBJQ0Ugc2VydmVyczonLCBpY2VTZXJ2ZXJzKTtcbiAgICAgIG9wdGlvbnMuaWNlU2VydmVycyA9IGljZVNlcnZlcnM7XG4gICAgICBwZWVyQ29ubmVjdGlvbk1hbmFnZXIuc2V0Q29uZmlndXJhdGlvbihvcHRpb25zKTtcblxuICAgICAgcmV0dXJuIHBlZXJDb25uZWN0aW9uTWFuYWdlci5jcmVhdGVBbmRPZmZlcigpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoaXNDYW5jZWxlZCgpKSB7XG4gICAgICAgICAgcmVqZWN0KGNhbmNlbGxhdGlvbkVycm9yKTtcbiAgICAgICAgICB0aHJvdyBjYW5jZWxsYXRpb25FcnJvcjtcbiAgICAgICAgfVxuICAgICAgICBsb2cuZGVidWcoJ2NyZWF0ZUFuZE9mZmVyKCkgc3VjY2VlZGVkLicpO1xuICAgICAgICAvLyBOT1RFKG1tYWxhdmFsbGkpOiBQZWVyQ29ubmVjdGlvbk1hbmFnZXIjY3JlYXRlQW5kT2ZmZXIoKSBxdWV1ZXMgdGhlXG4gICAgICAgIC8vIGluaXRpYWwgb2ZmZXIgaW4gdGhlIGV2ZW50IHF1ZXVlIGZvciB0aGUgJ2Rlc2NyaXB0aW9uJyBldmVudC4gU28sXG4gICAgICAgIC8vIHdlIGFyZSBkZXF1ZXVlaW5nIHRvIHByZXZlbnQgdGhlIHNwdXJpb3VzICd1cGRhdGUnIG1lc3NhZ2Ugc2VudCBieVxuICAgICAgICAvLyB0aGUgY2xpZW50IGFmdGVyIGNvbm5lY3RpbmcgdG8gYSByb29tLlxuICAgICAgICBwZWVyQ29ubmVjdGlvbk1hbmFnZXIuZGVxdWV1ZSgnZGVzY3JpcHRpb24nKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICBsb2cuZXJyb3IoJ2NyZWF0ZUFuZE9mZmVyKCkgZmFpbGVkOicsIGVycm9yKTtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgdmFyIF9vcHRpb25zMiA9IG9wdGlvbnMsXG4gICAgICAgIEluc2lnaHRzUHVibGlzaGVyID0gX29wdGlvbnMyLkluc2lnaHRzUHVibGlzaGVyLFxuICAgICAgICBOdWxsSW5zaWdodHNQdWJsaXNoZXIgPSBfb3B0aW9uczIuTnVsbEluc2lnaHRzUHVibGlzaGVyLFxuICAgICAgICBhdXRvbWF0aWNTdWJzY3JpcHRpb24gPSBfb3B0aW9uczIuYXV0b21hdGljU3Vic2NyaXB0aW9uLFxuICAgICAgICBiYW5kd2lkdGhQcm9maWxlID0gX29wdGlvbnMyLmJhbmR3aWR0aFByb2ZpbGUsXG4gICAgICAgIGRvbWluYW50U3BlYWtlciA9IF9vcHRpb25zMi5kb21pbmFudFNwZWFrZXIsXG4gICAgICAgIGVudmlyb25tZW50ID0gX29wdGlvbnMyLmVudmlyb25tZW50LFxuICAgICAgICBldmVudE9ic2VydmVyID0gX29wdGlvbnMyLmV2ZW50T2JzZXJ2ZXIsXG4gICAgICAgIGxvZ0xldmVsID0gX29wdGlvbnMyLmxvZ0xldmVsLFxuICAgICAgICBuYW1lID0gX29wdGlvbnMyLm5hbWUsXG4gICAgICAgIG5ldHdvcmtNb25pdG9yID0gX29wdGlvbnMyLm5ldHdvcmtNb25pdG9yLFxuICAgICAgICBuZXR3b3JrUXVhbGl0eSA9IF9vcHRpb25zMi5uZXR3b3JrUXVhbGl0eSxcbiAgICAgICAgaW5zaWdodHMgPSBfb3B0aW9uczIuaW5zaWdodHMsXG4gICAgICAgIHJlYWxtID0gX29wdGlvbnMyLnJlYWxtLFxuICAgICAgICBzZHBTZW1hbnRpY3MgPSBfb3B0aW9uczIuc2RwU2VtYW50aWNzLFxuICAgICAgICB3c1NlcnZlckluc2lnaHRzID0gX29wdGlvbnMyLndzU2VydmVySW5zaWdodHM7XG5cblxuICAgIHZhciB0cmFuc3BvcnRPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBhdXRvbWF0aWNTdWJzY3JpcHRpb246IGF1dG9tYXRpY1N1YnNjcmlwdGlvbixcbiAgICAgIGRvbWluYW50U3BlYWtlcjogZG9taW5hbnRTcGVha2VyLFxuICAgICAgZW52aXJvbm1lbnQ6IGVudmlyb25tZW50LFxuICAgICAgZXZlbnRPYnNlcnZlcjogZXZlbnRPYnNlcnZlcixcbiAgICAgIGxvZ0xldmVsOiBsb2dMZXZlbCxcbiAgICAgIG5ldHdvcmtNb25pdG9yOiBuZXR3b3JrTW9uaXRvcixcbiAgICAgIG5ldHdvcmtRdWFsaXR5OiBuZXR3b3JrUXVhbGl0eSxcbiAgICAgIGljZVNlcnZlcnM6IGljZVNlcnZlcnMsXG4gICAgICBpbnNpZ2h0czogaW5zaWdodHMsXG4gICAgICBvbkljZWQ6IG9uSWNlZCxcbiAgICAgIHJlYWxtOiByZWFsbSxcbiAgICAgIHNkcFNlbWFudGljczogc2RwU2VtYW50aWNzXG4gICAgfSwgdHlwZW9mIHdzU2VydmVySW5zaWdodHMgPT09ICdzdHJpbmcnID8ge1xuICAgICAgd3NTZXJ2ZXJJbnNpZ2h0czogd3NTZXJ2ZXJJbnNpZ2h0c1xuICAgIH0gOiB7fSwgSW5zaWdodHNQdWJsaXNoZXIgPyB7XG4gICAgICBJbnNpZ2h0c1B1Ymxpc2hlcjogSW5zaWdodHNQdWJsaXNoZXJcbiAgICB9IDoge30sIE51bGxJbnNpZ2h0c1B1Ymxpc2hlciA/IHtcbiAgICAgIE51bGxJbnNpZ2h0c1B1Ymxpc2hlcjogTnVsbEluc2lnaHRzUHVibGlzaGVyXG4gICAgfSA6IHt9LCBiYW5kd2lkdGhQcm9maWxlID8ge1xuICAgICAgYmFuZHdpZHRoUHJvZmlsZTogYmFuZHdpZHRoUHJvZmlsZVxuICAgIH0gOiB7fSk7XG5cbiAgICB0cmFuc3BvcnQgPSBuZXcgVHJhbnNwb3J0KG5hbWUsIHRva2VuLCBsb2NhbFBhcnRpY2lwYW50LCBwZWVyQ29ubmVjdGlvbk1hbmFnZXIsIHdzU2VydmVyLCB0cmFuc3BvcnRPcHRpb25zKTtcblxuICAgIHRyYW5zcG9ydC5vbmNlKCdjb25uZWN0ZWQnLCBmdW5jdGlvbiAoaW5pdGlhbFN0YXRlKSB7XG4gICAgICBsb2cuZGVidWcoJ1RyYW5zcG9ydCBjb25uZWN0ZWQ6JywgaW5pdGlhbFN0YXRlKTtcbiAgICAgIGlmIChpc0NhbmNlbGVkKCkpIHtcbiAgICAgICAgcmVqZWN0KGNhbmNlbGxhdGlvbkVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIGxvY2FsUGFydGljaXBhbnRTdGF0ZSA9IGluaXRpYWxTdGF0ZS5wYXJ0aWNpcGFudDtcblxuICAgICAgaWYgKCFsb2NhbFBhcnRpY2lwYW50U3RhdGUpIHtcbiAgICAgICAgcmVqZWN0KG5ldyBTaWduYWxpbmdJbmNvbWluZ01lc3NhZ2VJbnZhbGlkRXJyb3IoKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHNpZ25hbGluZ1JlZ2lvbiA9IGluaXRpYWxTdGF0ZS5vcHRpb25zLnNpZ25hbGluZ19yZWdpb247XG5cbiAgICAgIGxvY2FsUGFydGljaXBhbnQuc2V0U2lnbmFsaW5nUmVnaW9uKHNpZ25hbGluZ1JlZ2lvbik7XG4gICAgICByZXNvbHZlKG5ldyBSb29tVjIobG9jYWxQYXJ0aWNpcGFudCwgaW5pdGlhbFN0YXRlLCB0cmFuc3BvcnQsIHBlZXJDb25uZWN0aW9uTWFuYWdlciwgb3B0aW9ucykpO1xuICAgIH0pO1xuXG4gICAgdHJhbnNwb3J0Lm9uY2UoJ3N0YXRlQ2hhbmdlZCcsIGZ1bmN0aW9uIChzdGF0ZSwgZXJyb3IpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gJ2Rpc2Nvbm5lY3RlZCcpIHtcbiAgICAgICAgdHJhbnNwb3J0ID0gbnVsbDtcbiAgICAgICAgcmVqZWN0KGVycm9yIHx8IG5ldyBTaWduYWxpbmdDb25uZWN0aW9uRGlzY29ubmVjdGVkRXJyb3IoKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2cuZGVidWcoJ1RyYW5zcG9ydCBzdGF0ZSBjaGFuZ2VkOicsIHN0YXRlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSwgZnVuY3Rpb24gKCkge1xuICAgIGlmICh0cmFuc3BvcnQpIHtcbiAgICAgIHRyYW5zcG9ydC5kaXNjb25uZWN0KCk7XG4gICAgICB0cmFuc3BvcnQgPSBudWxsO1xuICAgIH1cbiAgfSk7XG5cbiAgY2FuY2VsYWJsZVByb21pc2UuY2F0Y2goZnVuY3Rpb24gKCkge1xuICAgIGlmICh0cmFuc3BvcnQpIHtcbiAgICAgIHRyYW5zcG9ydC5kaXNjb25uZWN0KCk7XG4gICAgICB0cmFuc3BvcnQgPSBudWxsO1xuICAgIH1cbiAgICBwZWVyQ29ubmVjdGlvbk1hbmFnZXIuY2xvc2UoKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNhbmNlbGFibGVQcm9taXNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUNhbmNlbGFibGVSb29tU2lnbmFsaW5nUHJvbWlzZTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/cancelableroomsignalingpromise.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/dominantspeakersignaling.js":
/*!********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/dominantspeakersignaling.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\n/**\n * @property {?Track.SID} loudestParticipantSid\n * @emits DominantSpeakerSignaling#updated\n */\n\n\nvar DominantSpeakerSignaling = function (_EventEmitter) {\n  _inherits(DominantSpeakerSignaling, _EventEmitter);\n\n  /**\n   * Construct an {@link DominantSpeakerSignaling}.\n   * @param {MediaSignalingTransport} mediaSignalingTransport\n   */\n  function DominantSpeakerSignaling(mediaSignalingTransport) {\n    _classCallCheck(this, DominantSpeakerSignaling);\n\n    var _this = _possibleConstructorReturn(this, (DominantSpeakerSignaling.__proto__ || Object.getPrototypeOf(DominantSpeakerSignaling)).call(this));\n\n    Object.defineProperties(_this, {\n      _loudestParticipantSid: {\n        value: null,\n        writable: true\n      }\n    });\n\n    mediaSignalingTransport.on('message', function (message) {\n      switch (message.type) {\n        case 'active_speaker':\n          _this._setLoudestParticipantSid(message.participant);\n          break;\n        default:\n          break;\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Get the loudest {@link Track.SID}, if known.\n   * @returns {?Track.SID}\n   */\n\n\n  _createClass(DominantSpeakerSignaling, [{\n    key: '_setLoudestParticipantSid',\n\n\n    /**\n     * @private\n     * @param {Track.SID} loudestParticipantSid\n     * @returns {void}\n     */\n    value: function _setLoudestParticipantSid(loudestParticipantSid) {\n      if (this.loudestParticipantSid === loudestParticipantSid) {\n        return;\n      }\n      this._loudestParticipantSid = loudestParticipantSid;\n      this.emit('updated');\n    }\n  }, {\n    key: 'loudestParticipantSid',\n    get: function get() {\n      return this._loudestParticipantSid;\n    }\n  }]);\n\n  return DominantSpeakerSignaling;\n}(EventEmitter);\n\n/**\n * @event DominantSpeakerSignaling#updated\n */\n\nmodule.exports = DominantSpeakerSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvZG9taW5hbnRzcGVha2Vyc2lnbmFsaW5nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL2RvbWluYW50c3BlYWtlcnNpZ25hbGluZy5qcz85NmI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCdldmVudHMnKSxcbiAgICBFdmVudEVtaXR0ZXIgPSBfcmVxdWlyZS5FdmVudEVtaXR0ZXI7XG5cbi8qKlxuICogQHByb3BlcnR5IHs/VHJhY2suU0lEfSBsb3VkZXN0UGFydGljaXBhbnRTaWRcbiAqIEBlbWl0cyBEb21pbmFudFNwZWFrZXJTaWduYWxpbmcjdXBkYXRlZFxuICovXG5cblxudmFyIERvbWluYW50U3BlYWtlclNpZ25hbGluZyA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhEb21pbmFudFNwZWFrZXJTaWduYWxpbmcsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYW4ge0BsaW5rIERvbWluYW50U3BlYWtlclNpZ25hbGluZ30uXG4gICAqIEBwYXJhbSB7TWVkaWFTaWduYWxpbmdUcmFuc3BvcnR9IG1lZGlhU2lnbmFsaW5nVHJhbnNwb3J0XG4gICAqL1xuICBmdW5jdGlvbiBEb21pbmFudFNwZWFrZXJTaWduYWxpbmcobWVkaWFTaWduYWxpbmdUcmFuc3BvcnQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9taW5hbnRTcGVha2VyU2lnbmFsaW5nKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChEb21pbmFudFNwZWFrZXJTaWduYWxpbmcuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihEb21pbmFudFNwZWFrZXJTaWduYWxpbmcpKS5jYWxsKHRoaXMpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBfbG91ZGVzdFBhcnRpY2lwYW50U2lkOiB7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgbWVkaWFTaWduYWxpbmdUcmFuc3BvcnQub24oJ21lc3NhZ2UnLCBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnYWN0aXZlX3NwZWFrZXInOlxuICAgICAgICAgIF90aGlzLl9zZXRMb3VkZXN0UGFydGljaXBhbnRTaWQobWVzc2FnZS5wYXJ0aWNpcGFudCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbG91ZGVzdCB7QGxpbmsgVHJhY2suU0lEfSwgaWYga25vd24uXG4gICAqIEByZXR1cm5zIHs/VHJhY2suU0lEfVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhEb21pbmFudFNwZWFrZXJTaWduYWxpbmcsIFt7XG4gICAga2V5OiAnX3NldExvdWRlc3RQYXJ0aWNpcGFudFNpZCcsXG5cblxuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtUcmFjay5TSUR9IGxvdWRlc3RQYXJ0aWNpcGFudFNpZFxuICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBfc2V0TG91ZGVzdFBhcnRpY2lwYW50U2lkKGxvdWRlc3RQYXJ0aWNpcGFudFNpZCkge1xuICAgICAgaWYgKHRoaXMubG91ZGVzdFBhcnRpY2lwYW50U2lkID09PSBsb3VkZXN0UGFydGljaXBhbnRTaWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5fbG91ZGVzdFBhcnRpY2lwYW50U2lkID0gbG91ZGVzdFBhcnRpY2lwYW50U2lkO1xuICAgICAgdGhpcy5lbWl0KCd1cGRhdGVkJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbG91ZGVzdFBhcnRpY2lwYW50U2lkJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9sb3VkZXN0UGFydGljaXBhbnRTaWQ7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIERvbWluYW50U3BlYWtlclNpZ25hbGluZztcbn0oRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBAZXZlbnQgRG9taW5hbnRTcGVha2VyU2lnbmFsaW5nI3VwZGF0ZWRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IERvbWluYW50U3BlYWtlclNpZ25hbGluZzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/dominantspeakersignaling.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/icebox.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/icebox.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Filter = __webpack_require__(/*! ../../util/filter */ \"./node_modules/twilio-video/es5/util/filter.js\");\n\n/**\n * An {@link IceBox} stores trickled ICE candidates. Candidates added to the\n * {@link IceBox} via {@link IceBox#update} are compared against previously\n * trickled candidates and only new candidates will be returned (assuming they\n * match the current ICE username fragment set by {@link IceBox#setUfrag}).\n * @property {?string} ufrag\n */\n\nvar IceBox = function () {\n  /**\n   * Construct an {@link IceBox}.\n   */\n  function IceBox() {\n    _classCallCheck(this, IceBox);\n\n    Object.defineProperties(this, {\n      _filter: {\n        value: new Filter({\n          getKey: function getKey(iceState) {\n            return iceState.ufrag;\n          },\n          isLessThanOrEqualTo: function isLessThanOrEqualTo(a, b) {\n            return a.revision <= b.revision;\n          }\n        })\n      },\n      _ufrag: {\n        writable: true,\n        value: null\n      },\n      ufrag: {\n        enumerable: true,\n        get: function get() {\n          return this._ufrag;\n        }\n      }\n    });\n  }\n\n  /**\n   * Set the ICE username fragment on the {@link IceBox}. This method returns any\n   * ICE candidates associated with the username fragment.\n   * @param {string} ufrag\n   * @returns {Array<RTCIceCandidateInit>}\n   */\n\n\n  _createClass(IceBox, [{\n    key: 'setUfrag',\n    value: function setUfrag(ufrag) {\n      this._ufrag = ufrag;\n      var ice = this._filter.toMap().get(ufrag);\n      return ice ? ice.candidates : [];\n    }\n\n    /**\n     * Update the {@link IceBox}. This method returns any new ICE candidates\n     * associated with the current username fragment.\n     * @param {object} iceState\n     * @returns {Array<RTCIceCandidateInit>}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(iceState) {\n      // NOTE(mroberts): The Server sometimes does not set the candidates property.\n      iceState.candidates = iceState.candidates || [];\n      var oldIceState = this._filter.toMap().get(iceState.ufrag);\n      var oldCandidates = oldIceState ? oldIceState.candidates : [];\n      return this._filter.update(iceState) && this._ufrag === iceState.ufrag ? iceState.candidates.slice(oldCandidates.length) : [];\n    }\n  }]);\n\n  return IceBox;\n}();\n\nmodule.exports = IceBox;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvaWNlYm94LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL2ljZWJveC5qcz9iYWE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIEZpbHRlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWwvZmlsdGVyJyk7XG5cbi8qKlxuICogQW4ge0BsaW5rIEljZUJveH0gc3RvcmVzIHRyaWNrbGVkIElDRSBjYW5kaWRhdGVzLiBDYW5kaWRhdGVzIGFkZGVkIHRvIHRoZVxuICoge0BsaW5rIEljZUJveH0gdmlhIHtAbGluayBJY2VCb3gjdXBkYXRlfSBhcmUgY29tcGFyZWQgYWdhaW5zdCBwcmV2aW91c2x5XG4gKiB0cmlja2xlZCBjYW5kaWRhdGVzIGFuZCBvbmx5IG5ldyBjYW5kaWRhdGVzIHdpbGwgYmUgcmV0dXJuZWQgKGFzc3VtaW5nIHRoZXlcbiAqIG1hdGNoIHRoZSBjdXJyZW50IElDRSB1c2VybmFtZSBmcmFnbWVudCBzZXQgYnkge0BsaW5rIEljZUJveCNzZXRVZnJhZ30pLlxuICogQHByb3BlcnR5IHs/c3RyaW5nfSB1ZnJhZ1xuICovXG5cbnZhciBJY2VCb3ggPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYW4ge0BsaW5rIEljZUJveH0uXG4gICAqL1xuICBmdW5jdGlvbiBJY2VCb3goKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEljZUJveCk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfZmlsdGVyOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgRmlsdGVyKHtcbiAgICAgICAgICBnZXRLZXk6IGZ1bmN0aW9uIGdldEtleShpY2VTdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGljZVN0YXRlLnVmcmFnO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaXNMZXNzVGhhbk9yRXF1YWxUbzogZnVuY3Rpb24gaXNMZXNzVGhhbk9yRXF1YWxUbyhhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYS5yZXZpc2lvbiA8PSBiLnJldmlzaW9uO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICBfdWZyYWc6IHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBudWxsXG4gICAgICB9LFxuICAgICAgdWZyYWc6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX3VmcmFnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBJQ0UgdXNlcm5hbWUgZnJhZ21lbnQgb24gdGhlIHtAbGluayBJY2VCb3h9LiBUaGlzIG1ldGhvZCByZXR1cm5zIGFueVxuICAgKiBJQ0UgY2FuZGlkYXRlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHVzZXJuYW1lIGZyYWdtZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdWZyYWdcbiAgICogQHJldHVybnMge0FycmF5PFJUQ0ljZUNhbmRpZGF0ZUluaXQ+fVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhJY2VCb3gsIFt7XG4gICAga2V5OiAnc2V0VWZyYWcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRVZnJhZyh1ZnJhZykge1xuICAgICAgdGhpcy5fdWZyYWcgPSB1ZnJhZztcbiAgICAgIHZhciBpY2UgPSB0aGlzLl9maWx0ZXIudG9NYXAoKS5nZXQodWZyYWcpO1xuICAgICAgcmV0dXJuIGljZSA/IGljZS5jYW5kaWRhdGVzIDogW107XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSB7QGxpbmsgSWNlQm94fS4gVGhpcyBtZXRob2QgcmV0dXJucyBhbnkgbmV3IElDRSBjYW5kaWRhdGVzXG4gICAgICogYXNzb2NpYXRlZCB3aXRoIHRoZSBjdXJyZW50IHVzZXJuYW1lIGZyYWdtZW50LlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBpY2VTdGF0ZVxuICAgICAqIEByZXR1cm5zIHtBcnJheTxSVENJY2VDYW5kaWRhdGVJbml0Pn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGljZVN0YXRlKSB7XG4gICAgICAvLyBOT1RFKG1yb2JlcnRzKTogVGhlIFNlcnZlciBzb21ldGltZXMgZG9lcyBub3Qgc2V0IHRoZSBjYW5kaWRhdGVzIHByb3BlcnR5LlxuICAgICAgaWNlU3RhdGUuY2FuZGlkYXRlcyA9IGljZVN0YXRlLmNhbmRpZGF0ZXMgfHwgW107XG4gICAgICB2YXIgb2xkSWNlU3RhdGUgPSB0aGlzLl9maWx0ZXIudG9NYXAoKS5nZXQoaWNlU3RhdGUudWZyYWcpO1xuICAgICAgdmFyIG9sZENhbmRpZGF0ZXMgPSBvbGRJY2VTdGF0ZSA/IG9sZEljZVN0YXRlLmNhbmRpZGF0ZXMgOiBbXTtcbiAgICAgIHJldHVybiB0aGlzLl9maWx0ZXIudXBkYXRlKGljZVN0YXRlKSAmJiB0aGlzLl91ZnJhZyA9PT0gaWNlU3RhdGUudWZyYWcgPyBpY2VTdGF0ZS5jYW5kaWRhdGVzLnNsaWNlKG9sZENhbmRpZGF0ZXMubGVuZ3RoKSA6IFtdO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJY2VCb3g7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gSWNlQm94OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/icebox.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/iceconnectionmonitor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/iceconnectionmonitor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    ICE_ACTIVITY_CHECK_PERIOD_MS = _require.ICE_ACTIVITY_CHECK_PERIOD_MS,\n    ICE_INACTIVITY_THRESHOLD_MS = _require.ICE_INACTIVITY_THRESHOLD_MS;\n\n/**\n * Monitors a {@link RTCPeerConnection}'s stats and notifies\n * caller when inactivity is detected.\n */\n\n\nvar IceConnectionMonitor = function () {\n  /**\n   * Construct an {@link IceConnectionMonitor}.\n   * @param {RTCPeerConnection} peerConnection\n   * @param {object} [options]\n   */\n  function IceConnectionMonitor(peerConnection, options) {\n    _classCallCheck(this, IceConnectionMonitor);\n\n    options = Object.assign({\n      activityCheckPeriodMs: ICE_ACTIVITY_CHECK_PERIOD_MS,\n      inactivityThresholdMs: ICE_INACTIVITY_THRESHOLD_MS\n    }, options);\n\n    Object.defineProperties(this, {\n      _activityCheckPeriodMs: {\n        value: options.activityCheckPeriodMs\n      },\n      _inactivityThresholdMs: {\n        value: options.inactivityThresholdMs\n      },\n      _lastActivity: {\n        value: null,\n        writable: true\n      },\n      _peerConnection: {\n        value: peerConnection\n      },\n      _timer: {\n        value: null,\n        writable: true\n      },\n      _onIceConnectionStateChanged: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  _createClass(IceConnectionMonitor, [{\n    key: '_getActivePairStat',\n    value: function _getActivePairStat(stats) {\n      var statsArray = Array.from(stats.values());\n      var hasInBoundTracks = statsArray.find(function (stat) {\n        return stat.type === 'inbound-rtp';\n      });\n      if (!hasInBoundTracks) {\n        // NOTE(mpatwardhan): when there are no tracks shared on a peerConnection\n        // we may see inactivity on bytesReceived - but that is not real inactivity,\n        // ignore it.\n        return null;\n      }\n\n      var activePairStats = statsArray.find(function (stat) {\n        return stat.type === 'candidate-pair' && stat.nominated;\n      });\n      // NOTE(mpatwardhan): sometimes (JSDK-2667) after getting disconnected while switching network\n      // we may not find active pair. Treat this as 0 bytesReceived so that we count it towards inactivity.\n      return activePairStats || {\n        bytesReceived: 0,\n        timestamp: Math.round(new Date().getTime())\n      };\n    }\n\n    /**\n     * Get ICE connection stats, and extract received and send bytes.\n     * @returns Promise<?RTCIceCandidatePairStats>\n     */\n\n  }, {\n    key: '_getIceConnectionStats',\n    value: function _getIceConnectionStats() {\n      var _this = this;\n\n      return this._peerConnection.getStats().then(function (stats) {\n        return _this._getActivePairStat(stats);\n      }).catch(function () {\n        return null;\n      });\n    }\n\n    /**\n     * schedules/un-schedules inactivity callback.\n     */\n\n  }, {\n    key: '_scheduleInactivityCallback',\n    value: function _scheduleInactivityCallback(callback) {\n      var _this2 = this;\n\n      if (callback && this._onIceConnectionStateChanged === null) {\n        // schedule callback\n        this._onIceConnectionStateChanged = function () {\n          if (_this2._peerConnection.iceConnectionState === 'disconnected') {\n            // eslint-disable-next-line callback-return\n            callback();\n          }\n        };\n        this._peerConnection.addEventListener('iceconnectionstatechange', this._onIceConnectionStateChanged);\n      } else if (!callback && this._onIceConnectionStateChanged) {\n        // unschedule callback\n        this._peerConnection.removeEventListener('iceconnectionstatechange', this._onIceConnectionStateChanged);\n        this._onIceConnectionStateChanged = null;\n      }\n    }\n\n    /**\n     * Start monitoring the ICE connection.\n     * Monitors bytes received on active ice connection pair,\n     * invokes onIceConnectionInactive when inactivity is detected.\n     * @param {function} onIceConnectionInactive\n     */\n\n  }, {\n    key: 'start',\n    value: function start(onIceConnectionInactive) {\n      var _this3 = this;\n\n      this.stop();\n\n      this._timer = setInterval(function () {\n        _this3._getIceConnectionStats().then(function (iceStats) {\n          if (!iceStats) {\n            return;\n          }\n\n          if (!_this3._lastActivity || _this3._lastActivity.bytesReceived !== iceStats.bytesReceived) {\n            _this3._lastActivity = iceStats;\n            // detected activity, cancel scheduled callback if any.\n            _this3._scheduleInactivityCallback(null);\n          }\n\n          if (iceStats.timestamp - _this3._lastActivity.timestamp >= _this3._inactivityThresholdMs) {\n            // detected inactivity.\n            if (_this3._peerConnection.iceConnectionState === 'disconnected') {\n              onIceConnectionInactive();\n            } else if (_this3._onIceConnectionStateChanged === null) {\n              _this3._scheduleInactivityCallback(onIceConnectionInactive);\n            }\n          }\n        });\n      }, this._activityCheckPeriodMs);\n    }\n\n    /**\n     * Stop monitoring the ICE connection state.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this._scheduleInactivityCallback(null);\n      if (this._timer !== null) {\n        clearInterval(this._timer);\n        this._timer = null;\n        this._lastActivity = null;\n      }\n    }\n  }]);\n\n  return IceConnectionMonitor;\n}();\n\nmodule.exports = IceConnectionMonitor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/iceconnectionmonitor.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultCreateCancelableRoomSignalingPromise = __webpack_require__(/*! ./cancelableroomsignalingpromise */ \"./node_modules/twilio-video/es5/signaling/v2/cancelableroomsignalingpromise.js\");\nvar LocalParticipantV2 = __webpack_require__(/*! ./localparticipant */ \"./node_modules/twilio-video/es5/signaling/v2/localparticipant.js\");\nvar Signaling = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/signaling/index.js\");\n\n/**\n * {@link SignalingV2} implements version 2 of our signaling protocol.\n * @extends Signaling\n */\n\nvar SignalingV2 = function (_Signaling) {\n  _inherits(SignalingV2, _Signaling);\n\n  /**\n   * Construct {@link SignalingV2}.\n   * @param {string} wsServer\n   * @param {?object} [options={}]\n   */\n  function SignalingV2(wsServer, options) {\n    _classCallCheck(this, SignalingV2);\n\n    /* eslint new-cap:0 */\n    options = Object.assign({\n      createCancelableRoomSignalingPromise: defaultCreateCancelableRoomSignalingPromise\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (SignalingV2.__proto__ || Object.getPrototypeOf(SignalingV2)).call(this));\n\n    Object.defineProperties(_this, {\n      _createCancelableRoomSignalingPromise: {\n        value: options.createCancelableRoomSignalingPromise\n      },\n      _options: {\n        value: options\n      },\n      _wsServer: {\n        value: wsServer\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * @private\n   */\n\n\n  _createClass(SignalingV2, [{\n    key: '_connect',\n    value: function _connect(localParticipant, token, encodingParameters, preferredCodecs, options) {\n      options = Object.assign({}, this._options, options);\n      return this._createCancelableRoomSignalingPromise.bind(null, token, this._wsServer, localParticipant, encodingParameters, preferredCodecs, options);\n    }\n  }, {\n    key: 'createLocalParticipantSignaling',\n    value: function createLocalParticipantSignaling(encodingParameters, networkQualityConfiguration) {\n      return new LocalParticipantV2(encodingParameters, networkQualityConfiguration);\n    }\n  }]);\n\n  return SignalingV2;\n}(Signaling);\n\nmodule.exports = SignalingV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvaW5kZXguanM/YzAwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGRlZmF1bHRDcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2UgPSByZXF1aXJlKCcuL2NhbmNlbGFibGVyb29tc2lnbmFsaW5ncHJvbWlzZScpO1xudmFyIExvY2FsUGFydGljaXBhbnRWMiA9IHJlcXVpcmUoJy4vbG9jYWxwYXJ0aWNpcGFudCcpO1xudmFyIFNpZ25hbGluZyA9IHJlcXVpcmUoJy4uLycpO1xuXG4vKipcbiAqIHtAbGluayBTaWduYWxpbmdWMn0gaW1wbGVtZW50cyB2ZXJzaW9uIDIgb2Ygb3VyIHNpZ25hbGluZyBwcm90b2NvbC5cbiAqIEBleHRlbmRzIFNpZ25hbGluZ1xuICovXG5cbnZhciBTaWduYWxpbmdWMiA9IGZ1bmN0aW9uIChfU2lnbmFsaW5nKSB7XG4gIF9pbmhlcml0cyhTaWduYWxpbmdWMiwgX1NpZ25hbGluZyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCB7QGxpbmsgU2lnbmFsaW5nVjJ9LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gd3NTZXJ2ZXJcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBbb3B0aW9ucz17fV1cbiAgICovXG4gIGZ1bmN0aW9uIFNpZ25hbGluZ1YyKHdzU2VydmVyLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNpZ25hbGluZ1YyKTtcblxuICAgIC8qIGVzbGludCBuZXctY2FwOjAgKi9cbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBjcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2U6IGRlZmF1bHRDcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2VcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChTaWduYWxpbmdWMi5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNpZ25hbGluZ1YyKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2NyZWF0ZUNhbmNlbGFibGVSb29tU2lnbmFsaW5nUHJvbWlzZToge1xuICAgICAgICB2YWx1ZTogb3B0aW9ucy5jcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2VcbiAgICAgIH0sXG4gICAgICBfb3B0aW9uczoge1xuICAgICAgICB2YWx1ZTogb3B0aW9uc1xuICAgICAgfSxcbiAgICAgIF93c1NlcnZlcjoge1xuICAgICAgICB2YWx1ZTogd3NTZXJ2ZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoU2lnbmFsaW5nVjIsIFt7XG4gICAga2V5OiAnX2Nvbm5lY3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY29ubmVjdChsb2NhbFBhcnRpY2lwYW50LCB0b2tlbiwgZW5jb2RpbmdQYXJhbWV0ZXJzLCBwcmVmZXJyZWRDb2RlY3MsIG9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLl9vcHRpb25zLCBvcHRpb25zKTtcbiAgICAgIHJldHVybiB0aGlzLl9jcmVhdGVDYW5jZWxhYmxlUm9vbVNpZ25hbGluZ1Byb21pc2UuYmluZChudWxsLCB0b2tlbiwgdGhpcy5fd3NTZXJ2ZXIsIGxvY2FsUGFydGljaXBhbnQsIGVuY29kaW5nUGFyYW1ldGVycywgcHJlZmVycmVkQ29kZWNzLCBvcHRpb25zKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVMb2NhbFBhcnRpY2lwYW50U2lnbmFsaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlTG9jYWxQYXJ0aWNpcGFudFNpZ25hbGluZyhlbmNvZGluZ1BhcmFtZXRlcnMsIG5ldHdvcmtRdWFsaXR5Q29uZmlndXJhdGlvbikge1xuICAgICAgcmV0dXJuIG5ldyBMb2NhbFBhcnRpY2lwYW50VjIoZW5jb2RpbmdQYXJhbWV0ZXJzLCBuZXR3b3JrUXVhbGl0eUNvbmZpZ3VyYXRpb24pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTaWduYWxpbmdWMjtcbn0oU2lnbmFsaW5nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBTaWduYWxpbmdWMjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/localparticipant.js":
/*!************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/localparticipant.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalParticipantSignaling = __webpack_require__(/*! ../localparticipant */ \"./node_modules/twilio-video/es5/signaling/localparticipant.js\");\nvar LocalTrackPublicationV2 = __webpack_require__(/*! ./localtrackpublication */ \"./node_modules/twilio-video/es5/signaling/v2/localtrackpublication.js\");\n\nvar _require = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    isDeepEqual = _require.isDeepEqual;\n\n/**\n * @extends ParticipantSignaling\n * @property {BandwidthProfileOptions} bandwidthProfile\n * @property {NetworkQualityConfigurationImpl} networkQualityConfiguration\n * @property {number} revision\n * @emits LocalParticipantV2#updated\n */\n\n\nvar LocalParticipantV2 = function (_LocalParticipantSign) {\n  _inherits(LocalParticipantV2, _LocalParticipantSign);\n\n  /**\n   * Construct a {@link LocalParticipantV2}.\n   * @param {EncodingParametersImpl} encodingParameters\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   * @param {object} [options]\n   */\n  function LocalParticipantV2(encodingParameters, networkQualityConfiguration, options) {\n    _classCallCheck(this, LocalParticipantV2);\n\n    options = Object.assign({\n      LocalTrackPublicationV2: LocalTrackPublicationV2\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (LocalParticipantV2.__proto__ || Object.getPrototypeOf(LocalParticipantV2)).call(this));\n\n    Object.defineProperties(_this, {\n      _bandwidthProfile: {\n        value: null,\n        writable: true\n      },\n      _bandwidthProfileRevision: {\n        value: 0,\n        writable: true\n      },\n      _encodingParameters: {\n        value: encodingParameters\n      },\n      _removeListeners: {\n        value: new Map()\n      },\n      _LocalTrackPublicationV2: {\n        value: options.LocalTrackPublicationV2\n      },\n      _publishedRevision: {\n        writable: true,\n        value: 0\n      },\n      _revision: {\n        writable: true,\n        value: 1\n      },\n      _signalingRegion: {\n        value: null,\n        writable: true\n      },\n      bandwidthProfile: {\n        enumerable: true,\n        get: function get() {\n          return this._bandwidthProfile;\n        }\n      },\n      bandwidthProfileRevision: {\n        enumerable: true,\n        get: function get() {\n          return this._bandwidthProfileRevision;\n        }\n      },\n      networkQualityConfiguration: {\n        enumerable: true,\n        value: networkQualityConfiguration\n      },\n      revision: {\n        enumerable: true,\n        get: function get() {\n          return this._revision;\n        }\n      },\n      signalingRegion: {\n        enumerable: true,\n        get: function get() {\n          return this._signalingRegion;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Set the signalingRegion.\n   * @param {string} signalingRegion.\n   */\n\n\n  _createClass(LocalParticipantV2, [{\n    key: 'setSignalingRegion',\n    value: function setSignalingRegion(signalingRegion) {\n      if (!this._signalingRegion) {\n        this._signalingRegion = signalingRegion;\n      }\n    }\n\n    /**\n     * Update the {@link BandwidthProfileOptions}.\n     * @param {BandwidthProfileOptions} bandwidthProfile\n     */\n\n  }, {\n    key: 'setBandwidthProfile',\n    value: function setBandwidthProfile(bandwidthProfile) {\n      if (!isDeepEqual(this._bandwidthProfile, bandwidthProfile)) {\n        // NOTE(mmalavalli): Object.assign() copies the values of only\n        // the top level properties. In order to deep copy the object, we\n        // stringify and parse the object.\n        this._bandwidthProfile = JSON.parse(JSON.stringify(bandwidthProfile));\n        this._bandwidthProfileRevision++;\n        this.didUpdate();\n      }\n    }\n\n    /**\n     * Set the {@link EncodingParameters}.\n     * @param {?EncodingParameters} encodingParameters\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setParameters',\n    value: function setParameters(encodingParameters) {\n      this._encodingParameters.update(encodingParameters);\n      return this;\n    }\n\n    /**\n     * Update the {@link LocalParticipantV2} with the new state.\n     * @param {Published} published\n     * @returns {this}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(published) {\n      if (this._publishedRevision >= published.revision) {\n        return this;\n      }\n\n      this._publishedRevision = published.revision;\n\n      published.tracks.forEach(function (publicationState) {\n        var localTrackPublicationV2 = this.tracks.get(publicationState.id);\n        if (localTrackPublicationV2) {\n          localTrackPublicationV2.update(publicationState);\n        }\n      }, this);\n\n      return this;\n    }\n\n    /**\n     * @protected\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @param {string} name\n     * @param {Track.Priority} priority\n     * @returns {LocalTrackPublicationV2}\n     */\n\n  }, {\n    key: '_createLocalTrackPublicationSignaling',\n    value: function _createLocalTrackPublicationSignaling(trackSender, name, priority) {\n      return new this._LocalTrackPublicationV2(trackSender, name, priority);\n    }\n\n    /**\n     * Add a {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n     * or {@link MediaTrackSender} to the {@link LocalParticipantV2}.\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @param {string} name\n     * @param {Track.Priority} priority\n     * @returns {this}\n     */\n\n  }, {\n    key: 'addTrack',\n    value: function addTrack(trackSender, name, priority) {\n      var _this2 = this;\n\n      _get(LocalParticipantV2.prototype.__proto__ || Object.getPrototypeOf(LocalParticipantV2.prototype), 'addTrack', this).call(this, trackSender, name, priority);\n      var publication = this.getPublication(trackSender);\n\n      var isEnabled = publication.isEnabled,\n          updatedPriority = publication.updatedPriority;\n\n\n      var updated = function updated() {\n        // NOTE(mmalavalli): The LocalParticipantV2's state is only published if\n        // the \"updated\" event is emitted due to LocalTrackPublicationV2's\n        // .isEnabled or .updatedPriority being changed. We do not publish if it is fired due to the\n        // LocalTrackPublicationV2's .sid being set.\n        if (isEnabled !== publication.isEnabled || updatedPriority !== publication.updatedPriority) {\n          _this2.didUpdate();\n          isEnabled = publication.isEnabled;\n          updatedPriority = publication.updatedPriority;\n        }\n      };\n\n      publication.on('updated', updated);\n\n      this._removeListener(publication);\n      this._removeListeners.set(publication, function () {\n        return publication.removeListener('updated', updated);\n      });\n\n      this.didUpdate();\n\n      return this;\n    }\n\n    /**\n     * @private\n     * @param {LocalTrackPublicationV2} publication\n     * @returns {void}\n     */\n\n  }, {\n    key: '_removeListener',\n    value: function _removeListener(publication) {\n      var removeListener = this._removeListeners.get(publication);\n      if (removeListener) {\n        removeListener();\n      }\n    }\n\n    /**\n     * Get the current state of the {@link LocalParticipantV2}.\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getState',\n    value: function getState() {\n      return {\n        revision: this.revision,\n        tracks: Array.from(this.tracks.values()).map(function (track) {\n          return track.getState();\n        })\n      };\n    }\n\n    /**\n     * Increment the revision for the {@link LocalParticipantV2}.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: 'didUpdate',\n    value: function didUpdate() {\n      this._revision++;\n      this.emit('updated');\n    }\n\n    /**\n     * Remove the {@link LocalTrackPublicationV2} for the given {@link DataTrackSender}\n     * or {@link MediaTrackSender} from the {@link LocalParticipantV2}.\n     * @param {DataTrackSender|MediaTrackSender} trackSender\n     * @returns {?LocalTrackPublicationV2}\n     */\n\n  }, {\n    key: 'removeTrack',\n    value: function removeTrack(trackSender) {\n      var publication = _get(LocalParticipantV2.prototype.__proto__ || Object.getPrototypeOf(LocalParticipantV2.prototype), 'removeTrack', this).call(this, trackSender);\n      if (publication) {\n        trackSender.removeClone(publication.trackTransceiver);\n        this._removeListener(publication);\n        this.didUpdate();\n      }\n      return publication;\n    }\n\n    /**\n     * Updates the verbosity of network quality information.\n     * @param {NetworkQualityConfiguration} networkQualityConfiguration\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setNetworkQualityConfiguration',\n    value: function setNetworkQualityConfiguration(networkQualityConfiguration) {\n      this.networkQualityConfiguration.update(networkQualityConfiguration);\n    }\n  }]);\n\n  return LocalParticipantV2;\n}(LocalParticipantSignaling);\n\n/**\n * @interface Published\n * @property {number} revision\n * @property {Array<PublishedTrack>} tracks\n */\n\n/**\n * @typedef {CreatedTrack|ReadyTrack|FailedTrack} PublishedTrack\n */\n\n/**\n * @interface CreatedTrack\n * @property {Track.ID} id\n * @property {string} state - \"created\"\n */\n\n/**\n * @interface ReadyTrack\n * @property {Track.ID} id\n * @property {Track.SID} sid\n * @property {string} state - \"ready\"\n */\n\n/**\n * @interface FailedTrack\n * @property {Track.ID} id\n * @property {TrackError} error\n * @property {string} state - \"failed\"\n */\n\n/**\n * @interface TrackError\n * @property {number} code\n * @property {string} message\n */\n\n/**\n * @event LocalParticipantV2#updated\n */\n\nmodule.exports = LocalParticipantV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/localparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/localtrackpublication.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/localtrackpublication.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackPublicationSignaling = __webpack_require__(/*! ../localtrackpublication */ \"./node_modules/twilio-video/es5/signaling/localtrackpublication.js\");\nvar createTwilioError = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\").createTwilioError;\n\n/**\n * @extends LocalTrackPublicationSignaling\n */\n\nvar LocalTrackPublicationV2 = function (_LocalTrackPublicatio) {\n  _inherits(LocalTrackPublicationV2, _LocalTrackPublicatio);\n\n  /**\n   * Construct a {@link LocalTrackPublicationV2}.\n   * @param {DataTrackSender|MediaTrackSender} trackSender\n   * @param {string} name\n   * @param {Track.Priority} priority\n   */\n  function LocalTrackPublicationV2(trackSender, name, priority) {\n    _classCallCheck(this, LocalTrackPublicationV2);\n\n    return _possibleConstructorReturn(this, (LocalTrackPublicationV2.__proto__ || Object.getPrototypeOf(LocalTrackPublicationV2)).call(this, trackSender, name, priority));\n  }\n\n  /**\n   * Get the {@link LocalTrackPublicationV2#Representation} of a given {@link TrackSignaling}.\n   * @returns {LocalTrackPublicationV2#Representation} - without the SID\n   */\n\n\n  _createClass(LocalTrackPublicationV2, [{\n    key: 'getState',\n    value: function getState() {\n      return {\n        enabled: this.isEnabled,\n        id: this.id,\n        kind: this.kind,\n        name: this.name,\n        priority: this.updatedPriority\n      };\n    }\n\n    /**\n     * Compare the {@link LocalTrackPublicationV2} to a {@link LocalTrackPublicationV2#Representation} of itself\n     * and perform any updates necessary.\n     * @param {PublishedTrack} track\n     * @returns {this}\n     * @fires TrackSignaling#updated\n     */\n\n  }, {\n    key: 'update',\n    value: function update(track) {\n      switch (track.state) {\n        case 'ready':\n          this.setSid(track.sid);\n          break;\n        case 'failed':\n          {\n            var error = track.error;\n            this.publishFailed(createTwilioError(error.code, error.message));\n            break;\n          }\n        default:\n          // 'created'\n          break;\n      }\n      return this;\n    }\n  }]);\n\n  return LocalTrackPublicationV2;\n}(LocalTrackPublicationSignaling);\n\n/**\n * The Room Signaling Protocol (RSP) representation of a {@link LocalTrackPublicationV2}.\n * @typedef {object} LocalTrackPublicationV2#Representation\n * @property {boolean} enabled\n * @property {Track.ID} id\n * @property {Track.Kind} kind\n * @property {string} name\n * @priority {Track.Priority} priority\n * @property {Track.SID} sid\n */\n\nmodule.exports = LocalTrackPublicationV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvbG9jYWx0cmFja3B1YmxpY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL2xvY2FsdHJhY2twdWJsaWNhdGlvbi5qcz82MWVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTG9jYWxUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nID0gcmVxdWlyZSgnLi4vbG9jYWx0cmFja3B1YmxpY2F0aW9uJyk7XG52YXIgY3JlYXRlVHdpbGlvRXJyb3IgPSByZXF1aXJlKCcuLi8uLi91dGlsL3R3aWxpby12aWRlby1lcnJvcnMnKS5jcmVhdGVUd2lsaW9FcnJvcjtcblxuLyoqXG4gKiBAZXh0ZW5kcyBMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmdcbiAqL1xuXG52YXIgTG9jYWxUcmFja1B1YmxpY2F0aW9uVjIgPSBmdW5jdGlvbiAoX0xvY2FsVHJhY2tQdWJsaWNhdGlvKSB7XG4gIF9pbmhlcml0cyhMb2NhbFRyYWNrUHVibGljYXRpb25WMiwgX0xvY2FsVHJhY2tQdWJsaWNhdGlvKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIExvY2FsVHJhY2tQdWJsaWNhdGlvblYyfS5cbiAgICogQHBhcmFtIHtEYXRhVHJhY2tTZW5kZXJ8TWVkaWFUcmFja1NlbmRlcn0gdHJhY2tTZW5kZXJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHlcbiAgICovXG4gIGZ1bmN0aW9uIExvY2FsVHJhY2tQdWJsaWNhdGlvblYyKHRyYWNrU2VuZGVyLCBuYW1lLCBwcmlvcml0eSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2NhbFRyYWNrUHVibGljYXRpb25WMik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKExvY2FsVHJhY2tQdWJsaWNhdGlvblYyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTG9jYWxUcmFja1B1YmxpY2F0aW9uVjIpKS5jYWxsKHRoaXMsIHRyYWNrU2VuZGVyLCBuYW1lLCBwcmlvcml0eSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUge0BsaW5rIExvY2FsVHJhY2tQdWJsaWNhdGlvblYyI1JlcHJlc2VudGF0aW9ufSBvZiBhIGdpdmVuIHtAbGluayBUcmFja1NpZ25hbGluZ30uXG4gICAqIEByZXR1cm5zIHtMb2NhbFRyYWNrUHVibGljYXRpb25WMiNSZXByZXNlbnRhdGlvbn0gLSB3aXRob3V0IHRoZSBTSURcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoTG9jYWxUcmFja1B1YmxpY2F0aW9uVjIsIFt7XG4gICAga2V5OiAnZ2V0U3RhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGVuYWJsZWQ6IHRoaXMuaXNFbmFibGVkLFxuICAgICAgICBpZDogdGhpcy5pZCxcbiAgICAgICAga2luZDogdGhpcy5raW5kLFxuICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgIHByaW9yaXR5OiB0aGlzLnVwZGF0ZWRQcmlvcml0eVxuICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb21wYXJlIHRoZSB7QGxpbmsgTG9jYWxUcmFja1B1YmxpY2F0aW9uVjJ9IHRvIGEge0BsaW5rIExvY2FsVHJhY2tQdWJsaWNhdGlvblYyI1JlcHJlc2VudGF0aW9ufSBvZiBpdHNlbGZcbiAgICAgKiBhbmQgcGVyZm9ybSBhbnkgdXBkYXRlcyBuZWNlc3NhcnkuXG4gICAgICogQHBhcmFtIHtQdWJsaXNoZWRUcmFja30gdHJhY2tcbiAgICAgKiBAcmV0dXJucyB7dGhpc31cbiAgICAgKiBAZmlyZXMgVHJhY2tTaWduYWxpbmcjdXBkYXRlZFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUodHJhY2spIHtcbiAgICAgIHN3aXRjaCAodHJhY2suc3RhdGUpIHtcbiAgICAgICAgY2FzZSAncmVhZHknOlxuICAgICAgICAgIHRoaXMuc2V0U2lkKHRyYWNrLnNpZCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2ZhaWxlZCc6XG4gICAgICAgICAge1xuICAgICAgICAgICAgdmFyIGVycm9yID0gdHJhY2suZXJyb3I7XG4gICAgICAgICAgICB0aGlzLnB1Ymxpc2hGYWlsZWQoY3JlYXRlVHdpbGlvRXJyb3IoZXJyb3IuY29kZSwgZXJyb3IubWVzc2FnZSkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIC8vICdjcmVhdGVkJ1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvY2FsVHJhY2tQdWJsaWNhdGlvblYyO1xufShMb2NhbFRyYWNrUHVibGljYXRpb25TaWduYWxpbmcpO1xuXG4vKipcbiAqIFRoZSBSb29tIFNpZ25hbGluZyBQcm90b2NvbCAoUlNQKSByZXByZXNlbnRhdGlvbiBvZiBhIHtAbGluayBMb2NhbFRyYWNrUHVibGljYXRpb25WMn0uXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBMb2NhbFRyYWNrUHVibGljYXRpb25WMiNSZXByZXNlbnRhdGlvblxuICogQHByb3BlcnR5IHtib29sZWFufSBlbmFibGVkXG4gKiBAcHJvcGVydHkge1RyYWNrLklEfSBpZFxuICogQHByb3BlcnR5IHtUcmFjay5LaW5kfSBraW5kXG4gKiBAcHJvcGVydHkge3N0cmluZ30gbmFtZVxuICogQHByaW9yaXR5IHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHlcbiAqIEBwcm9wZXJ0eSB7VHJhY2suU0lEfSBzaWRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsVHJhY2tQdWJsaWNhdGlvblYyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/localtrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/networkqualitymonitor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/networkqualitymonitor.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint callback-return:0 */\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\nvar PeerConnectionReportFactory = __webpack_require__(/*! ../../stats/peerconnectionreportfactory */ \"./node_modules/twilio-video/es5/stats/peerconnectionreportfactory.js\");\n\n/**\n * @emits NetworkQualityMonitor#updated\n */\n\nvar NetworkQualityMonitor = function (_EventEmitter) {\n  _inherits(NetworkQualityMonitor, _EventEmitter);\n\n  /**\n   * Construct a {@link NetworkQualityMonitor}.\n   * @param {PeerConnectionManager} manager\n   * @param {NetworkQualitySignaling} signaling\n   */\n  function NetworkQualityMonitor(manager, signaling) {\n    _classCallCheck(this, NetworkQualityMonitor);\n\n    var _this = _possibleConstructorReturn(this, (NetworkQualityMonitor.__proto__ || Object.getPrototypeOf(NetworkQualityMonitor)).call(this));\n\n    Object.defineProperties(_this, {\n      _factories: {\n        value: new WeakMap()\n      },\n      _manager: {\n        value: manager\n      },\n      _signaling: {\n        value: signaling\n      }\n    });\n    signaling.on('updated', function () {\n      return _this.emit('updated');\n    });\n    return _this;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} level - initially null\n   */\n\n\n  _createClass(NetworkQualityMonitor, [{\n    key: 'start',\n\n\n    /**\n     * Start monitoring.\n     * @returns {void}\n     */\n    value: function start() {\n      var _this2 = this;\n\n      this.stop();\n      var timeout = setTimeout(function () {\n        if (_this2._timeout !== timeout) {\n          return;\n        }\n        next(_this2).then(function (reports) {\n          if (_this2._timeout !== timeout) {\n            return;\n          }\n          if (reports.length) {\n            var _reports = _slicedToArray(reports, 1),\n                report = _reports[0];\n\n            _this2._signaling.put(report);\n          }\n          _this2.start();\n        });\n      }, 200);\n      this._timeout = timeout;\n    }\n\n    /**\n     * Stop monitoring.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n  }, {\n    key: 'level',\n    get: function get() {\n      return this._signaling.level;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this._signaling.levels;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n\n  }, {\n    key: 'remoteLevels',\n    get: function get() {\n      return this._signaling.remoteLevels;\n    }\n  }]);\n\n  return NetworkQualityMonitor;\n}(EventEmitter);\n\n/**\n * @param {NetworkQualityMonitor}\n * @returns {Promise<NetworkQualityInputs>}\n */\n\n\nfunction next(monitor) {\n  var pcv2s = monitor._manager._peerConnections ? Array.from(monitor._manager._peerConnections.values()) : [];\n\n  var pcs = pcv2s.map(function (pcv2) {\n    return pcv2._peerConnection;\n  }).filter(function (pc) {\n    return pc.signalingState !== 'closed';\n  });\n\n  var factories = pcs.map(function (pc) {\n    if (monitor._factories.has(pc)) {\n      return monitor._factories.get(pc);\n    }\n    var factory = new PeerConnectionReportFactory(pc);\n    monitor._factories.set(pc, factory);\n    return factory;\n  });\n\n  var reportsOrNullPromises = factories.map(function (factory) {\n    return factory.next().catch(function () {\n      return null;\n    });\n  });\n\n  return Promise.all(reportsOrNullPromises).then(function (reportsOrNull) {\n    return reportsOrNull.filter(function (reportOrNull) {\n      return reportOrNull;\n    }).map(function (report) {\n      return report.summarize();\n    });\n  });\n}\n\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualityMonitor#updated\n */\n\nmodule.exports = NetworkQualityMonitor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/networkqualitymonitor.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/networkqualitysignaling.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/networkqualitysignaling.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\nvar AsyncVar = __webpack_require__(/*! ../../util/asyncvar */ \"./node_modules/twilio-video/es5/util/asyncvar.js\");\n\n/**\n * @interface MediaSignalingTransport\n * @property {function(object): boolean} send\n * @emits MediaSignalingTransport#message\n */\n\n/**\n * The {@link MediaSignalingTransport} received a message.\n * @event MediaSignalingTransport#message\n * @param {object} message\n */\n\n/**\n * @interface LatencyStats\n * @property {number} jitter\n * @property {number} rtt\n * @property {number} level\n */\n\n/**\n * @interface FractionLostStats\n * @property {number} fractionLost\n * @property {number} level\n */\n\n/**\n * @interface BandwidthStats\n * @property {number} actual\n * @property {number} available\n * @property {number} level\n */\n\n/**\n * @interface SendOrRecvStats\n * @property {BandwidthStats} bandwidth\n * @property {FractionLostStats} fractionLost\n * @property {LatencyStats} latency\n */\n\n/**\n * @interface MediaLevels\n * @property {number} send\n * @property {SendOrRecvStats} sendStats\n * @property {number} recv\n * @property {SendOrRecvStats} recvStats\n */\n\n/**\n * @interface NetworkQualityLevels\n * @property {number} level\n * @property {MediaLevels} audio\n * @property {MediaLevels} video\n */\n\n/**\n * @typedef {PeerConnectionSummary} NetworkQualityInputs\n */\n\n/**\n * @classdesc The {@link NetworkQualitySignaling} class allows submitting\n *   {@link NetworkQualityInputs} for computing {@link NetworkQualityLevel}. It\n *   does so by sending and receiving messages over a\n *   {@link MediaSignalingTransport}. The exact transport used depends on the\n *   topology of the {@link Room} that {@link NetworkQualitySignaling} is being\n *   used within: for P2P Rooms, we re-use the {@link TransportV2}; and for\n *   Group Rooms, we use a {@link DataTransport}.\n * @emits NetworkQualitySignaling#updated\n */\n\nvar NetworkQualitySignaling = function (_EventEmitter) {\n  _inherits(NetworkQualitySignaling, _EventEmitter);\n\n  /**\n   * Construct a {@link NetworkQualitySignaling}.\n   * @param {MediaSignalingTransport} mediaSignalingTransport\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   */\n  function NetworkQualitySignaling(mediaSignalingTransport, networkQualityConfiguration) {\n    _classCallCheck(this, NetworkQualitySignaling);\n\n    var _this = _possibleConstructorReturn(this, (NetworkQualitySignaling.__proto__ || Object.getPrototypeOf(NetworkQualitySignaling)).call(this));\n\n    Object.defineProperties(_this, {\n      _level: {\n        value: null,\n        writable: true\n      },\n      _levels: {\n        value: null,\n        writable: true\n      },\n      _remoteLevels: {\n        value: new Map(),\n        writable: true\n      },\n      _mediaSignalingTransport: {\n        value: mediaSignalingTransport\n      },\n      _networkQualityInputs: {\n        value: new AsyncVar()\n      },\n      _networkQualityReportLevels: {\n        get: function get() {\n          return {\n            reportLevel: networkQualityConfiguration.local,\n            remoteReportLevel: networkQualityConfiguration.remote\n          };\n        }\n      }\n    });\n\n    mediaSignalingTransport.on('message', function (message) {\n      switch (message.type) {\n        case 'network_quality':\n          _this._handleNetworkQualityMessage(message);\n          break;\n        default:\n          break;\n      }\n    });\n\n    _this._sendNetworkQualityInputs();\n    return _this;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} level - initially null\n   */\n\n\n  _createClass(NetworkQualitySignaling, [{\n    key: '_handleNetworkQualityMessage',\n\n\n    /**\n     * Check to see if the {@link NetworkQualityLevel} is new, and raise an\n     * event if necessary.\n     * @private\n     * @param {object} message\n     * @returns {void}\n     */\n    value: function _handleNetworkQualityMessage(message) {\n      var _this2 = this;\n\n      var updated = false;\n      var level = null;\n      var local = message ? message.local : null;\n      if (typeof local === 'number') {\n        // NOTE(mroberts): In prod, we plan to only send the level.\n        level = local;\n        this._levels = null;\n      } else if ((typeof local === 'undefined' ? 'undefined' : _typeof(local)) === 'object' && local) {\n        // NOTE(mroberts): In dev, we plan to send the decomposed levels. An early\n        // VMS version does not compute `level` for us, so we fallback to taking\n        // the minimum ourselves.\n        this._levels = local;\n        level = typeof local.level === 'number' ? local.level : Math.min(local.audio.send, local.audio.recv, local.video.send, local.video.recv);\n      }\n      if (level !== null && this.level !== level) {\n        this._level = level;\n        updated = true;\n      }\n      this._remoteLevels = message && message.remotes ? message.remotes.reduce(function (levels, obj) {\n        var oldObj = _this2._remoteLevels.get(obj.sid) || {};\n        if (oldObj.level !== obj.level) {\n          updated = true;\n        }\n        return levels.set(obj.sid, obj);\n      }, new Map()) : this._remoteLevels;\n\n      if (updated) {\n        this.emit('updated');\n      }\n      setTimeout(function () {\n        return _this2._sendNetworkQualityInputs();\n      }, 1000);\n    }\n\n    /**\n     * Start sending {@link NetworkQualityInputs}.\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_sendNetworkQualityInputs',\n    value: function _sendNetworkQualityInputs() {\n      var _this3 = this;\n\n      return this._networkQualityInputs.take().then(function (networkQualityInputs) {\n        _this3._mediaSignalingTransport.publish(createNetworkQualityInputsMessage(networkQualityInputs, _this3._networkQualityReportLevels));\n      });\n    }\n\n    /**\n     * Put {@link NetworkQualityInputs} to be used for computing\n     * {@link NetworkQualityLevel}.\n     * @param {NetworkQualityInputs} networkQualityInputs\n     * @returns {void}\n     */\n\n  }, {\n    key: 'put',\n    value: function put(networkQualityInputs) {\n      this._networkQualityInputs.put(networkQualityInputs);\n    }\n  }, {\n    key: 'level',\n    get: function get() {\n      return this._level;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this._levels;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n\n  }, {\n    key: 'remoteLevels',\n    get: function get() {\n      return this._remoteLevels;\n    }\n  }]);\n\n  return NetworkQualitySignaling;\n}(EventEmitter);\n\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualitySignaling#updated\n */\n\n/**\n * @typedef {object} NetworkQualityReportLevels\n * @param {number} reportLevel\n * @param {number} remoteReportLevel\n */\n\n/**\n * @param {NetworkQualityInputs} networkQualityInputs\n * @param {NetworkQualityReportLevels} networkQualityReportLevels\n * @returns {object} message\n */\n\n\nfunction createNetworkQualityInputsMessage(networkQualityInputs, networkQualityReportLevels) {\n  return Object.assign({ type: 'network_quality' }, networkQualityInputs, networkQualityReportLevels);\n}\n\nmodule.exports = NetworkQualitySignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/networkqualitysignaling.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/peerconnection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/peerconnection.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DefaultBackoff = __webpack_require__(/*! backoff */ \"./node_modules/backoff/index.js\");\n\nvar _require = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\"),\n    DefaultMediaStream = _require.MediaStream,\n    DefaultRTCIceCandidate = _require.RTCIceCandidate,\n    DefaultRTCPeerConnection = _require.RTCPeerConnection,\n    DefaultRTCSessionDescription = _require.RTCSessionDescription,\n    getStatistics = _require.getStats;\n\nvar _require2 = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require2.guessBrowser;\n\nvar _require3 = __webpack_require__(/*! @twilio/webrtc/lib/util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\"),\n    getSdpFormat = _require3.getSdpFormat;\n\nvar _require4 = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    DEFAULT_ICE_GATHERING_TIMEOUT_MS = _require4.DEFAULT_ICE_GATHERING_TIMEOUT_MS,\n    DEFAULT_LOG_LEVEL = _require4.DEFAULT_LOG_LEVEL,\n    DEFAULT_SESSION_TIMEOUT_SEC = _require4.DEFAULT_SESSION_TIMEOUT_SEC,\n    iceRestartBackoffConfig = _require4.iceRestartBackoffConfig;\n\nvar _require5 = __webpack_require__(/*! ../../util/sdp */ \"./node_modules/twilio-video/es5/util/sdp/index.js\"),\n    createCodecMapForMediaSection = _require5.createCodecMapForMediaSection,\n    getMediaSections = _require5.getMediaSections,\n    removeSSRCAttributes = _require5.removeSSRCAttributes,\n    revertSimulcastForNonVP8MediaSections = _require5.revertSimulcastForNonVP8MediaSections,\n    setBitrateParameters = _require5.setBitrateParameters,\n    setCodecPreferences = _require5.setCodecPreferences,\n    setSimulcast = _require5.setSimulcast,\n    unifiedPlanAddOrRewriteNewTrackIds = _require5.unifiedPlanAddOrRewriteNewTrackIds,\n    unifiedPlanAddOrRewriteTrackIds = _require5.unifiedPlanAddOrRewriteTrackIds,\n    unifiedPlanFilterLocalCodecs = _require5.unifiedPlanFilterLocalCodecs;\n\nvar DefaultTimeout = __webpack_require__(/*! ../../util/timeout */ \"./node_modules/twilio-video/es5/util/timeout.js\");\n\nvar _require6 = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    MediaClientLocalDescFailedError = _require6.MediaClientLocalDescFailedError,\n    MediaClientRemoteDescFailedError = _require6.MediaClientRemoteDescFailedError;\n\nvar _require7 = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    buildLogLevels = _require7.buildLogLevels,\n    isChromeScreenShareTrack = _require7.isChromeScreenShareTrack,\n    oncePerTick = _require7.oncePerTick;\n\nvar IceBox = __webpack_require__(/*! ./icebox */ \"./node_modules/twilio-video/es5/signaling/v2/icebox.js\");\nvar DefaultIceConnectionMonitor = __webpack_require__(/*! ./iceconnectionmonitor.js */ \"./node_modules/twilio-video/es5/signaling/v2/iceconnectionmonitor.js\");\nvar DataTrackReceiver = __webpack_require__(/*! ../../data/receiver */ \"./node_modules/twilio-video/es5/data/receiver.js\");\nvar MediaTrackReceiver = __webpack_require__(/*! ../../media/track/receiver */ \"./node_modules/twilio-video/es5/media/track/receiver.js\");\nvar StateMachine = __webpack_require__(/*! ../../statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\nvar Log = __webpack_require__(/*! ../../util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\nvar IdentityTrackMatcher = __webpack_require__(/*! ../../util/sdp/trackmatcher/identity */ \"./node_modules/twilio-video/es5/util/sdp/trackmatcher/identity.js\");\nvar OrderedTrackMatcher = __webpack_require__(/*! ../../util/sdp/trackmatcher/ordered */ \"./node_modules/twilio-video/es5/util/sdp/trackmatcher/ordered.js\");\nvar MIDTrackMatcher = __webpack_require__(/*! ../../util/sdp/trackmatcher/mid */ \"./node_modules/twilio-video/es5/util/sdp/trackmatcher/mid.js\");\nvar workaroundIssue8329 = __webpack_require__(/*! ../../util/sdp/issue8329 */ \"./node_modules/twilio-video/es5/util/sdp/issue8329.js\");\n\nvar guess = guessBrowser();\nvar isChrome = guess === 'chrome';\nvar isFirefox = guess === 'firefox';\nvar isSafari = guess === 'safari';\n\nvar isRTCRtpSenderParamsSupported = typeof RTCRtpSender !== 'undefined' && typeof RTCRtpSender.prototype.getParameters === 'function' && typeof RTCRtpSender.prototype.setParameters === 'function';\n\nvar nInstances = 0;\n\n/*\nPeerConnectionV2 States\n-----------------------\n\n    +------+    +--------+\n    |      |    |        |\n    | open |--->| closed |\n    |      |    |        |\n    +------+    +--------+\n      |  ^          ^\n      |  |          |\n      |  |          |\n      v  |          |\n  +----------+      |\n  |          |      |\n  | updating |------+\n  |          |\n  +----------+\n\n*/\n\nvar states = {\n  open: ['closed', 'updating'],\n  updating: ['closed', 'open'],\n  closed: []\n};\n\n/**\n * @extends StateMachine\n * @property {id}\n * @emits PeerConnectionV2#connectionStateChanged\n * @emits PeerConnectionV2#iceConnectionStateChanged\n * @emits PeerConnectionV2#candidates\n * @emits PeerConnectionV2#description\n */\n\nvar PeerConnectionV2 = function (_StateMachine) {\n  _inherits(PeerConnectionV2, _StateMachine);\n\n  /**\n   * Construct a {@link PeerConnectionV2}.\n   * @param {string} id\n   * @param {EncodingParametersImpl} encodingParameters\n   * @param {PreferredCodecs} preferredCodecs\n   * @param {object} [options]\n   */\n  function PeerConnectionV2(id, encodingParameters, preferredCodecs, options) {\n    _classCallCheck(this, PeerConnectionV2);\n\n    var _this = _possibleConstructorReturn(this, (PeerConnectionV2.__proto__ || Object.getPrototypeOf(PeerConnectionV2)).call(this, 'open', states));\n\n    options = Object.assign({\n      enableDscp: false,\n      dummyAudioMediaStreamTrack: null,\n      isChromeScreenShareTrack: isChromeScreenShareTrack,\n      iceServers: [],\n      isRTCRtpSenderParamsSupported: isRTCRtpSenderParamsSupported,\n      logLevel: DEFAULT_LOG_LEVEL,\n      offerOptions: {},\n      revertSimulcastForNonVP8MediaSections: revertSimulcastForNonVP8MediaSections,\n      sessionTimeout: DEFAULT_SESSION_TIMEOUT_SEC * 1000,\n      setBitrateParameters: setBitrateParameters,\n      setCodecPreferences: setCodecPreferences,\n      setSimulcast: setSimulcast,\n      Backoff: DefaultBackoff,\n      IceConnectionMonitor: DefaultIceConnectionMonitor,\n      MediaStream: DefaultMediaStream,\n      RTCIceCandidate: DefaultRTCIceCandidate,\n      RTCPeerConnection: DefaultRTCPeerConnection,\n      RTCSessionDescription: DefaultRTCSessionDescription,\n      Timeout: DefaultTimeout\n    }, options);\n\n    var configuration = getConfiguration(options);\n    var sdpFormat = getSdpFormat(configuration.sdpSemantics);\n    var isUnifiedPlan = sdpFormat === 'unified';\n\n    var localMediaStream = isUnifiedPlan ? null : new options.MediaStream();\n    var logLevels = buildLogLevels(options.logLevel);\n    var RTCPeerConnection = options.RTCPeerConnection;\n\n    if (options.enableDscp === true) {\n      options.chromeSpecificConstraints = options.chromeSpecificConstraints || {};\n      options.chromeSpecificConstraints.optional = options.chromeSpecificConstraints.optional || [];\n      options.chromeSpecificConstraints.optional.push({ googDscp: true });\n    }\n\n    var log = options.log ? options.log.createLog('signaling', _this) : new Log('webrtc', _this, logLevels);\n    var peerConnection = new RTCPeerConnection(configuration, options.chromeSpecificConstraints);\n\n    if (options.dummyAudioMediaStreamTrack) {\n      peerConnection.addTrack(options.dummyAudioMediaStreamTrack, localMediaStream || new options.MediaStream());\n    }\n\n    Object.defineProperties(_this, {\n      _appliedTrackIdsToAttributes: {\n        value: new Map(),\n        writable: true\n      },\n      _dataChannels: {\n        value: new Map()\n      },\n      _dataTrackReceivers: {\n        value: new Set()\n      },\n      _descriptionRevision: {\n        writable: true,\n        value: 0\n      },\n      _didGenerateLocalCandidates: {\n        writable: true,\n        value: false\n      },\n      _enableDscp: {\n        value: options.enableDscp\n      },\n      _encodingParameters: {\n        value: encodingParameters\n      },\n      _isChromeScreenShareTrack: {\n        value: options.isChromeScreenShareTrack\n      },\n      _iceGatheringFailed: {\n        value: false,\n        writable: true\n      },\n      _iceGatheringTimeout: {\n        value: new options.Timeout(function () {\n          return _this._handleIceGatheringTimeout();\n        }, DEFAULT_ICE_GATHERING_TIMEOUT_MS, false)\n      },\n      _iceRestartBackoff: {\n        value: options.Backoff.exponential(iceRestartBackoffConfig)\n      },\n      _instanceId: {\n        value: ++nInstances\n      },\n      _isIceConnectionInactive: {\n        writable: true,\n        value: false\n      },\n      _isIceLite: {\n        writable: true,\n        value: false\n      },\n      _isIceRestartBackoffInProgress: {\n        writable: true,\n        value: false\n      },\n      _isRestartingIce: {\n        writable: true,\n        value: false\n      },\n      _isUnifiedPlan: {\n        value: isUnifiedPlan\n      },\n      _isRTCRtpSenderParamsSupported: {\n        value: options.isRTCRtpSenderParamsSupported\n      },\n      _lastIceConnectionState: {\n        writable: true,\n        value: null\n      },\n      _lastStableDescriptionRevision: {\n        writable: true,\n        value: 0\n      },\n      _localCandidates: {\n        writable: true,\n        value: []\n      },\n      _localCodecs: {\n        value: new Set()\n      },\n      _localCandidatesRevision: {\n        writable: true,\n        value: 1\n      },\n      _localDescriptionWithoutSimulcast: {\n        writable: true,\n        value: null\n      },\n      _localDescription: {\n        writable: true,\n        value: null\n      },\n      _localMediaStream: {\n        value: localMediaStream\n      },\n      _localUfrag: {\n        writable: true,\n        value: null\n      },\n      _log: {\n        value: log\n      },\n      _remoteCodecMaps: {\n        value: new Map()\n      },\n      _rtpSenders: {\n        value: new Map()\n      },\n      _iceConnectionMonitor: {\n        value: new options.IceConnectionMonitor(peerConnection)\n      },\n      _mediaTrackReceivers: {\n        value: new Set()\n      },\n      _needsAnswer: {\n        writable: true,\n        value: false\n      },\n      _negotiationRole: {\n        writable: true,\n        value: null\n      },\n      _offerOptions: {\n        writable: true,\n        value: options.offerOptions\n      },\n      _peerConnection: {\n        value: peerConnection\n      },\n      _preferredAudioCodecs: {\n        value: preferredCodecs.audio\n      },\n      _preferredVideoCodecs: {\n        value: preferredCodecs.video\n      },\n      _shouldApplySimulcast: {\n        value: (isChrome || isSafari) && preferredCodecs.video.some(function (codecSettings) {\n          return codecSettings.codec.toLowerCase() === 'vp8' && codecSettings.simulcast;\n        })\n      },\n      _queuedDescription: {\n        writable: true,\n        value: null\n      },\n      _iceReconnectTimeout: {\n        value: new options.Timeout(function () {\n          log.debug('ICE reconnect timed out');\n          _this.close();\n        }, options.sessionTimeout, false)\n      },\n      _recycledTransceivers: {\n        value: {\n          audio: [],\n          video: []\n        }\n      },\n      _replaceTrackPromises: {\n        value: new Map()\n      },\n      _remoteCandidates: {\n        writable: true,\n        value: new IceBox()\n      },\n      _sdpFormat: {\n        value: sdpFormat\n      },\n      _setBitrateParameters: {\n        value: options.setBitrateParameters\n      },\n      _setCodecPreferences: {\n        value: options.setCodecPreferences\n      },\n      _setSimulcast: {\n        value: options.setSimulcast\n      },\n      _revertSimulcastForNonVP8MediaSections: {\n        value: options.revertSimulcastForNonVP8MediaSections\n      },\n      _RTCIceCandidate: {\n        value: options.RTCIceCandidate\n      },\n      _RTCPeerConnection: {\n        value: options.RTCPeerConnection\n      },\n      _RTCSessionDescription: {\n        value: options.RTCSessionDescription\n      },\n      _shouldOffer: {\n        writable: true,\n        value: false\n      },\n      _shouldRestartIce: {\n        writable: true,\n        value: false\n      },\n      _trackIdsToAttributes: {\n        value: new Map(),\n        writable: true\n      },\n      _trackMatcher: {\n        writable: true,\n        value: null\n      },\n      id: {\n        enumerable: true,\n        value: id\n      }\n    });\n\n    encodingParameters.on('changed', oncePerTick(function () {\n      if (_this._isRTCRtpSenderParamsSupported) {\n        if (!_this._needsAnswer) {\n          updateEncodingParameters(_this);\n        }\n        return;\n      }\n      _this.offer();\n    }));\n\n    peerConnection.addEventListener('connectionstatechange', _this._handleConnectionStateChange.bind(_this));\n    peerConnection.addEventListener('datachannel', _this._handleDataChannelEvent.bind(_this));\n    peerConnection.addEventListener('icecandidate', _this._handleIceCandidateEvent.bind(_this));\n    peerConnection.addEventListener('iceconnectionstatechange', _this._handleIceConnectionStateChange.bind(_this));\n    peerConnection.addEventListener('icegatheringstatechange', _this._handleIceGatheringStateChange.bind(_this));\n    peerConnection.addEventListener('signalingstatechange', _this._handleSignalingStateChange.bind(_this));\n    peerConnection.addEventListener('track', _this._handleTrackEvent.bind(_this));\n    _this._iceRestartBackoff.on('ready', function () {\n      return _this._initiateIceRestart();\n    });\n\n    var self = _this;\n    _this.on('stateChanged', function stateChanged(state) {\n      if (state !== 'closed') {\n        return;\n      }\n      self.removeListener('stateChanged', stateChanged);\n      self._dataChannels.forEach(function (dataChannel, dataTrackSender) {\n        self.removeDataTrackSender(dataTrackSender);\n      });\n    });\n    return _this;\n  }\n\n  _createClass(PeerConnectionV2, [{\n    key: 'toString',\n    value: function toString() {\n      return '[PeerConnectionV2 #' + this._instanceId + ': ' + this.id + ']';\n    }\n\n    /**\n     * The {@link PeerConnectionV2}'s underlying RTCPeerConnection's RTCPeerConnectionState\n     * if supported by the browser, its RTCIceConnectionState otherwise.\n     * @property {RTCPeerConnectionState}\n     */\n\n  }, {\n    key: '_addIceCandidate',\n\n\n    /**\n     * Add an ICE candidate to the {@link PeerConnectionV2}.\n     * @private\n     * @param {object} candidate\n     * @returns {Promise<void>}\n     */\n    value: function _addIceCandidate(candidate) {\n      var _this2 = this;\n\n      return Promise.resolve().then(function () {\n        candidate = new _this2._RTCIceCandidate(candidate);\n        return _this2._peerConnection.addIceCandidate(candidate);\n      }).catch(function (error) {\n        // NOTE(mmalavalli): Firefox 68+ now generates an RTCIceCandidate with an\n        // empty candidate string to signal end-of-candidates, followed by a null\n        // candidate. As of now, Chrome and Safari reject this RTCIceCandidate. Since\n        // this does not affect the media connection between Firefox 68+ and Chrome/Safari\n        // in Peer-to-Peer Rooms, we suppress the Error and log a warning message.\n        //\n        // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n        //\n        _this2._log.warn('Failed to add RTCIceCandidate ' + (candidate ? '\"' + candidate.candidate + '\"' : 'null') + ': ' + error.message);\n      });\n    }\n\n    /**\n     * Add ICE candidates to the {@link PeerConnectionV2}.\n     * @private\n     * @param {Array<object>} candidates\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_addIceCandidates',\n    value: function _addIceCandidates(candidates) {\n      return Promise.all(candidates.map(this._addIceCandidate, this)).then(function () {});\n    }\n\n    /**\n     * Add a new RTCRtpTransceiver or update an existing RTCRtpTransceiver for the\n     * given MediaStreamTrack.\n     * @private\n     * @param {MediaStreamTrack} track\n     * @returns {RTCRtpTransceiver}\n     */\n\n  }, {\n    key: '_addOrUpdateTransceiver',\n    value: function _addOrUpdateTransceiver(track) {\n      var _this3 = this;\n\n      var transceiver = takeRecycledTransceiver(this, track.kind);\n      if (transceiver && transceiver.sender) {\n        var oldTrackId = transceiver.sender.track ? transceiver.sender.track.id : null;\n        if (oldTrackId) {\n          this._log.warn('Reusing transceiver: ' + transceiver.mid + '] ' + oldTrackId + ' => ' + track.id);\n        }\n        // NOTE(mpatwardhan):remember this transceiver while we replace track.\n        // we recycle transceivers that are not in use after 'negotiationCompleted', but we want to prevent\n        // this one from getting recycled while replaceTrack is pending.\n        this._replaceTrackPromises.set(transceiver, transceiver.sender.replaceTrack(track).then(function () {\n          transceiver.direction = 'sendrecv';\n        }, function () {\n          // Do nothing.\n        }).finally(function () {\n          _this3._replaceTrackPromises.delete(transceiver);\n        }));\n        return transceiver;\n      }\n      return this._peerConnection.addTransceiver(track);\n    }\n\n    /**\n     * Check the {@link IceBox}.\n     * @private\n     * @param {RTCSessionDescriptionInit} description\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_checkIceBox',\n    value: function _checkIceBox(description) {\n      var ufrag = getUfrag(description);\n      if (!ufrag) {\n        return Promise.resolve();\n      }\n      var candidates = this._remoteCandidates.setUfrag(ufrag);\n      return this._addIceCandidates(candidates);\n    }\n\n    /**\n     * Create an answer and set it on the {@link PeerConnectionV2}.\n     * @private\n     * @param {RTCSessionDescriptionInit} offer\n     * @returns {Promise<boolean>}\n     */\n\n  }, {\n    key: '_answer',\n    value: function _answer(offer) {\n      var _this4 = this;\n\n      return Promise.resolve().then(function () {\n        if (!_this4._negotiationRole) {\n          _this4._negotiationRole = 'answerer';\n        }\n        return _this4._setRemoteDescription(offer);\n      }).catch(function () {\n        throw new MediaClientRemoteDescFailedError();\n      }).then(function () {\n        return _this4._peerConnection.createAnswer();\n      }).then(function (answer) {\n        if (!isFirefox) {\n          answer = workaroundIssue8329(answer);\n        }\n\n        // NOTE(mpatwardhan): Upcoming chrome versions are going to remove ssrc attributes\n        // mslabel and label. See this bug https://bugs.chromium.org/p/webrtc/issues/detail?id=7110\n        // and PSA: https://groups.google.com/forum/#!searchin/discuss-webrtc/PSA%7Csort:date/discuss-webrtc/jcZO-Wj0Wus/k2XvPCvoAwAJ\n        // We are not referencing those attributes, but this changes goes ahead and removes them to see if it works.\n        // this also helps reduce bytes on wires\n        var updatedSdp = removeSSRCAttributes(answer.sdp, ['mslabel', 'label']);\n        if (_this4._shouldApplySimulcast) {\n          var sdpWithoutSimulcast = updatedSdp;\n          updatedSdp = _this4._setSimulcast(sdpWithoutSimulcast, _this4._sdpFormat, _this4._trackIdsToAttributes);\n          // NOTE(syerrapragada): VMS does not support H264 simulcast. So,\n          // unset simulcast for sections in local offer where corresponding\n          // sections in answer doesn't have vp8 as preferred codec and reapply offer.\n          updatedSdp = _this4._revertSimulcastForNonVP8MediaSections(updatedSdp, sdpWithoutSimulcast, offer.sdp);\n        }\n\n        // NOTE(mmalavalli): Work around Chromium bug 1074421.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1074421\n        updatedSdp = updatedSdp.replace(/42e015/g, '42e01f');\n\n        return _this4._setLocalDescription({\n          type: answer.type,\n          sdp: updatedSdp\n        });\n      }).then(function () {\n        return _this4._checkIceBox(offer);\n      }).then(function () {\n        return _this4._queuedDescription && _this4._updateDescription(_this4._queuedDescription);\n      }).then(function () {\n        _this4._queuedDescription = null;\n        return _this4._maybeReoffer(_this4._peerConnection.localDescription);\n      }).catch(function (error) {\n        throw error instanceof MediaClientRemoteDescFailedError ? error : new MediaClientLocalDescFailedError();\n      });\n    }\n\n    /**\n     * Close the underlying RTCPeerConnection. Returns false if the\n     * RTCPeerConnection was already closed.\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: '_close',\n    value: function _close() {\n      this._iceConnectionMonitor.stop();\n      if (this._peerConnection.signalingState !== 'closed') {\n        this._peerConnection.close();\n        this.preempt('closed');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Handle a \"connectionstatechange\" event.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleConnectionStateChange',\n    value: function _handleConnectionStateChange() {\n      this.emit('connectionStateChanged');\n    }\n\n    /**\n     * Handle a \"datachannel\" event.\n     * @private\n     * @param {RTCDataChannelEvent} event\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleDataChannelEvent',\n    value: function _handleDataChannelEvent(event) {\n      var _this5 = this;\n\n      var dataChannel = event.channel;\n      var dataTrackReceiver = new DataTrackReceiver(dataChannel);\n      this._dataTrackReceivers.add(dataTrackReceiver);\n\n      dataChannel.addEventListener('close', function () {\n        _this5._dataTrackReceivers.delete(dataTrackReceiver);\n      });\n\n      this.emit('trackAdded', dataTrackReceiver);\n    }\n\n    /**\n     * Handle a glare scenario on the {@link PeerConnectionV2}.\n     * @private\n     * @param {RTCSessionDescriptionInit} offer\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_handleGlare',\n    value: function _handleGlare(offer) {\n      var _this6 = this;\n\n      this._log.debug('Glare detected; rolling back');\n      if (this._isRestartingIce) {\n        this._log.debug('An ICE restart was in progress; we\\'ll need to restart ICE again after rolling back');\n        this._isRestartingIce = false;\n        this._shouldRestartIce = true;\n      }\n      return Promise.resolve().then(function () {\n        _this6._trackIdsToAttributes = new Map(_this6._appliedTrackIdsToAttributes);\n        return _this6._setLocalDescription({ type: 'rollback' });\n      }).then(function () {\n        _this6._needsAnswer = false;\n        return _this6._answer(offer);\n      }).then(function (didReoffer) {\n        return didReoffer ? Promise.resolve() : _this6._offer();\n      });\n    }\n\n    /**\n     * Handle an ICE candidate event.\n     * @private\n     * @param {Event} event\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleIceCandidateEvent',\n    value: function _handleIceCandidateEvent(event) {\n      if (event.candidate) {\n        this._log.debug('Clearing ICE gathering timeout');\n        this._didGenerateLocalCandidates = true;\n        this._iceGatheringTimeout.clear();\n        this._localCandidates.push(event.candidate);\n      }\n      var peerConnectionState = {\n        ice: {\n          candidates: this._isIceLite ? [] : this._localCandidates.slice(),\n          ufrag: this._localUfrag\n        },\n        id: this.id\n      };\n      if (!event.candidate) {\n        peerConnectionState.ice.complete = true;\n      }\n      if (!(this._isIceLite && event.candidate)) {\n        peerConnectionState.ice.revision = this._localCandidatesRevision++;\n        this.emit('candidates', peerConnectionState);\n      }\n    }\n\n    /**\n     * Handle an ICE connection state change event.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleIceConnectionStateChange',\n    value: function _handleIceConnectionStateChange() {\n      var _this7 = this;\n\n      var iceConnectionState = this._peerConnection.iceConnectionState;\n\n      var isIceConnectedOrComplete = ['connected', 'completed'].includes(iceConnectionState);\n      var log = this._log;\n\n      log.debug('ICE connection state is \"' + iceConnectionState + '\"');\n      if (isIceConnectedOrComplete) {\n        this._iceReconnectTimeout.clear();\n        this._iceRestartBackoff.reset();\n      }\n\n      if (this._lastIceConnectionState !== 'failed' && iceConnectionState === 'failed' && !this._shouldRestartIce && !this._isRestartingIce) {\n        // Case 1: Transition to \"failed\".\n        log.warn('ICE failed');\n        this._initiateIceRestartBackoff();\n      } else if (['disconnected', 'failed'].includes(this._lastIceConnectionState) && isIceConnectedOrComplete) {\n        // Case 2: Transition from \"disconnected\" or \"failed\".\n        log.debug('ICE reconnected');\n      }\n\n      // start monitor media when connected, and continue to monitor while state is complete-disconnected-connected.\n      if (iceConnectionState === 'connected') {\n        this._isIceConnectionInactive = false;\n        this._iceConnectionMonitor.start(function () {\n          // note: iceConnection monitor waits for iceConnectionState=disconnected for\n          // detecting inactivity. Its possible that it may know about disconnected before _handleIceConnectionStateChange\n          _this7._iceConnectionMonitor.stop();\n          if (!_this7._shouldRestartIce && !_this7._isRestartingIce) {\n            log.warn('ICE Connection Monitor detected inactivity');\n            _this7._isIceConnectionInactive = true;\n            _this7._initiateIceRestartBackoff();\n            _this7.emit('iceConnectionStateChanged');\n            _this7.emit('connectionStateChanged');\n          }\n        });\n      } else if (!['disconnected', 'completed'].includes(iceConnectionState)) {\n        // don't stop monitoring for disconnected or completed.\n        this._iceConnectionMonitor.stop();\n        this._isIceConnectionInactive = false;\n      }\n\n      this._lastIceConnectionState = iceConnectionState;\n      this.emit('iceConnectionStateChanged');\n    }\n\n    /**\n     * Handle ICE gathering timeout.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleIceGatheringTimeout',\n    value: function _handleIceGatheringTimeout() {\n      this._log.warn('ICE failed to gather any local candidates');\n      this._iceGatheringFailed = true;\n      this._initiateIceRestartBackoff();\n      this.emit('iceConnectionStateChanged');\n      this.emit('connectionStateChanged');\n    }\n\n    /**\n     * Handle an ICE gathering state change event.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleIceGatheringStateChange',\n    value: function _handleIceGatheringStateChange() {\n      var iceGatheringState = this._peerConnection.iceGatheringState;\n\n      var log = this._log;\n      log.debug('ICE gathering state is \"' + iceGatheringState + '\"');\n\n      // NOTE(mmalavalli): Start the ICE gathering timeout only if the RTCPeerConnection\n      // has started gathering candidates for the first time since the initial offer/answer\n      // or an offer/answer with ICE restart.\n      var _iceGatheringTimeout = this._iceGatheringTimeout,\n          delay = _iceGatheringTimeout.delay,\n          isSet = _iceGatheringTimeout.isSet;\n\n      if (iceGatheringState === 'gathering' && !this._didGenerateLocalCandidates && !isSet) {\n        log.debug('Starting ICE gathering timeout: ' + delay);\n        this._iceGatheringFailed = false;\n        this._iceGatheringTimeout.start();\n      }\n    }\n\n    /**\n     * Handle a signaling state change event.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleSignalingStateChange',\n    value: function _handleSignalingStateChange() {\n      if (this._peerConnection.signalingState === 'stable') {\n        this._appliedTrackIdsToAttributes = new Map(this._trackIdsToAttributes);\n      }\n    }\n\n    /**\n     * Handle a track event.\n     * @private\n     * @param {Event} event\n     * @returns {void}\n     */\n\n  }, {\n    key: '_handleTrackEvent',\n    value: function _handleTrackEvent(event) {\n      var _this8 = this;\n\n      var sdp = this._peerConnection.remoteDescription ? this._peerConnection.remoteDescription.sdp : null;\n\n      if (!this._trackMatcher) {\n        this._trackMatcher = event.transceiver && event.transceiver.mid ? new MIDTrackMatcher()\n        // NOTE(mroberts): Until Chrome ships RTCRtpTransceivers with MID\n        // support, we have to use the same hacky solution as Safari. Revisit\n        // this when RTCRtpTransceivers and MIDs land. We should be able to use\n        // the same technique as Firefox.\n        : isSafari || this._isUnifiedPlan ? new OrderedTrackMatcher() : new IdentityTrackMatcher();\n      }\n      this._trackMatcher.update(sdp);\n\n      var mediaStreamTrack = event.track;\n      var signaledTrackId = this._trackMatcher.match(event) || mediaStreamTrack.id;\n      var mediaTrackReceiver = new MediaTrackReceiver(signaledTrackId, mediaStreamTrack);\n\n      // NOTE(mmalavalli): In unified plan mode, \"ended\" is not fired on the remote\n      // MediaStreamTrack when the remote peer removes a track. So, when this\n      // MediaStreamTrack is re-used for a different track due to the remote peer\n      // calling RTCRtpSender.replaceTrack(), we delete the previous MediaTrackReceiver\n      // that owned this MediaStreamTrack before adding the new MediaTrackReceiver.\n      this._mediaTrackReceivers.forEach(function (trackReceiver) {\n        if (trackReceiver.track.id === mediaTrackReceiver.track.id) {\n          _this8._mediaTrackReceivers.delete(trackReceiver);\n        }\n      });\n\n      this._mediaTrackReceivers.add(mediaTrackReceiver);\n      mediaStreamTrack.addEventListener('ended', function () {\n        return _this8._mediaTrackReceivers.delete(mediaTrackReceiver);\n      });\n      this.emit('trackAdded', mediaTrackReceiver);\n    }\n\n    /**\n     * Initiate ICE Restart.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_initiateIceRestart',\n    value: function _initiateIceRestart() {\n      if (this._peerConnection.signalingState === 'closed') {\n        return;\n      }\n      var log = this._log;\n      log.warn('Attempting to restart ICE');\n      this._didGenerateLocalCandidates = false;\n      this._isIceRestartBackoffInProgress = false;\n      this._shouldRestartIce = true;\n\n      var _iceReconnectTimeout = this._iceReconnectTimeout,\n          delay = _iceReconnectTimeout.delay,\n          isSet = _iceReconnectTimeout.isSet;\n\n      if (!isSet) {\n        log.debug('Starting ICE reconnect timeout: ' + delay);\n        this._iceReconnectTimeout.start();\n      }\n      this.offer();\n    }\n\n    /**\n     * Schedule an ICE Restart.\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_initiateIceRestartBackoff',\n    value: function _initiateIceRestartBackoff() {\n      if (this._peerConnection.signalingState === 'closed' || this._isIceRestartBackoffInProgress) {\n        return;\n      }\n      this._log.warn('An ICE restart has been scheduled');\n      this._isIceRestartBackoffInProgress = true;\n      this._iceRestartBackoff.backoff();\n    }\n\n    /**\n     * Conditionally re-offer.\n     * @private\n     * @param {?RTCSessionDescriptionInit} localDescription\n     * @returns {Promise<boolean>}\n     */\n\n  }, {\n    key: '_maybeReoffer',\n    value: function _maybeReoffer(localDescription) {\n      var shouldReoffer = this._shouldOffer;\n\n      if (localDescription && localDescription.sdp) {\n        // NOTE(mmalavalli): For \"unified-plan\" sdps, if the local RTCSessionDescription\n        // has fewer audio and/or video send* m= lines than the corresponding RTCRtpSenders\n        // with non-null MediaStreamTracks, it means that the newly added RTCRtpSenders\n        // require renegotiation.\n        if (this._isUnifiedPlan) {\n          var senders = this._peerConnection.getSenders().filter(function (sender) {\n            return sender.track;\n          });\n          shouldReoffer = ['audio', 'video'].reduce(function (shouldOffer, kind) {\n            var mediaSections = getMediaSections(localDescription.sdp, kind, '(sendrecv|sendonly)');\n            var sendersOfKind = senders.filter(isSenderOfKind.bind(null, kind));\n            return shouldOffer || mediaSections.length < sendersOfKind.length;\n          }, shouldReoffer);\n        }\n\n        // NOTE(mroberts): We also need to re-offer if we have a DataTrack to share\n        // but no m= application section.\n        var hasDataTrack = this._dataChannels.size > 0;\n        var hasApplicationMediaSection = getMediaSections(localDescription.sdp, 'application').length > 0;\n        var needsApplicationMediaSection = hasDataTrack && !hasApplicationMediaSection;\n        shouldReoffer = shouldReoffer || needsApplicationMediaSection;\n      }\n\n      var promise = shouldReoffer ? this._offer() : Promise.resolve();\n      return promise.then(function () {\n        return shouldReoffer;\n      });\n    }\n\n    /**\n     * Create an offer and set it on the {@link PeerConnectionV2}.\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_offer',\n    value: function _offer() {\n      var _this9 = this;\n\n      var offerOptions = Object.assign({}, this._offerOptions);\n      this._needsAnswer = true;\n      if (this._shouldRestartIce) {\n        this._shouldRestartIce = false;\n        this._isRestartingIce = true;\n        offerOptions.iceRestart = true;\n      }\n\n      return Promise.all(this._replaceTrackPromises.values()).then(function () {\n        return _this9._peerConnection.createOffer(offerOptions);\n      }).catch(function () {\n        throw new MediaClientLocalDescFailedError();\n      }).then(function (offer) {\n        if (!isFirefox) {\n          offer = workaroundIssue8329(offer);\n        }\n\n        // NOTE(mpatwardhan): upcoming chrome versions are going to remove ssrc attributes\n        // mslabel and label. See this bug https://bugs.chromium.org/p/webrtc/issues/detail?id=7110\n        // and PSA: https://groups.google.com/forum/#!searchin/discuss-webrtc/PSA%7Csort:date/discuss-webrtc/jcZO-Wj0Wus/k2XvPCvoAwAJ\n        // Looks like we are not referencing those attributes, but this changes goes ahead and removes them to see if it works.\n        // this also helps reduce bytes on wires\n        var sdp = removeSSRCAttributes(offer.sdp, ['mslabel', 'label']);\n        sdp = _this9._isUnifiedPlan && _this9._peerConnection.remoteDescription ? unifiedPlanFilterLocalCodecs(sdp, _this9._peerConnection.remoteDescription.sdp) : sdp;\n\n        var updatedSdp = _this9._setCodecPreferences(sdp, _this9._preferredAudioCodecs, _this9._preferredVideoCodecs);\n\n        _this9._shouldOffer = false;\n        if (!_this9._negotiationRole) {\n          _this9._negotiationRole = 'offerer';\n        }\n\n        if (_this9._shouldApplySimulcast) {\n          _this9._localDescriptionWithoutSimulcast = {\n            type: 'offer',\n            sdp: updatedSdp\n          };\n          updatedSdp = _this9._setSimulcast(updatedSdp, _this9._sdpFormat, _this9._trackIdsToAttributes);\n        }\n        return _this9._setLocalDescription({\n          type: 'offer',\n          sdp: updatedSdp\n        });\n      });\n    }\n\n    /**\n     * Get the MediaTrackSender ID of the given MediaStreamTrack ID.\n     * Since a MediaTrackSender's underlying MediaStreamTrack can be\n     * replaced, the corresponding IDs can mismatch.\n     * @private\n     * @param {Track.ID} id\n     * @returns {Track.ID}\n     */\n\n  }, {\n    key: '_getMediaTrackSenderId',\n    value: function _getMediaTrackSenderId(trackId) {\n      var mediaTrackSender = Array.from(this._rtpSenders.keys()).find(function (_ref) {\n        var id = _ref.track.id;\n        return id === trackId;\n      });\n      return mediaTrackSender ? mediaTrackSender.id : trackId;\n    }\n\n    /**\n     * Add or rewrite local MediaStreamTrack IDs in the given Unified Plan RTCSessionDescription.\n     * @private\n     * @param {RTCSessionDescription} description\n     * @return {RTCSessionDescription}\n     */\n\n  }, {\n    key: '_addOrRewriteLocalTrackIds',\n    value: function _addOrRewriteLocalTrackIds(description) {\n      var _this10 = this;\n\n      var transceivers = this._peerConnection.getTransceivers();\n      var activeTransceivers = transceivers.filter(function (_ref2) {\n        var sender = _ref2.sender,\n            stopped = _ref2.stopped;\n        return !stopped && sender && sender.track;\n      });\n\n      // NOTE(mmalavalli): There is no guarantee that MediaStreamTrack IDs will be present in\n      // SDPs, and even if they are, there is no guarantee that they will be the same as the\n      // actual MediaStreamTrack IDs. So, we add or re-write the actual MediaStreamTrack IDs\n      // to the assigned m= sections here.\n      var assignedTransceivers = activeTransceivers.filter(function (_ref3) {\n        var mid = _ref3.mid;\n        return mid;\n      });\n      var midsToTrackIds = new Map(assignedTransceivers.map(function (_ref4) {\n        var mid = _ref4.mid,\n            sender = _ref4.sender;\n        return [mid, _this10._getMediaTrackSenderId(sender.track.id)];\n      }));\n      var sdp1 = unifiedPlanAddOrRewriteTrackIds(description.sdp, midsToTrackIds);\n\n      // NOTE(mmalavalli): Chrome and Safari do not apply the offer until they get an answer.\n      // So, we add or re-write the actual MediaStreamTrack IDs to the unassigned m= sections here.\n      var unassignedTransceivers = activeTransceivers.filter(function (_ref5) {\n        var mid = _ref5.mid;\n        return !mid;\n      });\n      var newTrackIdsByKind = new Map(['audio', 'video'].map(function (kind) {\n        return [kind, unassignedTransceivers.filter(function (_ref6) {\n          var sender = _ref6.sender;\n          return sender.track.kind === kind;\n        }).map(function (_ref7) {\n          var sender = _ref7.sender;\n          return _this10._getMediaTrackSenderId(sender.track.id);\n        })];\n      }));\n      var sdp2 = unifiedPlanAddOrRewriteNewTrackIds(sdp1, midsToTrackIds, newTrackIdsByKind);\n\n      return new this._RTCSessionDescription({\n        sdp: sdp2,\n        type: description.type\n      });\n    }\n\n    /**\n     * Rollback and apply the given offer.\n     * @private\n     * @param {RTCSessionDescriptionInit} offer\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_rollbackAndApplyOffer',\n    value: function _rollbackAndApplyOffer(offer) {\n      var _this11 = this;\n\n      return this._setLocalDescription({ type: 'rollback' }).then(function () {\n        return _this11._setLocalDescription(offer);\n      });\n    }\n\n    /**\n     * Set a local description on the {@link PeerConnectionV2}.\n     * @private\n     * @param {RTCSessionDescription|RTCSessionDescriptionInit} description\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setLocalDescription',\n    value: function _setLocalDescription(description) {\n      var _this12 = this;\n\n      return this._peerConnection.setLocalDescription(description).catch(function (error) {\n        _this12._log.warn('Calling setLocalDescription with an RTCSessionDescription of type \"' + description.type + '\" failed with the error \"' + error.message + '\".');\n        if (description.sdp) {\n          _this12._log.warn('The SDP was ' + description.sdp);\n        }\n        throw new MediaClientLocalDescFailedError();\n      }).then(function () {\n        if (description.type !== 'rollback') {\n          _this12._localDescription = _this12._isUnifiedPlan ? _this12._addOrRewriteLocalTrackIds(description) : description;\n          _this12._localCandidates = [];\n          if (description.type === 'offer') {\n            _this12._descriptionRevision++;\n          } else if (description.type === 'answer') {\n            _this12._lastStableDescriptionRevision = _this12._descriptionRevision;\n            negotiationCompleted(_this12);\n          }\n          _this12._localUfrag = getUfrag(description);\n          _this12.emit('description', _this12.getState());\n        }\n      });\n    }\n\n    /**\n     * Set a remote RTCSessionDescription on the {@link PeerConnectionV2}.\n     * @private\n     * @param {RTCSessionDescriptionInit} description\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setRemoteDescription',\n    value: function _setRemoteDescription(description) {\n      var _this13 = this;\n\n      if (description.sdp) {\n        if (!this._isRTCRtpSenderParamsSupported) {\n          description.sdp = this._setBitrateParameters(description.sdp, isFirefox ? 'TIAS' : 'AS', this._encodingParameters.maxAudioBitrate, this._encodingParameters.maxVideoBitrate);\n        }\n        description.sdp = this._setCodecPreferences(description.sdp, this._preferredAudioCodecs, this._preferredVideoCodecs);\n        // NOTE(mroberts): Do this to reduce our MediaStream count in Firefox. By\n        // mapping MediaStream IDs in the SDP to \"-\", we ensure the \"track\" event\n        // doesn't include any new MediaStreams in Firefox. Its `streams` member\n        // will always be the empty Array.\n        if (isFirefox) {\n          description.sdp = filterOutMediaStreamIds(description.sdp);\n        }\n        if (!this._peerConnection.remoteDescription) {\n          this._isIceLite = /a=ice-lite/.test(description.sdp);\n        }\n      }\n      description = new this._RTCSessionDescription(description);\n      // eslint-disable-next-line consistent-return\n      return Promise.resolve().then(function () {\n        // NOTE(syerrapragada): VMS does not support H264 simulcast. So,\n        // unset simulcast for sections in local offer where corresponding\n        // sections in answer doesn't have vp8 as preferred codec and reapply offer.\n        if (description.type === 'answer' && _this13._shouldApplySimulcast) {\n          var sdpWithoutSimulcastForNonVP8MediaSections = _this13._revertSimulcastForNonVP8MediaSections(_this13._localDescription.sdp, _this13._localDescriptionWithoutSimulcast.sdp, description.sdp);\n          if (sdpWithoutSimulcastForNonVP8MediaSections !== _this13._localDescription.sdp) {\n            return _this13._rollbackAndApplyOffer({\n              type: _this13._localDescription.type,\n              sdp: sdpWithoutSimulcastForNonVP8MediaSections\n            });\n          }\n        }\n      }).then(function () {\n        return _this13._peerConnection.setRemoteDescription(description);\n      }).then(function () {\n        if (description.type === 'answer') {\n          if (_this13._isRestartingIce) {\n            _this13._log.debug('An ICE restart was in-progress and is now completed');\n            _this13._isRestartingIce = false;\n          }\n          negotiationCompleted(_this13);\n        }\n      }, function (error) {\n        _this13._log.warn('Calling setRemoteDescription with an RTCSessionDescription of type \"' + description.type + '\" failed with the error \"' + error.message + '\".');\n        if (description.sdp) {\n          _this13._log.warn('The SDP was ' + description.sdp);\n        }\n        throw error;\n      });\n    }\n\n    /**\n     * Update the {@link PeerConnectionV2}'s description.\n     * @private\n     * @param {RTCSessionDescriptionInit} description\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_updateDescription',\n    value: function _updateDescription(description) {\n      var _this14 = this;\n\n      switch (description.type) {\n        case 'answer':\n        case 'pranswer':\n          if (description.revision !== this._descriptionRevision || this._peerConnection.signalingState !== 'have-local-offer') {\n            return Promise.resolve();\n          }\n          this._descriptionRevision = description.revision;\n          break;\n        case 'close':\n          return this._close();\n        case 'create-offer':\n          if (description.revision <= this._lastStableDescriptionRevision) {\n            return Promise.resolve();\n          } else if (this._needsAnswer) {\n            this._queuedDescription = description;\n            return Promise.resolve();\n          }\n          this._descriptionRevision = description.revision;\n          return this._offer();\n        case 'offer':\n          if (description.revision <= this._lastStableDescriptionRevision || this._peerConnection.signalingState === 'closed') {\n            return Promise.resolve();\n          }\n          if (this._peerConnection.signalingState === 'have-local-offer') {\n            // NOTE(mpatwardhan): For a peer connection\n            // 1) createOffer always generate SDP with `setup:actpass`\n            // 2) when remote description is set `setup:active`  - the answer generated selects the dtls role of setup:passive\n            // 3) when remote description is set `setup:passive` - the answer generated selects the dtls role of setup:active\n            // 4) when remote description is set `setup:actpass` - the answer generated uses the previously negotiated role (if not negotiated previously setup:active is used)\n            // This test shows the  behavior: https://github.com/twilio/twilio-webrtc.js/blob/master/test/integration/spec/rtcpeerconnection.js#L936\n            // with glare handling (if dtls role was not negotiated before ) the generated answer will set setup:active.\n            // we do not want that. lets wait for \"initial negotiation\" before attempting glare handling.\n            if (this._needsAnswer && this._lastStableDescriptionRevision === 0) {\n              this._queuedDescription = description;\n              return Promise.resolve();\n            }\n            this._descriptionRevision = description.revision;\n            return this._handleGlare(description);\n          }\n          this._descriptionRevision = description.revision;\n          return this._answer(description).then(function () {});\n        default:\n        // Do nothing.\n      }\n\n      // Handle answer or pranswer.\n      var revision = description.revision;\n      return Promise.resolve().then(function () {\n        return _this14._setRemoteDescription(description);\n      }).catch(function () {\n        throw new MediaClientRemoteDescFailedError();\n      }).then(function () {\n        _this14._lastStableDescriptionRevision = revision;\n        _this14._needsAnswer = false;\n        return _this14._checkIceBox(description);\n      }).then(function () {\n        return _this14._queuedDescription && _this14._updateDescription(_this14._queuedDescription);\n      }).then(function () {\n        _this14._queuedDescription = null;\n        return _this14._maybeReoffer(_this14._peerConnection.localDescription).then(function () {});\n      });\n    }\n\n    /**\n     * Update the {@link PeerConnectionV2}'s ICE candidates.\n     * @private\n     * @param {object} iceState\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_updateIce',\n    value: function _updateIce(iceState) {\n      var candidates = this._remoteCandidates.update(iceState);\n      return this._addIceCandidates(candidates);\n    }\n\n    /**\n     * Add a {@link DataTrackSender} to the {@link PeerConnectionV2}.\n     * @param {DataTrackSender} dataTrackSender\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addDataTrackSender',\n    value: function addDataTrackSender(dataTrackSender) {\n      if (this._dataChannels.has(dataTrackSender)) {\n        return;\n      }\n      try {\n        var dataChannelDict = {\n          ordered: dataTrackSender.ordered\n        };\n        if (dataTrackSender.maxPacketLifeTime !== null) {\n          dataChannelDict.maxPacketLifeTime = dataTrackSender.maxPacketLifeTime;\n        }\n        if (dataTrackSender.maxRetransmits !== null) {\n          dataChannelDict.maxRetransmits = dataTrackSender.maxRetransmits;\n        }\n        var dataChannel = this._peerConnection.createDataChannel(dataTrackSender.id, dataChannelDict);\n        dataTrackSender.addDataChannel(dataChannel);\n        this._dataChannels.set(dataTrackSender, dataChannel);\n      } catch (error) {\n        this._log.warn('Error creating an RTCDataChannel for DataTrack \"' + dataTrackSender.id + '\": ' + error.message);\n      }\n    }\n\n    /**\n     * Add the {@link MediaTrackSender} to the {@link PeerConnectionV2}.\n     * @param {MediaTrackSender} mediaTrackSender\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addMediaTrackSender',\n    value: function addMediaTrackSender(mediaTrackSender) {\n      if (this._peerConnection.signalingState === 'closed' || this._rtpSenders.has(mediaTrackSender)) {\n        return;\n      }\n      var sender = void 0;\n      if (this._localMediaStream) {\n        this._localMediaStream.addTrack(mediaTrackSender.track);\n        sender = this._peerConnection.addTrack(mediaTrackSender.track, this._localMediaStream);\n      } else {\n        var transceiver = this._addOrUpdateTransceiver(mediaTrackSender.track);\n        sender = transceiver.sender;\n      }\n      mediaTrackSender.addSender(sender);\n      this._rtpSenders.set(mediaTrackSender, sender);\n    }\n\n    /**\n     * Close the {@link PeerConnectionV2}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      if (this._close()) {\n        this._descriptionRevision++;\n        this._localDescription = { type: 'close' };\n        this.emit('description', this.getState());\n      }\n    }\n\n    /**\n     * Get the {@link DataTrackReceiver}s and the {@link MediaTrackReceivers} on the\n     * {@link PeerConnectionV2}.\n     * @returns {Array<DataTrackReceiver|MediaTrackReceiver>} trackReceivers\n     */\n\n  }, {\n    key: 'getTrackReceivers',\n    value: function getTrackReceivers() {\n      return Array.from(this._dataTrackReceivers).concat(Array.from(this._mediaTrackReceivers));\n    }\n\n    /**\n     * Get the {@link PeerConnectionV2}'s state (specifically, its description).\n     * @returns {?object}\n     */\n\n  }, {\n    key: 'getState',\n    value: function getState() {\n      if (!this._localDescription) {\n        return null;\n      }\n      var localDescription = {\n        type: this._localDescription.type,\n        revision: this._descriptionRevision\n      };\n      if (this._localDescription.sdp) {\n        localDescription.sdp = this._localDescription.sdp;\n      }\n      return {\n        description: localDescription,\n        id: this.id\n      };\n    }\n\n    /**\n     * Create an offer and set it on the {@link PeerConnectionV2}.\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: 'offer',\n    value: function offer() {\n      var _this15 = this;\n\n      if (this._needsAnswer || this._isRestartingIce) {\n        this._shouldOffer = true;\n        return Promise.resolve();\n      }\n\n      return this.bracket('offering', function (key) {\n        _this15.transition('updating', key);\n        var promise = _this15._needsAnswer || _this15._isRestartingIce ? Promise.resolve() : _this15._offer();\n        return promise.then(function () {\n          _this15.tryTransition('open', key);\n        }, function (error) {\n          _this15.tryTransition('open', key);\n          throw error;\n        });\n      });\n    }\n\n    /**\n     * Remove a {@link DataTrackSender} from the {@link PeerConnectionV2}.\n     * @param {DataTrackSender} dataTrackSender\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeDataTrackSender',\n    value: function removeDataTrackSender(dataTrackSender) {\n      var dataChannel = this._dataChannels.get(dataTrackSender);\n      if (dataChannel) {\n        dataTrackSender.removeDataChannel(dataChannel);\n        this._dataChannels.delete(dataTrackSender);\n        dataChannel.close();\n      }\n    }\n\n    /**\n     * Remove the {@link MediaTrackSender} from the {@link PeerConnectionV2}.\n     * @param {MediaTrackSender} mediaTrackSender\n     * @returns {void}\n     */\n\n  }, {\n    key: 'removeMediaTrackSender',\n    value: function removeMediaTrackSender(mediaTrackSender) {\n      if (this._peerConnection.signalingState === 'closed' || !this._rtpSenders.has(mediaTrackSender)) {\n        return;\n      }\n      var sender = this._rtpSenders.get(mediaTrackSender);\n      this._peerConnection.removeTrack(sender);\n      if (this._localMediaStream) {\n        this._localMediaStream.removeTrack(mediaTrackSender.track);\n      }\n      mediaTrackSender.removeSender(sender);\n      this._rtpSenders.delete(mediaTrackSender);\n    }\n\n    /**\n     * Set the RTCConfiguration on the underlying RTCPeerConnection.\n     * @param {RTCConfiguration} configuration\n     * @returns {void}\n     */\n\n  }, {\n    key: 'setConfiguration',\n    value: function setConfiguration(configuration) {\n      if (typeof this._peerConnection.setConfiguration === 'function') {\n        this._peerConnection.setConfiguration(getConfiguration(configuration));\n      }\n    }\n\n    /**\n     * Set the ICE reconnect timeout period.\n     * @param {number} period - Period in milliseconds.\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setIceReconnectTimeout',\n    value: function setIceReconnectTimeout(period) {\n      this._iceReconnectTimeout.setDelay(period);\n      this._log.debug('Updated ICE reconnection timeout period:', this._iceReconnectTimeout.delay);\n      return this;\n    }\n\n    /**\n     * Update the {@link PeerConnectionV2}.\n     * @param {object} peerConnectionState\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(peerConnectionState) {\n      var _this16 = this;\n\n      return this.bracket('updating', function (key) {\n        if (_this16.state === 'closed') {\n          return Promise.resolve();\n        }\n\n        _this16.transition('updating', key);\n\n        var updates = [];\n\n        if (peerConnectionState.ice) {\n          updates.push(_this16._updateIce(peerConnectionState.ice));\n        }\n\n        if (peerConnectionState.description) {\n          updates.push(_this16._updateDescription(peerConnectionState.description));\n        }\n\n        return Promise.all(updates).then(function () {\n          _this16.tryTransition('open', key);\n        }, function (error) {\n          _this16.tryTransition('open', key);\n          throw error;\n        });\n      });\n    }\n\n    /**\n     * Get the {@link PeerConnectionV2}'s media statistics.\n     * @returns {Promise<StandardizedStatsResponse>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this17 = this;\n\n      return getStatistics(this._peerConnection).then(function (response) {\n        return rewriteTrackIds(_this17, response);\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this.iceConnectionState === 'failed' ? 'failed' : this._peerConnection.connectionState || this.iceConnectionState;\n    }\n\n    /**\n     * The {@link PeerConnectionV2}'s underlying RTCPeerConnection's\n     * RTCIceConnectionState.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._isIceConnectionInactive && this._peerConnection.iceConnectionState === 'disconnected' || this._iceGatheringFailed ? 'failed' : this._peerConnection.iceConnectionState;\n    }\n\n    /**\n     * Whether the {@link PeerConnectionV2} has negotiated or is in the process\n     * of negotiating the application m= section.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isApplicationSectionNegotiated',\n    get: function get() {\n      if (this._peerConnection.signalingState !== 'closed') {\n        // accessing .localDescription in 'closed' state causes it throw exceptions.\n        return this._peerConnection.localDescription ? getMediaSections(this._peerConnection.localDescription.sdp, 'application').length > 0 : false;\n      }\n      return true;\n    }\n  }]);\n\n  return PeerConnectionV2;\n}(StateMachine);\n\nfunction rewriteLocalTrackId(pcv2, stats) {\n  var trackId = pcv2._getMediaTrackSenderId(stats.trackId);\n  return Object.assign(stats, { trackId: trackId });\n}\n\nfunction rewriteTrackId(pcv2, stats) {\n  var receiver = [].concat(_toConsumableArray(pcv2._mediaTrackReceivers)).find(function (receiver) {\n    return receiver.track.id === stats.trackId;\n  });\n  var trackId = receiver ? receiver.id : null;\n  return Object.assign(stats, { trackId: trackId });\n}\n\nfunction rewriteTrackIds(pcv2, response) {\n  return Object.assign(response, {\n    remoteAudioTrackStats: response.remoteAudioTrackStats.map(function (stats) {\n      return rewriteTrackId(pcv2, stats);\n    }),\n    remoteVideoTrackStats: response.remoteVideoTrackStats.map(function (stats) {\n      return rewriteTrackId(pcv2, stats);\n    }),\n    localAudioTrackStats: response.localAudioTrackStats.map(function (stats) {\n      return rewriteLocalTrackId(pcv2, stats);\n    }),\n    localVideoTrackStats: response.localVideoTrackStats.map(function (stats) {\n      return rewriteLocalTrackId(pcv2, stats);\n    })\n  });\n}\n\n/**\n * @event PeerConnectionV2#candidates\n * @param {object} candidates\n */\n\n/**\n * @event PeerConnectionV2#connectionStateChanged\n */\n\n/**\n * @event PeerConnectionV2#description\n * @param {object} description\n */\n\n/**\n * @event PeerConnectionV2#iceConnectionStateChanged\n */\n\n/**\n * @event PeerConnectionV2#trackAdded\n * @param {DataTrackReceiver|MediaTrackReceiver} trackReceiver\n */\n\nfunction getUfrag(description) {\n  if (description.sdp) {\n    var match = description.sdp.match(/^a=ice-ufrag:([a-zA-Z0-9+/]+)/m);\n    if (match) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction getConfiguration(configuration) {\n  return Object.assign({\n    bundlePolicy: 'max-bundle',\n    rtcpMuxPolicy: 'require'\n  }, configuration);\n}\n\n/**\n * Whether the MediaStreamTrack of the given RTCRTPSender is a non-ended\n * MediaStreamTrack of a given kind.\n * @private\n * @param {string} kind\n * @param {RTCRtpSender} sender\n * @return {boolean}\n */\nfunction isSenderOfKind(kind, sender) {\n  var track = sender.track;\n  return track && track.kind === kind && track.readyState !== 'ended';\n}\n\n/**\n * Preferred codecs.\n * @typedef {object} PreferredCodecs\n * @property {Array<AudioCodec>} audio\n * @property {Array<VideoCodec>} video\n */\n\nfunction filterOutMediaStreamIds(sdp) {\n  return sdp.replace(/a=msid:[^ ]+ /g, 'a=msid:- ');\n}\n\n/**\n * Whether an RTCRtpTransceiver can be recycled.\n * @param {RTCRtpTransceiver} transceiver\n * @returns {boolean}\n */\nfunction shouldRecycleTransceiver(transceiver, pcv2) {\n  return !transceiver.stopped && !pcv2._replaceTrackPromises.has(transceiver) && (transceiver.currentDirection === 'inactive' || transceiver.currentDirection === 'recvonly' || transceiver.direction === 'recvonly');\n}\n\n/**\n * Take a recycled RTCRtpTransceiver if available.\n * @param {PeerConnectionV2} pcv2\n * @param {Track.Kind} kind\n * @returns {?RTCRtpTransceiver}\n */\nfunction takeRecycledTransceiver(pcv2, kind) {\n  var preferredCodecs = {\n    audio: pcv2._preferredAudioCodecs.map(function (codec) {\n      return codec.toLowerCase();\n    }),\n    video: pcv2._preferredVideoCodecs.map(function (_ref8) {\n      var codec = _ref8.codec;\n      return codec.toLowerCase();\n    })\n  }[kind];\n\n  var recycledTransceivers = pcv2._recycledTransceivers[kind];\n  var localCodec = preferredCodecs.find(function (codec) {\n    return pcv2._localCodecs.has(codec);\n  });\n  if (!localCodec) {\n    return recycledTransceivers.shift();\n  }\n\n  var transceiver = recycledTransceivers.find(function (transceiver) {\n    var remoteCodecMap = pcv2._remoteCodecMaps.get(transceiver.mid);\n    return remoteCodecMap && remoteCodecMap.has(localCodec);\n  });\n\n  if (transceiver) {\n    recycledTransceivers.splice(recycledTransceivers.indexOf(transceiver), 1);\n  }\n  return transceiver;\n}\n\n/**\n * Update the set of locally supported {@link Codec}s.\n * @param pcv2\n * @returns {void}\n */\nfunction updateLocalCodecs(pcv2) {\n  var description = pcv2._peerConnection.localDescription;\n  if (!description) {\n    return;\n  }\n  getMediaSections(description.sdp).forEach(function (section) {\n    var codecMap = createCodecMapForMediaSection(section);\n    codecMap.forEach(function (pts, codec) {\n      return pcv2._localCodecs.add(codec);\n    });\n  });\n}\n\n/**\n * Update the {@link Codec} maps for all m= sections in the remote {@link RTCSessionDescription}s.\n * @param {PeerConnectionV2} pcv2\n * @returns {void}\n */\nfunction updateRemoteCodecMaps(pcv2) {\n  var description = pcv2._peerConnection.remoteDescription;\n  if (!description) {\n    return;\n  }\n  getMediaSections(description.sdp).forEach(function (section) {\n    var mid = section.match(/^a=mid:(.+)$/m)[1];\n    var codecMap = createCodecMapForMediaSection(section);\n    pcv2._remoteCodecMaps.set(mid, codecMap);\n  });\n}\n\n/**\n * Update the list of recycled RTCRtpTransceivers.\n * @param {PeerConnectionV2} pcv2\n */\nfunction updateRecycledTransceivers(pcv2) {\n  pcv2._recycledTransceivers.audio = [];\n  pcv2._recycledTransceivers.video = [];\n  pcv2._peerConnection.getTransceivers().forEach(function (transceiver) {\n    if (shouldRecycleTransceiver(transceiver, pcv2)) {\n      var track = transceiver.receiver.track;\n      pcv2._recycledTransceivers[track.kind].push(transceiver);\n    }\n  });\n}\n\n/**\n * Perform certain updates after an SDP negotiation is completed.\n * @param {PeerConnectionV2} pcv2\n * @returns {void}\n */\nfunction negotiationCompleted(pcv2) {\n  if (pcv2._isUnifiedPlan) {\n    updateRecycledTransceivers(pcv2);\n    updateLocalCodecs(pcv2);\n    updateRemoteCodecMaps(pcv2);\n  }\n  if (pcv2._isRTCRtpSenderParamsSupported) {\n    updateEncodingParameters(pcv2);\n  }\n}\n\n/**\n * Update the RTCRtpEncodingParameters of all active RTCRtpSenders.\n * @param {PeerConnectionV2} pcv2\n * @returns {void}\n */\nfunction updateEncodingParameters(pcv2) {\n  var _pcv2$_encodingParame = pcv2._encodingParameters,\n      maxAudioBitrate = _pcv2$_encodingParame.maxAudioBitrate,\n      maxVideoBitrate = _pcv2$_encodingParame.maxVideoBitrate;\n\n\n  var maxBitrates = new Map([['audio', maxAudioBitrate], ['video', maxVideoBitrate]]);\n\n  pcv2._peerConnection.getSenders().filter(function (sender) {\n    return sender.track;\n  }).forEach(function (sender) {\n    var maxBitrate = maxBitrates.get(sender.track.kind);\n    var params = sender.getParameters();\n\n    if (maxBitrate === null || maxBitrate === 0) {\n      removeMaxBitrate(params);\n    } else if (pcv2._isChromeScreenShareTrack(sender.track)) {\n      // NOTE(mpatwardhan): Sometimes (JSDK-2557) chrome does not send any bytes on screen track if MaxBitRate is set on it via setParameters,\n      // To workaround this issue we will not apply maxBitrate if the track appears to be a screen share track created by chrome\n      pcv2._log.warn('Not setting maxBitrate for ' + sender.track.kind + ' Track ' + sender.track.id + ' because it appears to be screen share track: ' + sender.track.label);\n    } else {\n      setMaxBitrate(params, maxBitrate);\n    }\n\n    if (!isFirefox && pcv2._enableDscp && params.encodings.length > 0) {\n      // NOTE(mmalavalli): \"networkPriority\" is a per-sender property and not\n      // a per-encoding-layer property. So, we set the value only on the first\n      // encoding layer. Any attempt to set the value on subsequent encoding\n      // layers (in the case of simulcast) will result in the Promise returned\n      // by RTCRtpSender.setParameters() being rejected.\n      params.encodings[0].networkPriority = 'high';\n    }\n\n    sender.setParameters(params).catch(function (error) {\n      pcv2._log.warn('Error while setting encodings parameters for ' + sender.track.kind + ' Track ' + sender.track.id + ': ' + (error.message || error.name));\n    });\n  });\n}\n\n/**\n * Remove maxBitrate from the RTCRtpSendParameters' encodings.\n * @param {RTCRtpSendParameters} params\n * @returns {void}\n */\nfunction removeMaxBitrate(params) {\n  if (Array.isArray(params.encodings)) {\n    params.encodings.forEach(function (encoding) {\n      return delete encoding.maxBitrate;\n    });\n  }\n}\n\n/**\n * Set the given maxBitrate in the RTCRtpSendParameters' encodings.\n * @param {RTCRtpSendParameters} params\n * @param {number} maxBitrate\n * @returns {void}\n */\nfunction setMaxBitrate(params, maxBitrate) {\n  if (isFirefox) {\n    params.encodings = [{ maxBitrate: maxBitrate }];\n  } else {\n    params.encodings.forEach(function (encoding) {\n      encoding.maxBitrate = maxBitrate;\n    });\n  }\n}\nmodule.exports = PeerConnectionV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/peerconnection.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/peerconnectionmanager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/peerconnectionmanager.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require.guessBrowser;\n\nvar PeerConnectionV2 = __webpack_require__(/*! ./peerconnection */ \"./node_modules/twilio-video/es5/signaling/v2/peerconnection.js\");\nvar MediaTrackSender = __webpack_require__(/*! ../../media/track/sender */ \"./node_modules/twilio-video/es5/media/track/sender.js\");\nvar QueueingEventEmitter = __webpack_require__(/*! ../../queueingeventemitter */ \"./node_modules/twilio-video/es5/queueingeventemitter.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\");\n\nvar _require2 = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    MediaConnectionError = _require2.MediaConnectionError;\n\nvar isFirefox = guessBrowser() === 'firefox';\n\n/**\n * {@link PeerConnectionManager} manages multiple {@link PeerConnectionV2}s.\n * @extends QueueingEventEmitter\n * @emits PeerConnectionManager#candidates\n * @emits PeerConnectionManager#connectionStateChanged\n * @emits PeerConnectionManager#description\n * @emits PeerConnectionManager#iceConnectionStateChanged\n * @emits PeerConnectionManager#trackAdded\n */\n\nvar PeerConnectionManager = function (_QueueingEventEmitter) {\n  _inherits(PeerConnectionManager, _QueueingEventEmitter);\n\n  /**\n   * Construct {@link PeerConnectionManager}.\n   * @param {EncodingParametersImpl} encodingParameters\n   * @param {PreferredCodecs} preferredCodecs\n   * @param {object} options\n   */\n  function PeerConnectionManager(encodingParameters, preferredCodecs, options) {\n    _classCallCheck(this, PeerConnectionManager);\n\n    var _this = _possibleConstructorReturn(this, (PeerConnectionManager.__proto__ || Object.getPrototypeOf(PeerConnectionManager)).call(this));\n\n    options = Object.assign({\n      audioContextFactory: isFirefox ? __webpack_require__(/*! ../../webaudio/audiocontext */ \"./node_modules/twilio-video/es5/webaudio/audiocontext.js\") : null,\n      PeerConnectionV2: PeerConnectionV2\n    }, options);\n\n    var audioContext = options.audioContextFactory ? options.audioContextFactory.getOrCreate(_this) : null;\n\n    // NOTE(mroberts): If we're using an AudioContext, we don't need to specify\n    // `offerToReceiveAudio` in RTCOfferOptions.\n    var offerOptions = audioContext ? { offerToReceiveVideo: true } : { offerToReceiveAudio: true, offerToReceiveVideo: true };\n\n    Object.defineProperties(_this, {\n      _audioContextFactory: {\n        value: options.audioContextFactory\n      },\n      _closedPeerConnectionIds: {\n        value: new Set()\n      },\n      _configuration: {\n        writable: true,\n        value: null\n      },\n      _configurationDeferred: {\n        writable: true,\n        value: util.defer()\n      },\n      _connectionState: {\n        value: 'new',\n        writable: true\n      },\n      _dummyAudioTrackSender: {\n        value: audioContext ? new MediaTrackSender(createDummyAudioMediaStreamTrack(audioContext)) : null\n      },\n      _encodingParameters: {\n        value: encodingParameters\n      },\n      _iceConnectionState: {\n        writable: true,\n        value: 'new'\n      },\n      _dataTrackSenders: {\n        writable: true,\n        value: new Set()\n      },\n      _lastConnectionState: {\n        value: 'new',\n        writable: true\n      },\n      _lastIceConnectionState: {\n        writable: true,\n        value: 'new'\n      },\n      _mediaTrackSenders: {\n        writable: true,\n        value: new Set()\n      },\n      _offerOptions: {\n        value: offerOptions\n      },\n      _peerConnections: {\n        value: new Map()\n      },\n      _preferredCodecs: {\n        value: preferredCodecs\n      },\n      _sessionTimeout: {\n        value: null,\n        writable: true\n      },\n      _PeerConnectionV2: {\n        value: options.PeerConnectionV2\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * A summarized RTCPeerConnectionState across all the\n   * {@link PeerConnectionManager}'s underlying {@link PeerConnectionV2}s.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(PeerConnectionManager, [{\n    key: '_closeAbsentPeerConnections',\n\n\n    /**\n     * Close the {@link PeerConnectionV2}s which are no longer relevant.\n     * @param {Array<object>} peerConnectionStates\n     * @returns {this}\n     */\n    value: function _closeAbsentPeerConnections(peerConnectionStates) {\n      var peerConnectionIds = new Set(peerConnectionStates.map(function (peerConnectionState) {\n        return peerConnectionState.id;\n      }));\n      this._peerConnections.forEach(function (peerConnection) {\n        if (!peerConnectionIds.has(peerConnection.id)) {\n          peerConnection._close();\n        }\n      });\n      return this;\n    }\n\n    /**\n     * Get the {@link PeerConnectionManager}'s configuration.\n     * @private\n     * @returns {Promise<object>}\n     */\n\n  }, {\n    key: '_getConfiguration',\n    value: function _getConfiguration() {\n      return this._configurationDeferred.promise;\n    }\n\n    /**\n     * Get or create a {@link PeerConnectionV2}.\n     * @private\n     * @param {string} id\n     * @param {object} [configuration]\n     * @returns {PeerConnectionV2}\n     */\n\n  }, {\n    key: '_getOrCreate',\n    value: function _getOrCreate(id, configuration) {\n      var _this2 = this;\n\n      var self = this;\n      var peerConnection = this._peerConnections.get(id);\n      if (!peerConnection) {\n        var _PeerConnectionV = this._PeerConnectionV2;\n\n        var options = Object.assign({\n          dummyAudioMediaStreamTrack: this._dummyAudioTrackSender ? this._dummyAudioTrackSender.track : null,\n          offerOptions: this._offerOptions\n        }, this._sessionTimeout ? {\n          sessionTimeout: this._sessionTimeout\n        } : {}, configuration);\n\n        try {\n          peerConnection = new _PeerConnectionV(id, this._encodingParameters, this._preferredCodecs, options);\n        } catch (e) {\n          throw new MediaConnectionError();\n        }\n\n        this._peerConnections.set(peerConnection.id, peerConnection);\n        peerConnection.on('candidates', this.queue.bind(this, 'candidates'));\n        peerConnection.on('description', this.queue.bind(this, 'description'));\n        peerConnection.on('trackAdded', this.queue.bind(this, 'trackAdded'));\n        peerConnection.on('stateChanged', function stateChanged(state) {\n          if (state === 'closed') {\n            peerConnection.removeListener('stateChanged', stateChanged);\n            self._peerConnections.delete(peerConnection.id);\n            self._closedPeerConnectionIds.add(peerConnection.id);\n            updateConnectionState(self);\n            updateIceConnectionState(self);\n          }\n        });\n        peerConnection.on('connectionStateChanged', function () {\n          return updateConnectionState(_this2);\n        });\n        peerConnection.on('iceConnectionStateChanged', function () {\n          return updateIceConnectionState(_this2);\n        });\n\n        this._dataTrackSenders.forEach(peerConnection.addDataTrackSender, peerConnection);\n        this._mediaTrackSenders.forEach(peerConnection.addMediaTrackSender, peerConnection);\n\n        updateIceConnectionState(this);\n      }\n      return peerConnection;\n    }\n\n    /**\n     * Close all the {@link PeerConnectionV2}s in this {@link PeerConnectionManager}.\n     * @returns {this}\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      this._peerConnections.forEach(function (peerConnection) {\n        peerConnection.close();\n      });\n      if (this._dummyAudioTrackSender) {\n        this._dummyAudioTrackSender.stop();\n      }\n      if (this._audioContextFactory) {\n        this._audioContextFactory.release(this);\n      }\n      updateIceConnectionState(this);\n      return this;\n    }\n\n    /**\n     * Create a new {@link PeerConnectionV2} on this {@link PeerConnectionManager}.\n     * Then, create a new offer with the newly-created {@link PeerConnectionV2}.\n     * @return {Promise<this>}\n     */\n\n  }, {\n    key: 'createAndOffer',\n    value: function createAndOffer() {\n      var _this3 = this;\n\n      return this._getConfiguration().then(function (configuration) {\n        var id = void 0;\n        do {\n          id = util.makeUUID();\n        } while (_this3._peerConnections.has(id));\n\n        return _this3._getOrCreate(id, configuration);\n      }).then(function (peerConnection) {\n        return peerConnection.offer();\n      }).then(function () {\n        return _this3;\n      });\n    }\n\n    /**\n     * Get the {@link DataTrackReceiver}s and {@link MediaTrackReceiver}s of all\n     * the {@link PeerConnectionV2}s.\n     * @returns {Array<DataTrackReceiver|MediaTrackReceiver>} trackReceivers\n     */\n\n  }, {\n    key: 'getTrackReceivers',\n    value: function getTrackReceivers() {\n      return util.flatMap(this._peerConnections, function (peerConnection) {\n        return peerConnection.getTrackReceivers();\n      });\n    }\n\n    /**\n     * Get the states of all {@link PeerConnectionV2}s.\n     * @returns {Array<object>}\n     */\n\n  }, {\n    key: 'getStates',\n    value: function getStates() {\n      var peerConnectionStates = [];\n      this._peerConnections.forEach(function (peerConnection) {\n        var peerConnectionState = peerConnection.getState();\n        if (peerConnectionState) {\n          peerConnectionStates.push(peerConnectionState);\n        }\n      });\n      return peerConnectionStates;\n    }\n\n    /**\n     * Set the {@link PeerConnectionManager}'s configuration.\n     * @param {object} configuration\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setConfiguration',\n    value: function setConfiguration(configuration) {\n      if (this._configuration) {\n        this._configurationDeferred = util.defer();\n        this._peerConnections.forEach(function (peerConnection) {\n          peerConnection.setConfiguration(configuration);\n        });\n      }\n      this._configuration = configuration;\n      this._configurationDeferred.resolve(configuration);\n      return this;\n    }\n\n    /**\n     * Set the ICE reconnect timeout period for all {@link PeerConnectionV2}s.\n     * @param {number} period - Period in milliseconds.\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setIceReconnectTimeout',\n    value: function setIceReconnectTimeout(period) {\n      if (this._sessionTimeout === null) {\n        this._peerConnections.forEach(function (peerConnection) {\n          peerConnection.setIceReconnectTimeout(period);\n        });\n        this._sessionTimeout = period;\n      }\n      return this;\n    }\n\n    /**\n     * Set the {@link DataTrackSender}s and {@link MediaTrackSender}s on the\n     * {@link PeerConnectionManager}'s underlying {@link PeerConnectionV2}s.\n     * @param {Array<DataTrackSender|MediaTrackSender>} trackSenders\n     * @returns {this}\n     */\n\n  }, {\n    key: 'setTrackSenders',\n    value: function setTrackSenders(trackSenders) {\n      var dataTrackSenders = new Set(trackSenders.filter(function (trackSender) {\n        return trackSender.kind === 'data';\n      }));\n\n      var mediaTrackSenders = new Set(trackSenders.filter(function (trackSender) {\n        return trackSender && (trackSender.kind === 'audio' || trackSender.kind === 'video');\n      }));\n\n      var changes = getTrackSenderChanges(this, dataTrackSenders, mediaTrackSenders);\n      this._dataTrackSenders = dataTrackSenders;\n      this._mediaTrackSenders = mediaTrackSenders;\n      applyTrackSenderChanges(this, changes);\n\n      return this;\n    }\n\n    /**\n     * Update the {@link PeerConnectionManager}.\n     * @param {Array<object>} peerConnectionStates\n     * @param {boolean} [synced=false]\n     * @returns {Promise<this>}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(peerConnectionStates) {\n      var _this4 = this;\n\n      var synced = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (synced) {\n        this._closeAbsentPeerConnections(peerConnectionStates);\n      }\n      return this._getConfiguration().then(function (configuration) {\n        return Promise.all(peerConnectionStates.map(function (peerConnectionState) {\n          if (_this4._closedPeerConnectionIds.has(peerConnectionState.id)) {\n            return null;\n          }\n          var peerConnection = _this4._getOrCreate(peerConnectionState.id, configuration);\n          return peerConnection.update(peerConnectionState);\n        }));\n      }).then(function () {\n        return _this4;\n      });\n    }\n\n    /**\n     * Get the {@link PeerConnectionManager}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var peerConnections = Array.from(this._peerConnections.values());\n      return Promise.all(peerConnections.map(function (peerConnection) {\n        return peerConnection.getStats().then(function (response) {\n          return [peerConnection.id, response];\n        });\n      })).then(function (responses) {\n        return new Map(responses);\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._connectionState;\n    }\n\n    /**\n     * A summarized RTCIceConnectionState across all the\n     * {@link PeerConnectionManager}'s underlying {@link PeerConnectionV2}s.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._iceConnectionState;\n    }\n  }]);\n\n  return PeerConnectionManager;\n}(QueueingEventEmitter);\n\n/**\n * Create a dummy audio MediaStreamTrack with the given AudioContext.\n * @private\n * @param {AudioContext} audioContext\n * @return {MediaStreamTrack}\n */\n\n\nfunction createDummyAudioMediaStreamTrack(audioContext) {\n  var mediaStreamDestination = audioContext.createMediaStreamDestination();\n  return mediaStreamDestination.stream.getAudioTracks()[0];\n}\n\n/**\n * @event {PeerConnectionManager#candidates}\n * @param {object} candidates\n */\n\n/**\n * @event {PeerConnectionManager#connectionStateChanged}\n */\n\n/**\n * @event {PeerConnectionManager#description}\n * @param {object} description\n */\n\n/**\n * @event {PeerConnectionManager#iceConnectionStateChanged}\n */\n\n/**\n * @event {PeerConnectionManager#trackAdded}\n * @param {MediaStreamTrack|DataTrackReceiver} mediaStreamTrackOrDataTrackReceiver\n */\n\n/**\n * Apply {@link TrackSenderChanges}.\n * @param {PeerConnectionManager} peerConnectionManager\n * @param {TrackSenderChanges} changes\n * @returns {void}\n */\nfunction applyTrackSenderChanges(peerConnectionManager, changes) {\n  if (changes.data.add.size || changes.data.remove.size || changes.media.add.size || changes.media.remove.size) {\n    peerConnectionManager._peerConnections.forEach(function (peerConnection) {\n      changes.data.remove.forEach(peerConnection.removeDataTrackSender, peerConnection);\n      changes.media.remove.forEach(peerConnection.removeMediaTrackSender, peerConnection);\n      changes.data.add.forEach(peerConnection.addDataTrackSender, peerConnection);\n      changes.media.add.forEach(peerConnection.addMediaTrackSender, peerConnection);\n      if (changes.media.add.size || changes.media.remove.size || changes.data.add.size && !peerConnection.isApplicationSectionNegotiated) {\n        peerConnection.offer();\n      }\n    });\n  }\n}\n\n/**\n * @interface DataTrackSenderChanges\n * @property {Set<DataTrackSender>} add\n * @property {Set<DataTrackSender>} remove\n */\n\n/**\n * Get the {@Link DataTrackSender} changes.\n * @param {PeerConnectionManager} peerConnectionManager\n * @param {Array<DataTrackSender>} dataTrackSenders\n * @returns {DataTrackSenderChanges} changes\n */\nfunction getDataTrackSenderChanges(peerConnectionManager, dataTrackSenders) {\n  var dataTrackSendersToAdd = util.difference(dataTrackSenders, peerConnectionManager._dataTrackSenders);\n  var dataTrackSendersToRemove = util.difference(peerConnectionManager._dataTrackSenders, dataTrackSenders);\n  return {\n    add: dataTrackSendersToAdd,\n    remove: dataTrackSendersToRemove\n  };\n}\n\n/**\n * @interface TrackSenderChanges\n * @property {DataTrackSenderChanges} data\n * @property {MediaTrackSenderChanges} media\n */\n\n/**\n * Get {@link DataTrackSender} and {@link MediaTrackSender} changes.\n * @param {PeerConnectionManager} peerConnectionManager\n * @param {Array<DataTrackSender>} dataTrackSenders\n * @param {Array<MediaTrackSender>} mediaTrackSenders\n * @returns {TrackSenderChanges} changes\n */\nfunction getTrackSenderChanges(peerConnectionManager, dataTrackSenders, mediaTrackSenders) {\n  return {\n    data: getDataTrackSenderChanges(peerConnectionManager, dataTrackSenders),\n    media: getMediaTrackSenderChanges(peerConnectionManager, mediaTrackSenders)\n  };\n}\n\n/**\n * @interface MediaTrackSenderChanges\n * @property {Set<MediaTrackSender>} add\n * @property {Set<MediaTrackSender>} remove\n */\n\n/**\n * Get the {@link MediaTrackSender} changes.\n * @param {PeerConnectionManager} peerConnectionManager\n * @param {Array<MediaTrackSender>} mediaTrackSenders\n * @returns {MediaTrackSenderChanges} changes\n */\nfunction getMediaTrackSenderChanges(peerConnectionManager, mediaTrackSenders) {\n  var mediaTrackSendersToAdd = util.difference(mediaTrackSenders, peerConnectionManager._mediaTrackSenders);\n  var mediaTrackSendersToRemove = util.difference(peerConnectionManager._mediaTrackSenders, mediaTrackSenders);\n  return {\n    add: mediaTrackSendersToAdd,\n    remove: mediaTrackSendersToRemove\n  };\n}\n\n/**\n * This object maps RTCIceConnectionState and RTCPeerConnectionState values to a \"rank\".\n */\nvar toRank = {\n  new: 0,\n  checking: 1,\n  connecting: 2,\n  connected: 3,\n  completed: 4,\n  disconnected: -1,\n  failed: -2,\n  closed: -3\n};\n\n/**\n * This object maps \"rank\" back to RTCIceConnectionState or RTCPeerConnectionState values.\n */\nvar fromRank = void 0;\n\n/**\n * `Object.keys` is not supported in older browsers, so we can't just\n * synchronously call it in this module; we need to defer invoking it until we\n * know we're in a modern environment (i.e., anything that supports WebRTC).\n * @returns {object} fromRank\n */\nfunction createFromRank() {\n  return Object.keys(toRank).reduce(function (fromRank, state) {\n    return Object.assign(fromRank, _defineProperty({}, toRank[state], state));\n  }, {});\n}\n\n/**\n * Summarize RTCIceConnectionStates or RTCPeerConnectionStates.\n * @param {Array<RTCIceConnectionState>|Array<RTCPeerConnectionState>} states\n * @returns {RTCIceConnectionState|RTCPeerConnectionState} summary\n */\nfunction summarizeIceOrPeerConnectionStates(states) {\n  if (!states.length) {\n    return 'new';\n  }\n  fromRank = fromRank || createFromRank();\n  return states.reduce(function (state1, state2) {\n    return fromRank[Math.max(toRank[state1], toRank[state2])];\n  });\n}\n\n/**\n * Update the {@link PeerConnectionManager}'s `iceConnectionState`, and emit an\n * \"iceConnectionStateChanged\" event, if necessary.\n * @param {PeerConnectionManager} pcm\n * @returns {void}\n */\nfunction updateIceConnectionState(pcm) {\n  pcm._lastIceConnectionState = pcm.iceConnectionState;\n  pcm._iceConnectionState = summarizeIceOrPeerConnectionStates([].concat(_toConsumableArray(pcm._peerConnections.values())).map(function (pcv2) {\n    return pcv2.iceConnectionState;\n  }));\n  if (pcm.iceConnectionState !== pcm._lastIceConnectionState) {\n    pcm.emit('iceConnectionStateChanged');\n  }\n}\n\n/**\n * Update the {@link PeerConnectionManager}'s `connectionState`, and emit a\n * \"connectionStateChanged\" event, if necessary.\n * @param {PeerConnectionManager} pcm\n * @returns {void}\n */\nfunction updateConnectionState(pcm) {\n  pcm._lastConnectionState = pcm.connectionState;\n  pcm._connectionState = summarizeIceOrPeerConnectionStates([].concat(_toConsumableArray(pcm._peerConnections.values())).map(function (pcv2) {\n    return pcv2.connectionState;\n  }));\n  if (pcm.connectionState !== pcm._lastConnectionState) {\n    pcm.emit('connectionStateChanged');\n  }\n}\n\nmodule.exports = PeerConnectionManager;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvcGVlcmNvbm5lY3Rpb25tYW5hZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL3BlZXJjb25uZWN0aW9ubWFuYWdlci5qcz9kZjUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnQHR3aWxpby93ZWJydGMvbGliL3V0aWwnKSxcbiAgICBndWVzc0Jyb3dzZXIgPSBfcmVxdWlyZS5ndWVzc0Jyb3dzZXI7XG5cbnZhciBQZWVyQ29ubmVjdGlvblYyID0gcmVxdWlyZSgnLi9wZWVyY29ubmVjdGlvbicpO1xudmFyIE1lZGlhVHJhY2tTZW5kZXIgPSByZXF1aXJlKCcuLi8uLi9tZWRpYS90cmFjay9zZW5kZXInKTtcbnZhciBRdWV1ZWluZ0V2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4uLy4uL3F1ZXVlaW5nZXZlbnRlbWl0dGVyJyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJy4uLy4uL3V0aWwnKTtcblxudmFyIF9yZXF1aXJlMiA9IHJlcXVpcmUoJy4uLy4uL3V0aWwvdHdpbGlvLXZpZGVvLWVycm9ycycpLFxuICAgIE1lZGlhQ29ubmVjdGlvbkVycm9yID0gX3JlcXVpcmUyLk1lZGlhQ29ubmVjdGlvbkVycm9yO1xuXG52YXIgaXNGaXJlZm94ID0gZ3Vlc3NCcm93c2VyKCkgPT09ICdmaXJlZm94JztcblxuLyoqXG4gKiB7QGxpbmsgUGVlckNvbm5lY3Rpb25NYW5hZ2VyfSBtYW5hZ2VzIG11bHRpcGxlIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gKiBAZXh0ZW5kcyBRdWV1ZWluZ0V2ZW50RW1pdHRlclxuICogQGVtaXRzIFBlZXJDb25uZWN0aW9uTWFuYWdlciNjYW5kaWRhdGVzXG4gKiBAZW1pdHMgUGVlckNvbm5lY3Rpb25NYW5hZ2VyI2Nvbm5lY3Rpb25TdGF0ZUNoYW5nZWRcbiAqIEBlbWl0cyBQZWVyQ29ubmVjdGlvbk1hbmFnZXIjZGVzY3JpcHRpb25cbiAqIEBlbWl0cyBQZWVyQ29ubmVjdGlvbk1hbmFnZXIjaWNlQ29ubmVjdGlvblN0YXRlQ2hhbmdlZFxuICogQGVtaXRzIFBlZXJDb25uZWN0aW9uTWFuYWdlciN0cmFja0FkZGVkXG4gKi9cblxudmFyIFBlZXJDb25uZWN0aW9uTWFuYWdlciA9IGZ1bmN0aW9uIChfUXVldWVpbmdFdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKFBlZXJDb25uZWN0aW9uTWFuYWdlciwgX1F1ZXVlaW5nRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IHtAbGluayBQZWVyQ29ubmVjdGlvbk1hbmFnZXJ9LlxuICAgKiBAcGFyYW0ge0VuY29kaW5nUGFyYW1ldGVyc0ltcGx9IGVuY29kaW5nUGFyYW1ldGVyc1xuICAgKiBAcGFyYW0ge1ByZWZlcnJlZENvZGVjc30gcHJlZmVycmVkQ29kZWNzXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqL1xuICBmdW5jdGlvbiBQZWVyQ29ubmVjdGlvbk1hbmFnZXIoZW5jb2RpbmdQYXJhbWV0ZXJzLCBwcmVmZXJyZWRDb2RlY3MsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGVlckNvbm5lY3Rpb25NYW5hZ2VyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChQZWVyQ29ubmVjdGlvbk1hbmFnZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihQZWVyQ29ubmVjdGlvbk1hbmFnZXIpKS5jYWxsKHRoaXMpKTtcblxuICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgIGF1ZGlvQ29udGV4dEZhY3Rvcnk6IGlzRmlyZWZveCA/IHJlcXVpcmUoJy4uLy4uL3dlYmF1ZGlvL2F1ZGlvY29udGV4dCcpIDogbnVsbCxcbiAgICAgIFBlZXJDb25uZWN0aW9uVjI6IFBlZXJDb25uZWN0aW9uVjJcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIHZhciBhdWRpb0NvbnRleHQgPSBvcHRpb25zLmF1ZGlvQ29udGV4dEZhY3RvcnkgPyBvcHRpb25zLmF1ZGlvQ29udGV4dEZhY3RvcnkuZ2V0T3JDcmVhdGUoX3RoaXMpIDogbnVsbDtcblxuICAgIC8vIE5PVEUobXJvYmVydHMpOiBJZiB3ZSdyZSB1c2luZyBhbiBBdWRpb0NvbnRleHQsIHdlIGRvbid0IG5lZWQgdG8gc3BlY2lmeVxuICAgIC8vIGBvZmZlclRvUmVjZWl2ZUF1ZGlvYCBpbiBSVENPZmZlck9wdGlvbnMuXG4gICAgdmFyIG9mZmVyT3B0aW9ucyA9IGF1ZGlvQ29udGV4dCA/IHsgb2ZmZXJUb1JlY2VpdmVWaWRlbzogdHJ1ZSB9IDogeyBvZmZlclRvUmVjZWl2ZUF1ZGlvOiB0cnVlLCBvZmZlclRvUmVjZWl2ZVZpZGVvOiB0cnVlIH07XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX2F1ZGlvQ29udGV4dEZhY3Rvcnk6IHtcbiAgICAgICAgdmFsdWU6IG9wdGlvbnMuYXVkaW9Db250ZXh0RmFjdG9yeVxuICAgICAgfSxcbiAgICAgIF9jbG9zZWRQZWVyQ29ubmVjdGlvbklkczoge1xuICAgICAgICB2YWx1ZTogbmV3IFNldCgpXG4gICAgICB9LFxuICAgICAgX2NvbmZpZ3VyYXRpb246IHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBudWxsXG4gICAgICB9LFxuICAgICAgX2NvbmZpZ3VyYXRpb25EZWZlcnJlZDoge1xuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHV0aWwuZGVmZXIoKVxuICAgICAgfSxcbiAgICAgIF9jb25uZWN0aW9uU3RhdGU6IHtcbiAgICAgICAgdmFsdWU6ICduZXcnLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIF9kdW1teUF1ZGlvVHJhY2tTZW5kZXI6IHtcbiAgICAgICAgdmFsdWU6IGF1ZGlvQ29udGV4dCA/IG5ldyBNZWRpYVRyYWNrU2VuZGVyKGNyZWF0ZUR1bW15QXVkaW9NZWRpYVN0cmVhbVRyYWNrKGF1ZGlvQ29udGV4dCkpIDogbnVsbFxuICAgICAgfSxcbiAgICAgIF9lbmNvZGluZ1BhcmFtZXRlcnM6IHtcbiAgICAgICAgdmFsdWU6IGVuY29kaW5nUGFyYW1ldGVyc1xuICAgICAgfSxcbiAgICAgIF9pY2VDb25uZWN0aW9uU3RhdGU6IHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAnbmV3J1xuICAgICAgfSxcbiAgICAgIF9kYXRhVHJhY2tTZW5kZXJzOiB7XG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbmV3IFNldCgpXG4gICAgICB9LFxuICAgICAgX2xhc3RDb25uZWN0aW9uU3RhdGU6IHtcbiAgICAgICAgdmFsdWU6ICduZXcnLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIF9sYXN0SWNlQ29ubmVjdGlvblN0YXRlOiB7XG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogJ25ldydcbiAgICAgIH0sXG4gICAgICBfbWVkaWFUcmFja1NlbmRlcnM6IHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBuZXcgU2V0KClcbiAgICAgIH0sXG4gICAgICBfb2ZmZXJPcHRpb25zOiB7XG4gICAgICAgIHZhbHVlOiBvZmZlck9wdGlvbnNcbiAgICAgIH0sXG4gICAgICBfcGVlckNvbm5lY3Rpb25zOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgTWFwKClcbiAgICAgIH0sXG4gICAgICBfcHJlZmVycmVkQ29kZWNzOiB7XG4gICAgICAgIHZhbHVlOiBwcmVmZXJyZWRDb2RlY3NcbiAgICAgIH0sXG4gICAgICBfc2Vzc2lvblRpbWVvdXQ6IHtcbiAgICAgICAgdmFsdWU6IG51bGwsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgX1BlZXJDb25uZWN0aW9uVjI6IHtcbiAgICAgICAgdmFsdWU6IG9wdGlvbnMuUGVlckNvbm5lY3Rpb25WMlxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBBIHN1bW1hcml6ZWQgUlRDUGVlckNvbm5lY3Rpb25TdGF0ZSBhY3Jvc3MgYWxsIHRoZVxuICAgKiB7QGxpbmsgUGVlckNvbm5lY3Rpb25NYW5hZ2VyfSdzIHVuZGVybHlpbmcge0BsaW5rIFBlZXJDb25uZWN0aW9uVjJ9cy5cbiAgICogQHByb3BlcnR5IHtSVENQZWVyQ29ubmVjdGlvblN0YXRlfVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhQZWVyQ29ubmVjdGlvbk1hbmFnZXIsIFt7XG4gICAga2V5OiAnX2Nsb3NlQWJzZW50UGVlckNvbm5lY3Rpb25zJyxcblxuXG4gICAgLyoqXG4gICAgICogQ2xvc2UgdGhlIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMgd2hpY2ggYXJlIG5vIGxvbmdlciByZWxldmFudC5cbiAgICAgKiBAcGFyYW0ge0FycmF5PG9iamVjdD59IHBlZXJDb25uZWN0aW9uU3RhdGVzXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jbG9zZUFic2VudFBlZXJDb25uZWN0aW9ucyhwZWVyQ29ubmVjdGlvblN0YXRlcykge1xuICAgICAgdmFyIHBlZXJDb25uZWN0aW9uSWRzID0gbmV3IFNldChwZWVyQ29ubmVjdGlvblN0YXRlcy5tYXAoZnVuY3Rpb24gKHBlZXJDb25uZWN0aW9uU3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIHBlZXJDb25uZWN0aW9uU3RhdGUuaWQ7XG4gICAgICB9KSk7XG4gICAgICB0aGlzLl9wZWVyQ29ubmVjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAocGVlckNvbm5lY3Rpb24pIHtcbiAgICAgICAgaWYgKCFwZWVyQ29ubmVjdGlvbklkcy5oYXMocGVlckNvbm5lY3Rpb24uaWQpKSB7XG4gICAgICAgICAgcGVlckNvbm5lY3Rpb24uX2Nsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB7QGxpbmsgUGVlckNvbm5lY3Rpb25NYW5hZ2VyfSdzIGNvbmZpZ3VyYXRpb24uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdfZ2V0Q29uZmlndXJhdGlvbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRDb25maWd1cmF0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZ3VyYXRpb25EZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBvciBjcmVhdGUgYSB7QGxpbmsgUGVlckNvbm5lY3Rpb25WMn0uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW2NvbmZpZ3VyYXRpb25dXG4gICAgICogQHJldHVybnMge1BlZXJDb25uZWN0aW9uVjJ9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ19nZXRPckNyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRPckNyZWF0ZShpZCwgY29uZmlndXJhdGlvbikge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIHZhciBwZWVyQ29ubmVjdGlvbiA9IHRoaXMuX3BlZXJDb25uZWN0aW9ucy5nZXQoaWQpO1xuICAgICAgaWYgKCFwZWVyQ29ubmVjdGlvbikge1xuICAgICAgICB2YXIgX1BlZXJDb25uZWN0aW9uViA9IHRoaXMuX1BlZXJDb25uZWN0aW9uVjI7XG5cbiAgICAgICAgdmFyIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBkdW1teUF1ZGlvTWVkaWFTdHJlYW1UcmFjazogdGhpcy5fZHVtbXlBdWRpb1RyYWNrU2VuZGVyID8gdGhpcy5fZHVtbXlBdWRpb1RyYWNrU2VuZGVyLnRyYWNrIDogbnVsbCxcbiAgICAgICAgICBvZmZlck9wdGlvbnM6IHRoaXMuX29mZmVyT3B0aW9uc1xuICAgICAgICB9LCB0aGlzLl9zZXNzaW9uVGltZW91dCA/IHtcbiAgICAgICAgICBzZXNzaW9uVGltZW91dDogdGhpcy5fc2Vzc2lvblRpbWVvdXRcbiAgICAgICAgfSA6IHt9LCBjb25maWd1cmF0aW9uKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIHBlZXJDb25uZWN0aW9uID0gbmV3IF9QZWVyQ29ubmVjdGlvblYoaWQsIHRoaXMuX2VuY29kaW5nUGFyYW1ldGVycywgdGhpcy5fcHJlZmVycmVkQ29kZWNzLCBvcHRpb25zKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIHRocm93IG5ldyBNZWRpYUNvbm5lY3Rpb25FcnJvcigpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fcGVlckNvbm5lY3Rpb25zLnNldChwZWVyQ29ubmVjdGlvbi5pZCwgcGVlckNvbm5lY3Rpb24pO1xuICAgICAgICBwZWVyQ29ubmVjdGlvbi5vbignY2FuZGlkYXRlcycsIHRoaXMucXVldWUuYmluZCh0aGlzLCAnY2FuZGlkYXRlcycpKTtcbiAgICAgICAgcGVlckNvbm5lY3Rpb24ub24oJ2Rlc2NyaXB0aW9uJywgdGhpcy5xdWV1ZS5iaW5kKHRoaXMsICdkZXNjcmlwdGlvbicpKTtcbiAgICAgICAgcGVlckNvbm5lY3Rpb24ub24oJ3RyYWNrQWRkZWQnLCB0aGlzLnF1ZXVlLmJpbmQodGhpcywgJ3RyYWNrQWRkZWQnKSk7XG4gICAgICAgIHBlZXJDb25uZWN0aW9uLm9uKCdzdGF0ZUNoYW5nZWQnLCBmdW5jdGlvbiBzdGF0ZUNoYW5nZWQoc3RhdGUpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPT09ICdjbG9zZWQnKSB7XG4gICAgICAgICAgICBwZWVyQ29ubmVjdGlvbi5yZW1vdmVMaXN0ZW5lcignc3RhdGVDaGFuZ2VkJywgc3RhdGVDaGFuZ2VkKTtcbiAgICAgICAgICAgIHNlbGYuX3BlZXJDb25uZWN0aW9ucy5kZWxldGUocGVlckNvbm5lY3Rpb24uaWQpO1xuICAgICAgICAgICAgc2VsZi5fY2xvc2VkUGVlckNvbm5lY3Rpb25JZHMuYWRkKHBlZXJDb25uZWN0aW9uLmlkKTtcbiAgICAgICAgICAgIHVwZGF0ZUNvbm5lY3Rpb25TdGF0ZShzZWxmKTtcbiAgICAgICAgICAgIHVwZGF0ZUljZUNvbm5lY3Rpb25TdGF0ZShzZWxmKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBwZWVyQ29ubmVjdGlvbi5vbignY29ubmVjdGlvblN0YXRlQ2hhbmdlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gdXBkYXRlQ29ubmVjdGlvblN0YXRlKF90aGlzMik7XG4gICAgICAgIH0pO1xuICAgICAgICBwZWVyQ29ubmVjdGlvbi5vbignaWNlQ29ubmVjdGlvblN0YXRlQ2hhbmdlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gdXBkYXRlSWNlQ29ubmVjdGlvblN0YXRlKF90aGlzMik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuX2RhdGFUcmFja1NlbmRlcnMuZm9yRWFjaChwZWVyQ29ubmVjdGlvbi5hZGREYXRhVHJhY2tTZW5kZXIsIHBlZXJDb25uZWN0aW9uKTtcbiAgICAgICAgdGhpcy5fbWVkaWFUcmFja1NlbmRlcnMuZm9yRWFjaChwZWVyQ29ubmVjdGlvbi5hZGRNZWRpYVRyYWNrU2VuZGVyLCBwZWVyQ29ubmVjdGlvbik7XG5cbiAgICAgICAgdXBkYXRlSWNlQ29ubmVjdGlvblN0YXRlKHRoaXMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHBlZXJDb25uZWN0aW9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsb3NlIGFsbCB0aGUge0BsaW5rIFBlZXJDb25uZWN0aW9uVjJ9cyBpbiB0aGlzIHtAbGluayBQZWVyQ29ubmVjdGlvbk1hbmFnZXJ9LlxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdjbG9zZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgdGhpcy5fcGVlckNvbm5lY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKHBlZXJDb25uZWN0aW9uKSB7XG4gICAgICAgIHBlZXJDb25uZWN0aW9uLmNsb3NlKCk7XG4gICAgICB9KTtcbiAgICAgIGlmICh0aGlzLl9kdW1teUF1ZGlvVHJhY2tTZW5kZXIpIHtcbiAgICAgICAgdGhpcy5fZHVtbXlBdWRpb1RyYWNrU2VuZGVyLnN0b3AoKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLl9hdWRpb0NvbnRleHRGYWN0b3J5KSB7XG4gICAgICAgIHRoaXMuX2F1ZGlvQ29udGV4dEZhY3RvcnkucmVsZWFzZSh0aGlzKTtcbiAgICAgIH1cbiAgICAgIHVwZGF0ZUljZUNvbm5lY3Rpb25TdGF0ZSh0aGlzKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyB7QGxpbmsgUGVlckNvbm5lY3Rpb25WMn0gb24gdGhpcyB7QGxpbmsgUGVlckNvbm5lY3Rpb25NYW5hZ2VyfS5cbiAgICAgKiBUaGVuLCBjcmVhdGUgYSBuZXcgb2ZmZXIgd2l0aCB0aGUgbmV3bHktY3JlYXRlZCB7QGxpbmsgUGVlckNvbm5lY3Rpb25WMn0uXG4gICAgICogQHJldHVybiB7UHJvbWlzZTx0aGlzPn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnY3JlYXRlQW5kT2ZmZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVBbmRPZmZlcigpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy5fZ2V0Q29uZmlndXJhdGlvbigpLnRoZW4oZnVuY3Rpb24gKGNvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgdmFyIGlkID0gdm9pZCAwO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgaWQgPSB1dGlsLm1ha2VVVUlEKCk7XG4gICAgICAgIH0gd2hpbGUgKF90aGlzMy5fcGVlckNvbm5lY3Rpb25zLmhhcyhpZCkpO1xuXG4gICAgICAgIHJldHVybiBfdGhpczMuX2dldE9yQ3JlYXRlKGlkLCBjb25maWd1cmF0aW9uKTtcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHBlZXJDb25uZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiBwZWVyQ29ubmVjdGlvbi5vZmZlcigpO1xuICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczM7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHtAbGluayBEYXRhVHJhY2tSZWNlaXZlcn1zIGFuZCB7QGxpbmsgTWVkaWFUcmFja1JlY2VpdmVyfXMgb2YgYWxsXG4gICAgICogdGhlIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gICAgICogQHJldHVybnMge0FycmF5PERhdGFUcmFja1JlY2VpdmVyfE1lZGlhVHJhY2tSZWNlaXZlcj59IHRyYWNrUmVjZWl2ZXJzXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2dldFRyYWNrUmVjZWl2ZXJzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VHJhY2tSZWNlaXZlcnMoKSB7XG4gICAgICByZXR1cm4gdXRpbC5mbGF0TWFwKHRoaXMuX3BlZXJDb25uZWN0aW9ucywgZnVuY3Rpb24gKHBlZXJDb25uZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiBwZWVyQ29ubmVjdGlvbi5nZXRUcmFja1JlY2VpdmVycygpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBzdGF0ZXMgb2YgYWxsIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gICAgICogQHJldHVybnMge0FycmF5PG9iamVjdD59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2dldFN0YXRlcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN0YXRlcygpIHtcbiAgICAgIHZhciBwZWVyQ29ubmVjdGlvblN0YXRlcyA9IFtdO1xuICAgICAgdGhpcy5fcGVlckNvbm5lY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKHBlZXJDb25uZWN0aW9uKSB7XG4gICAgICAgIHZhciBwZWVyQ29ubmVjdGlvblN0YXRlID0gcGVlckNvbm5lY3Rpb24uZ2V0U3RhdGUoKTtcbiAgICAgICAgaWYgKHBlZXJDb25uZWN0aW9uU3RhdGUpIHtcbiAgICAgICAgICBwZWVyQ29ubmVjdGlvblN0YXRlcy5wdXNoKHBlZXJDb25uZWN0aW9uU3RhdGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBwZWVyQ29ubmVjdGlvblN0YXRlcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHtAbGluayBQZWVyQ29ubmVjdGlvbk1hbmFnZXJ9J3MgY29uZmlndXJhdGlvbi5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY29uZmlndXJhdGlvblxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdzZXRDb25maWd1cmF0aW9uJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0Q29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uKSB7XG4gICAgICBpZiAodGhpcy5fY29uZmlndXJhdGlvbikge1xuICAgICAgICB0aGlzLl9jb25maWd1cmF0aW9uRGVmZXJyZWQgPSB1dGlsLmRlZmVyKCk7XG4gICAgICAgIHRoaXMuX3BlZXJDb25uZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChwZWVyQ29ubmVjdGlvbikge1xuICAgICAgICAgIHBlZXJDb25uZWN0aW9uLnNldENvbmZpZ3VyYXRpb24oY29uZmlndXJhdGlvbik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgdGhpcy5fY29uZmlndXJhdGlvbiA9IGNvbmZpZ3VyYXRpb247XG4gICAgICB0aGlzLl9jb25maWd1cmF0aW9uRGVmZXJyZWQucmVzb2x2ZShjb25maWd1cmF0aW9uKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgSUNFIHJlY29ubmVjdCB0aW1lb3V0IHBlcmlvZCBmb3IgYWxsIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHBlcmlvZCAtIFBlcmlvZCBpbiBtaWxsaXNlY29uZHMuXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3NldEljZVJlY29ubmVjdFRpbWVvdXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRJY2VSZWNvbm5lY3RUaW1lb3V0KHBlcmlvZCkge1xuICAgICAgaWYgKHRoaXMuX3Nlc3Npb25UaW1lb3V0ID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMuX3BlZXJDb25uZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChwZWVyQ29ubmVjdGlvbikge1xuICAgICAgICAgIHBlZXJDb25uZWN0aW9uLnNldEljZVJlY29ubmVjdFRpbWVvdXQocGVyaW9kKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3Nlc3Npb25UaW1lb3V0ID0gcGVyaW9kO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSB7QGxpbmsgRGF0YVRyYWNrU2VuZGVyfXMgYW5kIHtAbGluayBNZWRpYVRyYWNrU2VuZGVyfXMgb24gdGhlXG4gICAgICoge0BsaW5rIFBlZXJDb25uZWN0aW9uTWFuYWdlcn0ncyB1bmRlcmx5aW5nIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gICAgICogQHBhcmFtIHtBcnJheTxEYXRhVHJhY2tTZW5kZXJ8TWVkaWFUcmFja1NlbmRlcj59IHRyYWNrU2VuZGVyc1xuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdzZXRUcmFja1NlbmRlcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUcmFja1NlbmRlcnModHJhY2tTZW5kZXJzKSB7XG4gICAgICB2YXIgZGF0YVRyYWNrU2VuZGVycyA9IG5ldyBTZXQodHJhY2tTZW5kZXJzLmZpbHRlcihmdW5jdGlvbiAodHJhY2tTZW5kZXIpIHtcbiAgICAgICAgcmV0dXJuIHRyYWNrU2VuZGVyLmtpbmQgPT09ICdkYXRhJztcbiAgICAgIH0pKTtcblxuICAgICAgdmFyIG1lZGlhVHJhY2tTZW5kZXJzID0gbmV3IFNldCh0cmFja1NlbmRlcnMuZmlsdGVyKGZ1bmN0aW9uICh0cmFja1NlbmRlcikge1xuICAgICAgICByZXR1cm4gdHJhY2tTZW5kZXIgJiYgKHRyYWNrU2VuZGVyLmtpbmQgPT09ICdhdWRpbycgfHwgdHJhY2tTZW5kZXIua2luZCA9PT0gJ3ZpZGVvJyk7XG4gICAgICB9KSk7XG5cbiAgICAgIHZhciBjaGFuZ2VzID0gZ2V0VHJhY2tTZW5kZXJDaGFuZ2VzKHRoaXMsIGRhdGFUcmFja1NlbmRlcnMsIG1lZGlhVHJhY2tTZW5kZXJzKTtcbiAgICAgIHRoaXMuX2RhdGFUcmFja1NlbmRlcnMgPSBkYXRhVHJhY2tTZW5kZXJzO1xuICAgICAgdGhpcy5fbWVkaWFUcmFja1NlbmRlcnMgPSBtZWRpYVRyYWNrU2VuZGVycztcbiAgICAgIGFwcGx5VHJhY2tTZW5kZXJDaGFuZ2VzKHRoaXMsIGNoYW5nZXMpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHtAbGluayBQZWVyQ29ubmVjdGlvbk1hbmFnZXJ9LlxuICAgICAqIEBwYXJhbSB7QXJyYXk8b2JqZWN0Pn0gcGVlckNvbm5lY3Rpb25TdGF0ZXNcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtzeW5jZWQ9ZmFsc2VdXG4gICAgICogQHJldHVybnMge1Byb21pc2U8dGhpcz59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShwZWVyQ29ubmVjdGlvblN0YXRlcykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBzeW5jZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuXG4gICAgICBpZiAoc3luY2VkKSB7XG4gICAgICAgIHRoaXMuX2Nsb3NlQWJzZW50UGVlckNvbm5lY3Rpb25zKHBlZXJDb25uZWN0aW9uU3RhdGVzKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLl9nZXRDb25maWd1cmF0aW9uKCkudGhlbihmdW5jdGlvbiAoY29uZmlndXJhdGlvbikge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocGVlckNvbm5lY3Rpb25TdGF0ZXMubWFwKGZ1bmN0aW9uIChwZWVyQ29ubmVjdGlvblN0YXRlKSB7XG4gICAgICAgICAgaWYgKF90aGlzNC5fY2xvc2VkUGVlckNvbm5lY3Rpb25JZHMuaGFzKHBlZXJDb25uZWN0aW9uU3RhdGUuaWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIHBlZXJDb25uZWN0aW9uID0gX3RoaXM0Ll9nZXRPckNyZWF0ZShwZWVyQ29ubmVjdGlvblN0YXRlLmlkLCBjb25maWd1cmF0aW9uKTtcbiAgICAgICAgICByZXR1cm4gcGVlckNvbm5lY3Rpb24udXBkYXRlKHBlZXJDb25uZWN0aW9uU3RhdGUpO1xuICAgICAgICB9KSk7XG4gICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUge0BsaW5rIFBlZXJDb25uZWN0aW9uTWFuYWdlcn0ncyBtZWRpYSBzdGF0aXN0aWNzLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlLjxNYXA8UGVlckNvbm5lY3Rpb25WMiNpZCwgU3RhbmRhcmRpemVkU3RhdHNSZXNwb25zZT4+fVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdnZXRTdGF0cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN0YXRzKCkge1xuICAgICAgdmFyIHBlZXJDb25uZWN0aW9ucyA9IEFycmF5LmZyb20odGhpcy5fcGVlckNvbm5lY3Rpb25zLnZhbHVlcygpKTtcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChwZWVyQ29ubmVjdGlvbnMubWFwKGZ1bmN0aW9uIChwZWVyQ29ubmVjdGlvbikge1xuICAgICAgICByZXR1cm4gcGVlckNvbm5lY3Rpb24uZ2V0U3RhdHMoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIHJldHVybiBbcGVlckNvbm5lY3Rpb24uaWQsIHJlc3BvbnNlXTtcbiAgICAgICAgfSk7XG4gICAgICB9KSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2VzKSB7XG4gICAgICAgIHJldHVybiBuZXcgTWFwKHJlc3BvbnNlcyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb25uZWN0aW9uU3RhdGUnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2Nvbm5lY3Rpb25TdGF0ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBIHN1bW1hcml6ZWQgUlRDSWNlQ29ubmVjdGlvblN0YXRlIGFjcm9zcyBhbGwgdGhlXG4gICAgICoge0BsaW5rIFBlZXJDb25uZWN0aW9uTWFuYWdlcn0ncyB1bmRlcmx5aW5nIHtAbGluayBQZWVyQ29ubmVjdGlvblYyfXMuXG4gICAgICogQHByb3BlcnR5IHtSVENJY2VDb25uZWN0aW9uU3RhdGV9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2ljZUNvbm5lY3Rpb25TdGF0ZScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5faWNlQ29ubmVjdGlvblN0YXRlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQZWVyQ29ubmVjdGlvbk1hbmFnZXI7XG59KFF1ZXVlaW5nRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBkdW1teSBhdWRpbyBNZWRpYVN0cmVhbVRyYWNrIHdpdGggdGhlIGdpdmVuIEF1ZGlvQ29udGV4dC5cbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0F1ZGlvQ29udGV4dH0gYXVkaW9Db250ZXh0XG4gKiBAcmV0dXJuIHtNZWRpYVN0cmVhbVRyYWNrfVxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlRHVtbXlBdWRpb01lZGlhU3RyZWFtVHJhY2soYXVkaW9Db250ZXh0KSB7XG4gIHZhciBtZWRpYVN0cmVhbURlc3RpbmF0aW9uID0gYXVkaW9Db250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtRGVzdGluYXRpb24oKTtcbiAgcmV0dXJuIG1lZGlhU3RyZWFtRGVzdGluYXRpb24uc3RyZWFtLmdldEF1ZGlvVHJhY2tzKClbMF07XG59XG5cbi8qKlxuICogQGV2ZW50IHtQZWVyQ29ubmVjdGlvbk1hbmFnZXIjY2FuZGlkYXRlc31cbiAqIEBwYXJhbSB7b2JqZWN0fSBjYW5kaWRhdGVzXG4gKi9cblxuLyoqXG4gKiBAZXZlbnQge1BlZXJDb25uZWN0aW9uTWFuYWdlciNjb25uZWN0aW9uU3RhdGVDaGFuZ2VkfVxuICovXG5cbi8qKlxuICogQGV2ZW50IHtQZWVyQ29ubmVjdGlvbk1hbmFnZXIjZGVzY3JpcHRpb259XG4gKiBAcGFyYW0ge29iamVjdH0gZGVzY3JpcHRpb25cbiAqL1xuXG4vKipcbiAqIEBldmVudCB7UGVlckNvbm5lY3Rpb25NYW5hZ2VyI2ljZUNvbm5lY3Rpb25TdGF0ZUNoYW5nZWR9XG4gKi9cblxuLyoqXG4gKiBAZXZlbnQge1BlZXJDb25uZWN0aW9uTWFuYWdlciN0cmFja0FkZGVkfVxuICogQHBhcmFtIHtNZWRpYVN0cmVhbVRyYWNrfERhdGFUcmFja1JlY2VpdmVyfSBtZWRpYVN0cmVhbVRyYWNrT3JEYXRhVHJhY2tSZWNlaXZlclxuICovXG5cbi8qKlxuICogQXBwbHkge0BsaW5rIFRyYWNrU2VuZGVyQ2hhbmdlc30uXG4gKiBAcGFyYW0ge1BlZXJDb25uZWN0aW9uTWFuYWdlcn0gcGVlckNvbm5lY3Rpb25NYW5hZ2VyXG4gKiBAcGFyYW0ge1RyYWNrU2VuZGVyQ2hhbmdlc30gY2hhbmdlc1xuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIGFwcGx5VHJhY2tTZW5kZXJDaGFuZ2VzKHBlZXJDb25uZWN0aW9uTWFuYWdlciwgY2hhbmdlcykge1xuICBpZiAoY2hhbmdlcy5kYXRhLmFkZC5zaXplIHx8IGNoYW5nZXMuZGF0YS5yZW1vdmUuc2l6ZSB8fCBjaGFuZ2VzLm1lZGlhLmFkZC5zaXplIHx8IGNoYW5nZXMubWVkaWEucmVtb3ZlLnNpemUpIHtcbiAgICBwZWVyQ29ubmVjdGlvbk1hbmFnZXIuX3BlZXJDb25uZWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChwZWVyQ29ubmVjdGlvbikge1xuICAgICAgY2hhbmdlcy5kYXRhLnJlbW92ZS5mb3JFYWNoKHBlZXJDb25uZWN0aW9uLnJlbW92ZURhdGFUcmFja1NlbmRlciwgcGVlckNvbm5lY3Rpb24pO1xuICAgICAgY2hhbmdlcy5tZWRpYS5yZW1vdmUuZm9yRWFjaChwZWVyQ29ubmVjdGlvbi5yZW1vdmVNZWRpYVRyYWNrU2VuZGVyLCBwZWVyQ29ubmVjdGlvbik7XG4gICAgICBjaGFuZ2VzLmRhdGEuYWRkLmZvckVhY2gocGVlckNvbm5lY3Rpb24uYWRkRGF0YVRyYWNrU2VuZGVyLCBwZWVyQ29ubmVjdGlvbik7XG4gICAgICBjaGFuZ2VzLm1lZGlhLmFkZC5mb3JFYWNoKHBlZXJDb25uZWN0aW9uLmFkZE1lZGlhVHJhY2tTZW5kZXIsIHBlZXJDb25uZWN0aW9uKTtcbiAgICAgIGlmIChjaGFuZ2VzLm1lZGlhLmFkZC5zaXplIHx8IGNoYW5nZXMubWVkaWEucmVtb3ZlLnNpemUgfHwgY2hhbmdlcy5kYXRhLmFkZC5zaXplICYmICFwZWVyQ29ubmVjdGlvbi5pc0FwcGxpY2F0aW9uU2VjdGlvbk5lZ290aWF0ZWQpIHtcbiAgICAgICAgcGVlckNvbm5lY3Rpb24ub2ZmZXIoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIEBpbnRlcmZhY2UgRGF0YVRyYWNrU2VuZGVyQ2hhbmdlc1xuICogQHByb3BlcnR5IHtTZXQ8RGF0YVRyYWNrU2VuZGVyPn0gYWRkXG4gKiBAcHJvcGVydHkge1NldDxEYXRhVHJhY2tTZW5kZXI+fSByZW1vdmVcbiAqL1xuXG4vKipcbiAqIEdldCB0aGUge0BMaW5rIERhdGFUcmFja1NlbmRlcn0gY2hhbmdlcy5cbiAqIEBwYXJhbSB7UGVlckNvbm5lY3Rpb25NYW5hZ2VyfSBwZWVyQ29ubmVjdGlvbk1hbmFnZXJcbiAqIEBwYXJhbSB7QXJyYXk8RGF0YVRyYWNrU2VuZGVyPn0gZGF0YVRyYWNrU2VuZGVyc1xuICogQHJldHVybnMge0RhdGFUcmFja1NlbmRlckNoYW5nZXN9IGNoYW5nZXNcbiAqL1xuZnVuY3Rpb24gZ2V0RGF0YVRyYWNrU2VuZGVyQ2hhbmdlcyhwZWVyQ29ubmVjdGlvbk1hbmFnZXIsIGRhdGFUcmFja1NlbmRlcnMpIHtcbiAgdmFyIGRhdGFUcmFja1NlbmRlcnNUb0FkZCA9IHV0aWwuZGlmZmVyZW5jZShkYXRhVHJhY2tTZW5kZXJzLCBwZWVyQ29ubmVjdGlvbk1hbmFnZXIuX2RhdGFUcmFja1NlbmRlcnMpO1xuICB2YXIgZGF0YVRyYWNrU2VuZGVyc1RvUmVtb3ZlID0gdXRpbC5kaWZmZXJlbmNlKHBlZXJDb25uZWN0aW9uTWFuYWdlci5fZGF0YVRyYWNrU2VuZGVycywgZGF0YVRyYWNrU2VuZGVycyk7XG4gIHJldHVybiB7XG4gICAgYWRkOiBkYXRhVHJhY2tTZW5kZXJzVG9BZGQsXG4gICAgcmVtb3ZlOiBkYXRhVHJhY2tTZW5kZXJzVG9SZW1vdmVcbiAgfTtcbn1cblxuLyoqXG4gKiBAaW50ZXJmYWNlIFRyYWNrU2VuZGVyQ2hhbmdlc1xuICogQHByb3BlcnR5IHtEYXRhVHJhY2tTZW5kZXJDaGFuZ2VzfSBkYXRhXG4gKiBAcHJvcGVydHkge01lZGlhVHJhY2tTZW5kZXJDaGFuZ2VzfSBtZWRpYVxuICovXG5cbi8qKlxuICogR2V0IHtAbGluayBEYXRhVHJhY2tTZW5kZXJ9IGFuZCB7QGxpbmsgTWVkaWFUcmFja1NlbmRlcn0gY2hhbmdlcy5cbiAqIEBwYXJhbSB7UGVlckNvbm5lY3Rpb25NYW5hZ2VyfSBwZWVyQ29ubmVjdGlvbk1hbmFnZXJcbiAqIEBwYXJhbSB7QXJyYXk8RGF0YVRyYWNrU2VuZGVyPn0gZGF0YVRyYWNrU2VuZGVyc1xuICogQHBhcmFtIHtBcnJheTxNZWRpYVRyYWNrU2VuZGVyPn0gbWVkaWFUcmFja1NlbmRlcnNcbiAqIEByZXR1cm5zIHtUcmFja1NlbmRlckNoYW5nZXN9IGNoYW5nZXNcbiAqL1xuZnVuY3Rpb24gZ2V0VHJhY2tTZW5kZXJDaGFuZ2VzKHBlZXJDb25uZWN0aW9uTWFuYWdlciwgZGF0YVRyYWNrU2VuZGVycywgbWVkaWFUcmFja1NlbmRlcnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBnZXREYXRhVHJhY2tTZW5kZXJDaGFuZ2VzKHBlZXJDb25uZWN0aW9uTWFuYWdlciwgZGF0YVRyYWNrU2VuZGVycyksXG4gICAgbWVkaWE6IGdldE1lZGlhVHJhY2tTZW5kZXJDaGFuZ2VzKHBlZXJDb25uZWN0aW9uTWFuYWdlciwgbWVkaWFUcmFja1NlbmRlcnMpXG4gIH07XG59XG5cbi8qKlxuICogQGludGVyZmFjZSBNZWRpYVRyYWNrU2VuZGVyQ2hhbmdlc1xuICogQHByb3BlcnR5IHtTZXQ8TWVkaWFUcmFja1NlbmRlcj59IGFkZFxuICogQHByb3BlcnR5IHtTZXQ8TWVkaWFUcmFja1NlbmRlcj59IHJlbW92ZVxuICovXG5cbi8qKlxuICogR2V0IHRoZSB7QGxpbmsgTWVkaWFUcmFja1NlbmRlcn0gY2hhbmdlcy5cbiAqIEBwYXJhbSB7UGVlckNvbm5lY3Rpb25NYW5hZ2VyfSBwZWVyQ29ubmVjdGlvbk1hbmFnZXJcbiAqIEBwYXJhbSB7QXJyYXk8TWVkaWFUcmFja1NlbmRlcj59IG1lZGlhVHJhY2tTZW5kZXJzXG4gKiBAcmV0dXJucyB7TWVkaWFUcmFja1NlbmRlckNoYW5nZXN9IGNoYW5nZXNcbiAqL1xuZnVuY3Rpb24gZ2V0TWVkaWFUcmFja1NlbmRlckNoYW5nZXMocGVlckNvbm5lY3Rpb25NYW5hZ2VyLCBtZWRpYVRyYWNrU2VuZGVycykge1xuICB2YXIgbWVkaWFUcmFja1NlbmRlcnNUb0FkZCA9IHV0aWwuZGlmZmVyZW5jZShtZWRpYVRyYWNrU2VuZGVycywgcGVlckNvbm5lY3Rpb25NYW5hZ2VyLl9tZWRpYVRyYWNrU2VuZGVycyk7XG4gIHZhciBtZWRpYVRyYWNrU2VuZGVyc1RvUmVtb3ZlID0gdXRpbC5kaWZmZXJlbmNlKHBlZXJDb25uZWN0aW9uTWFuYWdlci5fbWVkaWFUcmFja1NlbmRlcnMsIG1lZGlhVHJhY2tTZW5kZXJzKTtcbiAgcmV0dXJuIHtcbiAgICBhZGQ6IG1lZGlhVHJhY2tTZW5kZXJzVG9BZGQsXG4gICAgcmVtb3ZlOiBtZWRpYVRyYWNrU2VuZGVyc1RvUmVtb3ZlXG4gIH07XG59XG5cbi8qKlxuICogVGhpcyBvYmplY3QgbWFwcyBSVENJY2VDb25uZWN0aW9uU3RhdGUgYW5kIFJUQ1BlZXJDb25uZWN0aW9uU3RhdGUgdmFsdWVzIHRvIGEgXCJyYW5rXCIuXG4gKi9cbnZhciB0b1JhbmsgPSB7XG4gIG5ldzogMCxcbiAgY2hlY2tpbmc6IDEsXG4gIGNvbm5lY3Rpbmc6IDIsXG4gIGNvbm5lY3RlZDogMyxcbiAgY29tcGxldGVkOiA0LFxuICBkaXNjb25uZWN0ZWQ6IC0xLFxuICBmYWlsZWQ6IC0yLFxuICBjbG9zZWQ6IC0zXG59O1xuXG4vKipcbiAqIFRoaXMgb2JqZWN0IG1hcHMgXCJyYW5rXCIgYmFjayB0byBSVENJY2VDb25uZWN0aW9uU3RhdGUgb3IgUlRDUGVlckNvbm5lY3Rpb25TdGF0ZSB2YWx1ZXMuXG4gKi9cbnZhciBmcm9tUmFuayA9IHZvaWQgMDtcblxuLyoqXG4gKiBgT2JqZWN0LmtleXNgIGlzIG5vdCBzdXBwb3J0ZWQgaW4gb2xkZXIgYnJvd3NlcnMsIHNvIHdlIGNhbid0IGp1c3RcbiAqIHN5bmNocm9ub3VzbHkgY2FsbCBpdCBpbiB0aGlzIG1vZHVsZTsgd2UgbmVlZCB0byBkZWZlciBpbnZva2luZyBpdCB1bnRpbCB3ZVxuICoga25vdyB3ZSdyZSBpbiBhIG1vZGVybiBlbnZpcm9ubWVudCAoaS5lLiwgYW55dGhpbmcgdGhhdCBzdXBwb3J0cyBXZWJSVEMpLlxuICogQHJldHVybnMge29iamVjdH0gZnJvbVJhbmtcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRnJvbVJhbmsoKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyh0b1JhbmspLnJlZHVjZShmdW5jdGlvbiAoZnJvbVJhbmssIHN0YXRlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZnJvbVJhbmssIF9kZWZpbmVQcm9wZXJ0eSh7fSwgdG9SYW5rW3N0YXRlXSwgc3RhdGUpKTtcbiAgfSwge30pO1xufVxuXG4vKipcbiAqIFN1bW1hcml6ZSBSVENJY2VDb25uZWN0aW9uU3RhdGVzIG9yIFJUQ1BlZXJDb25uZWN0aW9uU3RhdGVzLlxuICogQHBhcmFtIHtBcnJheTxSVENJY2VDb25uZWN0aW9uU3RhdGU+fEFycmF5PFJUQ1BlZXJDb25uZWN0aW9uU3RhdGU+fSBzdGF0ZXNcbiAqIEByZXR1cm5zIHtSVENJY2VDb25uZWN0aW9uU3RhdGV8UlRDUGVlckNvbm5lY3Rpb25TdGF0ZX0gc3VtbWFyeVxuICovXG5mdW5jdGlvbiBzdW1tYXJpemVJY2VPclBlZXJDb25uZWN0aW9uU3RhdGVzKHN0YXRlcykge1xuICBpZiAoIXN0YXRlcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gJ25ldyc7XG4gIH1cbiAgZnJvbVJhbmsgPSBmcm9tUmFuayB8fCBjcmVhdGVGcm9tUmFuaygpO1xuICByZXR1cm4gc3RhdGVzLnJlZHVjZShmdW5jdGlvbiAoc3RhdGUxLCBzdGF0ZTIpIHtcbiAgICByZXR1cm4gZnJvbVJhbmtbTWF0aC5tYXgodG9SYW5rW3N0YXRlMV0sIHRvUmFua1tzdGF0ZTJdKV07XG4gIH0pO1xufVxuXG4vKipcbiAqIFVwZGF0ZSB0aGUge0BsaW5rIFBlZXJDb25uZWN0aW9uTWFuYWdlcn0ncyBgaWNlQ29ubmVjdGlvblN0YXRlYCwgYW5kIGVtaXQgYW5cbiAqIFwiaWNlQ29ubmVjdGlvblN0YXRlQ2hhbmdlZFwiIGV2ZW50LCBpZiBuZWNlc3NhcnkuXG4gKiBAcGFyYW0ge1BlZXJDb25uZWN0aW9uTWFuYWdlcn0gcGNtXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gdXBkYXRlSWNlQ29ubmVjdGlvblN0YXRlKHBjbSkge1xuICBwY20uX2xhc3RJY2VDb25uZWN0aW9uU3RhdGUgPSBwY20uaWNlQ29ubmVjdGlvblN0YXRlO1xuICBwY20uX2ljZUNvbm5lY3Rpb25TdGF0ZSA9IHN1bW1hcml6ZUljZU9yUGVlckNvbm5lY3Rpb25TdGF0ZXMoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShwY20uX3BlZXJDb25uZWN0aW9ucy52YWx1ZXMoKSkpLm1hcChmdW5jdGlvbiAocGN2Mikge1xuICAgIHJldHVybiBwY3YyLmljZUNvbm5lY3Rpb25TdGF0ZTtcbiAgfSkpO1xuICBpZiAocGNtLmljZUNvbm5lY3Rpb25TdGF0ZSAhPT0gcGNtLl9sYXN0SWNlQ29ubmVjdGlvblN0YXRlKSB7XG4gICAgcGNtLmVtaXQoJ2ljZUNvbm5lY3Rpb25TdGF0ZUNoYW5nZWQnKTtcbiAgfVxufVxuXG4vKipcbiAqIFVwZGF0ZSB0aGUge0BsaW5rIFBlZXJDb25uZWN0aW9uTWFuYWdlcn0ncyBgY29ubmVjdGlvblN0YXRlYCwgYW5kIGVtaXQgYVxuICogXCJjb25uZWN0aW9uU3RhdGVDaGFuZ2VkXCIgZXZlbnQsIGlmIG5lY2Vzc2FyeS5cbiAqIEBwYXJhbSB7UGVlckNvbm5lY3Rpb25NYW5hZ2VyfSBwY21cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB1cGRhdGVDb25uZWN0aW9uU3RhdGUocGNtKSB7XG4gIHBjbS5fbGFzdENvbm5lY3Rpb25TdGF0ZSA9IHBjbS5jb25uZWN0aW9uU3RhdGU7XG4gIHBjbS5fY29ubmVjdGlvblN0YXRlID0gc3VtbWFyaXplSWNlT3JQZWVyQ29ubmVjdGlvblN0YXRlcyhbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHBjbS5fcGVlckNvbm5lY3Rpb25zLnZhbHVlcygpKSkubWFwKGZ1bmN0aW9uIChwY3YyKSB7XG4gICAgcmV0dXJuIHBjdjIuY29ubmVjdGlvblN0YXRlO1xuICB9KSk7XG4gIGlmIChwY20uY29ubmVjdGlvblN0YXRlICE9PSBwY20uX2xhc3RDb25uZWN0aW9uU3RhdGUpIHtcbiAgICBwY20uZW1pdCgnY29ubmVjdGlvblN0YXRlQ2hhbmdlZCcpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUGVlckNvbm5lY3Rpb25NYW5hZ2VyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/peerconnectionmanager.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/recording.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/recording.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RecordingSignaling = __webpack_require__(/*! ../recording */ \"./node_modules/twilio-video/es5/signaling/recording.js\");\n\n/**\n * @extends RecordingSignaling\n */\n\nvar RecordingV2 = function (_RecordingSignaling) {\n  _inherits(RecordingV2, _RecordingSignaling);\n\n  /**\n   * Construct a {@link RecordingV2}.\n   */\n  function RecordingV2() {\n    _classCallCheck(this, RecordingV2);\n\n    var _this = _possibleConstructorReturn(this, (RecordingV2.__proto__ || Object.getPrototypeOf(RecordingV2)).call(this));\n\n    Object.defineProperties(_this, {\n      _revision: {\n        value: 1,\n        writable: true\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Compare the {@link RecordingV2} to a {@link RecordingV2#Representation}\n   * of itself and perform any updates necessary.\n   * @param {RecordingV2#Representation} recording\n   * @returns {this}\n   * @fires RecordingSignaling#updated\n   */\n\n\n  _createClass(RecordingV2, [{\n    key: 'update',\n    value: function update(recording) {\n      if (recording.revision < this._revision) {\n        return this;\n      }\n      this._revision = recording.revision;\n      return this.enable(recording.enabled);\n    }\n  }]);\n\n  return RecordingV2;\n}(RecordingSignaling);\n\n/**\n * The Room Signaling Protocol (RSP) representation of a {@link RecordingV2}\n * @typedef {object} RecordingV2#Representation\n * @property {boolean} enabled\n * @property {number} revision\n */\n\nmodule.exports = RecordingV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvcmVjb3JkaW5nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc2lnbmFsaW5nL3YyL3JlY29yZGluZy5qcz84MDFhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUmVjb3JkaW5nU2lnbmFsaW5nID0gcmVxdWlyZSgnLi4vcmVjb3JkaW5nJyk7XG5cbi8qKlxuICogQGV4dGVuZHMgUmVjb3JkaW5nU2lnbmFsaW5nXG4gKi9cblxudmFyIFJlY29yZGluZ1YyID0gZnVuY3Rpb24gKF9SZWNvcmRpbmdTaWduYWxpbmcpIHtcbiAgX2luaGVyaXRzKFJlY29yZGluZ1YyLCBfUmVjb3JkaW5nU2lnbmFsaW5nKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFJlY29yZGluZ1YyfS5cbiAgICovXG4gIGZ1bmN0aW9uIFJlY29yZGluZ1YyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWNvcmRpbmdWMik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUmVjb3JkaW5nVjIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZWNvcmRpbmdWMikpLmNhbGwodGhpcykpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIF9yZXZpc2lvbjoge1xuICAgICAgICB2YWx1ZTogMSxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICAvKipcbiAgICogQ29tcGFyZSB0aGUge0BsaW5rIFJlY29yZGluZ1YyfSB0byBhIHtAbGluayBSZWNvcmRpbmdWMiNSZXByZXNlbnRhdGlvbn1cbiAgICogb2YgaXRzZWxmIGFuZCBwZXJmb3JtIGFueSB1cGRhdGVzIG5lY2Vzc2FyeS5cbiAgICogQHBhcmFtIHtSZWNvcmRpbmdWMiNSZXByZXNlbnRhdGlvbn0gcmVjb3JkaW5nXG4gICAqIEByZXR1cm5zIHt0aGlzfVxuICAgKiBAZmlyZXMgUmVjb3JkaW5nU2lnbmFsaW5nI3VwZGF0ZWRcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUmVjb3JkaW5nVjIsIFt7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKHJlY29yZGluZykge1xuICAgICAgaWYgKHJlY29yZGluZy5yZXZpc2lvbiA8IHRoaXMuX3JldmlzaW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgdGhpcy5fcmV2aXNpb24gPSByZWNvcmRpbmcucmV2aXNpb247XG4gICAgICByZXR1cm4gdGhpcy5lbmFibGUocmVjb3JkaW5nLmVuYWJsZWQpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZWNvcmRpbmdWMjtcbn0oUmVjb3JkaW5nU2lnbmFsaW5nKTtcblxuLyoqXG4gKiBUaGUgUm9vbSBTaWduYWxpbmcgUHJvdG9jb2wgKFJTUCkgcmVwcmVzZW50YXRpb24gb2YgYSB7QGxpbmsgUmVjb3JkaW5nVjJ9XG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBSZWNvcmRpbmdWMiNSZXByZXNlbnRhdGlvblxuICogQHByb3BlcnR5IHtib29sZWFufSBlbmFibGVkXG4gKiBAcHJvcGVydHkge251bWJlcn0gcmV2aXNpb25cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlY29yZGluZ1YyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/recording.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/remoteparticipant.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/remoteparticipant.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteParticipantSignaling = __webpack_require__(/*! ../remoteparticipant */ \"./node_modules/twilio-video/es5/signaling/remoteparticipant.js\");\nvar RemoteTrackPublicationV2 = __webpack_require__(/*! ./remotetrackpublication */ \"./node_modules/twilio-video/es5/signaling/v2/remotetrackpublication.js\");\n\n/**\n * @extends RemoteParticipantSignaling\n * @property {?number} revision\n */\n\nvar RemoteParticipantV2 = function (_RemoteParticipantSig) {\n  _inherits(RemoteParticipantV2, _RemoteParticipantSig);\n\n  /**\n   * Construct a {@link RemoteParticipantV2}.\n   * @param {object} participantState\n   * @param {function(string): Promise<DataTrackReceiver|MediaTrackReceiver>} getTrackReceiver\n   * @param {object} [options]\n   */\n  function RemoteParticipantV2(participantState, getTrackReceiver, options) {\n    var _ret;\n\n    _classCallCheck(this, RemoteParticipantV2);\n\n    var _this = _possibleConstructorReturn(this, (RemoteParticipantV2.__proto__ || Object.getPrototypeOf(RemoteParticipantV2)).call(this, participantState.sid, participantState.identity));\n\n    options = Object.assign({\n      RemoteTrackPublicationV2: RemoteTrackPublicationV2\n    }, options);\n\n    Object.defineProperties(_this, {\n      _revision: {\n        writable: true,\n        value: null\n      },\n      _RemoteTrackPublicationV2: {\n        value: options.RemoteTrackPublicationV2\n      },\n      _getTrackReceiver: {\n        value: getTrackReceiver\n      },\n      revision: {\n        enumerable: true,\n        get: function get() {\n          return this._revision;\n        }\n      }\n    });\n\n    return _ret = _this.update(participantState), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @private\n   */\n\n\n  _createClass(RemoteParticipantV2, [{\n    key: '_getOrCreateTrack',\n    value: function _getOrCreateTrack(trackState) {\n      var RemoteTrackPublicationV2 = this._RemoteTrackPublicationV2;\n      var track = this.tracks.get(trackState.sid);\n      if (!track) {\n        track = new RemoteTrackPublicationV2(trackState);\n        this.addTrack(track);\n      }\n      return track;\n    }\n\n    /**\n     * Update the {@link RemoteParticipantV2} with the new state.\n     * @param {object} participantState\n     * @returns {this}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(participantState) {\n      var _this2 = this;\n\n      if (this.revision !== null && participantState.revision <= this.revision) {\n        return this;\n      }\n      this._revision = participantState.revision;\n\n      var tracksToKeep = new Set();\n\n      participantState.tracks.forEach(function (trackState) {\n        var track = _this2._getOrCreateTrack(trackState);\n        track.update(trackState);\n        tracksToKeep.add(track);\n      });\n\n      this.tracks.forEach(function (track) {\n        if (!tracksToKeep.has(track)) {\n          _this2.removeTrack(track);\n        }\n      });\n\n      switch (participantState.state) {\n        case 'disconnected':\n          this.disconnect();\n          break;\n        case 'reconnecting':\n          this.reconnecting();\n          break;\n        case 'connected':\n          this.connect(this.sid, this.identity);\n          break;\n      }\n\n      return this;\n    }\n  }]);\n\n  return RemoteParticipantV2;\n}(RemoteParticipantSignaling);\n\nmodule.exports = RemoteParticipantV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvcmVtb3RlcGFydGljaXBhbnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvcmVtb3RlcGFydGljaXBhbnQuanM/ZGVjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlbW90ZVBhcnRpY2lwYW50U2lnbmFsaW5nID0gcmVxdWlyZSgnLi4vcmVtb3RlcGFydGljaXBhbnQnKTtcbnZhciBSZW1vdGVUcmFja1B1YmxpY2F0aW9uVjIgPSByZXF1aXJlKCcuL3JlbW90ZXRyYWNrcHVibGljYXRpb24nKTtcblxuLyoqXG4gKiBAZXh0ZW5kcyBSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZ1xuICogQHByb3BlcnR5IHs/bnVtYmVyfSByZXZpc2lvblxuICovXG5cbnZhciBSZW1vdGVQYXJ0aWNpcGFudFYyID0gZnVuY3Rpb24gKF9SZW1vdGVQYXJ0aWNpcGFudFNpZykge1xuICBfaW5oZXJpdHMoUmVtb3RlUGFydGljaXBhbnRWMiwgX1JlbW90ZVBhcnRpY2lwYW50U2lnKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFJlbW90ZVBhcnRpY2lwYW50VjJ9LlxuICAgKiBAcGFyYW0ge29iamVjdH0gcGFydGljaXBhbnRTdGF0ZVxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKHN0cmluZyk6IFByb21pc2U8RGF0YVRyYWNrUmVjZWl2ZXJ8TWVkaWFUcmFja1JlY2VpdmVyPn0gZ2V0VHJhY2tSZWNlaXZlclxuICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVQYXJ0aWNpcGFudFYyKHBhcnRpY2lwYW50U3RhdGUsIGdldFRyYWNrUmVjZWl2ZXIsIG9wdGlvbnMpIHtcbiAgICB2YXIgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZW1vdGVQYXJ0aWNpcGFudFYyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChSZW1vdGVQYXJ0aWNpcGFudFYyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVtb3RlUGFydGljaXBhbnRWMikpLmNhbGwodGhpcywgcGFydGljaXBhbnRTdGF0ZS5zaWQsIHBhcnRpY2lwYW50U3RhdGUuaWRlbnRpdHkpKTtcblxuICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgIFJlbW90ZVRyYWNrUHVibGljYXRpb25WMjogUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyXG4gICAgfSwgb3B0aW9ucyk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgX3JldmlzaW9uOiB7XG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbnVsbFxuICAgICAgfSxcbiAgICAgIF9SZW1vdGVUcmFja1B1YmxpY2F0aW9uVjI6IHtcbiAgICAgICAgdmFsdWU6IG9wdGlvbnMuUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyXG4gICAgICB9LFxuICAgICAgX2dldFRyYWNrUmVjZWl2ZXI6IHtcbiAgICAgICAgdmFsdWU6IGdldFRyYWNrUmVjZWl2ZXJcbiAgICAgIH0sXG4gICAgICByZXZpc2lvbjoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fcmV2aXNpb247XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBfcmV0ID0gX3RoaXMudXBkYXRlKHBhcnRpY2lwYW50U3RhdGUpLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICAvKipcbiAgICogQHByaXZhdGVcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUmVtb3RlUGFydGljaXBhbnRWMiwgW3tcbiAgICBrZXk6ICdfZ2V0T3JDcmVhdGVUcmFjaycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRPckNyZWF0ZVRyYWNrKHRyYWNrU3RhdGUpIHtcbiAgICAgIHZhciBSZW1vdGVUcmFja1B1YmxpY2F0aW9uVjIgPSB0aGlzLl9SZW1vdGVUcmFja1B1YmxpY2F0aW9uVjI7XG4gICAgICB2YXIgdHJhY2sgPSB0aGlzLnRyYWNrcy5nZXQodHJhY2tTdGF0ZS5zaWQpO1xuICAgICAgaWYgKCF0cmFjaykge1xuICAgICAgICB0cmFjayA9IG5ldyBSZW1vdGVUcmFja1B1YmxpY2F0aW9uVjIodHJhY2tTdGF0ZSk7XG4gICAgICAgIHRoaXMuYWRkVHJhY2sodHJhY2spO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRyYWNrO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUge0BsaW5rIFJlbW90ZVBhcnRpY2lwYW50VjJ9IHdpdGggdGhlIG5ldyBzdGF0ZS5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFydGljaXBhbnRTdGF0ZVxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUocGFydGljaXBhbnRTdGF0ZSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLnJldmlzaW9uICE9PSBudWxsICYmIHBhcnRpY2lwYW50U3RhdGUucmV2aXNpb24gPD0gdGhpcy5yZXZpc2lvbikge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIHRoaXMuX3JldmlzaW9uID0gcGFydGljaXBhbnRTdGF0ZS5yZXZpc2lvbjtcblxuICAgICAgdmFyIHRyYWNrc1RvS2VlcCA9IG5ldyBTZXQoKTtcblxuICAgICAgcGFydGljaXBhbnRTdGF0ZS50cmFja3MuZm9yRWFjaChmdW5jdGlvbiAodHJhY2tTdGF0ZSkge1xuICAgICAgICB2YXIgdHJhY2sgPSBfdGhpczIuX2dldE9yQ3JlYXRlVHJhY2sodHJhY2tTdGF0ZSk7XG4gICAgICAgIHRyYWNrLnVwZGF0ZSh0cmFja1N0YXRlKTtcbiAgICAgICAgdHJhY2tzVG9LZWVwLmFkZCh0cmFjayk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy50cmFja3MuZm9yRWFjaChmdW5jdGlvbiAodHJhY2spIHtcbiAgICAgICAgaWYgKCF0cmFja3NUb0tlZXAuaGFzKHRyYWNrKSkge1xuICAgICAgICAgIF90aGlzMi5yZW1vdmVUcmFjayh0cmFjayk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBzd2l0Y2ggKHBhcnRpY2lwYW50U3RhdGUuc3RhdGUpIHtcbiAgICAgICAgY2FzZSAnZGlzY29ubmVjdGVkJzpcbiAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncmVjb25uZWN0aW5nJzpcbiAgICAgICAgICB0aGlzLnJlY29ubmVjdGluZygpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdjb25uZWN0ZWQnOlxuICAgICAgICAgIHRoaXMuY29ubmVjdCh0aGlzLnNpZCwgdGhpcy5pZGVudGl0eSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZW1vdGVQYXJ0aWNpcGFudFYyO1xufShSZW1vdGVQYXJ0aWNpcGFudFNpZ25hbGluZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVtb3RlUGFydGljaXBhbnRWMjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/remoteparticipant.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/remotetrackpublication.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/remotetrackpublication.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackPublicationSignaling = __webpack_require__(/*! ../remotetrackpublication */ \"./node_modules/twilio-video/es5/signaling/remotetrackpublication.js\");\n\n/**\n * @extends RemoteTrackPublicationSignaling\n */\n\nvar RemoteTrackPublicationV2 = function (_RemoteTrackPublicati) {\n  _inherits(RemoteTrackPublicationV2, _RemoteTrackPublicati);\n\n  /**\n   * Construct a {@link RemoteTrackPublicationV2}.\n   * @param {RemoteTrackPublicationV2#Representation} track\n   */\n  function RemoteTrackPublicationV2(track) {\n    _classCallCheck(this, RemoteTrackPublicationV2);\n\n    return _possibleConstructorReturn(this, (RemoteTrackPublicationV2.__proto__ || Object.getPrototypeOf(RemoteTrackPublicationV2)).call(this, track.sid, track.name, track.kind, track.enabled, track.priority));\n  }\n\n  /**\n   * Compare the {@link RemoteTrackPublicationV2} to a\n   * {@link RemoteTrackPublicationV2#Representation} of itself and perform any\n   * updates necessary.\n   * @param {RemoteTrackPublicationV2#Representation} track\n   * @returns {this}\n   * @fires TrackSignaling#updated\n   */\n\n\n  _createClass(RemoteTrackPublicationV2, [{\n    key: 'update',\n    value: function update(track) {\n      this.enable(track.enabled);\n      this.setPriority(track.priority);\n      return this;\n    }\n  }]);\n\n  return RemoteTrackPublicationV2;\n}(RemoteTrackPublicationSignaling);\n\n/**\n * The Room Signaling Protocol (RSP) representation of a {@link RemoteTrackPublicationV2}.\n * @typedef {LocalTrackPublicationV2#Representation} RemoteTrackPublicationV2#Representation\n * @property {boolean} subscribed\n */\n\nmodule.exports = RemoteTrackPublicationV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvcmVtb3RldHJhY2twdWJsaWNhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3NpZ25hbGluZy92Mi9yZW1vdGV0cmFja3B1YmxpY2F0aW9uLmpzP2M1NTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nID0gcmVxdWlyZSgnLi4vcmVtb3RldHJhY2twdWJsaWNhdGlvbicpO1xuXG4vKipcbiAqIEBleHRlbmRzIFJlbW90ZVRyYWNrUHVibGljYXRpb25TaWduYWxpbmdcbiAqL1xuXG52YXIgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyID0gZnVuY3Rpb24gKF9SZW1vdGVUcmFja1B1YmxpY2F0aSkge1xuICBfaW5oZXJpdHMoUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyLCBfUmVtb3RlVHJhY2tQdWJsaWNhdGkpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyfS5cbiAgICogQHBhcmFtIHtSZW1vdGVUcmFja1B1YmxpY2F0aW9uVjIjUmVwcmVzZW50YXRpb259IHRyYWNrXG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVUcmFja1B1YmxpY2F0aW9uVjIodHJhY2spIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyKSkuY2FsbCh0aGlzLCB0cmFjay5zaWQsIHRyYWNrLm5hbWUsIHRyYWNrLmtpbmQsIHRyYWNrLmVuYWJsZWQsIHRyYWNrLnByaW9yaXR5KSk7XG4gIH1cblxuICAvKipcbiAgICogQ29tcGFyZSB0aGUge0BsaW5rIFJlbW90ZVRyYWNrUHVibGljYXRpb25WMn0gdG8gYVxuICAgKiB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyI1JlcHJlc2VudGF0aW9ufSBvZiBpdHNlbGYgYW5kIHBlcmZvcm0gYW55XG4gICAqIHVwZGF0ZXMgbmVjZXNzYXJ5LlxuICAgKiBAcGFyYW0ge1JlbW90ZVRyYWNrUHVibGljYXRpb25WMiNSZXByZXNlbnRhdGlvbn0gdHJhY2tcbiAgICogQHJldHVybnMge3RoaXN9XG4gICAqIEBmaXJlcyBUcmFja1NpZ25hbGluZyN1cGRhdGVkXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKFJlbW90ZVRyYWNrUHVibGljYXRpb25WMiwgW3tcbiAgICBrZXk6ICd1cGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUodHJhY2spIHtcbiAgICAgIHRoaXMuZW5hYmxlKHRyYWNrLmVuYWJsZWQpO1xuICAgICAgdGhpcy5zZXRQcmlvcml0eSh0cmFjay5wcmlvcml0eSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyO1xufShSZW1vdGVUcmFja1B1YmxpY2F0aW9uU2lnbmFsaW5nKTtcblxuLyoqXG4gKiBUaGUgUm9vbSBTaWduYWxpbmcgUHJvdG9jb2wgKFJTUCkgcmVwcmVzZW50YXRpb24gb2YgYSB7QGxpbmsgUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyfS5cbiAqIEB0eXBlZGVmIHtMb2NhbFRyYWNrUHVibGljYXRpb25WMiNSZXByZXNlbnRhdGlvbn0gUmVtb3RlVHJhY2tQdWJsaWNhdGlvblYyI1JlcHJlc2VudGF0aW9uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IHN1YnNjcmliZWRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlbW90ZVRyYWNrUHVibGljYXRpb25WMjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/remotetrackpublication.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/room.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/room.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DominantSpeakerSignaling = __webpack_require__(/*! ./dominantspeakersignaling */ \"./node_modules/twilio-video/es5/signaling/v2/dominantspeakersignaling.js\");\nvar NetworkQualityMonitor = __webpack_require__(/*! ./networkqualitymonitor */ \"./node_modules/twilio-video/es5/signaling/v2/networkqualitymonitor.js\");\nvar NetworkQualitySignaling = __webpack_require__(/*! ./networkqualitysignaling */ \"./node_modules/twilio-video/es5/signaling/v2/networkqualitysignaling.js\");\nvar RecordingV2 = __webpack_require__(/*! ./recording */ \"./node_modules/twilio-video/es5/signaling/v2/recording.js\");\nvar RoomSignaling = __webpack_require__(/*! ../room */ \"./node_modules/twilio-video/es5/signaling/room.js\");\nvar RemoteParticipantV2 = __webpack_require__(/*! ./remoteparticipant */ \"./node_modules/twilio-video/es5/signaling/v2/remoteparticipant.js\");\nvar StatsReport = __webpack_require__(/*! ../../stats/statsreport */ \"./node_modules/twilio-video/es5/stats/statsreport.js\");\nvar TrackPrioritySignaling = __webpack_require__(/*! ./trackprioritysignaling */ \"./node_modules/twilio-video/es5/signaling/v2/trackprioritysignaling.js\");\nvar TrackSwitchOffSignaling = __webpack_require__(/*! ./trackswitchoffsignaling */ \"./node_modules/twilio-video/es5/signaling/v2/trackswitchoffsignaling.js\");\n\nvar _require = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar _require2 = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 10000;\n\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    Object.defineProperties(_this, {\n      _dominantSpeakerSignaling: {\n        value: null,\n        writable: true\n      },\n      _DominantSpeakerSignaling: {\n        value: options.DominantSpeakerSignaling\n      },\n      _dominantSpeakerSignalingPromise: {\n        value: null,\n        writable: true\n      },\n      _disconnectedParticipantSids: {\n        value: new Set()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _NetworkQualitySignaling: {\n        value: options.NetworkQualitySignaling\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityMonitorPromise: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _trackPriorityPromise: {\n        value: null,\n        writable: true\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffPromise: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffSignaling: {\n        value: null,\n        writable: true\n      },\n      _TrackPrioritySignaling: {\n        value: options.TrackPrioritySignaling\n      },\n      _TrackSwitchOffSignaling: {\n        value: options.TrackSwitchOffSignaling\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n    return _this;\n  }\n\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers();\n\n      // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n      if (didDisconnect) {\n        this._teardownDominantSpeakerSignaling();\n        this._teardownNetworkQualityMonitor();\n        this._transport.disconnect();\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n\n      return didDisconnect;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n        return trackReceiver;\n      });\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, this._getTrackReceiver.bind(this));\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n            self._disconnectedParticipantSids.add(participant.sid);\n          }\n        });\n        this.connectParticipant(participant);\n        participant.setTrackPrioritySignaling(this._trackPrioritySignaling);\n      }\n      return participant;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this3 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this3._subscriptionFailures.delete(trackState.sid);\n            _this3._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this3._subscriptionFailures.has(trackState.sid)) {\n            _this3._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this3._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set();\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this3.localParticipant.sid || _this3._disconnectedParticipantSids.has(participantState.sid)) {\n          return;\n        }\n        var participant = _this3._getOrCreateRemoteParticipant(participantState);\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      /* eslint camelcase:0 */\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this3._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      if (!this._dominantSpeakerSignalingPromise && roomState.media_signaling && roomState.media_signaling.active_speaker && roomState.media_signaling.active_speaker.transport && roomState.media_signaling.active_speaker.transport.type === 'data-channel') {\n        this._setupDataTransportBackedDominantSpeakerSignaling(roomState.media_signaling.active_speaker.transport.label);\n      }\n\n      if (!this._networkQualityMonitorPromise && roomState.media_signaling && roomState.media_signaling.network_quality && roomState.media_signaling.network_quality.transport && roomState.media_signaling.network_quality.transport.type === 'data-channel') {\n        this._setupDataTransportBackedNetworkQualityMonitor(roomState.media_signaling.network_quality.transport.label);\n      }\n\n      if (!this._trackPriorityPromise && roomState.media_signaling && roomState.media_signaling.track_priority && roomState.media_signaling.track_priority.transport && roomState.media_signaling.track_priority.transport.type === 'data-channel') {\n        this._setupTrackPrioritySignaling(roomState.media_signaling.track_priority.transport.label);\n      }\n\n      if (!this._trackSwitchOffPromise && roomState.media_signaling && roomState.media_signaling.track_switch_off && roomState.media_signaling.track_switch_off.transport && roomState.media_signaling.track_switch_off.transport.type === 'data-channel') {\n        this._setupTrackSwitchOffMonitor(roomState.media_signaling.track_switch_off.transport.label);\n      }\n\n      return this;\n    }\n\n    // track priority signaling MSP is now used only for subscribe side priority changes.\n    // publisher side priority changes and notifications are handled by RSP.\n\n  }, {\n    key: '_setupTrackPrioritySignaling',\n    value: function _setupTrackPrioritySignaling(id) {\n      var _this4 = this;\n\n      this._teardownTrackPrioritySignaling();\n      var trackPriorityPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this4._trackPriorityPromise !== trackPriorityPromise) {\n          return;\n        }\n\n        // NOTE(mmalavalli): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Track Priority updates.\n        receiver.once('close', function () {\n          return _this4._teardownTrackPrioritySignaling();\n        });\n\n        _this4._trackPrioritySignaling = new _this4._TrackPrioritySignaling(receiver.toDataTransport());\n        [].concat(_toConsumableArray(_this4.participants.values())).forEach(function (participant) {\n          participant.setTrackPrioritySignaling(_this4._trackPrioritySignaling);\n        });\n      });\n      this._trackPriorityPromise = trackPriorityPromise;\n    }\n  }, {\n    key: '_setupTrackSwitchOff',\n    value: function _setupTrackSwitchOff(trackSwitchOffSignaling) {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling = trackSwitchOffSignaling;\n      trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        _this5.participants.forEach(function (participant) {\n          participant.tracks.forEach(function (track) {\n            if (tracksOff.includes(track.sid)) {\n              track.setSwitchedOff(true);\n            }\n            if (tracksOn.includes(track.sid)) {\n              track.setSwitchedOff(false);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: '_setupTrackSwitchOffMonitor',\n    value: function _setupTrackSwitchOffMonitor(id) {\n      var _this6 = this;\n\n      this._teardownTrackSwitchOff();\n      var trackSwitchOffPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this6._trackSwitchOffPromise !== trackSwitchOffPromise) {\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this6._teardownTrackSwitchOff();\n        });\n\n        var trackSwitchOffSignaling = new _this6._TrackSwitchOffSignaling(receiver.toDataTransport());\n        _this6._setupTrackSwitchOff(trackSwitchOffSignaling);\n      });\n      this._trackSwitchOffPromise = trackSwitchOffPromise;\n    }\n\n    /**\n     * Create a {@link DataTransport}-backed {@link DominantSpeakerSignaling}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link DominantSpeakerSignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedDominantSpeakerSignaling',\n    value: function _setupDataTransportBackedDominantSpeakerSignaling(id) {\n      var _this7 = this;\n\n      this._teardownDominantSpeakerSignaling();\n      var dominantSpeakerSignalingPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this7._dominantSpeakerSignalingPromise !== dominantSpeakerSignalingPromise) {\n          // NOTE(mroberts): _teardownDominantSpeakerSignaling was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this7._teardownDominantSpeakerSignaling();\n        });\n\n        var dominantSpeakerSignaling = new _this7._DominantSpeakerSignaling(receiver.toDataTransport());\n        _this7._setDominantSpeakerSignaling(dominantSpeakerSignaling);\n      });\n      this._dominantSpeakerSignalingPromise = dominantSpeakerSignalingPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link NetworkQualityMonitor}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link NetworkQualitySignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedNetworkQualityMonitor',\n    value: function _setupDataTransportBackedNetworkQualityMonitor(id) {\n      var _this8 = this;\n\n      var self = this;\n      this._teardownNetworkQualityMonitor();\n      var networkQualityMonitorPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this8._networkQualityMonitorPromise !== networkQualityMonitorPromise) {\n          // NOTE(mroberts): _teardownNetworkQualityMonitor was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and new a RTCDataChannel is created in order\n        // to resume exchanging Network Quality messages.\n        receiver.once('close', function () {\n          return _this8._teardownNetworkQualityMonitor();\n        });\n\n        var networkQualitySignaling = new _this8._NetworkQualitySignaling(receiver.toDataTransport(), self._networkQualityConfiguration);\n        var networkQualityMonitor = new _this8._NetworkQualityMonitor(_this8._peerConnectionManager, networkQualitySignaling);\n        _this8._setNetworkQualityMonitor(networkQualityMonitor);\n      });\n      this._networkQualityMonitorPromise = networkQualityMonitorPromise;\n    }\n  }, {\n    key: '_setDominantSpeakerSignaling',\n    value: function _setDominantSpeakerSignaling(dominantSpeakerSignaling) {\n      var _this9 = this;\n\n      this._dominantSpeakerSignaling = dominantSpeakerSignaling;\n      dominantSpeakerSignaling.on('updated', function () {\n        return _this9.setDominantSpeaker(dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_setNetworkQualityMonitor',\n    value: function _setNetworkQualityMonitor(networkQualityMonitor) {\n      var _this10 = this;\n\n      this._networkQualityMonitor = networkQualityMonitor;\n      networkQualityMonitor.on('updated', function () {\n        if (_this10.iceConnectionState === 'failed') {\n          return;\n        }\n        _this10.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n        _this10.participants.forEach(function (participant) {\n          var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n          if (levels) {\n            participant.setNetworkQualityLevel(levels.level, levels);\n          }\n        });\n      });\n      networkQualityMonitor.start();\n    }\n  }, {\n    key: '_teardownDominantSpeakerSignaling',\n    value: function _teardownDominantSpeakerSignaling() {\n      this._dominantSpeakerSignalingPromise = null;\n      this._dominantSpeakerSignaling = null;\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      this._networkQualityMonitorPromise = null;\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n        this._networkQualityMonitor = null;\n      }\n    }\n  }, {\n    key: '_teardownTrackPrioritySignaling',\n    value: function _teardownTrackPrioritySignaling() {\n      this._trackPrioritySignaling = null;\n      this._trackPriorityPromise = null;\n      this.localParticipant.setTrackPrioritySignaling(null);\n      this.participants.forEach(function (participant) {\n        participant.setTrackPrioritySignaling(null);\n      });\n    }\n  }, {\n    key: '_teardownTrackSwitchOff',\n    value: function _teardownTrackSwitchOff() {\n      this._trackSwitchOffSignaling = null;\n      this._trackSwitchOffPromise = null;\n    }\n\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this11 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this11, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this11, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, { trackSid: trackSid })].concat(trackStats) : trackStats;\n  }, []);\n}\n\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n      transport.removeListener('stateChanged', stateChanged);\n    }\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var oddPublishCount = false;\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      oddPublishCount = !oddPublishCount;\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add zeros to properties that do not exist.\n        var report = new StatsReport(id, response, true /* prepareForInsights */);\n\n        transport.publishEvent('quality', 'stats-report', {\n          audioTrackStats: report.remoteAudioTrackStats,\n          localAudioTrackStats: report.localAudioTrackStats,\n          localVideoTrackStats: report.localVideoTrackStats,\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats\n        });\n\n        if (oddPublishCount) {\n          // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n          // payload are assigned default values until the Insights gateway\n          // accepts null values.\n          var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n\n          transport.publishEvent('quality', 'active-ice-candidate-pair', activeIceCandidatePair);\n        }\n      });\n    }, function () {\n      // Do nothing.\n    });\n  }, intervalMs);\n\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    relayProtocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/room.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/trackprioritysignaling.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/trackprioritysignaling.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TrackPrioritySignaling = function () {\n  /**\n   * Construct a {@link TrackPrioritySignaling}.\n   * @param {MediaSignalingTransport} mediaSignalingTransport\n   */\n  function TrackPrioritySignaling(mediaSignalingTransport) {\n    _classCallCheck(this, TrackPrioritySignaling);\n\n    Object.defineProperties(this, {\n      _mediaSignalingTransport: {\n        value: mediaSignalingTransport\n      }\n    });\n  }\n\n  /**\n   * @param {Track.SID} trackSid\n   * @param {'publish'|'subscribe'} publishOrSubscribe\n   * @param {Track.Priority} priority\n   */\n\n\n  _createClass(TrackPrioritySignaling, [{\n    key: 'sendTrackPriorityUpdate',\n    value: function sendTrackPriorityUpdate(trackSid, publishOrSubscribe, priority) {\n      this._mediaSignalingTransport.publish(_defineProperty({\n        type: 'track_priority',\n        track: trackSid\n      }, publishOrSubscribe, priority));\n    }\n  }]);\n\n  return TrackPrioritySignaling;\n}();\n\nmodule.exports = TrackPrioritySignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvdHJhY2twcmlvcml0eXNpZ25hbGluZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3NpZ25hbGluZy92Mi90cmFja3ByaW9yaXR5c2lnbmFsaW5nLmpzPzUyNmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgVHJhY2tQcmlvcml0eVNpZ25hbGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBUcmFja1ByaW9yaXR5U2lnbmFsaW5nfS5cbiAgICogQHBhcmFtIHtNZWRpYVNpZ25hbGluZ1RyYW5zcG9ydH0gbWVkaWFTaWduYWxpbmdUcmFuc3BvcnRcbiAgICovXG4gIGZ1bmN0aW9uIFRyYWNrUHJpb3JpdHlTaWduYWxpbmcobWVkaWFTaWduYWxpbmdUcmFuc3BvcnQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhY2tQcmlvcml0eVNpZ25hbGluZyk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfbWVkaWFTaWduYWxpbmdUcmFuc3BvcnQ6IHtcbiAgICAgICAgdmFsdWU6IG1lZGlhU2lnbmFsaW5nVHJhbnNwb3J0XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUcmFjay5TSUR9IHRyYWNrU2lkXG4gICAqIEBwYXJhbSB7J3B1Ymxpc2gnfCdzdWJzY3JpYmUnfSBwdWJsaXNoT3JTdWJzY3JpYmVcbiAgICogQHBhcmFtIHtUcmFjay5Qcmlvcml0eX0gcHJpb3JpdHlcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoVHJhY2tQcmlvcml0eVNpZ25hbGluZywgW3tcbiAgICBrZXk6ICdzZW5kVHJhY2tQcmlvcml0eVVwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRUcmFja1ByaW9yaXR5VXBkYXRlKHRyYWNrU2lkLCBwdWJsaXNoT3JTdWJzY3JpYmUsIHByaW9yaXR5KSB7XG4gICAgICB0aGlzLl9tZWRpYVNpZ25hbGluZ1RyYW5zcG9ydC5wdWJsaXNoKF9kZWZpbmVQcm9wZXJ0eSh7XG4gICAgICAgIHR5cGU6ICd0cmFja19wcmlvcml0eScsXG4gICAgICAgIHRyYWNrOiB0cmFja1NpZFxuICAgICAgfSwgcHVibGlzaE9yU3Vic2NyaWJlLCBwcmlvcml0eSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUcmFja1ByaW9yaXR5U2lnbmFsaW5nO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYWNrUHJpb3JpdHlTaWduYWxpbmc7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/trackprioritysignaling.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/trackswitchoffsignaling.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/trackswitchoffsignaling.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\n/**\n * @emits TrackSwitchOffSignalinging#updated\n */\n\n\nvar TrackSwitchOffSignaling = function (_EventEmitter) {\n  _inherits(TrackSwitchOffSignaling, _EventEmitter);\n\n  /**\n   * Construct a {@link TrackSwitchOffSignaling}.\n   * @param {MediaSignalingTransport} mediaSignalingTransport\n   */\n  function TrackSwitchOffSignaling(mediaSignalingTransport) {\n    _classCallCheck(this, TrackSwitchOffSignaling);\n\n    var _this = _possibleConstructorReturn(this, (TrackSwitchOffSignaling.__proto__ || Object.getPrototypeOf(TrackSwitchOffSignaling)).call(this));\n\n    mediaSignalingTransport.on('message', function (message) {\n      switch (message.type) {\n        case 'track_switch_off':\n          _this._setTrackSwitchOffUpdates(message.off || [], message.on || []);\n          break;\n        default:\n          break;\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * @private\n   * @param {[Track.SID]} tracksSwitchedOff\n   * @param {[Track.SID]} tracksSwitchedOn\n   * @returns {void}\n   */\n\n\n  _createClass(TrackSwitchOffSignaling, [{\n    key: '_setTrackSwitchOffUpdates',\n    value: function _setTrackSwitchOffUpdates(tracksSwitchedOff, tracksSwitchedOn) {\n      this.emit('updated', tracksSwitchedOff, tracksSwitchedOn);\n    }\n  }]);\n\n  return TrackSwitchOffSignaling;\n}(EventEmitter);\n\n/**\n * @event TrackSwitchOffSignaling#updated\n */\n\nmodule.exports = TrackSwitchOffSignaling;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvdHJhY2tzd2l0Y2hvZmZzaWduYWxpbmcuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zaWduYWxpbmcvdjIvdHJhY2tzd2l0Y2hvZmZzaWduYWxpbmcuanM/OWFlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgRXZlbnRFbWl0dGVyID0gX3JlcXVpcmUuRXZlbnRFbWl0dGVyO1xuXG4vKipcbiAqIEBlbWl0cyBUcmFja1N3aXRjaE9mZlNpZ25hbGluZ2luZyN1cGRhdGVkXG4gKi9cblxuXG52YXIgVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmd9LlxuICAgKiBAcGFyYW0ge01lZGlhU2lnbmFsaW5nVHJhbnNwb3J0fSBtZWRpYVNpZ25hbGluZ1RyYW5zcG9ydFxuICAgKi9cbiAgZnVuY3Rpb24gVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcobWVkaWFTaWduYWxpbmdUcmFuc3BvcnQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFRyYWNrU3dpdGNoT2ZmU2lnbmFsaW5nLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcpKS5jYWxsKHRoaXMpKTtcblxuICAgIG1lZGlhU2lnbmFsaW5nVHJhbnNwb3J0Lm9uKCdtZXNzYWdlJywgZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICAgIHN3aXRjaCAobWVzc2FnZS50eXBlKSB7XG4gICAgICAgIGNhc2UgJ3RyYWNrX3N3aXRjaF9vZmYnOlxuICAgICAgICAgIF90aGlzLl9zZXRUcmFja1N3aXRjaE9mZlVwZGF0ZXMobWVzc2FnZS5vZmYgfHwgW10sIG1lc3NhZ2Uub24gfHwgW10pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge1tUcmFjay5TSURdfSB0cmFja3NTd2l0Y2hlZE9mZlxuICAgKiBAcGFyYW0ge1tUcmFjay5TSURdfSB0cmFja3NTd2l0Y2hlZE9uXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhUcmFja1N3aXRjaE9mZlNpZ25hbGluZywgW3tcbiAgICBrZXk6ICdfc2V0VHJhY2tTd2l0Y2hPZmZVcGRhdGVzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3NldFRyYWNrU3dpdGNoT2ZmVXBkYXRlcyh0cmFja3NTd2l0Y2hlZE9mZiwgdHJhY2tzU3dpdGNoZWRPbikge1xuICAgICAgdGhpcy5lbWl0KCd1cGRhdGVkJywgdHJhY2tzU3dpdGNoZWRPZmYsIHRyYWNrc1N3aXRjaGVkT24pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUcmFja1N3aXRjaE9mZlNpZ25hbGluZztcbn0oRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBAZXZlbnQgVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmcjdXBkYXRlZFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gVHJhY2tTd2l0Y2hPZmZTaWduYWxpbmc7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/trackswitchoffsignaling.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/signaling/v2/twilioconnectiontransport.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/signaling/v2/twilioconnectiontransport.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc/lib/util/sdp */ \"./node_modules/@twilio/webrtc/lib/util/sdp.js\"),\n    getSdpFormat = _require.getSdpFormat;\n\nvar packageInfo = __webpack_require__(/*! ../../../package.json */ \"./node_modules/twilio-video/package.json\");\nvar InsightsPublisher = __webpack_require__(/*! ../../util/insightspublisher */ \"./node_modules/twilio-video/es5/util/insightspublisher/index.js\");\nvar NullInsightsPublisher = __webpack_require__(/*! ../../util/insightspublisher/null */ \"./node_modules/twilio-video/es5/util/insightspublisher/null.js\");\nvar StateMachine = __webpack_require__(/*! ../../statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\nvar TwilioConnection = __webpack_require__(/*! ../../twilioconnection */ \"./node_modules/twilio-video/es5/twilioconnection.js\");\nvar DefaultBackoff = __webpack_require__(/*! backoff */ \"./node_modules/backoff/index.js\");\n\nvar _require2 = __webpack_require__(/*! ../../util/constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    reconnectBackoffConfig = _require2.reconnectBackoffConfig;\n\nvar Timeout = __webpack_require__(/*! ../../util/timeout */ \"./node_modules/twilio-video/es5/util/timeout.js\");\n\nvar _require3 = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    createBandwidthProfilePayload = _require3.createBandwidthProfilePayload,\n    createMediaSignalingPayload = _require3.createMediaSignalingPayload,\n    createSubscribePayload = _require3.createSubscribePayload,\n    getUserAgent = _require3.getUserAgent;\n\nvar _require4 = __webpack_require__(/*! ../../util/twilio-video-errors */ \"./node_modules/twilio-video/es5/util/twilio-video-errors.js\"),\n    createTwilioError = _require4.createTwilioError,\n    RoomCompletedError = _require4.RoomCompletedError,\n    SignalingConnectionError = _require4.SignalingConnectionError,\n    SignalingServerBusyError = _require4.SignalingServerBusyError;\n\nvar ICE_VERSION = 1;\nvar RSP_VERSION = 2;\nvar SDK_NAME = packageInfo.name + '.js';\nvar SDK_VERSION = packageInfo.version;\n\n/*\nTwilioConnectionTransport States\n----------------\n\n                      +-----------+\n                      |           |\n                      |  syncing  |---------+\n                      |           |         |\n                      +-----------+         |\n                         ^     |            |\n                         |     |            |\n                         |     v            v\n    +------------+    +-----------+    +--------------+\n    |            |    |           |    |              |\n    | connecting |--->| connected |--->| disconnected |\n    |            |    |           |    |              |\n    +------------+    +-----------+    +--------------+\n             |                              ^\n             |                              |\n             |                              |\n             +------------------------------+\n\n*/\n\nvar states = {\n  connecting: ['connected', 'disconnected'],\n  connected: ['disconnected', 'syncing'],\n  syncing: ['connected', 'disconnected'],\n  disconnected: []\n};\n\n/**\n * A {@link TwilioConnectionTransport} supports sending and receiving Room Signaling Protocol\n * (RSP) messages. It also supports RSP requests, such as Sync and Disconnect.\n * @extends StateMachine\n * @emits TwilioConnectionTransport#connected\n * @emits TwilioConnectionTransport#message\n */\n\nvar TwilioConnectionTransport = function (_StateMachine) {\n  _inherits(TwilioConnectionTransport, _StateMachine);\n\n  /**\n   * Construct a {@link TwilioConnectionTransport}.\n   * @param {?string} name\n   * @param {string} accessToken\n   * @param {ParticipantSignaling} localParticipant\n   * @param {PeerConnectionManager} peerConnectionManager\n   * @param {string} wsServer\n   * @param {object} [options]\n   */\n  function TwilioConnectionTransport(name, accessToken, localParticipant, peerConnectionManager, wsServer, options) {\n    _classCallCheck(this, TwilioConnectionTransport);\n\n    options = Object.assign({\n      Backoff: DefaultBackoff,\n      InsightsPublisher: InsightsPublisher,\n      NullInsightsPublisher: NullInsightsPublisher,\n      TwilioConnection: TwilioConnection,\n      iceServers: null,\n      sdpFormat: getSdpFormat(options.sdpSemantics),\n      trackPriority: true,\n      trackSwitchOff: true,\n      userAgent: getUserAgent()\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (TwilioConnectionTransport.__proto__ || Object.getPrototypeOf(TwilioConnectionTransport)).call(this, 'connecting', states));\n\n    var eventPublisherOptions = {};\n    if (options.wsServerInsights) {\n      eventPublisherOptions.gateway = options.wsServerInsights;\n    }\n\n    var EventPublisher = options.insights ? options.InsightsPublisher : options.NullInsightsPublisher;\n    Object.defineProperties(_this, {\n      _accessToken: {\n        value: accessToken\n      },\n      _automaticSubscription: {\n        value: options.automaticSubscription\n      },\n      _bandwidthProfile: {\n        value: options.bandwidthProfile\n      },\n      _dominantSpeaker: {\n        value: options.dominantSpeaker\n      },\n      _eventPublisher: {\n        value: new EventPublisher(accessToken, SDK_NAME, SDK_VERSION, options.environment, options.realm, eventPublisherOptions)\n      },\n      _iceServersStatus: {\n        value: Array.isArray(options.iceServers) ? 'overrode' : 'acquire'\n      },\n      _localParticipant: {\n        value: localParticipant\n      },\n      _name: {\n        value: name\n      },\n      _networkQuality: {\n        value: options.networkQuality\n      },\n      _options: {\n        value: options\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _sessionTimer: {\n        value: null,\n        writable: true\n      },\n      _sessionTimeoutMS: {\n        value: 0, // initially 0, set only after 1st successful connection.\n        writable: true\n      },\n      _reconnectBackoff: {\n        value: options.Backoff.exponential(reconnectBackoffConfig)\n      },\n      _session: {\n        value: null,\n        writable: true\n      },\n      _trackPriority: {\n        value: options.trackPriority\n      },\n      _trackSwitchOff: {\n        value: options.trackSwitchOff\n      },\n      _twilioConnection: {\n        value: null,\n        writable: true\n      },\n      _updatesReceived: {\n        value: []\n      },\n      _updatesToSend: {\n        value: []\n      },\n      _userAgent: {\n        value: options.userAgent\n      },\n      _wsServer: {\n        value: wsServer\n      }\n    });\n    setupTransport(_this);\n\n    _this.once('connected', function (_ref) {\n      var sid = _ref.sid,\n          participant = _ref.participant;\n\n      _this._eventPublisher.connect(sid, participant.sid);\n    });\n    return _this;\n  }\n\n  /**\n   * Create a Connect, Sync or Disconnect RSP message.\n   * @private\n   * @returns {?object}\n   */\n\n\n  _createClass(TwilioConnectionTransport, [{\n    key: '_createConnectOrSyncOrDisconnectMessage',\n    value: function _createConnectOrSyncOrDisconnectMessage() {\n      if (this.state === 'connected') {\n        return null;\n      }\n\n      if (this.state === 'disconnected') {\n        return {\n          session: this._session,\n          type: 'disconnect',\n          version: RSP_VERSION\n        };\n      }\n\n      var type = {\n        connecting: 'connect',\n        syncing: 'sync'\n      }[this.state];\n\n      var message = {\n        name: this._name,\n        participant: this._localParticipant.getState(),\n        peer_connections: this._peerConnectionManager.getStates(),\n        type: type,\n        version: RSP_VERSION\n      };\n\n      if (message.type === 'connect') {\n        message.ice_servers = this._iceServersStatus;\n\n        message.publisher = {\n          name: SDK_NAME,\n          sdk_version: SDK_VERSION,\n          user_agent: this._userAgent\n        };\n\n        if (this._bandwidthProfile) {\n          message.bandwidth_profile = createBandwidthProfilePayload(this._bandwidthProfile);\n        }\n\n        message.media_signaling = createMediaSignalingPayload(this._dominantSpeaker, this._networkQuality, this._trackPriority, this._trackSwitchOff);\n\n        message.subscribe = createSubscribePayload(this._automaticSubscription);\n\n        var sdpFormat = this._options.sdpFormat;\n        if (sdpFormat) {\n          message.format = sdpFormat;\n        }\n        message.token = this._accessToken;\n      } else if (message.type === 'sync') {\n        message.session = this._session;\n        message.token = this._accessToken;\n      } else if (message.type === 'update') {\n        message.session = this._session;\n      }\n\n      return message;\n    }\n\n    /**\n     * Create an \"ice\" message.\n     * @private\n     */\n\n  }, {\n    key: '_createIceMessage',\n    value: function _createIceMessage() {\n      return {\n        edge: 'roaming', // roaming here means use same edge as signaling.\n        token: this._accessToken,\n        type: 'ice',\n        version: ICE_VERSION\n      };\n    }\n\n    /**\n     * Send a Connect, Sync or Disconnect RSP message.\n     * @private\n     */\n\n  }, {\n    key: '_sendConnectOrSyncOrDisconnectMessage',\n    value: function _sendConnectOrSyncOrDisconnectMessage() {\n      var message = this._createConnectOrSyncOrDisconnectMessage();\n      if (message) {\n        this._twilioConnection.sendMessage(message);\n      }\n    }\n\n    /**\n     * Disconnect the {@link TwilioConnectionTransport}. Returns true if calling the method resulted\n     * in disconnection.\n     * @param {TwilioError} [error]\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect(error) {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected', null, [error]);\n        this._sendConnectOrSyncOrDisconnectMessage();\n        this._twilioConnection.close();\n        this._eventPublisher.disconnect();\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Publish an RSP Update. Returns true if calling the method resulted in\n     * publishing (or eventually publishing) the update.\n     * @param {object} update\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(update) {\n      switch (this.state) {\n        case 'connected':\n          this._twilioConnection.sendMessage(Object.assign({\n            session: this._session,\n            type: 'update',\n            version: RSP_VERSION\n          }, update));\n          return true;\n        case 'connecting':\n        case 'syncing':\n          this._updatesToSend.push(update);\n          return true;\n        case 'disconnected':\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Publish (or queue) an event to the Insights gateway.\n     * @param {string} groupName - Event group name\n     * @param {string} eventName - Event name\n     * @param {object} payload - Event payload\n     * @returns {boolean} true if queued or published, false if disconnected from the Insights gateway\n     */\n\n  }, {\n    key: 'publishEvent',\n    value: function publishEvent(groupName, eventName, payload) {\n      return this._eventPublisher.publish(groupName, eventName, payload);\n    }\n\n    /**\n     * Sync the {@link TwilioConnectionTransport}. Returns true if calling the method resulted in\n     * syncing.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'sync',\n    value: function sync() {\n      if (this.state === 'connected') {\n        this.preempt('syncing');\n        this._sendConnectOrSyncOrDisconnectMessage();\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_setSession',\n    value: function _setSession(session, sessionTimeout) {\n      this._session = session;\n      this._sessionTimeoutMS = sessionTimeout * 1000;\n    }\n\n    /**\n     * Determines if we should attempt reconnect.\n     * returns a Promise to wait on before attempting to\n     * reconnect. returns null if its not okay to reconnect.\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_getReconnectTimer',\n    value: function _getReconnectTimer() {\n      var _this2 = this;\n\n      if (this._sessionTimeoutMS === 0) {\n        // this means either we have never connected.\n        // or we timed out while trying to reconnect\n        // In either case we do not want to reconnect.\n        return null;\n      }\n\n      // start session timer\n      if (!this._sessionTimer) {\n        this._sessionTimer = new Timeout(function () {\n          // ensure that _clearReconnectTimer wasn't\n          // called while we were waiting.\n          if (_this2._sessionTimer) {\n            // do not allow any more reconnect attempts.\n            _this2._sessionTimeoutMS = 0;\n          }\n        }, this._sessionTimeoutMS);\n      }\n\n      // return promise that waits with exponential backoff.\n      return new Promise(function (resolve) {\n        _this2._reconnectBackoff.once('ready', resolve);\n        _this2._reconnectBackoff.backoff();\n      });\n    }\n\n    /**\n     * clears the session reconnect timer.\n     *\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_clearReconnectTimer',\n    value: function _clearReconnectTimer() {\n      this._reconnectBackoff.reset();\n      if (this._sessionTimer) {\n        this._sessionTimer.clear();\n        this._sessionTimer = null;\n      }\n    }\n  }]);\n\n  return TwilioConnectionTransport;\n}(StateMachine);\n\n/**\n * @event TwilioConnectionTransport#connected\n * @param {object} initialState\n */\n\n/**\n * @event TwilioConnectionTransport#message\n * @param {object} peerConnections\n */\n\nfunction reducePeerConnections(peerConnections) {\n  return Array.from(peerConnections.reduce(function (peerConnectionsById, update) {\n    var reduced = peerConnectionsById.get(update.id) || update;\n\n    // First, reduce the top-level `description` property.\n    if (!reduced.description && update.description) {\n      reduced.description = update.description;\n    } else if (reduced.description && update.description) {\n      if (update.description.revision > reduced.description.revision) {\n        reduced.description = update.description;\n      }\n    }\n\n    // Then, reduce the top-level `ice` property.\n    if (!reduced.ice && update.ice) {\n      reduced.ice = update.ice;\n    } else if (reduced.ice && update.ice) {\n      if (update.ice.revision > reduced.ice.revision) {\n        reduced.ice = update.ice;\n      }\n    }\n\n    // Finally, update the map.\n    peerConnectionsById.set(reduced.id, reduced);\n    return peerConnectionsById;\n  }, new Map()).values());\n}\n\nfunction reduceUpdates(updates) {\n  return updates.reduce(function (reduced, update) {\n    // First, reduce the top-level `participant` property.\n    if (!reduced.participant && update.participant) {\n      reduced.participant = update.participant;\n    } else if (reduced.participant && update.participant) {\n      if (update.participant.revision > reduced.participant.revision) {\n        reduced.participant = update.participant;\n      }\n    }\n\n    // Then, reduce the top-level `peer_connections` property.\n    /* eslint camelcase:0 */\n    if (!reduced.peer_connections && update.peer_connections) {\n      reduced.peer_connections = reducePeerConnections(update.peer_connections);\n    } else if (reduced.peer_connections && update.peer_connections) {\n      reduced.peer_connections = reducePeerConnections(reduced.peer_connections.concat(update.peer_connections));\n    }\n    return reduced;\n  }, {});\n}\n\nfunction setupTransport(transport) {\n  function createOrResetTwilioConnection() {\n    if (transport.state === 'disconnected') {\n      return;\n    }\n    if (transport._twilioConnection) {\n      transport._twilioConnection.removeListener('message', handleMessage);\n    }\n    var _iceServersStatus = transport._iceServersStatus,\n        _options = transport._options,\n        _wsServer = transport._wsServer,\n        state = transport.state;\n    var TwilioConnection = _options.TwilioConnection;\n\n\n    var twilioConnection = new TwilioConnection(_wsServer, Object.assign({\n      helloBody: state === 'connecting' && _iceServersStatus === 'acquire' ? transport._createIceMessage() : transport._createConnectOrSyncOrDisconnectMessage()\n    }, _options));\n\n    twilioConnection.once('close', function (reason) {\n      if (reason === TwilioConnection.CloseReason.LOCAL) {\n        disconnect();\n      } else {\n        disconnect(new Error(reason));\n      }\n    });\n\n    twilioConnection.on('message', handleMessage);\n    transport._twilioConnection = twilioConnection;\n  }\n\n  function disconnect(error) {\n    if (transport.state === 'disconnected') {\n      return;\n    }\n    if (!error) {\n      transport.disconnect();\n      return;\n    }\n\n    var reconnectTimer = transport._getReconnectTimer();\n    if (!reconnectTimer) {\n      var twilioError = error.message === TwilioConnection.CloseReason.BUSY ? new SignalingServerBusyError() : new SignalingConnectionError();\n      transport.disconnect(twilioError);\n      return;\n    }\n\n    if (transport.state === 'connected') {\n      transport.preempt('syncing');\n    }\n\n    reconnectTimer.then(createOrResetTwilioConnection);\n  }\n\n  function handleMessage(message) {\n    if (transport.state === 'disconnected') {\n      return;\n    }\n    if (message.type === 'error') {\n      transport.disconnect(createTwilioError(message.code, message.message));\n      return;\n    }\n    switch (transport.state) {\n      case 'connected':\n        switch (message.type) {\n          case 'connected':\n          case 'synced':\n          case 'update':\n            transport.emit('message', message);\n            return;\n          case 'disconnected':\n            transport.disconnect(message.status === 'completed' ? new RoomCompletedError() : null);\n            return;\n          default:\n            // Do nothing.\n            return;\n        }\n      case 'connecting':\n        switch (message.type) {\n          case 'iced':\n            transport._options.onIced(message.ice_servers).then(function () {\n              transport._sendConnectOrSyncOrDisconnectMessage();\n            });\n            return;\n          case 'connected':\n            transport._setSession(message.session, message.options.session_timeout);\n            transport.emit('connected', message);\n            transport.preempt('connected');\n            return;\n          case 'synced':\n          case 'update':\n            transport._updatesReceived.push(message);\n            return;\n          case 'disconnected':\n            transport.disconnect(message.status === 'completed' ? new RoomCompletedError() : null);\n            return;\n          default:\n            // Do nothing.\n            return;\n        }\n      case 'syncing':\n        switch (message.type) {\n          case 'connected':\n          case 'update':\n            transport._updatesReceived.push(message);\n            return;\n          case 'synced':\n            transport._clearReconnectTimer();\n            transport.emit('message', message);\n            transport.preempt('connected');\n            return;\n          case 'disconnected':\n            transport.disconnect(message.status === 'completed' ? new RoomCompletedError() : null);\n            return;\n          default:\n            // Do nothing.\n            return;\n        }\n      default:\n        // Impossible\n        return;\n    }\n  }\n\n  transport.on('stateChanged', function stateChanged(state) {\n    switch (state) {\n      case 'connected':\n        {\n          var updates = transport._updatesToSend.splice(0);\n          if (updates.length) {\n            transport.publish(reduceUpdates(updates));\n          }\n          transport._updatesReceived.splice(0).forEach(function (update) {\n            return transport.emit('message', update);\n          });\n          return;\n        }\n      case 'disconnected':\n        transport._twilioConnection.removeListener('message', handleMessage);\n        transport.removeListener('stateChanged', stateChanged);\n        return;\n      case 'syncing':\n        // Do nothing.\n        return;\n      default:\n        // Impossible\n        return;\n    }\n  });\n\n  var _options = transport._options,\n      _iceServersStatus = transport._iceServersStatus;\n  var iceServers = _options.iceServers,\n      onIced = _options.onIced;\n\n\n  if (_iceServersStatus === 'overrode') {\n    onIced(iceServers).then(createOrResetTwilioConnection);\n  } else {\n    createOrResetTwilioConnection();\n  }\n}\n\nmodule.exports = TwilioConnectionTransport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/signaling/v2/twilioconnectiontransport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/statemachine.js":
/*!*******************************************************!*\
  !*** ./node_modules/twilio-video/es5/statemachine.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\");\n\n/**\n * {@link StateMachine} represents a state machine. The state machine supports a\n * reentrant locking mechanism to allow asynchronous state transitions to ensure\n * they have not been preempted. Calls to {@link StateMachine#takeLock} are\n * guaranteed to be resolved in FIFO order.\n * @extends EventEmitter\n * @property {boolean} isLocked - whether or not the {@link StateMachine} is\n *   locked performing asynchronous state transition\n * @property {string} state - the current state\n * @emits {@link StateMachine#stateChanged}\n */\n\nvar StateMachine = function (_EventEmitter) {\n  _inherits(StateMachine, _EventEmitter);\n\n  /**\n   * Construct a {@link StateMachine}.\n   * @param {string} initialState - the intiial state\n   * @param {object} states\n   */\n  function StateMachine(initialState, states) {\n    _classCallCheck(this, StateMachine);\n\n    var _this = _possibleConstructorReturn(this, (StateMachine.__proto__ || Object.getPrototypeOf(StateMachine)).call(this));\n\n    var lock = null;\n    var state = initialState;\n    states = transformStates(states);\n    Object.defineProperties(_this, {\n      _lock: {\n        get: function get() {\n          return lock;\n        },\n        set: function set(_lock) {\n          lock = _lock;\n        }\n      },\n      _reachableStates: {\n        value: reachable(states)\n      },\n      _state: {\n        get: function get() {\n          return state;\n        },\n        set: function set(_state) {\n          state = _state;\n        }\n      },\n      _states: {\n        value: states\n      },\n      _whenDeferreds: {\n        value: new Set()\n      },\n      isLocked: {\n        enumerable: true,\n        get: function get() {\n          return lock !== null;\n        }\n      },\n      state: {\n        enumerable: true,\n        get: function get() {\n          return state;\n        }\n      }\n    });\n\n    _this.on('stateChanged', function (state) {\n      _this._whenDeferreds.forEach(function (deferred) {\n        deferred.when(state, deferred.resolve, deferred.reject);\n      });\n    });\n    return _this;\n  }\n\n  /**\n   * Returns a promise whose executor function is called on each state change.\n   * @param {function(state: string, resolve: function, reject: function): void} when\n   * @returns {Promise.<*>}\n   * @private\n   */\n\n\n  _createClass(StateMachine, [{\n    key: '_whenPromise',\n    value: function _whenPromise(when) {\n      var _this2 = this;\n\n      if (typeof when !== 'function') {\n        return Promise.reject(new Error('when() executor must be a function'));\n      }\n\n      var deferred = util.defer();\n\n      deferred.when = when;\n      this._whenDeferreds.add(deferred);\n\n      return deferred.promise.then(function (payload) {\n        _this2._whenDeferreds.delete(deferred);\n        return payload;\n      }, function (error) {\n        _this2._whenDeferreds.delete(deferred);\n        throw error;\n      });\n    }\n\n    /**\n     * This method takes a lock and passes the {@link StateMachine#Key} to your\n     * transition function. You may perform zero or more state transitions in your\n     * transition function, but you should check for preemption in each tick. You\n     * may also reenter the lock. Once the Promise returned by your transition\n     * function resolves or rejects, this method releases the lock it acquired for\n     * you.\n     * @param {string} name - a name for the lock\n     * @param {function(StateMachine#Key): Promise} transitionFunction\n     * @returns {Promise}\n     */\n    // NOTE(mroberts): This method is named after a Haskell function:\n    // https://hackage.haskell.org/package/base-4.8.2.0/docs/Control-Exception.html#v:bracket\n\n  }, {\n    key: 'bracket',\n    value: function bracket(name, transitionFunction) {\n      var key = void 0;\n      var self = this;\n\n      function releaseLock(error) {\n        if (self.hasLock(key)) {\n          self.releaseLockCompletely(key);\n        }\n        if (error) {\n          throw error;\n        }\n      }\n\n      return this.takeLock(name).then(function gotKey(_key) {\n        key = _key;\n        return transitionFunction(key);\n      }).then(function success(result) {\n        releaseLock();\n        return result;\n      }, releaseLock);\n    }\n\n    /**\n     * Check whether or not a {@link StateMachine#Key} matches the lock.\n     * @param {StateMachine#Key} key\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'hasLock',\n    value: function hasLock(key) {\n      return this._lock === key;\n    }\n\n    /**\n     * Preempt any pending state transitions and immediately transition to the new\n     * state. If a lock name is specified, take the lock and return the\n     * {@link StateMachine#Key}.\n     * @param {string} newState\n     * @param {?string} [name=null] - a name for the lock\n     * @param {Array<*>} [payload=[]]\n     * @returns {?StateMachine#Key}\n     */\n\n  }, {\n    key: 'preempt',\n    value: function preempt(newState, name, payload) {\n      // 1. Check that the new state is valid.\n      if (!isValidTransition(this._states, this.state, newState)) {\n        throw new Error('Cannot transition from \"' + this.state + '\" to \"' + newState + '\"');\n      }\n\n      // 2. Release the old lock, if any.\n      var oldLock = void 0;\n      if (this.isLocked) {\n        oldLock = this._lock;\n        this._lock = null;\n      }\n\n      // 3. Take the lock, if requested.\n      var key = null;\n      if (name) {\n        key = this.takeLockSync(name);\n      }\n\n      // 4. If a lock wasn't requested, take a \"preemption\" lock in order to\n      // maintain FIFO order of those taking locks.\n      var preemptionKey = key ? null : this.takeLockSync('preemption');\n\n      // 5. Transition.\n      this.transition(newState, key || preemptionKey, payload);\n\n      // 6. Preempt anyone blocked on the old lock.\n      if (oldLock) {\n        oldLock.resolve();\n      }\n\n      // 7. Release the \"preemption\" lock, if we took it.\n      if (preemptionKey) {\n        this.releaseLock(preemptionKey);\n      }\n\n      return key;\n    }\n\n    /**\n     * Release a lock. This method succeeds only if the {@link StateMachine} is\n     * still locked and has not been preempted.\n     * @param {StateMachine#Key} key\n     * @throws Error\n     */\n\n  }, {\n    key: 'releaseLock',\n    value: function releaseLock(key) {\n      if (!this.isLocked) {\n        throw new Error('Could not release the lock for ' + key.name + ' because the StateMachine is not locked');\n      } else if (!this.hasLock(key)) {\n        throw new Error('Could not release the lock for ' + key.name + ' because ' + this._lock.name + ' has the lock');\n      }\n      if (key.depth === 0) {\n        this._lock = null;\n        key.resolve();\n      } else {\n        key.depth--;\n      }\n    }\n\n    /**\n     * Release a lock completely, even if it has been reentered. This method\n     * succeeds only if the {@link StateMachine} is still locked and has not been\n     * preempted.\n     * @param {StateMachine#Key} key\n     * @throws Error\n     */\n\n  }, {\n    key: 'releaseLockCompletely',\n    value: function releaseLockCompletely(key) {\n      if (!this.isLocked) {\n        throw new Error('Could not release the lock for ' + key.name + ' because the StateMachine is not locked');\n      } else if (!this.hasLock(key)) {\n        throw new Error('Could not release the lock for ' + key.name + ' because ' + this._lock.name + ' has the lock');\n      }\n      key.depth = 0;\n      this._lock = null;\n      key.resolve();\n    }\n\n    /**\n     * Take a lock, returning a Promise for the {@link StateMachine#Key}. You should\n     * take a lock anytime you intend to perform asynchronous transitions. Calls to\n     * this method are guaranteed to be resolved in FIFO order. You may reenter\n     * a lock by passing its {@link StateMachine#Key}.\n     * @param {string|StateMachine#Key} nameOrKey - a name for the lock or an\n     * existing {@link StateMachine#Key}\n     * @returns {Promise<object>}\n     */\n\n  }, {\n    key: 'takeLock',\n    value: function takeLock(nameOrKey) {\n      var _this3 = this;\n\n      // Reentrant lock\n      if ((typeof nameOrKey === 'undefined' ? 'undefined' : _typeof(nameOrKey)) === 'object') {\n        var key = nameOrKey;\n        return new Promise(function (resolve) {\n          resolve(_this3.takeLockSync(key));\n        });\n      }\n\n      // New lock\n      var name = nameOrKey;\n      if (this.isLocked) {\n        var takeLock = this.takeLock.bind(this, name);\n        return this._lock.promise.then(takeLock);\n      }\n      return Promise.resolve(this.takeLockSync(name));\n    }\n\n    /**\n     * Take a lock, returning the {@Link StateMachine#Key}. This method throws if\n     * the {@link StateMachine} is locked or the wrong {@link StateMachine#Key} is\n     * provided. You may reenter a lock by passing its {@link StateMachine#Key}.\n     * @param {string|StateMachine#Key} nameOrKey - a name for the lock or an\n     * existing {@link StateMachine#Key}\n     * @returns {object}\n     * @throws Error\n     */\n\n  }, {\n    key: 'takeLockSync',\n    value: function takeLockSync(nameOrKey) {\n      var key = typeof nameOrKey === 'string' ? null : nameOrKey;\n      var name = key ? key.name : nameOrKey;\n\n      if (key && !this.hasLock(key) || !key && this.isLocked) {\n        throw new Error('Could not take the lock for ' + name + ' because the lock for ' + this._lock.name + ' was not released');\n      }\n\n      // Reentrant lock\n      if (key) {\n        key.depth++;\n        return key;\n      }\n\n      // New lock\n      var lock = makeLock(name);\n      this._lock = lock;\n      return lock;\n    }\n\n    /**\n     * Transition to a new state. If the {@link StateMachine} is locked, you must\n     * provide the {@link StateMachine#Key}. An invalid state or the wrong\n     * {@link StateMachine#Key} will throw an error.\n     * @param {string} newState\n     * @param {?StateMachine#Key} [key=null]\n     * @param {Array<*>} [payload=[]]\n     * @throws {Error}\n     */\n\n  }, {\n    key: 'transition',\n    value: function transition(newState, key, payload) {\n      payload = payload || [];\n\n      // 1. If we're locked, required the key.\n      if (this.isLocked) {\n        if (!key) {\n          throw new Error('You must provide the key in order to ' + 'transition');\n        } else if (!this.hasLock(key)) {\n          throw new Error('Could not transition using the key for ' + key.name + ' because ' + this._lock.name + ' has the lock');\n        }\n      } else if (key) {\n        throw new Error('Key provided for ' + key.name + ', but the StateMachine was not locked (possibly due to preemption)');\n      }\n\n      // 2. Check that the new state is valid.\n      if (!isValidTransition(this._states, this.state, newState)) {\n        throw new Error('Cannot transition from \"' + this.state + '\" to \"' + newState + '\"');\n      }\n\n      // 3. Update the state and emit an event.\n      this._state = newState;\n      this.emit.apply(this, _toConsumableArray(['stateChanged', newState].concat(payload)));\n    }\n\n    /**\n     * Attempt to transition to a new state. Unlike {@link StateMachine#transition},\n     * this method does not throw.\n     * @param {string} newState\n     * @param {?StateMachine#Key} [key=null]\n     * @param {Array<*>} [payload=[]]\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'tryTransition',\n    value: function tryTransition(newState, key, payload) {\n      try {\n        this.transition(newState, key, payload);\n      } catch (error) {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Return a Promise that resolves when the {@link StateMachine} transitions to\n     * the specified state. If the {@link StateMachine} transitions such that the\n     * requested state becomes unreachable, the Promise rejects.\n     * @param {string} state\n     * @returns {Promise<this>}\n     */\n\n  }, {\n    key: 'when',\n    value: function when(state) {\n      var _this4 = this;\n\n      if (this.state === state) {\n        return Promise.resolve(this);\n      } else if (!isValidTransition(this._reachableStates, this.state, state)) {\n        return Promise.reject(createUnreachableError(this.state, state));\n      }\n      return this._whenPromise(function (newState, resolve, reject) {\n        if (newState === state) {\n          resolve(_this4);\n        } else if (!isValidTransition(_this4._reachableStates, newState, state)) {\n          reject(createUnreachableError(newState, state));\n        }\n      });\n    }\n  }]);\n\n  return StateMachine;\n}(EventEmitter);\n\n/**\n * @event StateMachine#stateChanged\n * @param {string} newState\n */\n\n/**\n * Check if a transition is valid.\n * @private\n * @param {Map<*, Set<*>>} graph\n * @param {*} from\n * @param {*} to\n * @returns {boolean}\n */\n\n\nfunction isValidTransition(graph, from, to) {\n  return graph.get(from).has(to);\n}\n\n/**\n * @typedef {object} StateMachine#Key\n */\n\nfunction makeLock(name) {\n  var lock = util.defer();\n  lock.name = name;\n  lock.depth = 0;\n  return lock;\n}\n\n/**\n * Compute the transitive closure of a graph (i.e. what nodes are reachable from\n * where).\n * @private\n * @param {Map<*, Set<*>>} graph\n * @returns {Map<*, Set<*>>}\n */\nfunction reachable(graph) {\n  return Array.from(graph.keys()).reduce(function (newGraph, from) {\n    return newGraph.set(from, reachableFrom(graph, from));\n  }, new Map());\n}\n\n/**\n * Compute the Set of node reachable from a particular node in the graph.\n * @private\n * @param {Map<*, Set<*>>} graph\n * @param {*} from\n * @param {Set<*>} [to]\n * @returns {Set<*>}\n */\nfunction reachableFrom(graph, from, to) {\n  to = to || new Set();\n  graph.get(from).forEach(function (node) {\n    if (!to.has(node)) {\n      to.add(node);\n      reachableFrom(graph, node, to).forEach(to.add, to);\n    }\n  });\n  return to;\n}\n\nfunction transformStates(states) {\n  var newStates = new Map();\n  for (var key in states) {\n    newStates.set(key, new Set(states[key]));\n  }\n  return newStates;\n}\n\n/**\n * Create an \"unreachable state\" Error.\n * @param {string} here\n * @param {string} there\n * @returns {Error}\n */\nfunction createUnreachableError(here, there) {\n  return new Error('\"' + there + '\" cannot be reached from \"' + here + '\"');\n}\n\nmodule.exports = StateMachine;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/statemachine.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/average.js":
/*!********************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/average.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint no-undefined:0 */\n\n\n/**\n * @param {Array<number|undefined>} xs\n * @returns {number|undefined}\n */\n\nfunction average(xs) {\n  xs = xs.filter(function (x) {\n    return typeof x === 'number';\n  });\n  return xs.length < 1 ? undefined : xs.reduce(function (y, x) {\n    return x + y;\n  }) / xs.length;\n}\n\nmodule.exports = average;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9hdmVyYWdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvYXZlcmFnZS5qcz9lMjhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby11bmRlZmluZWQ6MCAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBwYXJhbSB7QXJyYXk8bnVtYmVyfHVuZGVmaW5lZD59IHhzXG4gKiBAcmV0dXJucyB7bnVtYmVyfHVuZGVmaW5lZH1cbiAqL1xuXG5mdW5jdGlvbiBhdmVyYWdlKHhzKSB7XG4gIHhzID0geHMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB4ID09PSAnbnVtYmVyJztcbiAgfSk7XG4gIHJldHVybiB4cy5sZW5ndGggPCAxID8gdW5kZWZpbmVkIDogeHMucmVkdWNlKGZ1bmN0aW9uICh5LCB4KSB7XG4gICAgcmV0dXJuIHggKyB5O1xuICB9KSAvIHhzLmxlbmd0aDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhdmVyYWdlOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/average.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/icereport.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/icereport.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IceReport = function () {\n  /**\n   * Construct an {@link IceReport}.\n   * @param {number} send - bps\n   * @param {number} recv - bps\n   * @param {number} [rtt] - s\n   * @param {number} [availableSend] - bps\n   */\n  function IceReport(send, recv, availableSend, rtt) {\n    _classCallCheck(this, IceReport);\n\n    Object.defineProperties(this, {\n      availableSend: {\n        enumerable: true,\n        value: availableSend\n      },\n      recv: {\n        enumerable: true,\n        value: recv\n      },\n      rtt: {\n        enumerable: true,\n        value: rtt\n      },\n      send: {\n        enumerable: true,\n        value: send\n      }\n    });\n  }\n\n  /**\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {IceReport}\n   */\n\n\n  _createClass(IceReport, null, [{\n    key: 'of',\n    value: function of(olderStats, newerStats) {\n      var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n      var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n      var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n      var send = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n      var recv = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n      var availableSend = newerStats.availableOutgoingBitrate,\n          rtt = newerStats.currentRoundTripTime;\n\n      return new IceReport(send, recv, availableSend, rtt);\n    }\n  }]);\n\n  return IceReport;\n}();\n\nmodule.exports = IceReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9pY2VyZXBvcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9pY2VyZXBvcnQuanM/NDkzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQHByb3BlcnR5IHtudW1iZXJ9IFthdmFpbGFibGVTZW5kXSAtIGJwcyAodW5kZWZpbmVkIGluIEZpcmVmb3gpXG4gKiBAcHJvcGVydHkge251bWJlcn0gcmVjdiAtIGJwc1xuICogQHByb3BlcnR5IHtudW1iZXJ9IFtydHRdIC0gcyAodW5kZWZpbmVkIGluIEZpcmVmb3gpXG4gKiBAcHJvcGVydHkge251bWJlcn0gc2VuZCAtIGJwc1xuICovXG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBJY2VSZXBvcnQgPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYW4ge0BsaW5rIEljZVJlcG9ydH0uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzZW5kIC0gYnBzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByZWN2IC0gYnBzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbcnR0XSAtIHNcbiAgICogQHBhcmFtIHtudW1iZXJ9IFthdmFpbGFibGVTZW5kXSAtIGJwc1xuICAgKi9cbiAgZnVuY3Rpb24gSWNlUmVwb3J0KHNlbmQsIHJlY3YsIGF2YWlsYWJsZVNlbmQsIHJ0dCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJY2VSZXBvcnQpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgYXZhaWxhYmxlU2VuZDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogYXZhaWxhYmxlU2VuZFxuICAgICAgfSxcbiAgICAgIHJlY3Y6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHJlY3ZcbiAgICAgIH0sXG4gICAgICBydHQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHJ0dFxuICAgICAgfSxcbiAgICAgIHNlbmQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHNlbmRcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1JUQ1N0YXRzfSBvbGRlclN0YXRzXG4gICAqIEBwYXJhbSB7UlRDU3RhdHN9IG5ld2VyU3RhdHNcbiAgICogQHJldHVybnMge0ljZVJlcG9ydH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSWNlUmVwb3J0LCBudWxsLCBbe1xuICAgIGtleTogJ29mJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb2Yob2xkZXJTdGF0cywgbmV3ZXJTdGF0cykge1xuICAgICAgdmFyIHNlY29uZHNFbGFwc2VkID0gKG5ld2VyU3RhdHMudGltZXN0YW1wIC0gb2xkZXJTdGF0cy50aW1lc3RhbXApIC8gMTAwMDtcbiAgICAgIHZhciBkZWx0YUJ5dGVzU2VudCA9IG5ld2VyU3RhdHMuYnl0ZXNTZW50IC0gb2xkZXJTdGF0cy5ieXRlc1NlbnQ7XG4gICAgICB2YXIgZGVsdGFCeXRlc1JlY2VpdmVkID0gbmV3ZXJTdGF0cy5ieXRlc1JlY2VpdmVkIC0gb2xkZXJTdGF0cy5ieXRlc1JlY2VpdmVkO1xuICAgICAgdmFyIHNlbmQgPSBzZWNvbmRzRWxhcHNlZCA+IDAgPyBkZWx0YUJ5dGVzU2VudCAvIHNlY29uZHNFbGFwc2VkICogOCA6IDA7XG4gICAgICB2YXIgcmVjdiA9IHNlY29uZHNFbGFwc2VkID4gMCA/IGRlbHRhQnl0ZXNSZWNlaXZlZCAvIHNlY29uZHNFbGFwc2VkICogOCA6IDA7XG4gICAgICB2YXIgYXZhaWxhYmxlU2VuZCA9IG5ld2VyU3RhdHMuYXZhaWxhYmxlT3V0Z29pbmdCaXRyYXRlLFxuICAgICAgICAgIHJ0dCA9IG5ld2VyU3RhdHMuY3VycmVudFJvdW5kVHJpcFRpbWU7XG5cbiAgICAgIHJldHVybiBuZXcgSWNlUmVwb3J0KHNlbmQsIHJlY3YsIGF2YWlsYWJsZVNlbmQsIHJ0dCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEljZVJlcG9ydDtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBJY2VSZXBvcnQ7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/icereport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/icereportfactory.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/icereportfactory.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IceReport = __webpack_require__(/*! ./icereport */ \"./node_modules/twilio-video/es5/stats/icereport.js\");\n\n/**\n * @property {IceReport} lastReport\n * @property {?RTCStats} lastStats\n */\n\nvar IceReportFactory = function () {\n  /**\n   * Construct an {@link IceReportFactory}.\n   */\n  function IceReportFactory() {\n    _classCallCheck(this, IceReportFactory);\n\n    Object.defineProperties(this, {\n      lastReport: {\n        enumerable: true,\n        value: new IceReport(0, 0),\n        writable: true\n      },\n      lastStats: {\n        enumerable: true,\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n   * Create an {@link IceReport}.\n   * @param {RTCStats} newerStats;\n   * @returns {IceReport}\n   */\n\n\n  _createClass(IceReportFactory, [{\n    key: 'next',\n    value: function next(newerStats) {\n      var olderStats = this.lastStats;\n      this.lastStats = newerStats;\n      if (olderStats) {\n        var report = olderStats.id === newerStats.id ? IceReport.of(olderStats, newerStats) : new IceReport(0, 0);\n        this.lastReport = report;\n      }\n      return this.lastReport;\n    }\n  }]);\n\n  return IceReportFactory;\n}();\n\nmodule.exports = IceReportFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9pY2VyZXBvcnRmYWN0b3J5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvaWNlcmVwb3J0ZmFjdG9yeS5qcz82NWY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIEljZVJlcG9ydCA9IHJlcXVpcmUoJy4vaWNlcmVwb3J0Jyk7XG5cbi8qKlxuICogQHByb3BlcnR5IHtJY2VSZXBvcnR9IGxhc3RSZXBvcnRcbiAqIEBwcm9wZXJ0eSB7P1JUQ1N0YXRzfSBsYXN0U3RhdHNcbiAqL1xuXG52YXIgSWNlUmVwb3J0RmFjdG9yeSA9IGZ1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhbiB7QGxpbmsgSWNlUmVwb3J0RmFjdG9yeX0uXG4gICAqL1xuICBmdW5jdGlvbiBJY2VSZXBvcnRGYWN0b3J5KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJY2VSZXBvcnRGYWN0b3J5KTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgIGxhc3RSZXBvcnQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IG5ldyBJY2VSZXBvcnQoMCwgMCksXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgbGFzdFN0YXRzOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhbiB7QGxpbmsgSWNlUmVwb3J0fS5cbiAgICogQHBhcmFtIHtSVENTdGF0c30gbmV3ZXJTdGF0cztcbiAgICogQHJldHVybnMge0ljZVJlcG9ydH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSWNlUmVwb3J0RmFjdG9yeSwgW3tcbiAgICBrZXk6ICduZXh0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmV4dChuZXdlclN0YXRzKSB7XG4gICAgICB2YXIgb2xkZXJTdGF0cyA9IHRoaXMubGFzdFN0YXRzO1xuICAgICAgdGhpcy5sYXN0U3RhdHMgPSBuZXdlclN0YXRzO1xuICAgICAgaWYgKG9sZGVyU3RhdHMpIHtcbiAgICAgICAgdmFyIHJlcG9ydCA9IG9sZGVyU3RhdHMuaWQgPT09IG5ld2VyU3RhdHMuaWQgPyBJY2VSZXBvcnQub2Yob2xkZXJTdGF0cywgbmV3ZXJTdGF0cykgOiBuZXcgSWNlUmVwb3J0KDAsIDApO1xuICAgICAgICB0aGlzLmxhc3RSZXBvcnQgPSByZXBvcnQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5sYXN0UmVwb3J0O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJY2VSZXBvcnRGYWN0b3J5O1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEljZVJlcG9ydEZhY3Rvcnk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/icereportfactory.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/localaudiotrackstats.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/localaudiotrackstats.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackStats = __webpack_require__(/*! ./localtrackstats */ \"./node_modules/twilio-video/es5/stats/localtrackstats.js\");\n\n/**\n * Statistics for a {@link LocalAudioTrack}.\n * @extends LocalTrackStats\n * @property {?AudioLevel} audioLevel - Input {@link AudioLevel}\n * @property {?number} jitter - Audio jitter in milliseconds\n */\n\nvar LocalAudioTrackStats = function (_LocalTrackStats) {\n  _inherits(LocalAudioTrackStats, _LocalTrackStats);\n\n  /**\n   * @param {string} trackId - {@link LocalAudioTrack} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   * @param {boolean} prepareForInsights\n   */\n  function LocalAudioTrackStats(trackId, statsReport, prepareForInsights) {\n    _classCallCheck(this, LocalAudioTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (LocalAudioTrackStats.__proto__ || Object.getPrototypeOf(LocalAudioTrackStats)).call(this, trackId, statsReport, prepareForInsights));\n\n    Object.defineProperties(_this, {\n      audioLevel: {\n        value: typeof statsReport.audioInputLevel === 'number' ? statsReport.audioInputLevel : null,\n        enumerable: true\n      },\n      jitter: {\n        value: typeof statsReport.jitter === 'number' ? statsReport.jitter : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return LocalAudioTrackStats;\n}(LocalTrackStats);\n\n/**\n * The maximum absolute amplitude of a set of audio samples in the\n * range of 0 to 32767 inclusive.\n * @typedef {number} AudioLevel\n */\n\nmodule.exports = LocalAudioTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9sb2NhbGF1ZGlvdHJhY2tzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL2xvY2FsYXVkaW90cmFja3N0YXRzLmpzP2FmNjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBMb2NhbFRyYWNrU3RhdHMgPSByZXF1aXJlKCcuL2xvY2FsdHJhY2tzdGF0cycpO1xuXG4vKipcbiAqIFN0YXRpc3RpY3MgZm9yIGEge0BsaW5rIExvY2FsQXVkaW9UcmFja30uXG4gKiBAZXh0ZW5kcyBMb2NhbFRyYWNrU3RhdHNcbiAqIEBwcm9wZXJ0eSB7P0F1ZGlvTGV2ZWx9IGF1ZGlvTGV2ZWwgLSBJbnB1dCB7QGxpbmsgQXVkaW9MZXZlbH1cbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gaml0dGVyIC0gQXVkaW8gaml0dGVyIGluIG1pbGxpc2Vjb25kc1xuICovXG5cbnZhciBMb2NhbEF1ZGlvVHJhY2tTdGF0cyA9IGZ1bmN0aW9uIChfTG9jYWxUcmFja1N0YXRzKSB7XG4gIF9pbmhlcml0cyhMb2NhbEF1ZGlvVHJhY2tTdGF0cywgX0xvY2FsVHJhY2tTdGF0cyk7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0cmFja0lkIC0ge0BsaW5rIExvY2FsQXVkaW9UcmFja30gSURcbiAgICogQHBhcmFtIHtTdGFuZGFyZGl6ZWRUcmFja1N0YXRzUmVwb3J0fSBzdGF0c1JlcG9ydFxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHByZXBhcmVGb3JJbnNpZ2h0c1xuICAgKi9cbiAgZnVuY3Rpb24gTG9jYWxBdWRpb1RyYWNrU3RhdHModHJhY2tJZCwgc3RhdHNSZXBvcnQsIHByZXBhcmVGb3JJbnNpZ2h0cykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2NhbEF1ZGlvVHJhY2tTdGF0cyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTG9jYWxBdWRpb1RyYWNrU3RhdHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMb2NhbEF1ZGlvVHJhY2tTdGF0cykpLmNhbGwodGhpcywgdHJhY2tJZCwgc3RhdHNSZXBvcnQsIHByZXBhcmVGb3JJbnNpZ2h0cykpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGF1ZGlvTGV2ZWw6IHtcbiAgICAgICAgdmFsdWU6IHR5cGVvZiBzdGF0c1JlcG9ydC5hdWRpb0lucHV0TGV2ZWwgPT09ICdudW1iZXInID8gc3RhdHNSZXBvcnQuYXVkaW9JbnB1dExldmVsIDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGppdHRlcjoge1xuICAgICAgICB2YWx1ZTogdHlwZW9mIHN0YXRzUmVwb3J0LmppdHRlciA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5qaXR0ZXIgOiBudWxsLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgcmV0dXJuIExvY2FsQXVkaW9UcmFja1N0YXRzO1xufShMb2NhbFRyYWNrU3RhdHMpO1xuXG4vKipcbiAqIFRoZSBtYXhpbXVtIGFic29sdXRlIGFtcGxpdHVkZSBvZiBhIHNldCBvZiBhdWRpbyBzYW1wbGVzIGluIHRoZVxuICogcmFuZ2Ugb2YgMCB0byAzMjc2NyBpbmNsdXNpdmUuXG4gKiBAdHlwZWRlZiB7bnVtYmVyfSBBdWRpb0xldmVsXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBMb2NhbEF1ZGlvVHJhY2tTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/localaudiotrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/localtrackstats.js":
/*!****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/localtrackstats.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackStats = __webpack_require__(/*! ./trackstats */ \"./node_modules/twilio-video/es5/stats/trackstats.js\");\n\n/**\n * Statistics for a {@link LocalTrack}.\n * @extends TrackStats\n * @property {?number} bytesSent - Number of bytes sent\n * @property {?number} packetsSent - Number of packets sent\n * @property {?number} roundTripTime - Round trip time in milliseconds\n */\n\nvar LocalTrackStats = function (_TrackStats) {\n  _inherits(LocalTrackStats, _TrackStats);\n\n  /**\n   * @param {string} trackId - {@link LocalTrack} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   * @param {boolean} prepareForInsights\n   */\n  function LocalTrackStats(trackId, statsReport, prepareForInsights) {\n    _classCallCheck(this, LocalTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (LocalTrackStats.__proto__ || Object.getPrototypeOf(LocalTrackStats)).call(this, trackId, statsReport));\n\n    Object.defineProperties(_this, {\n      bytesSent: {\n        value: typeof statsReport.bytesSent === 'number' ? statsReport.bytesSent : prepareForInsights ? 0 : null,\n        enumerable: true\n      },\n      packetsSent: {\n        value: typeof statsReport.packetsSent === 'number' ? statsReport.packetsSent : prepareForInsights ? 0 : null,\n        enumerable: true\n      },\n      roundTripTime: {\n        value: typeof statsReport.roundTripTime === 'number' ? statsReport.roundTripTime : prepareForInsights ? 0 : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return LocalTrackStats;\n}(TrackStats);\n\nmodule.exports = LocalTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9sb2NhbHRyYWNrc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9sb2NhbHRyYWNrc3RhdHMuanM/Y2Q4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFRyYWNrU3RhdHMgPSByZXF1aXJlKCcuL3RyYWNrc3RhdHMnKTtcblxuLyoqXG4gKiBTdGF0aXN0aWNzIGZvciBhIHtAbGluayBMb2NhbFRyYWNrfS5cbiAqIEBleHRlbmRzIFRyYWNrU3RhdHNcbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gYnl0ZXNTZW50IC0gTnVtYmVyIG9mIGJ5dGVzIHNlbnRcbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gcGFja2V0c1NlbnQgLSBOdW1iZXIgb2YgcGFja2V0cyBzZW50XG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IHJvdW5kVHJpcFRpbWUgLSBSb3VuZCB0cmlwIHRpbWUgaW4gbWlsbGlzZWNvbmRzXG4gKi9cblxudmFyIExvY2FsVHJhY2tTdGF0cyA9IGZ1bmN0aW9uIChfVHJhY2tTdGF0cykge1xuICBfaW5oZXJpdHMoTG9jYWxUcmFja1N0YXRzLCBfVHJhY2tTdGF0cyk7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0cmFja0lkIC0ge0BsaW5rIExvY2FsVHJhY2t9IElEXG4gICAqIEBwYXJhbSB7U3RhbmRhcmRpemVkVHJhY2tTdGF0c1JlcG9ydH0gc3RhdHNSZXBvcnRcbiAgICogQHBhcmFtIHtib29sZWFufSBwcmVwYXJlRm9ySW5zaWdodHNcbiAgICovXG4gIGZ1bmN0aW9uIExvY2FsVHJhY2tTdGF0cyh0cmFja0lkLCBzdGF0c1JlcG9ydCwgcHJlcGFyZUZvckluc2lnaHRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2FsVHJhY2tTdGF0cyk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTG9jYWxUcmFja1N0YXRzLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTG9jYWxUcmFja1N0YXRzKSkuY2FsbCh0aGlzLCB0cmFja0lkLCBzdGF0c1JlcG9ydCkpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGJ5dGVzU2VudDoge1xuICAgICAgICB2YWx1ZTogdHlwZW9mIHN0YXRzUmVwb3J0LmJ5dGVzU2VudCA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5ieXRlc1NlbnQgOiBwcmVwYXJlRm9ySW5zaWdodHMgPyAwIDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHBhY2tldHNTZW50OiB7XG4gICAgICAgIHZhbHVlOiB0eXBlb2Ygc3RhdHNSZXBvcnQucGFja2V0c1NlbnQgPT09ICdudW1iZXInID8gc3RhdHNSZXBvcnQucGFja2V0c1NlbnQgOiBwcmVwYXJlRm9ySW5zaWdodHMgPyAwIDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHJvdW5kVHJpcFRpbWU6IHtcbiAgICAgICAgdmFsdWU6IHR5cGVvZiBzdGF0c1JlcG9ydC5yb3VuZFRyaXBUaW1lID09PSAnbnVtYmVyJyA/IHN0YXRzUmVwb3J0LnJvdW5kVHJpcFRpbWUgOiBwcmVwYXJlRm9ySW5zaWdodHMgPyAwIDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHJldHVybiBMb2NhbFRyYWNrU3RhdHM7XG59KFRyYWNrU3RhdHMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsVHJhY2tTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/localtrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/localvideotrackstats.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/localvideotrackstats.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LocalTrackStats = __webpack_require__(/*! ./localtrackstats */ \"./node_modules/twilio-video/es5/stats/localtrackstats.js\");\n\n/**\n * Statistics for a {@link LocalVideoTrack}.\n * @extends LocalTrackStats\n * @property {?VideoTrack#Dimensions} captureDimensions - Video capture resolution\n * @property {?VideoTrack#Dimensions} dimensions - Video encoding resolution\n * @property {?number} captureFrameRate - Video capture frame rate\n * @property {?number} frameRate - Video encoding frame rate\n */\n\nvar LocalVideoTrackStats = function (_LocalTrackStats) {\n  _inherits(LocalVideoTrackStats, _LocalTrackStats);\n\n  /**\n   * @param {string} trackId - {@link LocalVideoTrack} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   * @param {boolean} prepareForInsights\n   */\n  function LocalVideoTrackStats(trackId, statsReport, prepareForInsights) {\n    _classCallCheck(this, LocalVideoTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (LocalVideoTrackStats.__proto__ || Object.getPrototypeOf(LocalVideoTrackStats)).call(this, trackId, statsReport, prepareForInsights));\n\n    var captureDimensions = null;\n    if (typeof statsReport.frameWidthInput === 'number' && typeof statsReport.frameHeightInput === 'number') {\n      captureDimensions = {};\n\n      Object.defineProperties(captureDimensions, {\n        width: {\n          value: statsReport.frameWidthInput,\n          enumerable: true\n        },\n        height: {\n          value: statsReport.frameHeightInput,\n          enumerable: true\n        }\n      });\n    }\n\n    var dimensions = null;\n    if (typeof statsReport.frameWidthSent === 'number' && typeof statsReport.frameHeightSent === 'number') {\n      dimensions = {};\n\n      Object.defineProperties(dimensions, {\n        width: {\n          value: statsReport.frameWidthSent,\n          enumerable: true\n        },\n        height: {\n          value: statsReport.frameHeightSent,\n          enumerable: true\n        }\n      });\n    }\n\n    Object.defineProperties(_this, {\n      captureDimensions: {\n        value: captureDimensions,\n        enumerable: true\n      },\n      dimensions: {\n        value: dimensions,\n        enumerable: true\n      },\n      captureFrameRate: {\n        value: typeof statsReport.frameRateInput === 'number' ? statsReport.frameRateInput : null,\n        enumerable: true\n      },\n      frameRate: {\n        value: typeof statsReport.frameRateSent === 'number' ? statsReport.frameRateSent : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return LocalVideoTrackStats;\n}(LocalTrackStats);\n\nmodule.exports = LocalVideoTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9sb2NhbHZpZGVvdHJhY2tzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL2xvY2FsdmlkZW90cmFja3N0YXRzLmpzPzA0YzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBMb2NhbFRyYWNrU3RhdHMgPSByZXF1aXJlKCcuL2xvY2FsdHJhY2tzdGF0cycpO1xuXG4vKipcbiAqIFN0YXRpc3RpY3MgZm9yIGEge0BsaW5rIExvY2FsVmlkZW9UcmFja30uXG4gKiBAZXh0ZW5kcyBMb2NhbFRyYWNrU3RhdHNcbiAqIEBwcm9wZXJ0eSB7P1ZpZGVvVHJhY2sjRGltZW5zaW9uc30gY2FwdHVyZURpbWVuc2lvbnMgLSBWaWRlbyBjYXB0dXJlIHJlc29sdXRpb25cbiAqIEBwcm9wZXJ0eSB7P1ZpZGVvVHJhY2sjRGltZW5zaW9uc30gZGltZW5zaW9ucyAtIFZpZGVvIGVuY29kaW5nIHJlc29sdXRpb25cbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gY2FwdHVyZUZyYW1lUmF0ZSAtIFZpZGVvIGNhcHR1cmUgZnJhbWUgcmF0ZVxuICogQHByb3BlcnR5IHs/bnVtYmVyfSBmcmFtZVJhdGUgLSBWaWRlbyBlbmNvZGluZyBmcmFtZSByYXRlXG4gKi9cblxudmFyIExvY2FsVmlkZW9UcmFja1N0YXRzID0gZnVuY3Rpb24gKF9Mb2NhbFRyYWNrU3RhdHMpIHtcbiAgX2luaGVyaXRzKExvY2FsVmlkZW9UcmFja1N0YXRzLCBfTG9jYWxUcmFja1N0YXRzKTtcblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRyYWNrSWQgLSB7QGxpbmsgTG9jYWxWaWRlb1RyYWNrfSBJRFxuICAgKiBAcGFyYW0ge1N0YW5kYXJkaXplZFRyYWNrU3RhdHNSZXBvcnR9IHN0YXRzUmVwb3J0XG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gcHJlcGFyZUZvckluc2lnaHRzXG4gICAqL1xuICBmdW5jdGlvbiBMb2NhbFZpZGVvVHJhY2tTdGF0cyh0cmFja0lkLCBzdGF0c1JlcG9ydCwgcHJlcGFyZUZvckluc2lnaHRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2FsVmlkZW9UcmFja1N0YXRzKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMb2NhbFZpZGVvVHJhY2tTdGF0cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvY2FsVmlkZW9UcmFja1N0YXRzKSkuY2FsbCh0aGlzLCB0cmFja0lkLCBzdGF0c1JlcG9ydCwgcHJlcGFyZUZvckluc2lnaHRzKSk7XG5cbiAgICB2YXIgY2FwdHVyZURpbWVuc2lvbnMgPSBudWxsO1xuICAgIGlmICh0eXBlb2Ygc3RhdHNSZXBvcnQuZnJhbWVXaWR0aElucHV0ID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygc3RhdHNSZXBvcnQuZnJhbWVIZWlnaHRJbnB1dCA9PT0gJ251bWJlcicpIHtcbiAgICAgIGNhcHR1cmVEaW1lbnNpb25zID0ge307XG5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNhcHR1cmVEaW1lbnNpb25zLCB7XG4gICAgICAgIHdpZHRoOiB7XG4gICAgICAgICAgdmFsdWU6IHN0YXRzUmVwb3J0LmZyYW1lV2lkdGhJbnB1dCxcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGhlaWdodDoge1xuICAgICAgICAgIHZhbHVlOiBzdGF0c1JlcG9ydC5mcmFtZUhlaWdodElucHV0LFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGRpbWVuc2lvbnMgPSBudWxsO1xuICAgIGlmICh0eXBlb2Ygc3RhdHNSZXBvcnQuZnJhbWVXaWR0aFNlbnQgPT09ICdudW1iZXInICYmIHR5cGVvZiBzdGF0c1JlcG9ydC5mcmFtZUhlaWdodFNlbnQgPT09ICdudW1iZXInKSB7XG4gICAgICBkaW1lbnNpb25zID0ge307XG5cbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGRpbWVuc2lvbnMsIHtcbiAgICAgICAgd2lkdGg6IHtcbiAgICAgICAgICB2YWx1ZTogc3RhdHNSZXBvcnQuZnJhbWVXaWR0aFNlbnQsXG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBoZWlnaHQ6IHtcbiAgICAgICAgICB2YWx1ZTogc3RhdHNSZXBvcnQuZnJhbWVIZWlnaHRTZW50LFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGNhcHR1cmVEaW1lbnNpb25zOiB7XG4gICAgICAgIHZhbHVlOiBjYXB0dXJlRGltZW5zaW9ucyxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRpbWVuc2lvbnM6IHtcbiAgICAgICAgdmFsdWU6IGRpbWVuc2lvbnMsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBjYXB0dXJlRnJhbWVSYXRlOiB7XG4gICAgICAgIHZhbHVlOiB0eXBlb2Ygc3RhdHNSZXBvcnQuZnJhbWVSYXRlSW5wdXQgPT09ICdudW1iZXInID8gc3RhdHNSZXBvcnQuZnJhbWVSYXRlSW5wdXQgOiBudWxsLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgZnJhbWVSYXRlOiB7XG4gICAgICAgIHZhbHVlOiB0eXBlb2Ygc3RhdHNSZXBvcnQuZnJhbWVSYXRlU2VudCA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5mcmFtZVJhdGVTZW50IDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHJldHVybiBMb2NhbFZpZGVvVHJhY2tTdGF0cztcbn0oTG9jYWxUcmFja1N0YXRzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBMb2NhbFZpZGVvVHJhY2tTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/localvideotrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualityaudiostats.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualityaudiostats.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NetworkQualityMediaStats = __webpack_require__(/*! ./networkqualitymediastats */ \"./node_modules/twilio-video/es5/stats/networkqualitymediastats.js\");\n\n/**\n * {@link NetworkQualityMediaStats} for a {@link Participant}'s audio.\n */\n\nvar NetworkQualityAudioStats = function (_NetworkQualityMediaS) {\n  _inherits(NetworkQualityAudioStats, _NetworkQualityMediaS);\n\n  /**\n   * Construct a {@link NetworkQualityAudioStats}.\n   * @param {MediaLevels} mediaLevels\n   */\n  function NetworkQualityAudioStats(mediaLevels) {\n    _classCallCheck(this, NetworkQualityAudioStats);\n\n    return _possibleConstructorReturn(this, (NetworkQualityAudioStats.__proto__ || Object.getPrototypeOf(NetworkQualityAudioStats)).call(this, mediaLevels));\n  }\n\n  return NetworkQualityAudioStats;\n}(NetworkQualityMediaStats);\n\nmodule.exports = NetworkQualityAudioStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eWF1ZGlvc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eWF1ZGlvc3RhdHMuanM/OGY4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHltZWRpYXN0YXRzJyk7XG5cbi8qKlxuICoge0BsaW5rIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0c30gZm9yIGEge0BsaW5rIFBhcnRpY2lwYW50fSdzIGF1ZGlvLlxuICovXG5cbnZhciBOZXR3b3JrUXVhbGl0eUF1ZGlvU3RhdHMgPSBmdW5jdGlvbiAoX05ldHdvcmtRdWFsaXR5TWVkaWFTKSB7XG4gIF9pbmhlcml0cyhOZXR3b3JrUXVhbGl0eUF1ZGlvU3RhdHMsIF9OZXR3b3JrUXVhbGl0eU1lZGlhUyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBOZXR3b3JrUXVhbGl0eUF1ZGlvU3RhdHN9LlxuICAgKiBAcGFyYW0ge01lZGlhTGV2ZWxzfSBtZWRpYUxldmVsc1xuICAgKi9cbiAgZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlBdWRpb1N0YXRzKG1lZGlhTGV2ZWxzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5QXVkaW9TdGF0cyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE5ldHdvcmtRdWFsaXR5QXVkaW9TdGF0cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE5ldHdvcmtRdWFsaXR5QXVkaW9TdGF0cykpLmNhbGwodGhpcywgbWVkaWFMZXZlbHMpKTtcbiAgfVxuXG4gIHJldHVybiBOZXR3b3JrUXVhbGl0eUF1ZGlvU3RhdHM7XG59KE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0cyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTmV0d29ya1F1YWxpdHlBdWRpb1N0YXRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualityaudiostats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitybandwidthstats.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitybandwidthstats.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Bandwidth network quality statistics.\n * @property {?number} actual - actual bandwidth, in bytes\n * @property {?number} available - available bandwidth, in bytes\n * @property {?NetworkQualityLevel} level - {@link NetworkQualityLevel} for bandwidth\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualityBandwidthStats =\n/**\n * Construct a {@link NetworkQualityBandwidthStats}.\n * @param {BandwidthStats} bandwidthStats\n */\nfunction NetworkQualityBandwidthStats(_ref) {\n  var _ref$actual = _ref.actual,\n      actual = _ref$actual === undefined ? null : _ref$actual,\n      _ref$available = _ref.available,\n      available = _ref$available === undefined ? null : _ref$available,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? null : _ref$level;\n\n  _classCallCheck(this, NetworkQualityBandwidthStats);\n\n  Object.defineProperties(this, {\n    actual: {\n      value: actual,\n      enumerable: true\n    },\n    available: {\n      value: available,\n      enumerable: true\n    },\n    level: {\n      value: level,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityBandwidthStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eWJhbmR3aWR0aHN0YXRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvbmV0d29ya3F1YWxpdHliYW5kd2lkdGhzdGF0cy5qcz8zNTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBCYW5kd2lkdGggbmV0d29yayBxdWFsaXR5IHN0YXRpc3RpY3MuXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IGFjdHVhbCAtIGFjdHVhbCBiYW5kd2lkdGgsIGluIGJ5dGVzXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IGF2YWlsYWJsZSAtIGF2YWlsYWJsZSBiYW5kd2lkdGgsIGluIGJ5dGVzXG4gKiBAcHJvcGVydHkgez9OZXR3b3JrUXVhbGl0eUxldmVsfSBsZXZlbCAtIHtAbGluayBOZXR3b3JrUXVhbGl0eUxldmVsfSBmb3IgYmFuZHdpZHRoXG4gKi9cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIE5ldHdvcmtRdWFsaXR5QmFuZHdpZHRoU3RhdHMgPVxuLyoqXG4gKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTmV0d29ya1F1YWxpdHlCYW5kd2lkdGhTdGF0c30uXG4gKiBAcGFyYW0ge0JhbmR3aWR0aFN0YXRzfSBiYW5kd2lkdGhTdGF0c1xuICovXG5mdW5jdGlvbiBOZXR3b3JrUXVhbGl0eUJhbmR3aWR0aFN0YXRzKF9yZWYpIHtcbiAgdmFyIF9yZWYkYWN0dWFsID0gX3JlZi5hY3R1YWwsXG4gICAgICBhY3R1YWwgPSBfcmVmJGFjdHVhbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkYWN0dWFsLFxuICAgICAgX3JlZiRhdmFpbGFibGUgPSBfcmVmLmF2YWlsYWJsZSxcbiAgICAgIGF2YWlsYWJsZSA9IF9yZWYkYXZhaWxhYmxlID09PSB1bmRlZmluZWQgPyBudWxsIDogX3JlZiRhdmFpbGFibGUsXG4gICAgICBfcmVmJGxldmVsID0gX3JlZi5sZXZlbCxcbiAgICAgIGxldmVsID0gX3JlZiRsZXZlbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkbGV2ZWw7XG5cbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5QmFuZHdpZHRoU3RhdHMpO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBhY3R1YWw6IHtcbiAgICAgIHZhbHVlOiBhY3R1YWwsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBhdmFpbGFibGU6IHtcbiAgICAgIHZhbHVlOiBhdmFpbGFibGUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBsZXZlbDoge1xuICAgICAgdmFsdWU6IGxldmVsLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5ldHdvcmtRdWFsaXR5QmFuZHdpZHRoU3RhdHM7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitybandwidthstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualityfractionloststats.js":
/*!********************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualityfractionloststats.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Fraction lost network quality statistics.\n * @property {?number} fractionLost - packets lost\n * @property {?NetworkQualityLevel} level - {@link NetworkQualityLevel} for fraction lost\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualityFractionLostStats =\n/**\n * Construct a {@link NetworkQualityFractionLostStats}.\n * @param {FractionLostStats} fractionLostStats\n */\nfunction NetworkQualityFractionLostStats(_ref) {\n  var _ref$fractionLost = _ref.fractionLost,\n      fractionLost = _ref$fractionLost === undefined ? null : _ref$fractionLost,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? null : _ref$level;\n\n  _classCallCheck(this, NetworkQualityFractionLostStats);\n\n  Object.defineProperties(this, {\n    fractionLost: {\n      value: fractionLost,\n      enumerable: true\n    },\n    level: {\n      value: level,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityFractionLostStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eWZyYWN0aW9ubG9zdHN0YXRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvbmV0d29ya3F1YWxpdHlmcmFjdGlvbmxvc3RzdGF0cy5qcz9kYTY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBGcmFjdGlvbiBsb3N0IG5ldHdvcmsgcXVhbGl0eSBzdGF0aXN0aWNzLlxuICogQHByb3BlcnR5IHs/bnVtYmVyfSBmcmFjdGlvbkxvc3QgLSBwYWNrZXRzIGxvc3RcbiAqIEBwcm9wZXJ0eSB7P05ldHdvcmtRdWFsaXR5TGV2ZWx9IGxldmVsIC0ge0BsaW5rIE5ldHdvcmtRdWFsaXR5TGV2ZWx9IGZvciBmcmFjdGlvbiBsb3N0XG4gKi9cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIE5ldHdvcmtRdWFsaXR5RnJhY3Rpb25Mb3N0U3RhdHMgPVxuLyoqXG4gKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTmV0d29ya1F1YWxpdHlGcmFjdGlvbkxvc3RTdGF0c30uXG4gKiBAcGFyYW0ge0ZyYWN0aW9uTG9zdFN0YXRzfSBmcmFjdGlvbkxvc3RTdGF0c1xuICovXG5mdW5jdGlvbiBOZXR3b3JrUXVhbGl0eUZyYWN0aW9uTG9zdFN0YXRzKF9yZWYpIHtcbiAgdmFyIF9yZWYkZnJhY3Rpb25Mb3N0ID0gX3JlZi5mcmFjdGlvbkxvc3QsXG4gICAgICBmcmFjdGlvbkxvc3QgPSBfcmVmJGZyYWN0aW9uTG9zdCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkZnJhY3Rpb25Mb3N0LFxuICAgICAgX3JlZiRsZXZlbCA9IF9yZWYubGV2ZWwsXG4gICAgICBsZXZlbCA9IF9yZWYkbGV2ZWwgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBfcmVmJGxldmVsO1xuXG4gIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOZXR3b3JrUXVhbGl0eUZyYWN0aW9uTG9zdFN0YXRzKTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgZnJhY3Rpb25Mb3N0OiB7XG4gICAgICB2YWx1ZTogZnJhY3Rpb25Mb3N0LFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgbGV2ZWw6IHtcbiAgICAgIHZhbHVlOiBsZXZlbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eUZyYWN0aW9uTG9zdFN0YXRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualityfractionloststats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitylatencystats.js":
/*!***************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitylatencystats.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Latency network quality statistics.\n * @property {?number} jitter - media jitter in seconds\n * @property {?number} rtt - round trip time in seconds\n * @property {?NetworkQualityLevel} level - {@link NetworkQualityLevel} for latency\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualityLatencyStats =\n/**\n * Construct a {@link NetworkQualityLatencyStats}.\n * @param {LatencyStats} latencyStats\n */\nfunction NetworkQualityLatencyStats(_ref) {\n  var _ref$jitter = _ref.jitter,\n      jitter = _ref$jitter === undefined ? null : _ref$jitter,\n      _ref$rtt = _ref.rtt,\n      rtt = _ref$rtt === undefined ? null : _ref$rtt,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? null : _ref$level;\n\n  _classCallCheck(this, NetworkQualityLatencyStats);\n\n  Object.defineProperties(this, {\n    jitter: {\n      value: jitter,\n      enumerable: true\n    },\n    rtt: {\n      value: rtt,\n      enumerable: true\n    },\n    level: {\n      value: level,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityLatencyStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eWxhdGVuY3lzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL25ldHdvcmtxdWFsaXR5bGF0ZW5jeXN0YXRzLmpzP2FiYTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIExhdGVuY3kgbmV0d29yayBxdWFsaXR5IHN0YXRpc3RpY3MuXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IGppdHRlciAtIG1lZGlhIGppdHRlciBpbiBzZWNvbmRzXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IHJ0dCAtIHJvdW5kIHRyaXAgdGltZSBpbiBzZWNvbmRzXG4gKiBAcHJvcGVydHkgez9OZXR3b3JrUXVhbGl0eUxldmVsfSBsZXZlbCAtIHtAbGluayBOZXR3b3JrUXVhbGl0eUxldmVsfSBmb3IgbGF0ZW5jeVxuICovXG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBOZXR3b3JrUXVhbGl0eUxhdGVuY3lTdGF0cyA9XG4vKipcbiAqIENvbnN0cnVjdCBhIHtAbGluayBOZXR3b3JrUXVhbGl0eUxhdGVuY3lTdGF0c30uXG4gKiBAcGFyYW0ge0xhdGVuY3lTdGF0c30gbGF0ZW5jeVN0YXRzXG4gKi9cbmZ1bmN0aW9uIE5ldHdvcmtRdWFsaXR5TGF0ZW5jeVN0YXRzKF9yZWYpIHtcbiAgdmFyIF9yZWYkaml0dGVyID0gX3JlZi5qaXR0ZXIsXG4gICAgICBqaXR0ZXIgPSBfcmVmJGppdHRlciA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkaml0dGVyLFxuICAgICAgX3JlZiRydHQgPSBfcmVmLnJ0dCxcbiAgICAgIHJ0dCA9IF9yZWYkcnR0ID09PSB1bmRlZmluZWQgPyBudWxsIDogX3JlZiRydHQsXG4gICAgICBfcmVmJGxldmVsID0gX3JlZi5sZXZlbCxcbiAgICAgIGxldmVsID0gX3JlZiRsZXZlbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IF9yZWYkbGV2ZWw7XG5cbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5TGF0ZW5jeVN0YXRzKTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgaml0dGVyOiB7XG4gICAgICB2YWx1ZTogaml0dGVyLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgcnR0OiB7XG4gICAgICB2YWx1ZTogcnR0LFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgbGV2ZWw6IHtcbiAgICAgIHZhbHVlOiBsZXZlbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eUxhdGVuY3lTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitylatencystats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitymediastats.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitymediastats.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualitySendStats = __webpack_require__(/*! ./networkqualitysendstats */ \"./node_modules/twilio-video/es5/stats/networkqualitysendstats.js\");\nvar NetworkQualityRecvStats = __webpack_require__(/*! ./networkqualityrecvstats */ \"./node_modules/twilio-video/es5/stats/networkqualityrecvstats.js\");\n\n/**\n * Network quality statistics shared between a {@link Participant}'s audio or video.\n * @property {NetworkQualityLevel} send - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s published audio or video\n * @property {number} recv - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s subscribed audio or video\n * @property {?NetworkQualitySendOrRecvStats} sendStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#send</code>\n *   is calculated\n * @property {?NetworkQualitySendOrRecvStats} recvStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#recv</code>\n *   is calculated\n */\n\nvar NetworkQualityMediaStats =\n/**\n * Construct a {@link NetworkQualityMediaStats}.\n * @param {MediaLevels} mediaLevels\n */\nfunction NetworkQualityMediaStats(_ref) {\n  var send = _ref.send,\n      recv = _ref.recv,\n      _ref$sendStats = _ref.sendStats,\n      sendStats = _ref$sendStats === undefined ? null : _ref$sendStats,\n      _ref$recvStats = _ref.recvStats,\n      recvStats = _ref$recvStats === undefined ? null : _ref$recvStats;\n\n  _classCallCheck(this, NetworkQualityMediaStats);\n\n  Object.defineProperties(this, {\n    send: {\n      value: send,\n      enumerable: true\n    },\n    recv: {\n      value: recv,\n      enumerable: true\n    },\n    sendStats: {\n      value: sendStats ? new NetworkQualitySendStats(sendStats) : null,\n      enumerable: true\n    },\n    recvStats: {\n      value: recvStats ? new NetworkQualityRecvStats(recvStats) : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityMediaStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eW1lZGlhc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eW1lZGlhc3RhdHMuanM/ODY0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBOZXR3b3JrUXVhbGl0eVNlbmRTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlzZW5kc3RhdHMnKTtcbnZhciBOZXR3b3JrUXVhbGl0eVJlY3ZTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlyZWN2c3RhdHMnKTtcblxuLyoqXG4gKiBOZXR3b3JrIHF1YWxpdHkgc3RhdGlzdGljcyBzaGFyZWQgYmV0d2VlbiBhIHtAbGluayBQYXJ0aWNpcGFudH0ncyBhdWRpbyBvciB2aWRlby5cbiAqIEBwcm9wZXJ0eSB7TmV0d29ya1F1YWxpdHlMZXZlbH0gc2VuZCAtIHtAbGluayBOZXR3b3JrUXVhbGl0eUxldmVsfSBvZiB0aGVcbiAqICB7QGxpbmsgUGFydGljaXBhbnR9J3MgcHVibGlzaGVkIGF1ZGlvIG9yIHZpZGVvXG4gKiBAcHJvcGVydHkge251bWJlcn0gcmVjdiAtIHtAbGluayBOZXR3b3JrUXVhbGl0eUxldmVsfSBvZiB0aGVcbiAqICB7QGxpbmsgUGFydGljaXBhbnR9J3Mgc3Vic2NyaWJlZCBhdWRpbyBvciB2aWRlb1xuICogQHByb3BlcnR5IHs/TmV0d29ya1F1YWxpdHlTZW5kT3JSZWN2U3RhdHN9IHNlbmRTdGF0cyAtIHtAbGluayBOZXR3b3JrUXVhbGl0eVNlbmRPclJlY3ZTdGF0c31cbiAqICAgYmFzZWQgb24gd2hpY2gge0BsaW5rIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0c308Y29kZSBzdHlsZT1cInBhZGRpbmc6MCAwXCI+I3NlbmQ8L2NvZGU+XG4gKiAgIGlzIGNhbGN1bGF0ZWRcbiAqIEBwcm9wZXJ0eSB7P05ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzfSByZWN2U3RhdHMgLSB7QGxpbmsgTmV0d29ya1F1YWxpdHlTZW5kT3JSZWN2U3RhdHN9XG4gKiAgIGJhc2VkIG9uIHdoaWNoIHtAbGluayBOZXR3b3JrUXVhbGl0eU1lZGlhU3RhdHN9PGNvZGUgc3R5bGU9XCJwYWRkaW5nOjAgMFwiPiNyZWN2PC9jb2RlPlxuICogICBpcyBjYWxjdWxhdGVkXG4gKi9cblxudmFyIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0cyA9XG4vKipcbiAqIENvbnN0cnVjdCBhIHtAbGluayBOZXR3b3JrUXVhbGl0eU1lZGlhU3RhdHN9LlxuICogQHBhcmFtIHtNZWRpYUxldmVsc30gbWVkaWFMZXZlbHNcbiAqL1xuZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlNZWRpYVN0YXRzKF9yZWYpIHtcbiAgdmFyIHNlbmQgPSBfcmVmLnNlbmQsXG4gICAgICByZWN2ID0gX3JlZi5yZWN2LFxuICAgICAgX3JlZiRzZW5kU3RhdHMgPSBfcmVmLnNlbmRTdGF0cyxcbiAgICAgIHNlbmRTdGF0cyA9IF9yZWYkc2VuZFN0YXRzID09PSB1bmRlZmluZWQgPyBudWxsIDogX3JlZiRzZW5kU3RhdHMsXG4gICAgICBfcmVmJHJlY3ZTdGF0cyA9IF9yZWYucmVjdlN0YXRzLFxuICAgICAgcmVjdlN0YXRzID0gX3JlZiRyZWN2U3RhdHMgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBfcmVmJHJlY3ZTdGF0cztcblxuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTmV0d29ya1F1YWxpdHlNZWRpYVN0YXRzKTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgc2VuZDoge1xuICAgICAgdmFsdWU6IHNlbmQsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICByZWN2OiB7XG4gICAgICB2YWx1ZTogcmVjdixcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHNlbmRTdGF0czoge1xuICAgICAgdmFsdWU6IHNlbmRTdGF0cyA/IG5ldyBOZXR3b3JrUXVhbGl0eVNlbmRTdGF0cyhzZW5kU3RhdHMpIDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHJlY3ZTdGF0czoge1xuICAgICAgdmFsdWU6IHJlY3ZTdGF0cyA/IG5ldyBOZXR3b3JrUXVhbGl0eVJlY3ZTdGF0cyhyZWN2U3RhdHMpIDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eU1lZGlhU3RhdHM7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitymediastats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualityrecvstats.js":
/*!************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualityrecvstats.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NetworkQualitySendOrRecvStats = __webpack_require__(/*! ./networkqualitysendorrecvstats */ \"./node_modules/twilio-video/es5/stats/networkqualitysendorrecvstats.js\");\n\n/**\n * {@link NetworkQualitySendOrRecvStats} based on which a {@link Participant}'s\n * {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#recv</code> is calculated.\n */\n\nvar NetworkQualityRecvStats = function (_NetworkQualitySendOr) {\n  _inherits(NetworkQualityRecvStats, _NetworkQualitySendOr);\n\n  /**\n   * Construct a {@link NetworkQualityRecvStats}.\n   * @param {SendOrRecvStats} sendOrRecvStats\n   */\n  function NetworkQualityRecvStats(sendOrRecvStats) {\n    _classCallCheck(this, NetworkQualityRecvStats);\n\n    return _possibleConstructorReturn(this, (NetworkQualityRecvStats.__proto__ || Object.getPrototypeOf(NetworkQualityRecvStats)).call(this, sendOrRecvStats));\n  }\n\n  return NetworkQualityRecvStats;\n}(NetworkQualitySendOrRecvStats);\n\nmodule.exports = NetworkQualityRecvStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXJlY3ZzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL25ldHdvcmtxdWFsaXR5cmVjdnN0YXRzLmpzPzkyNWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBOZXR3b3JrUXVhbGl0eVNlbmRPclJlY3ZTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlzZW5kb3JyZWN2c3RhdHMnKTtcblxuLyoqXG4gKiB7QGxpbmsgTmV0d29ya1F1YWxpdHlTZW5kT3JSZWN2U3RhdHN9IGJhc2VkIG9uIHdoaWNoIGEge0BsaW5rIFBhcnRpY2lwYW50fSdzXG4gKiB7QGxpbmsgTmV0d29ya1F1YWxpdHlNZWRpYVN0YXRzfTxjb2RlIHN0eWxlPVwicGFkZGluZzowIDBcIj4jcmVjdjwvY29kZT4gaXMgY2FsY3VsYXRlZC5cbiAqL1xuXG52YXIgTmV0d29ya1F1YWxpdHlSZWN2U3RhdHMgPSBmdW5jdGlvbiAoX05ldHdvcmtRdWFsaXR5U2VuZE9yKSB7XG4gIF9pbmhlcml0cyhOZXR3b3JrUXVhbGl0eVJlY3ZTdGF0cywgX05ldHdvcmtRdWFsaXR5U2VuZE9yKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIE5ldHdvcmtRdWFsaXR5UmVjdlN0YXRzfS5cbiAgICogQHBhcmFtIHtTZW5kT3JSZWN2U3RhdHN9IHNlbmRPclJlY3ZTdGF0c1xuICAgKi9cbiAgZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlSZWN2U3RhdHMoc2VuZE9yUmVjdlN0YXRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5UmVjdlN0YXRzKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTmV0d29ya1F1YWxpdHlSZWN2U3RhdHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihOZXR3b3JrUXVhbGl0eVJlY3ZTdGF0cykpLmNhbGwodGhpcywgc2VuZE9yUmVjdlN0YXRzKSk7XG4gIH1cblxuICByZXR1cm4gTmV0d29ya1F1YWxpdHlSZWN2U3RhdHM7XG59KE5ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eVJlY3ZTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualityrecvstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitysendorrecvstats.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitysendorrecvstats.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualityBandwidthStats = __webpack_require__(/*! ./networkqualitybandwidthstats */ \"./node_modules/twilio-video/es5/stats/networkqualitybandwidthstats.js\");\nvar NetworkQualityFractionLostStats = __webpack_require__(/*! ./networkqualityfractionloststats */ \"./node_modules/twilio-video/es5/stats/networkqualityfractionloststats.js\");\nvar NetworkQualityLatencyStats = __webpack_require__(/*! ./networkqualitylatencystats */ \"./node_modules/twilio-video/es5/stats/networkqualitylatencystats.js\");\n\n/**\n * Network quality statistics shared between {@link NetworkQualitySendStats} and\n * {@link NetworkQualityRecvStats} based on which a {@link Participant}'s\n * {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#send</code> or\n * {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#recv</code> is calculated.\n * @property {?NetworkQualityBandwidthStats} bandwidth - bandwidth statistics\n * @property {?NetworkQualityLatencyStats} latency - latency statistics\n * @property {?NetworkQualityFractionLostStats} fractionLost - fraction lost statistics\n */\n\nvar NetworkQualitySendOrRecvStats =\n/**\n * Construct a {@link NetworkQualitySendOrRecvStats}.\n * @param {SendOrRecvStats} sendOrRecvStats\n */\nfunction NetworkQualitySendOrRecvStats(_ref) {\n  var _ref$bandwidth = _ref.bandwidth,\n      bandwidth = _ref$bandwidth === undefined ? null : _ref$bandwidth,\n      _ref$fractionLost = _ref.fractionLost,\n      fractionLost = _ref$fractionLost === undefined ? null : _ref$fractionLost,\n      _ref$latency = _ref.latency,\n      latency = _ref$latency === undefined ? null : _ref$latency;\n\n  _classCallCheck(this, NetworkQualitySendOrRecvStats);\n\n  Object.defineProperties(this, {\n    bandwidth: {\n      value: bandwidth ? new NetworkQualityBandwidthStats(bandwidth) : null,\n      enumerable: true\n    },\n    fractionLost: {\n      value: fractionLost ? new NetworkQualityFractionLostStats(fractionLost) : null,\n      enumerable: true\n    },\n    latency: {\n      value: latency ? new NetworkQualityLatencyStats(latency) : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualitySendOrRecvStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXNlbmRvcnJlY3ZzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL25ldHdvcmtxdWFsaXR5c2VuZG9ycmVjdnN0YXRzLmpzP2U1NDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgTmV0d29ya1F1YWxpdHlCYW5kd2lkdGhTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHliYW5kd2lkdGhzdGF0cycpO1xudmFyIE5ldHdvcmtRdWFsaXR5RnJhY3Rpb25Mb3N0U3RhdHMgPSByZXF1aXJlKCcuL25ldHdvcmtxdWFsaXR5ZnJhY3Rpb25sb3N0c3RhdHMnKTtcbnZhciBOZXR3b3JrUXVhbGl0eUxhdGVuY3lTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlsYXRlbmN5c3RhdHMnKTtcblxuLyoqXG4gKiBOZXR3b3JrIHF1YWxpdHkgc3RhdGlzdGljcyBzaGFyZWQgYmV0d2VlbiB7QGxpbmsgTmV0d29ya1F1YWxpdHlTZW5kU3RhdHN9IGFuZFxuICoge0BsaW5rIE5ldHdvcmtRdWFsaXR5UmVjdlN0YXRzfSBiYXNlZCBvbiB3aGljaCBhIHtAbGluayBQYXJ0aWNpcGFudH0nc1xuICoge0BsaW5rIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0c308Y29kZSBzdHlsZT1cInBhZGRpbmc6MCAwXCI+I3NlbmQ8L2NvZGU+IG9yXG4gKiB7QGxpbmsgTmV0d29ya1F1YWxpdHlNZWRpYVN0YXRzfTxjb2RlIHN0eWxlPVwicGFkZGluZzowIDBcIj4jcmVjdjwvY29kZT4gaXMgY2FsY3VsYXRlZC5cbiAqIEBwcm9wZXJ0eSB7P05ldHdvcmtRdWFsaXR5QmFuZHdpZHRoU3RhdHN9IGJhbmR3aWR0aCAtIGJhbmR3aWR0aCBzdGF0aXN0aWNzXG4gKiBAcHJvcGVydHkgez9OZXR3b3JrUXVhbGl0eUxhdGVuY3lTdGF0c30gbGF0ZW5jeSAtIGxhdGVuY3kgc3RhdGlzdGljc1xuICogQHByb3BlcnR5IHs/TmV0d29ya1F1YWxpdHlGcmFjdGlvbkxvc3RTdGF0c30gZnJhY3Rpb25Mb3N0IC0gZnJhY3Rpb24gbG9zdCBzdGF0aXN0aWNzXG4gKi9cblxudmFyIE5ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzID1cbi8qKlxuICogQ29uc3RydWN0IGEge0BsaW5rIE5ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzfS5cbiAqIEBwYXJhbSB7U2VuZE9yUmVjdlN0YXRzfSBzZW5kT3JSZWN2U3RhdHNcbiAqL1xuZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlTZW5kT3JSZWN2U3RhdHMoX3JlZikge1xuICB2YXIgX3JlZiRiYW5kd2lkdGggPSBfcmVmLmJhbmR3aWR0aCxcbiAgICAgIGJhbmR3aWR0aCA9IF9yZWYkYmFuZHdpZHRoID09PSB1bmRlZmluZWQgPyBudWxsIDogX3JlZiRiYW5kd2lkdGgsXG4gICAgICBfcmVmJGZyYWN0aW9uTG9zdCA9IF9yZWYuZnJhY3Rpb25Mb3N0LFxuICAgICAgZnJhY3Rpb25Mb3N0ID0gX3JlZiRmcmFjdGlvbkxvc3QgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBfcmVmJGZyYWN0aW9uTG9zdCxcbiAgICAgIF9yZWYkbGF0ZW5jeSA9IF9yZWYubGF0ZW5jeSxcbiAgICAgIGxhdGVuY3kgPSBfcmVmJGxhdGVuY3kgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBfcmVmJGxhdGVuY3k7XG5cbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzKTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgYmFuZHdpZHRoOiB7XG4gICAgICB2YWx1ZTogYmFuZHdpZHRoID8gbmV3IE5ldHdvcmtRdWFsaXR5QmFuZHdpZHRoU3RhdHMoYmFuZHdpZHRoKSA6IG51bGwsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBmcmFjdGlvbkxvc3Q6IHtcbiAgICAgIHZhbHVlOiBmcmFjdGlvbkxvc3QgPyBuZXcgTmV0d29ya1F1YWxpdHlGcmFjdGlvbkxvc3RTdGF0cyhmcmFjdGlvbkxvc3QpIDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIGxhdGVuY3k6IHtcbiAgICAgIHZhbHVlOiBsYXRlbmN5ID8gbmV3IE5ldHdvcmtRdWFsaXR5TGF0ZW5jeVN0YXRzKGxhdGVuY3kpIDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eVNlbmRPclJlY3ZTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitysendorrecvstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitysendstats.js":
/*!************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitysendstats.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NetworkQualitySendOrRecvStats = __webpack_require__(/*! ./networkqualitysendorrecvstats */ \"./node_modules/twilio-video/es5/stats/networkqualitysendorrecvstats.js\");\n\n/**\n * {@link NetworkQualitySendOrRecvStats} based on which a {@link Participant}'s\n * {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#send</code> is calculated.\n */\n\nvar NetworkQualitySendStats = function (_NetworkQualitySendOr) {\n  _inherits(NetworkQualitySendStats, _NetworkQualitySendOr);\n\n  /**\n   * Construct a {@link NetworkQualitySendStats}.\n   * @param {SendOrRecvStats} sendOrRecvStats\n   */\n  function NetworkQualitySendStats(sendOrRecvStats) {\n    _classCallCheck(this, NetworkQualitySendStats);\n\n    return _possibleConstructorReturn(this, (NetworkQualitySendStats.__proto__ || Object.getPrototypeOf(NetworkQualitySendStats)).call(this, sendOrRecvStats));\n  }\n\n  return NetworkQualitySendStats;\n}(NetworkQualitySendOrRecvStats);\n\nmodule.exports = NetworkQualitySendStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXNlbmRzdGF0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL25ldHdvcmtxdWFsaXR5c2VuZHN0YXRzLmpzP2VjMmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBOZXR3b3JrUXVhbGl0eVNlbmRPclJlY3ZTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlzZW5kb3JyZWN2c3RhdHMnKTtcblxuLyoqXG4gKiB7QGxpbmsgTmV0d29ya1F1YWxpdHlTZW5kT3JSZWN2U3RhdHN9IGJhc2VkIG9uIHdoaWNoIGEge0BsaW5rIFBhcnRpY2lwYW50fSdzXG4gKiB7QGxpbmsgTmV0d29ya1F1YWxpdHlNZWRpYVN0YXRzfTxjb2RlIHN0eWxlPVwicGFkZGluZzowIDBcIj4jc2VuZDwvY29kZT4gaXMgY2FsY3VsYXRlZC5cbiAqL1xuXG52YXIgTmV0d29ya1F1YWxpdHlTZW5kU3RhdHMgPSBmdW5jdGlvbiAoX05ldHdvcmtRdWFsaXR5U2VuZE9yKSB7XG4gIF9pbmhlcml0cyhOZXR3b3JrUXVhbGl0eVNlbmRTdGF0cywgX05ldHdvcmtRdWFsaXR5U2VuZE9yKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIE5ldHdvcmtRdWFsaXR5U2VuZFN0YXRzfS5cbiAgICogQHBhcmFtIHtTZW5kT3JSZWN2U3RhdHN9IHNlbmRPclJlY3ZTdGF0c1xuICAgKi9cbiAgZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlTZW5kU3RhdHMoc2VuZE9yUmVjdlN0YXRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5U2VuZFN0YXRzKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTmV0d29ya1F1YWxpdHlTZW5kU3RhdHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihOZXR3b3JrUXVhbGl0eVNlbmRTdGF0cykpLmNhbGwodGhpcywgc2VuZE9yUmVjdlN0YXRzKSk7XG4gIH1cblxuICByZXR1cm4gTmV0d29ya1F1YWxpdHlTZW5kU3RhdHM7XG59KE5ldHdvcmtRdWFsaXR5U2VuZE9yUmVjdlN0YXRzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOZXR3b3JrUXVhbGl0eVNlbmRTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitysendstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualitystats.js":
/*!********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualitystats.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualityAudioStats = __webpack_require__(/*! ./networkqualityaudiostats */ \"./node_modules/twilio-video/es5/stats/networkqualityaudiostats.js\");\nvar NetworkQualityVideoStats = __webpack_require__(/*! ./networkqualityvideostats */ \"./node_modules/twilio-video/es5/stats/networkqualityvideostats.js\");\n\n/**\n * Network quality statistics for a {@link Participant}.\n * @property {NetworkQualityLevel} level - {@link NetworkQualityLevel} of the {@link Participant}\n * @property {?NetworkQualityAudioStats} audio - {@link NetworkQualityMediaStats}\n *   for audio; <code>null</code> if {@link NetworkQualityVerbosity} is {@link NetworkQualityVerbosity}<code style=\"padding:0 0\">#minimal</code>\n *   or below\n * @property {?NetworkQualityVideoStats} video - {@link NetworkQualityMediaStats}\n *   for video; <code>null</code> if {@link NetworkQualityVerbosity} is {@link NetworkQualityVerbosity}<code style=\"padding:0 0\">#minimal</code>\n *   or below\n */\n\nvar NetworkQualityStats =\n/**\n * Construct a {@link NetworkQualityStats}.\n * @param {NetworkQualityLevels} networkQualityLevels\n */\nfunction NetworkQualityStats(_ref) {\n  var level = _ref.level,\n      audio = _ref.audio,\n      video = _ref.video;\n\n  _classCallCheck(this, NetworkQualityStats);\n\n  Object.defineProperties(this, {\n    level: {\n      value: level,\n      enumerable: true\n    },\n    audio: {\n      value: audio ? new NetworkQualityAudioStats(audio) : null,\n      enumerable: true\n    },\n    video: {\n      value: video ? new NetworkQualityVideoStats(video) : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXN0YXRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvbmV0d29ya3F1YWxpdHlzdGF0cy5qcz9lYTViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIE5ldHdvcmtRdWFsaXR5QXVkaW9TdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHlhdWRpb3N0YXRzJyk7XG52YXIgTmV0d29ya1F1YWxpdHlWaWRlb1N0YXRzID0gcmVxdWlyZSgnLi9uZXR3b3JrcXVhbGl0eXZpZGVvc3RhdHMnKTtcblxuLyoqXG4gKiBOZXR3b3JrIHF1YWxpdHkgc3RhdGlzdGljcyBmb3IgYSB7QGxpbmsgUGFydGljaXBhbnR9LlxuICogQHByb3BlcnR5IHtOZXR3b3JrUXVhbGl0eUxldmVsfSBsZXZlbCAtIHtAbGluayBOZXR3b3JrUXVhbGl0eUxldmVsfSBvZiB0aGUge0BsaW5rIFBhcnRpY2lwYW50fVxuICogQHByb3BlcnR5IHs/TmV0d29ya1F1YWxpdHlBdWRpb1N0YXRzfSBhdWRpbyAtIHtAbGluayBOZXR3b3JrUXVhbGl0eU1lZGlhU3RhdHN9XG4gKiAgIGZvciBhdWRpbzsgPGNvZGU+bnVsbDwvY29kZT4gaWYge0BsaW5rIE5ldHdvcmtRdWFsaXR5VmVyYm9zaXR5fSBpcyB7QGxpbmsgTmV0d29ya1F1YWxpdHlWZXJib3NpdHl9PGNvZGUgc3R5bGU9XCJwYWRkaW5nOjAgMFwiPiNtaW5pbWFsPC9jb2RlPlxuICogICBvciBiZWxvd1xuICogQHByb3BlcnR5IHs/TmV0d29ya1F1YWxpdHlWaWRlb1N0YXRzfSB2aWRlbyAtIHtAbGluayBOZXR3b3JrUXVhbGl0eU1lZGlhU3RhdHN9XG4gKiAgIGZvciB2aWRlbzsgPGNvZGU+bnVsbDwvY29kZT4gaWYge0BsaW5rIE5ldHdvcmtRdWFsaXR5VmVyYm9zaXR5fSBpcyB7QGxpbmsgTmV0d29ya1F1YWxpdHlWZXJib3NpdHl9PGNvZGUgc3R5bGU9XCJwYWRkaW5nOjAgMFwiPiNtaW5pbWFsPC9jb2RlPlxuICogICBvciBiZWxvd1xuICovXG5cbnZhciBOZXR3b3JrUXVhbGl0eVN0YXRzID1cbi8qKlxuICogQ29uc3RydWN0IGEge0BsaW5rIE5ldHdvcmtRdWFsaXR5U3RhdHN9LlxuICogQHBhcmFtIHtOZXR3b3JrUXVhbGl0eUxldmVsc30gbmV0d29ya1F1YWxpdHlMZXZlbHNcbiAqL1xuZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlTdGF0cyhfcmVmKSB7XG4gIHZhciBsZXZlbCA9IF9yZWYubGV2ZWwsXG4gICAgICBhdWRpbyA9IF9yZWYuYXVkaW8sXG4gICAgICB2aWRlbyA9IF9yZWYudmlkZW87XG5cbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5U3RhdHMpO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBsZXZlbDoge1xuICAgICAgdmFsdWU6IGxldmVsLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgYXVkaW86IHtcbiAgICAgIHZhbHVlOiBhdWRpbyA/IG5ldyBOZXR3b3JrUXVhbGl0eUF1ZGlvU3RhdHMoYXVkaW8pIDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHZpZGVvOiB7XG4gICAgICB2YWx1ZTogdmlkZW8gPyBuZXcgTmV0d29ya1F1YWxpdHlWaWRlb1N0YXRzKHZpZGVvKSA6IG51bGwsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTmV0d29ya1F1YWxpdHlTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualitystats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/networkqualityvideostats.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/networkqualityvideostats.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NetworkQualityMediaStats = __webpack_require__(/*! ./networkqualitymediastats */ \"./node_modules/twilio-video/es5/stats/networkqualitymediastats.js\");\n\n/**\n * {@link NetworkQualityMediaStats} for a {@link Participant}'s video.\n */\n\nvar NetworkQualityVideoStats = function (_NetworkQualityMediaS) {\n  _inherits(NetworkQualityVideoStats, _NetworkQualityMediaS);\n\n  /**\n   * Construct a {@link NetworkQualityVideoStats}.\n   * @param {MediaLevels} mediaLevels\n   */\n  function NetworkQualityVideoStats(mediaLevels) {\n    _classCallCheck(this, NetworkQualityVideoStats);\n\n    return _possibleConstructorReturn(this, (NetworkQualityVideoStats.__proto__ || Object.getPrototypeOf(NetworkQualityVideoStats)).call(this, mediaLevels));\n  }\n\n  return NetworkQualityVideoStats;\n}(NetworkQualityMediaStats);\n\nmodule.exports = NetworkQualityVideoStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXZpZGVvc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9uZXR3b3JrcXVhbGl0eXZpZGVvc3RhdHMuanM/NWM4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0cyA9IHJlcXVpcmUoJy4vbmV0d29ya3F1YWxpdHltZWRpYXN0YXRzJyk7XG5cbi8qKlxuICoge0BsaW5rIE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0c30gZm9yIGEge0BsaW5rIFBhcnRpY2lwYW50fSdzIHZpZGVvLlxuICovXG5cbnZhciBOZXR3b3JrUXVhbGl0eVZpZGVvU3RhdHMgPSBmdW5jdGlvbiAoX05ldHdvcmtRdWFsaXR5TWVkaWFTKSB7XG4gIF9pbmhlcml0cyhOZXR3b3JrUXVhbGl0eVZpZGVvU3RhdHMsIF9OZXR3b3JrUXVhbGl0eU1lZGlhUyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBOZXR3b3JrUXVhbGl0eVZpZGVvU3RhdHN9LlxuICAgKiBAcGFyYW0ge01lZGlhTGV2ZWxzfSBtZWRpYUxldmVsc1xuICAgKi9cbiAgZnVuY3Rpb24gTmV0d29ya1F1YWxpdHlWaWRlb1N0YXRzKG1lZGlhTGV2ZWxzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtRdWFsaXR5VmlkZW9TdGF0cyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE5ldHdvcmtRdWFsaXR5VmlkZW9TdGF0cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE5ldHdvcmtRdWFsaXR5VmlkZW9TdGF0cykpLmNhbGwodGhpcywgbWVkaWFMZXZlbHMpKTtcbiAgfVxuXG4gIHJldHVybiBOZXR3b3JrUXVhbGl0eVZpZGVvU3RhdHM7XG59KE5ldHdvcmtRdWFsaXR5TWVkaWFTdGF0cyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTmV0d29ya1F1YWxpdHlWaWRlb1N0YXRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/networkqualityvideostats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/peerconnectionreport.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/peerconnectionreport.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReceiverReport = __webpack_require__(/*! ./receiverreport */ \"./node_modules/twilio-video/es5/stats/receiverreport.js\");\nvar SenderReport = __webpack_require__(/*! ./senderreport */ \"./node_modules/twilio-video/es5/stats/senderreport.js\");\n\n/**\n * @interface SenderAndReceiverReports\n * @property {Array<SenderReport>} send\n * @property {Array<ReceiverReport>} recv\n */\n\n/**\n * @interface SenderAndReceiverSummary\n * @property {SenderSummary} send\n * @property {ReceiverSummary} recv\n */\n\n/**\n * @interface PeerConnectionSummary\n * @property {IceReport} ice\n * @property {SenderSummary} send\n * @property {ReceiverSummary} recv\n * @property {SenderAndReceiverSummary} audio\n * @property {SenderAndReceiverSummary} video\n */\n\n/**\n * @property {IceReport} ice\n * @roperty {SenderAndReceiverReports} audio\n * @roperty {SenderAndReceiverReports} video\n */\n\nvar PeerConnectionReport = function () {\n  /**\n   * Construct a {@link PeerConnectionReport}.\n   * @param {IceReport} ice\n   * @param {SenderAndReceiverReports} audio\n   * @param {SenderAndReceiverReports} video\n   */\n  function PeerConnectionReport(ice, audio, video) {\n    _classCallCheck(this, PeerConnectionReport);\n\n    Object.defineProperties(this, {\n      ice: {\n        enumerable: true,\n        value: ice\n      },\n      audio: {\n        enumerable: true,\n        value: audio\n      },\n      video: {\n        enumerable: true,\n        value: video\n      }\n    });\n  }\n\n  /**\n   * Summarize the {@link PeerConnectionReport} by summarizing its\n   * {@link SenderReport}s and {@link ReceiverReport}s.\n   * @returns {PeerConnectionSummary}\n   */\n\n\n  _createClass(PeerConnectionReport, [{\n    key: 'summarize',\n    value: function summarize() {\n      var senderReports = this.audio.send.concat(this.video.send);\n      var send = SenderReport.summarize(senderReports);\n\n      var receiverReports = this.audio.recv.concat(this.video.recv);\n      var recv = ReceiverReport.summarize(receiverReports);\n\n      return {\n        ice: this.ice,\n        send: send,\n        recv: recv,\n        audio: {\n          send: SenderReport.summarize(this.audio.send),\n          recv: ReceiverReport.summarize(this.audio.recv)\n        },\n        video: {\n          send: SenderReport.summarize(this.video.send),\n          recv: ReceiverReport.summarize(this.video.recv)\n        }\n      };\n    }\n  }]);\n\n  return PeerConnectionReport;\n}();\n\nmodule.exports = PeerConnectionReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9wZWVyY29ubmVjdGlvbnJlcG9ydC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL3BlZXJjb25uZWN0aW9ucmVwb3J0LmpzPzI0NGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgUmVjZWl2ZXJSZXBvcnQgPSByZXF1aXJlKCcuL3JlY2VpdmVycmVwb3J0Jyk7XG52YXIgU2VuZGVyUmVwb3J0ID0gcmVxdWlyZSgnLi9zZW5kZXJyZXBvcnQnKTtcblxuLyoqXG4gKiBAaW50ZXJmYWNlIFNlbmRlckFuZFJlY2VpdmVyUmVwb3J0c1xuICogQHByb3BlcnR5IHtBcnJheTxTZW5kZXJSZXBvcnQ+fSBzZW5kXG4gKiBAcHJvcGVydHkge0FycmF5PFJlY2VpdmVyUmVwb3J0Pn0gcmVjdlxuICovXG5cbi8qKlxuICogQGludGVyZmFjZSBTZW5kZXJBbmRSZWNlaXZlclN1bW1hcnlcbiAqIEBwcm9wZXJ0eSB7U2VuZGVyU3VtbWFyeX0gc2VuZFxuICogQHByb3BlcnR5IHtSZWNlaXZlclN1bW1hcnl9IHJlY3ZcbiAqL1xuXG4vKipcbiAqIEBpbnRlcmZhY2UgUGVlckNvbm5lY3Rpb25TdW1tYXJ5XG4gKiBAcHJvcGVydHkge0ljZVJlcG9ydH0gaWNlXG4gKiBAcHJvcGVydHkge1NlbmRlclN1bW1hcnl9IHNlbmRcbiAqIEBwcm9wZXJ0eSB7UmVjZWl2ZXJTdW1tYXJ5fSByZWN2XG4gKiBAcHJvcGVydHkge1NlbmRlckFuZFJlY2VpdmVyU3VtbWFyeX0gYXVkaW9cbiAqIEBwcm9wZXJ0eSB7U2VuZGVyQW5kUmVjZWl2ZXJTdW1tYXJ5fSB2aWRlb1xuICovXG5cbi8qKlxuICogQHByb3BlcnR5IHtJY2VSZXBvcnR9IGljZVxuICogQHJvcGVydHkge1NlbmRlckFuZFJlY2VpdmVyUmVwb3J0c30gYXVkaW9cbiAqIEByb3BlcnR5IHtTZW5kZXJBbmRSZWNlaXZlclJlcG9ydHN9IHZpZGVvXG4gKi9cblxudmFyIFBlZXJDb25uZWN0aW9uUmVwb3J0ID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFBlZXJDb25uZWN0aW9uUmVwb3J0fS5cbiAgICogQHBhcmFtIHtJY2VSZXBvcnR9IGljZVxuICAgKiBAcGFyYW0ge1NlbmRlckFuZFJlY2VpdmVyUmVwb3J0c30gYXVkaW9cbiAgICogQHBhcmFtIHtTZW5kZXJBbmRSZWNlaXZlclJlcG9ydHN9IHZpZGVvXG4gICAqL1xuICBmdW5jdGlvbiBQZWVyQ29ubmVjdGlvblJlcG9ydChpY2UsIGF1ZGlvLCB2aWRlbykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQZWVyQ29ubmVjdGlvblJlcG9ydCk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBpY2U6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGljZVxuICAgICAgfSxcbiAgICAgIGF1ZGlvOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBhdWRpb1xuICAgICAgfSxcbiAgICAgIHZpZGVvOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB2aWRlb1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFN1bW1hcml6ZSB0aGUge0BsaW5rIFBlZXJDb25uZWN0aW9uUmVwb3J0fSBieSBzdW1tYXJpemluZyBpdHNcbiAgICoge0BsaW5rIFNlbmRlclJlcG9ydH1zIGFuZCB7QGxpbmsgUmVjZWl2ZXJSZXBvcnR9cy5cbiAgICogQHJldHVybnMge1BlZXJDb25uZWN0aW9uU3VtbWFyeX1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUGVlckNvbm5lY3Rpb25SZXBvcnQsIFt7XG4gICAga2V5OiAnc3VtbWFyaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3VtbWFyaXplKCkge1xuICAgICAgdmFyIHNlbmRlclJlcG9ydHMgPSB0aGlzLmF1ZGlvLnNlbmQuY29uY2F0KHRoaXMudmlkZW8uc2VuZCk7XG4gICAgICB2YXIgc2VuZCA9IFNlbmRlclJlcG9ydC5zdW1tYXJpemUoc2VuZGVyUmVwb3J0cyk7XG5cbiAgICAgIHZhciByZWNlaXZlclJlcG9ydHMgPSB0aGlzLmF1ZGlvLnJlY3YuY29uY2F0KHRoaXMudmlkZW8ucmVjdik7XG4gICAgICB2YXIgcmVjdiA9IFJlY2VpdmVyUmVwb3J0LnN1bW1hcml6ZShyZWNlaXZlclJlcG9ydHMpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpY2U6IHRoaXMuaWNlLFxuICAgICAgICBzZW5kOiBzZW5kLFxuICAgICAgICByZWN2OiByZWN2LFxuICAgICAgICBhdWRpbzoge1xuICAgICAgICAgIHNlbmQ6IFNlbmRlclJlcG9ydC5zdW1tYXJpemUodGhpcy5hdWRpby5zZW5kKSxcbiAgICAgICAgICByZWN2OiBSZWNlaXZlclJlcG9ydC5zdW1tYXJpemUodGhpcy5hdWRpby5yZWN2KVxuICAgICAgICB9LFxuICAgICAgICB2aWRlbzoge1xuICAgICAgICAgIHNlbmQ6IFNlbmRlclJlcG9ydC5zdW1tYXJpemUodGhpcy52aWRlby5zZW5kKSxcbiAgICAgICAgICByZWN2OiBSZWNlaXZlclJlcG9ydC5zdW1tYXJpemUodGhpcy52aWRlby5yZWN2KVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQZWVyQ29ubmVjdGlvblJlcG9ydDtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBQZWVyQ29ubmVjdGlvblJlcG9ydDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/peerconnectionreport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/peerconnectionreportfactory.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/peerconnectionreportfactory.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require.guessBrowser;\n\nvar IceReportFactory = __webpack_require__(/*! ./icereportfactory */ \"./node_modules/twilio-video/es5/stats/icereportfactory.js\");\nvar PeerConnectionReport = __webpack_require__(/*! ./peerconnectionreport */ \"./node_modules/twilio-video/es5/stats/peerconnectionreport.js\");\nvar ReceiverReportFactory = __webpack_require__(/*! ./receiverreportfactory */ \"./node_modules/twilio-video/es5/stats/receiverreportfactory.js\");\nvar SenderReportFactory = __webpack_require__(/*! ./senderreportfactory */ \"./node_modules/twilio-video/es5/stats/senderreportfactory.js\");\n\n/**\n * @typedef {string} TrackId\n */\n\n/**\n * @typedef {string} StatsId\n */\n\n/**\n * @interface SenderReportFactoriesByMediaType\n * @property {Map<StatsId, SenderReportFactory>} audio\n * @property {Map<StatsId, SenderReportFactory>} video\n */\n\n/**\n * @interface ReceiverReportFactoriesByMediaType\n * @property {Map<StatsId, ReceiverReportFactory>} audio\n * @property {Map<StatsId, ReceiverReportFactory>} video\n */\n\n/**\n * @interface SenderAndReceiverReportFactories\n * @property {Map<StatsId, SenderReportFactories>} send\n * @property {Map<StatsId, ReceiverReportFactories>} recv\n */\n\n/**\n * @interface {StatsIdsByMediaType}\n * @property {Set<StatsId>} audio\n * @property {Set<StatsId>} video\n */\n\n/**\n * @property {RTCPeerConnection} pc\n * @property {IceReportFactory} iceReportFactory\n * @property {SenderAndReceiverReportFactories} audio\n * @property {SenderAndReceiverReportFactories} video\n * @property {?PeerConnectionReport} lastReport\n */\n\nvar PeerConnectionReportFactory = function () {\n  /**\n   * Construct a {@link PeerConnectionReportFactory}.\n   * @param {RTCPeerConnection} pc\n   */\n  function PeerConnectionReportFactory(pc) {\n    _classCallCheck(this, PeerConnectionReportFactory);\n\n    Object.defineProperties(this, {\n      pc: {\n        enumerable: true,\n        value: pc\n      },\n      ice: {\n        enumerable: true,\n        value: new IceReportFactory()\n      },\n      audio: {\n        enumerable: true,\n        value: {\n          send: new Map(),\n          recv: new Map()\n        }\n      },\n      video: {\n        enumerable: true,\n        value: {\n          send: new Map(),\n          recv: new Map()\n        }\n      },\n      lastReport: {\n        enumerable: true,\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n   * Create a {@link PeerConnectionReport}.\n   * @returns {Promise<PeerConnectionReport>}\n   */\n\n\n  _createClass(PeerConnectionReportFactory, [{\n    key: 'next',\n    value: function next() {\n      var _this = this;\n\n      var updatePromise = guessBrowser() === 'firefox' ? updateFirefox(this) : updateChrome(this);\n\n      return updatePromise.then(function () {\n        var audioSenderReportFactories = [].concat(_toConsumableArray(_this.audio.send.values()));\n        var videoSenderReportFactories = [].concat(_toConsumableArray(_this.video.send.values()));\n        var audioReceiverReportFactories = [].concat(_toConsumableArray(_this.audio.recv.values()));\n        var videoReceiverReportFactories = [].concat(_toConsumableArray(_this.video.recv.values()));\n\n        var report = new PeerConnectionReport(_this.ice.lastReport, {\n          send: audioSenderReportFactories.map(function (factory) {\n            return factory.lastReport;\n          }).filter(function (report) {\n            return report;\n          }),\n          recv: audioReceiverReportFactories.map(function (factory) {\n            return factory.lastReport;\n          }).filter(function (report) {\n            return report;\n          })\n        }, {\n          send: videoSenderReportFactories.map(function (factory) {\n            return factory.lastReport;\n          }).filter(function (report) {\n            return report;\n          }),\n          recv: videoReceiverReportFactories.map(function (factory) {\n            return factory.lastReport;\n          }).filter(function (report) {\n            return report;\n          })\n        });\n\n        _this.lastReport = report;\n\n        return report;\n      });\n    }\n  }]);\n\n  return PeerConnectionReportFactory;\n}();\n\n/**\n * Construct a Map from MediaStreamTrack Ids to RTCStatsReports.\n * @param {Array<RTCRtpSender>|Array<RTCRtpReceiver>} sendersOrReceivers - each\n *   RTCRtpSender should have a non-null track\n * @returns {Promise<Map<TrackId, RTCStats>>}\n */\n\n\nfunction getSenderOrReceiverReports(sendersOrReceivers) {\n  return Promise.all(sendersOrReceivers.map(function (senderOrReceiver) {\n    var trackId = senderOrReceiver.track.id;\n    return senderOrReceiver.getStats().then(function (report) {\n      // NOTE(mroberts): We have to rewrite Ids due to this bug:\n      //\n      //   https://bugzilla.mozilla.org/show_bug.cgi?id=1463430\n      //\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = report.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var stats = _step.value;\n\n          if (stats.type === 'inbound-rtp') {\n            stats.id = trackId + '-' + stats.id;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return [trackId, report];\n    });\n  })).then(function (pairs) {\n    return new Map(pairs);\n  });\n}\n\n/**\n * @param {SenderReportFactory.constructor} SenderReportFactory\n * @param {SenderReportFactoriesByMediaType} sendersByMediaType\n * @param {RTCStatsReport} report\n * @param {RTCStats} stats\n * @param {TrackId} [trackId]\n * @returns {?SenderReportFactory}\n */ /**\n    * @param {ReceiverReportFactory.constructor} ReceiverReportFactory\n    * @param {ReceiverReportFactoriesByMediaType} receiversByMediaType\n    * @param {RTCStatsReport} report\n    * @param {RTCStats} stats\n    * @param {TrackId} [trackId]\n    * @returns {?ReceiverReportFactory}\n    */\nfunction getOrCreateSenderOrReceiverReportFactory(SenderOrReceiverReportFactory, sendersOrReceiversByMediaType, report, stats, trackId) {\n  var sendersOrReceivers = sendersOrReceiversByMediaType[stats.mediaType];\n  if (!trackId) {\n    var trackStats = report.get(stats.trackId);\n    if (trackStats) {\n      trackId = trackStats.trackIdentifier;\n    }\n  }\n  if (sendersOrReceivers && trackId) {\n    if (sendersOrReceivers.has(stats.id)) {\n      return sendersOrReceivers.get(stats.id);\n    }\n    var senderOrReceiverFactory = new SenderOrReceiverReportFactory(trackId, stats);\n    sendersOrReceivers.set(stats.id, senderOrReceiverFactory);\n  }\n  return null;\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @returns {SenderReportFactoriesByMediaType}\n */\nfunction getSenderReportFactoriesByMediaType(factory) {\n  return { audio: factory.audio.send, video: factory.video.send };\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @returns {ReceiverReportFactoriesByMediaType}\n */\nfunction getReceiverReportFactoriesByMediaType(factory) {\n  return { audio: factory.audio.recv, video: factory.video.recv };\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @param {RTCStatsReport} report\n * @param {RTCStats} stats\n * @param {TrackId} [trackId]\n * @returns {?SenderReportFactory}\n */\nfunction getOrCreateSenderReportFactory(factory, report, stats, trackId) {\n  return getOrCreateSenderOrReceiverReportFactory(SenderReportFactory, getSenderReportFactoriesByMediaType(factory), report, stats, trackId);\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @param {RTCStatsReport} report\n * @param {RTCStats} stats\n * @param {TrackId} [trackId]\n * @returns {?ReceiverReportFactory}\n */\nfunction getOrCreateReceiverReportFactory(factory, report, stats, trackId) {\n  return getOrCreateSenderOrReceiverReportFactory(ReceiverReportFactory, getReceiverReportFactoriesByMediaType(factory), report, stats, trackId);\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @retuns {StatsIdsByMediaType}\n */\nfunction getSenderReportFactoryIdsByMediaType(factory) {\n  return {\n    audio: new Set(factory.audio.send.keys()),\n    video: new Set(factory.video.send.keys())\n  };\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @retuns {StatsIdsByMediaType}\n */\nfunction getReceiverReportFactoryIdsByMediaType(factory) {\n  return {\n    audio: new Set(factory.audio.recv.keys()),\n    video: new Set(factory.video.recv.keys())\n  };\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @param {RTCStatsReport} report\n * @param {StatsIdsByMediaType} senderReportFactoryIdsToDeleteByMediaType\n * @param {TrackId} [trackId]\n * @returns {void}\n */\nfunction updateSenderReports(factory, report, senderReportFactoryIdsToDeleteByMediaType, trackId) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = report.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var stats = _step2.value;\n\n      if (stats.type === 'outbound-rtp' && !stats.isRemote) {\n        if (guessBrowser() !== 'firefox' && !stats.trackId) {\n          continue;\n        }\n        var senderReportFactoryIdsToDelete = senderReportFactoryIdsToDeleteByMediaType[stats.mediaType];\n        if (senderReportFactoryIdsToDelete) {\n          senderReportFactoryIdsToDelete.delete(stats.id);\n        }\n        var senderReportFactory = getOrCreateSenderReportFactory(factory, report, stats, trackId);\n        if (senderReportFactory) {\n          var remoteInboundStats = report.get(stats.remoteId);\n          senderReportFactory.next(trackId || senderReportFactory.trackId, stats, remoteInboundStats);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @param {RTCStatsReport} report\n * @param {StatsIdsByMediaType} receiverReportFactoryIdsToDeleteByMediaType\n * @param {TrackId} [trackId]\n * @returns {void}\n */\nfunction updateReceiverReports(factory, report, receiverReportFactoryIdsToDeleteByMediaType, trackId) {\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = report.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var stats = _step3.value;\n\n      if (stats.type === 'inbound-rtp' && !stats.isRemote) {\n        var receiverReportFactoryIdsToDelete = receiverReportFactoryIdsToDeleteByMediaType[stats.mediaType];\n        if (receiverReportFactoryIdsToDelete) {\n          receiverReportFactoryIdsToDelete.delete(stats.id);\n        }\n        var receiverReportFactory = getOrCreateReceiverReportFactory(factory, report, stats, trackId);\n        if (receiverReportFactory) {\n          receiverReportFactory.next(trackId || receiverReportFactory.trackId, stats);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\n/**\n * @param {SenderReportFactoriesByMediaType|ReceiverReportFactoriesByMediaType} senderOrReceiverReportFactoriesByMediaType\n * @param {StatsIdsByMediaType} senderOrReceiverReportFactoryIdsByMediaType\n * @returns {void}\n */\nfunction deleteSenderOrReceiverReportFactories(senderOrReceiverReportFactoriesByMediaType, senderOrReceiverReportFactoryIdsByMediaType) {\n  var _loop = function _loop(mediaType) {\n    var senderOrReceiverReportFactories = senderOrReceiverReportFactoriesByMediaType[mediaType];\n    var senderOrReceiverReportFactoryIds = senderOrReceiverReportFactoryIdsByMediaType[mediaType];\n    senderOrReceiverReportFactoryIds.forEach(function (senderOrReceiverReportFactoryId) {\n      return senderOrReceiverReportFactories.delete(senderOrReceiverReportFactoryId);\n    });\n  };\n\n  for (var mediaType in senderOrReceiverReportFactoryIdsByMediaType) {\n    _loop(mediaType);\n  }\n}\n\n/**\n * @param {IceReportFactory} ice\n * @param {RTCStatsReport} report\n * @returns {void}\n */\nfunction updateIceReport(ice, report) {\n  var selectedCandidatePair = void 0;\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = report.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var stats = _step4.value;\n\n      if (stats.type === 'transport') {\n        selectedCandidatePair = report.get(stats.selectedCandidatePairId);\n      }\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  if (selectedCandidatePair) {\n    ice.next(selectedCandidatePair);\n    return;\n  }\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = report.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var _stats = _step5.value;\n\n      if (_stats.type === 'candidate-pair' && _stats.nominated && ('selected' in _stats ? _stats.selected : true)) {\n        ice.next(_stats);\n      }\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @returns {Promise<PeerConnectionReport>}\n */\nfunction updateFirefox(factory) {\n  var senders = factory.pc.getTransceivers().filter(function (transceiver) {\n    return transceiver.currentDirection && transceiver.currentDirection.match(/send/) && transceiver.sender.track;\n  }).map(function (transceiver) {\n    return transceiver.sender;\n  });\n\n  var receivers = factory.pc.getTransceivers().filter(function (transceiver) {\n    return transceiver.currentDirection && transceiver.currentDirection.match(/recv/);\n  }).map(function (transceiver) {\n    return transceiver.receiver;\n  });\n\n  return Promise.all([getSenderOrReceiverReports(senders), getSenderOrReceiverReports(receivers), factory.pc.getStats()]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        senderReports = _ref2[0],\n        receiverReports = _ref2[1],\n        pcReport = _ref2[2];\n\n    var senderReportFactoriesByMediaType = getSenderReportFactoriesByMediaType(factory);\n    var senderReportFactoryIdsToDeleteByMediaType = getSenderReportFactoryIdsByMediaType(factory);\n    senderReports.forEach(function (report, trackId) {\n      return updateSenderReports(factory, report, senderReportFactoryIdsToDeleteByMediaType, trackId);\n    });\n    deleteSenderOrReceiverReportFactories(senderReportFactoriesByMediaType, senderReportFactoryIdsToDeleteByMediaType);\n\n    var receiverReportFactoriesByMediaType = getReceiverReportFactoriesByMediaType(factory);\n    var receiverReportFactoryIdsToDeleteByMediaType = getReceiverReportFactoryIdsByMediaType(factory);\n    receiverReports.forEach(function (report, trackId) {\n      return updateReceiverReports(factory, report, receiverReportFactoryIdsToDeleteByMediaType, trackId);\n    });\n    deleteSenderOrReceiverReportFactories(receiverReportFactoriesByMediaType, receiverReportFactoryIdsToDeleteByMediaType);\n\n    updateIceReport(factory.ice, pcReport);\n  });\n}\n\n/**\n * @param {PeerConnectionReportFactory} factory\n * @returns {Promise<PeerConnectionReport>}\n */\nfunction updateChrome(factory) {\n  return factory.pc.getStats().then(function (report) {\n    var senderReportFactoriesByMediaType = getSenderReportFactoriesByMediaType(factory);\n    var senderReportFactoryIdsToDeleteByMediaType = getSenderReportFactoryIdsByMediaType(factory);\n    updateSenderReports(factory, report, senderReportFactoryIdsToDeleteByMediaType);\n    deleteSenderOrReceiverReportFactories(senderReportFactoriesByMediaType, senderReportFactoryIdsToDeleteByMediaType);\n\n    var receiverReportFactoriesByMediaType = getReceiverReportFactoriesByMediaType(factory);\n    var receiverReportFactoryIdsToDeleteByMediaType = getReceiverReportFactoryIdsByMediaType(factory);\n    updateReceiverReports(factory, report, receiverReportFactoryIdsToDeleteByMediaType);\n    deleteSenderOrReceiverReportFactories(receiverReportFactoriesByMediaType, receiverReportFactoryIdsToDeleteByMediaType);\n\n    updateIceReport(factory.ice, report);\n  });\n}\n\nmodule.exports = PeerConnectionReportFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/peerconnectionreportfactory.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/receiverreport.js":
/*!***************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/receiverreport.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar average = __webpack_require__(/*! ./average */ \"./node_modules/twilio-video/es5/stats/average.js\");\nvar SenderOrReceiverReport = __webpack_require__(/*! ./senderorreceiverreport */ \"./node_modules/twilio-video/es5/stats/senderorreceiverreport.js\");\nvar sum = __webpack_require__(/*! ./sum */ \"./node_modules/twilio-video/es5/stats/sum.js\");\n\n/**\n * @interface ReceiverSummary\n * @property {number} bitrate\n * @property {number} fractionLost - 0–1\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n */\n\n/**\n * @extends SenderOrReceiverReport\n * @property {number} deltaPacketsLost\n * @property {number} deltaPacketsReceived\n * @property {number} [fractionLost] - 0–1 (undefined in Firefox)\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n * @property {number} phonyPacketsLost - 0–1\n */\n\nvar ReceiverReport = function (_SenderOrReceiverRepo) {\n  _inherits(ReceiverReport, _SenderOrReceiverRepo);\n\n  /**\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} deltaPacketsLost\n   * @param {number} deltaPacketsReceived\n   * @param {number} [fractionLost] - 0–1 (undefined in Firefox)\n   * @param {number} [jitter] - s (undefined for video tracks in Chrome)\n   */\n  function ReceiverReport(id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter) {\n    _classCallCheck(this, ReceiverReport);\n\n    var _this = _possibleConstructorReturn(this, (ReceiverReport.__proto__ || Object.getPrototypeOf(ReceiverReport)).call(this, id, trackId, bitrate));\n\n    var phonyFractionLost = deltaPacketsReceived > 0 ? deltaPacketsLost / deltaPacketsReceived : 0;\n    Object.defineProperties(_this, {\n      deltaPacketsLost: {\n        enumerable: true,\n        value: deltaPacketsLost\n      },\n      deltaPacketsReceived: {\n        enumerable: true,\n        value: deltaPacketsReceived\n      },\n      fractionLost: {\n        enumerable: true,\n        value: fractionLost\n      },\n      jitter: {\n        enumerable: true,\n        value: jitter\n      },\n      phonyFractionLost: {\n        enumerable: true,\n        value: phonyFractionLost\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create a {@link ReceiverReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {ReceiverReport}\n   */\n\n\n  _createClass(ReceiverReport, [{\n    key: 'summarize',\n\n\n    /**\n     * Summarize the {@link ReceiveReport}.\n     * @returns {ReceiverSummary}\n     */\n    value: function summarize() {\n      return {\n        bitrate: this.bitrate,\n        fractionLost: typeof this.fractionLost === 'number' ? this.fractionLost : this.phonyFractionLost,\n        jitter: this.jitter\n      };\n    }\n  }], [{\n    key: 'of',\n    value: function of(trackId, olderStats, newerStats) {\n      if (olderStats.id !== newerStats.id) {\n        throw new Error('RTCStats IDs must match');\n      }\n      var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n      var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n      var bitrate = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n      var deltaPacketsLost = Math.max(newerStats.packetsLost - olderStats.packetsLost, 0);\n      var deltaPacketsReceived = newerStats.packetsReceived - olderStats.packetsReceived;\n      var fractionLost = newerStats.fractionLost,\n          jitter = newerStats.jitter;\n\n      return new ReceiverReport(olderStats.id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter);\n    }\n\n    /**\n     * Summarize {@link ReceiverReport}s by summing and averaging their values.\n     * @param {Array<ReceiverReport>} reports\n     * @returns {ReceiverSummary}\n     */\n\n  }, {\n    key: 'summarize',\n    value: function summarize(reports) {\n      var summaries = reports.map(function (report) {\n        return report.summarize();\n      });\n      var bitrate = sum(summaries.map(function (summary) {\n        return summary.bitrate;\n      }));\n      var fractionLost = average(summaries.map(function (summary) {\n        return summary.fractionLost;\n      }));\n      var jitter = average(summaries.map(function (summary) {\n        return summary.jitter;\n      }));\n      return {\n        bitrate: bitrate,\n        fractionLost: fractionLost,\n        jitter: jitter\n      };\n    }\n  }]);\n\n  return ReceiverReport;\n}(SenderOrReceiverReport);\n\nmodule.exports = ReceiverReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/receiverreport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/receiverreportfactory.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/receiverreportfactory.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReceiverReport = __webpack_require__(/*! ./receiverreport */ \"./node_modules/twilio-video/es5/stats/receiverreport.js\");\nvar SenderOrReceiverReportFactory = __webpack_require__(/*! ./senderorreceiverreportfactory */ \"./node_modules/twilio-video/es5/stats/senderorreceiverreportfactory.js\");\n\n/**\n * @extends SenderOrReceiverReportFactory\n * @param {?ReceiverReport} lastReport\n */\n\nvar ReceiverReportFactory = function (_SenderOrReceiverRepo) {\n  _inherits(ReceiverReportFactory, _SenderOrReceiverRepo);\n\n  /**\n   * Construct a {@link ReceiverReportFactory}.\n   * @param {TrackId} trackId\n   * @param {RTCStats} initialStats\n   */\n  function ReceiverReportFactory(trackId, initialStats) {\n    _classCallCheck(this, ReceiverReportFactory);\n\n    var _this = _possibleConstructorReturn(this, (ReceiverReportFactory.__proto__ || Object.getPrototypeOf(ReceiverReportFactory)).call(this, initialStats.id, trackId, initialStats));\n\n    Object.defineProperties(_this, {\n      lastReport: {\n        enumerable: true,\n        value: null,\n        writable: true\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create a {@link ReceiverReport}.\n   * @param {TrackId} trackId\n   * @param {RTCStats} newerStats\n   * @returns {ReceiverReport}\n   */\n\n\n  _createClass(ReceiverReportFactory, [{\n    key: 'next',\n    value: function next(trackId, newerStats) {\n      var olderStats = this.lastStats;\n      this.lastStats = newerStats;\n      this.trackId = trackId;\n      var report = ReceiverReport.of(trackId, olderStats, newerStats);\n      this.lastReport = report;\n      return report;\n    }\n  }]);\n\n  return ReceiverReportFactory;\n}(SenderOrReceiverReportFactory);\n\nmodule.exports = ReceiverReportFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZWNlaXZlcnJlcG9ydGZhY3RvcnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZWNlaXZlcnJlcG9ydGZhY3RvcnkuanM/NTE5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlY2VpdmVyUmVwb3J0ID0gcmVxdWlyZSgnLi9yZWNlaXZlcnJlcG9ydCcpO1xudmFyIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnRGYWN0b3J5ID0gcmVxdWlyZSgnLi9zZW5kZXJvcnJlY2VpdmVycmVwb3J0ZmFjdG9yeScpO1xuXG4vKipcbiAqIEBleHRlbmRzIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnRGYWN0b3J5XG4gKiBAcGFyYW0gez9SZWNlaXZlclJlcG9ydH0gbGFzdFJlcG9ydFxuICovXG5cbnZhciBSZWNlaXZlclJlcG9ydEZhY3RvcnkgPSBmdW5jdGlvbiAoX1NlbmRlck9yUmVjZWl2ZXJSZXBvKSB7XG4gIF9pbmhlcml0cyhSZWNlaXZlclJlcG9ydEZhY3RvcnksIF9TZW5kZXJPclJlY2VpdmVyUmVwbyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBSZWNlaXZlclJlcG9ydEZhY3Rvcnl9LlxuICAgKiBAcGFyYW0ge1RyYWNrSWR9IHRyYWNrSWRcbiAgICogQHBhcmFtIHtSVENTdGF0c30gaW5pdGlhbFN0YXRzXG4gICAqL1xuICBmdW5jdGlvbiBSZWNlaXZlclJlcG9ydEZhY3RvcnkodHJhY2tJZCwgaW5pdGlhbFN0YXRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlY2VpdmVyUmVwb3J0RmFjdG9yeSk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUmVjZWl2ZXJSZXBvcnRGYWN0b3J5Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVjZWl2ZXJSZXBvcnRGYWN0b3J5KSkuY2FsbCh0aGlzLCBpbml0aWFsU3RhdHMuaWQsIHRyYWNrSWQsIGluaXRpYWxTdGF0cykpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGxhc3RSZXBvcnQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IG51bGwsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIHtAbGluayBSZWNlaXZlclJlcG9ydH0uXG4gICAqIEBwYXJhbSB7VHJhY2tJZH0gdHJhY2tJZFxuICAgKiBAcGFyYW0ge1JUQ1N0YXRzfSBuZXdlclN0YXRzXG4gICAqIEByZXR1cm5zIHtSZWNlaXZlclJlcG9ydH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUmVjZWl2ZXJSZXBvcnRGYWN0b3J5LCBbe1xuICAgIGtleTogJ25leHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZXh0KHRyYWNrSWQsIG5ld2VyU3RhdHMpIHtcbiAgICAgIHZhciBvbGRlclN0YXRzID0gdGhpcy5sYXN0U3RhdHM7XG4gICAgICB0aGlzLmxhc3RTdGF0cyA9IG5ld2VyU3RhdHM7XG4gICAgICB0aGlzLnRyYWNrSWQgPSB0cmFja0lkO1xuICAgICAgdmFyIHJlcG9ydCA9IFJlY2VpdmVyUmVwb3J0Lm9mKHRyYWNrSWQsIG9sZGVyU3RhdHMsIG5ld2VyU3RhdHMpO1xuICAgICAgdGhpcy5sYXN0UmVwb3J0ID0gcmVwb3J0O1xuICAgICAgcmV0dXJuIHJlcG9ydDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVjZWl2ZXJSZXBvcnRGYWN0b3J5O1xufShTZW5kZXJPclJlY2VpdmVyUmVwb3J0RmFjdG9yeSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVjZWl2ZXJSZXBvcnRGYWN0b3J5OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/receiverreportfactory.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/remoteaudiotrackstats.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/remoteaudiotrackstats.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackStats = __webpack_require__(/*! ./remotetrackstats */ \"./node_modules/twilio-video/es5/stats/remotetrackstats.js\");\n\n/**\n * Statistics for an {@link AudioTrack}.\n * @extends RemoteTrackStats\n * @property {?AudioLevel} audioLevel - Output {@link AudioLevel}\n * @property {?number} jitter - Audio jitter in milliseconds\n */\n\nvar RemoteAudioTrackStats = function (_RemoteTrackStats) {\n  _inherits(RemoteAudioTrackStats, _RemoteTrackStats);\n\n  /**\n   * @param {string} trackId - {@link AudioTrack} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   */\n  function RemoteAudioTrackStats(trackId, statsReport) {\n    _classCallCheck(this, RemoteAudioTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (RemoteAudioTrackStats.__proto__ || Object.getPrototypeOf(RemoteAudioTrackStats)).call(this, trackId, statsReport));\n\n    Object.defineProperties(_this, {\n      audioLevel: {\n        value: typeof statsReport.audioOutputLevel === 'number' ? statsReport.audioOutputLevel : null,\n        enumerable: true\n      },\n      jitter: {\n        value: typeof statsReport.jitter === 'number' ? statsReport.jitter : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return RemoteAudioTrackStats;\n}(RemoteTrackStats);\n\nmodule.exports = RemoteAudioTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZW1vdGVhdWRpb3RyYWNrc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZW1vdGVhdWRpb3RyYWNrc3RhdHMuanM/YzkzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlbW90ZVRyYWNrU3RhdHMgPSByZXF1aXJlKCcuL3JlbW90ZXRyYWNrc3RhdHMnKTtcblxuLyoqXG4gKiBTdGF0aXN0aWNzIGZvciBhbiB7QGxpbmsgQXVkaW9UcmFja30uXG4gKiBAZXh0ZW5kcyBSZW1vdGVUcmFja1N0YXRzXG4gKiBAcHJvcGVydHkgez9BdWRpb0xldmVsfSBhdWRpb0xldmVsIC0gT3V0cHV0IHtAbGluayBBdWRpb0xldmVsfVxuICogQHByb3BlcnR5IHs/bnVtYmVyfSBqaXR0ZXIgLSBBdWRpbyBqaXR0ZXIgaW4gbWlsbGlzZWNvbmRzXG4gKi9cblxudmFyIFJlbW90ZUF1ZGlvVHJhY2tTdGF0cyA9IGZ1bmN0aW9uIChfUmVtb3RlVHJhY2tTdGF0cykge1xuICBfaW5oZXJpdHMoUmVtb3RlQXVkaW9UcmFja1N0YXRzLCBfUmVtb3RlVHJhY2tTdGF0cyk7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0cmFja0lkIC0ge0BsaW5rIEF1ZGlvVHJhY2t9IElEXG4gICAqIEBwYXJhbSB7U3RhbmRhcmRpemVkVHJhY2tTdGF0c1JlcG9ydH0gc3RhdHNSZXBvcnRcbiAgICovXG4gIGZ1bmN0aW9uIFJlbW90ZUF1ZGlvVHJhY2tTdGF0cyh0cmFja0lkLCBzdGF0c1JlcG9ydCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZW1vdGVBdWRpb1RyYWNrU3RhdHMpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZUF1ZGlvVHJhY2tTdGF0cy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFJlbW90ZUF1ZGlvVHJhY2tTdGF0cykpLmNhbGwodGhpcywgdHJhY2tJZCwgc3RhdHNSZXBvcnQpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBhdWRpb0xldmVsOiB7XG4gICAgICAgIHZhbHVlOiB0eXBlb2Ygc3RhdHNSZXBvcnQuYXVkaW9PdXRwdXRMZXZlbCA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5hdWRpb091dHB1dExldmVsIDogbnVsbCxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGppdHRlcjoge1xuICAgICAgICB2YWx1ZTogdHlwZW9mIHN0YXRzUmVwb3J0LmppdHRlciA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5qaXR0ZXIgOiBudWxsLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgcmV0dXJuIFJlbW90ZUF1ZGlvVHJhY2tTdGF0cztcbn0oUmVtb3RlVHJhY2tTdGF0cyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVtb3RlQXVkaW9UcmFja1N0YXRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/remoteaudiotrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/remotetrackstats.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/remotetrackstats.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TrackStats = __webpack_require__(/*! ./trackstats */ \"./node_modules/twilio-video/es5/stats/trackstats.js\");\n\n/**\n * Statistics for a remote {@link Track}.\n * @extends TrackStats\n * @property {?number} bytesReceived - Number of bytes received\n * @property {?number} packetsReceived - Number of packets received\n */\n\nvar RemoteTrackStats = function (_TrackStats) {\n  _inherits(RemoteTrackStats, _TrackStats);\n\n  /*\n   * @param {string} trackId - {@link Track} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   */\n  function RemoteTrackStats(trackId, statsReport) {\n    _classCallCheck(this, RemoteTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (RemoteTrackStats.__proto__ || Object.getPrototypeOf(RemoteTrackStats)).call(this, trackId, statsReport));\n\n    Object.defineProperties(_this, {\n      bytesReceived: {\n        value: typeof statsReport.bytesReceived === 'number' ? statsReport.bytesReceived : null,\n        enumerable: true\n      },\n      packetsReceived: {\n        value: typeof statsReport.packetsReceived === 'number' ? statsReport.packetsReceived : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return RemoteTrackStats;\n}(TrackStats);\n\nmodule.exports = RemoteTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZW1vdGV0cmFja3N0YXRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvcmVtb3RldHJhY2tzdGF0cy5qcz84YmRmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgVHJhY2tTdGF0cyA9IHJlcXVpcmUoJy4vdHJhY2tzdGF0cycpO1xuXG4vKipcbiAqIFN0YXRpc3RpY3MgZm9yIGEgcmVtb3RlIHtAbGluayBUcmFja30uXG4gKiBAZXh0ZW5kcyBUcmFja1N0YXRzXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IGJ5dGVzUmVjZWl2ZWQgLSBOdW1iZXIgb2YgYnl0ZXMgcmVjZWl2ZWRcbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gcGFja2V0c1JlY2VpdmVkIC0gTnVtYmVyIG9mIHBhY2tldHMgcmVjZWl2ZWRcbiAqL1xuXG52YXIgUmVtb3RlVHJhY2tTdGF0cyA9IGZ1bmN0aW9uIChfVHJhY2tTdGF0cykge1xuICBfaW5oZXJpdHMoUmVtb3RlVHJhY2tTdGF0cywgX1RyYWNrU3RhdHMpO1xuXG4gIC8qXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0cmFja0lkIC0ge0BsaW5rIFRyYWNrfSBJRFxuICAgKiBAcGFyYW0ge1N0YW5kYXJkaXplZFRyYWNrU3RhdHNSZXBvcnR9IHN0YXRzUmVwb3J0XG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVUcmFja1N0YXRzKHRyYWNrSWQsIHN0YXRzUmVwb3J0KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlbW90ZVRyYWNrU3RhdHMpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFJlbW90ZVRyYWNrU3RhdHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVUcmFja1N0YXRzKSkuY2FsbCh0aGlzLCB0cmFja0lkLCBzdGF0c1JlcG9ydCkpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGJ5dGVzUmVjZWl2ZWQ6IHtcbiAgICAgICAgdmFsdWU6IHR5cGVvZiBzdGF0c1JlcG9ydC5ieXRlc1JlY2VpdmVkID09PSAnbnVtYmVyJyA/IHN0YXRzUmVwb3J0LmJ5dGVzUmVjZWl2ZWQgOiBudWxsLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgcGFja2V0c1JlY2VpdmVkOiB7XG4gICAgICAgIHZhbHVlOiB0eXBlb2Ygc3RhdHNSZXBvcnQucGFja2V0c1JlY2VpdmVkID09PSAnbnVtYmVyJyA/IHN0YXRzUmVwb3J0LnBhY2tldHNSZWNlaXZlZCA6IG51bGwsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICByZXR1cm4gUmVtb3RlVHJhY2tTdGF0cztcbn0oVHJhY2tTdGF0cyk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVtb3RlVHJhY2tTdGF0czsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/remotetrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/remotevideotrackstats.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/remotevideotrackstats.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RemoteTrackStats = __webpack_require__(/*! ./remotetrackstats */ \"./node_modules/twilio-video/es5/stats/remotetrackstats.js\");\n\n/**\n * Statistics for a {@link VideoTrack}.\n * @extends RemoteTrackStats\n * @property {?VideoTrack#Dimensions} dimensions - Received video resolution\n * @property {?number} frameRate - Received video frame rate\n */\n\nvar RemoteVideoTrackStats = function (_RemoteTrackStats) {\n  _inherits(RemoteVideoTrackStats, _RemoteTrackStats);\n\n  /**\n   * @param {string} trackId - {@link VideoTrack} ID\n   * @param {StandardizedTrackStatsReport} statsReport\n   */\n  function RemoteVideoTrackStats(trackId, statsReport) {\n    _classCallCheck(this, RemoteVideoTrackStats);\n\n    var _this = _possibleConstructorReturn(this, (RemoteVideoTrackStats.__proto__ || Object.getPrototypeOf(RemoteVideoTrackStats)).call(this, trackId, statsReport));\n\n    var dimensions = null;\n    if (typeof statsReport.frameWidthReceived === 'number' && typeof statsReport.frameHeightReceived === 'number') {\n      dimensions = {};\n\n      Object.defineProperties(dimensions, {\n        width: {\n          value: statsReport.frameWidthReceived,\n          enumerable: true\n        },\n        height: {\n          value: statsReport.frameHeightReceived,\n          enumerable: true\n        }\n      });\n    }\n\n    Object.defineProperties(_this, {\n      dimensions: {\n        value: dimensions,\n        enumerable: true\n      },\n      frameRate: {\n        value: typeof statsReport.frameRateReceived === 'number' ? statsReport.frameRateReceived : null,\n        enumerable: true\n      }\n    });\n    return _this;\n  }\n\n  return RemoteVideoTrackStats;\n}(RemoteTrackStats);\n\nmodule.exports = RemoteVideoTrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZW1vdGV2aWRlb3RyYWNrc3RhdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9yZW1vdGV2aWRlb3RyYWNrc3RhdHMuanM/NmZkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFJlbW90ZVRyYWNrU3RhdHMgPSByZXF1aXJlKCcuL3JlbW90ZXRyYWNrc3RhdHMnKTtcblxuLyoqXG4gKiBTdGF0aXN0aWNzIGZvciBhIHtAbGluayBWaWRlb1RyYWNrfS5cbiAqIEBleHRlbmRzIFJlbW90ZVRyYWNrU3RhdHNcbiAqIEBwcm9wZXJ0eSB7P1ZpZGVvVHJhY2sjRGltZW5zaW9uc30gZGltZW5zaW9ucyAtIFJlY2VpdmVkIHZpZGVvIHJlc29sdXRpb25cbiAqIEBwcm9wZXJ0eSB7P251bWJlcn0gZnJhbWVSYXRlIC0gUmVjZWl2ZWQgdmlkZW8gZnJhbWUgcmF0ZVxuICovXG5cbnZhciBSZW1vdGVWaWRlb1RyYWNrU3RhdHMgPSBmdW5jdGlvbiAoX1JlbW90ZVRyYWNrU3RhdHMpIHtcbiAgX2luaGVyaXRzKFJlbW90ZVZpZGVvVHJhY2tTdGF0cywgX1JlbW90ZVRyYWNrU3RhdHMpO1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHJhY2tJZCAtIHtAbGluayBWaWRlb1RyYWNrfSBJRFxuICAgKiBAcGFyYW0ge1N0YW5kYXJkaXplZFRyYWNrU3RhdHNSZXBvcnR9IHN0YXRzUmVwb3J0XG4gICAqL1xuICBmdW5jdGlvbiBSZW1vdGVWaWRlb1RyYWNrU3RhdHModHJhY2tJZCwgc3RhdHNSZXBvcnQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVtb3RlVmlkZW9UcmFja1N0YXRzKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChSZW1vdGVWaWRlb1RyYWNrU3RhdHMuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihSZW1vdGVWaWRlb1RyYWNrU3RhdHMpKS5jYWxsKHRoaXMsIHRyYWNrSWQsIHN0YXRzUmVwb3J0KSk7XG5cbiAgICB2YXIgZGltZW5zaW9ucyA9IG51bGw7XG4gICAgaWYgKHR5cGVvZiBzdGF0c1JlcG9ydC5mcmFtZVdpZHRoUmVjZWl2ZWQgPT09ICdudW1iZXInICYmIHR5cGVvZiBzdGF0c1JlcG9ydC5mcmFtZUhlaWdodFJlY2VpdmVkID09PSAnbnVtYmVyJykge1xuICAgICAgZGltZW5zaW9ucyA9IHt9O1xuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhkaW1lbnNpb25zLCB7XG4gICAgICAgIHdpZHRoOiB7XG4gICAgICAgICAgdmFsdWU6IHN0YXRzUmVwb3J0LmZyYW1lV2lkdGhSZWNlaXZlZCxcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGhlaWdodDoge1xuICAgICAgICAgIHZhbHVlOiBzdGF0c1JlcG9ydC5mcmFtZUhlaWdodFJlY2VpdmVkLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX3RoaXMsIHtcbiAgICAgIGRpbWVuc2lvbnM6IHtcbiAgICAgICAgdmFsdWU6IGRpbWVuc2lvbnMsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0sXG4gICAgICBmcmFtZVJhdGU6IHtcbiAgICAgICAgdmFsdWU6IHR5cGVvZiBzdGF0c1JlcG9ydC5mcmFtZVJhdGVSZWNlaXZlZCA9PT0gJ251bWJlcicgPyBzdGF0c1JlcG9ydC5mcmFtZVJhdGVSZWNlaXZlZCA6IG51bGwsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICByZXR1cm4gUmVtb3RlVmlkZW9UcmFja1N0YXRzO1xufShSZW1vdGVUcmFja1N0YXRzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZW1vdGVWaWRlb1RyYWNrU3RhdHM7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/remotevideotrackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/senderorreceiverreport.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/senderorreceiverreport.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * @property {StatsId} id\n * @property {TrackId} trackId\n * @property {number} bitrate - bps\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SenderOrReceiverReport =\n/**\n * Construct a {@link SenderOrReceiverReport}.\n * @param {StatsId} id\n * @param {TrackId} trackId\n * @param {number} bitrate - bps\n */\nfunction SenderOrReceiverReport(id, trackId, bitrate) {\n  _classCallCheck(this, SenderOrReceiverReport);\n\n  Object.defineProperties(this, {\n    id: {\n      enumerable: true,\n      value: id\n    },\n    trackId: {\n      enumerable: true,\n      value: trackId\n    },\n    bitrate: {\n      enumerable: true,\n      value: bitrate\n    }\n  });\n};\n\nmodule.exports = SenderOrReceiverReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zZW5kZXJvcnJlY2VpdmVycmVwb3J0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvc2VuZGVyb3JyZWNlaXZlcnJlcG9ydC5qcz9mMTYzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAcHJvcGVydHkge1N0YXRzSWR9IGlkXG4gKiBAcHJvcGVydHkge1RyYWNrSWR9IHRyYWNrSWRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBiaXRyYXRlIC0gYnBzXG4gKi9cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnQgPVxuLyoqXG4gKiBDb25zdHJ1Y3QgYSB7QGxpbmsgU2VuZGVyT3JSZWNlaXZlclJlcG9ydH0uXG4gKiBAcGFyYW0ge1N0YXRzSWR9IGlkXG4gKiBAcGFyYW0ge1RyYWNrSWR9IHRyYWNrSWRcbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRyYXRlIC0gYnBzXG4gKi9cbmZ1bmN0aW9uIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnQoaWQsIHRyYWNrSWQsIGJpdHJhdGUpIHtcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnQpO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBpZDoge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBpZFxuICAgIH0sXG4gICAgdHJhY2tJZDoge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB0cmFja0lkXG4gICAgfSxcbiAgICBiaXRyYXRlOiB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGJpdHJhdGVcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZW5kZXJPclJlY2VpdmVyUmVwb3J0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/senderorreceiverreport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/senderorreceiverreportfactory.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/senderorreceiverreportfactory.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * @property {StatsId} id\n * @property {TrackId} trackId\n * @property {RTCStats} lastStats\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SenderOrReceiverReportFactory =\n/**\n * @param {StatsId} id\n * @param {TrackId} trackId\n * @param {RTCStats} initialStats\n */\nfunction SenderOrReceiverReportFactory(id, trackId, initialStats) {\n  _classCallCheck(this, SenderOrReceiverReportFactory);\n\n  Object.defineProperties(this, {\n    id: {\n      enumerable: true,\n      value: id,\n      writable: true\n    },\n    trackId: {\n      enumerable: true,\n      value: trackId,\n      writable: true\n    },\n    lastStats: {\n      enumerable: true,\n      value: initialStats,\n      writable: true\n    }\n  });\n};\n\nmodule.exports = SenderOrReceiverReportFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zZW5kZXJvcnJlY2VpdmVycmVwb3J0ZmFjdG9yeS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL3NlbmRlcm9ycmVjZWl2ZXJyZXBvcnRmYWN0b3J5LmpzPzZhNDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBwcm9wZXJ0eSB7U3RhdHNJZH0gaWRcbiAqIEBwcm9wZXJ0eSB7VHJhY2tJZH0gdHJhY2tJZFxuICogQHByb3BlcnR5IHtSVENTdGF0c30gbGFzdFN0YXRzXG4gKi9cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnRGYWN0b3J5ID1cbi8qKlxuICogQHBhcmFtIHtTdGF0c0lkfSBpZFxuICogQHBhcmFtIHtUcmFja0lkfSB0cmFja0lkXG4gKiBAcGFyYW0ge1JUQ1N0YXRzfSBpbml0aWFsU3RhdHNcbiAqL1xuZnVuY3Rpb24gU2VuZGVyT3JSZWNlaXZlclJlcG9ydEZhY3RvcnkoaWQsIHRyYWNrSWQsIGluaXRpYWxTdGF0cykge1xuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VuZGVyT3JSZWNlaXZlclJlcG9ydEZhY3RvcnkpO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBpZDoge1xuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBpZCxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSxcbiAgICB0cmFja0lkOiB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IHRyYWNrSWQsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0sXG4gICAgbGFzdFN0YXRzOiB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGluaXRpYWxTdGF0cyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyT3JSZWNlaXZlclJlcG9ydEZhY3Rvcnk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/senderorreceiverreportfactory.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/senderreport.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/senderreport.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint no-undefined:0 */\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar average = __webpack_require__(/*! ./average */ \"./node_modules/twilio-video/es5/stats/average.js\");\nvar SenderOrReceiverReport = __webpack_require__(/*! ./senderorreceiverreport */ \"./node_modules/twilio-video/es5/stats/senderorreceiverreport.js\");\nvar sum = __webpack_require__(/*! ./sum */ \"./node_modules/twilio-video/es5/stats/sum.js\");\n\n/**\n * @interface SenderSummary\n * @property {number} bitrate\n * @property {number} [rtt] - s (undefined in Chrome)\n */\n\n/**\n * @extends SenderOrReceiverReport\n * @property {number} [rtt] - s (undefined in Chrome)\n */\n\nvar SenderReport = function (_SenderOrReceiverRepo) {\n  _inherits(SenderReport, _SenderOrReceiverRepo);\n\n  /**\n   * Construct a {@link SenderReport}.\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} [rtt] - s\n   */\n  function SenderReport(id, trackId, bitrate, rtt) {\n    _classCallCheck(this, SenderReport);\n\n    var _this = _possibleConstructorReturn(this, (SenderReport.__proto__ || Object.getPrototypeOf(SenderReport)).call(this, id, trackId, bitrate));\n\n    Object.defineProperties(_this, {\n      rtt: {\n        enumerable: true,\n        value: rtt\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create a {@link SenderReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @param {RTCRemoteInboundRtpStreamStats} [newerRemoteStats]\n   * @returns {SenderReport}\n   */\n\n\n  _createClass(SenderReport, null, [{\n    key: 'of',\n    value: function of(trackId, olderStats, newerStats, newerRemoteStats) {\n      if (olderStats.id !== newerStats.id) {\n        throw new Error('RTCStats IDs must match');\n      }\n      var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n      var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n      var bitrate = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n      var rtt = newerRemoteStats && typeof newerRemoteStats.roundTripTime === 'number' ? newerRemoteStats.roundTripTime / 1000 : undefined;\n      return new SenderReport(olderStats.id, trackId, bitrate, rtt);\n    }\n\n    /**\n     * Summarize {@link SenderReport}s by summing and averaging their values.\n     * @param {Array<SenderReport>} reports\n     * @returns {SenderSummary}\n     */\n\n  }, {\n    key: 'summarize',\n    value: function summarize(reports) {\n      var bitrate = sum(reports.map(function (report) {\n        return report.bitrate;\n      }));\n      var rtt = average(reports.map(function (report) {\n        return report.rtt;\n      }));\n      return {\n        bitrate: bitrate,\n        rtt: rtt\n      };\n    }\n  }]);\n\n  return SenderReport;\n}(SenderOrReceiverReport);\n\nmodule.exports = SenderReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zZW5kZXJyZXBvcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zZW5kZXJyZXBvcnQuanM/MWNkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tdW5kZWZpbmVkOjAgKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgYXZlcmFnZSA9IHJlcXVpcmUoJy4vYXZlcmFnZScpO1xudmFyIFNlbmRlck9yUmVjZWl2ZXJSZXBvcnQgPSByZXF1aXJlKCcuL3NlbmRlcm9ycmVjZWl2ZXJyZXBvcnQnKTtcbnZhciBzdW0gPSByZXF1aXJlKCcuL3N1bScpO1xuXG4vKipcbiAqIEBpbnRlcmZhY2UgU2VuZGVyU3VtbWFyeVxuICogQHByb3BlcnR5IHtudW1iZXJ9IGJpdHJhdGVcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbcnR0XSAtIHMgKHVuZGVmaW5lZCBpbiBDaHJvbWUpXG4gKi9cblxuLyoqXG4gKiBAZXh0ZW5kcyBTZW5kZXJPclJlY2VpdmVyUmVwb3J0XG4gKiBAcHJvcGVydHkge251bWJlcn0gW3J0dF0gLSBzICh1bmRlZmluZWQgaW4gQ2hyb21lKVxuICovXG5cbnZhciBTZW5kZXJSZXBvcnQgPSBmdW5jdGlvbiAoX1NlbmRlck9yUmVjZWl2ZXJSZXBvKSB7XG4gIF9pbmhlcml0cyhTZW5kZXJSZXBvcnQsIF9TZW5kZXJPclJlY2VpdmVyUmVwbyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBTZW5kZXJSZXBvcnR9LlxuICAgKiBAcGFyYW0ge1N0YXRzSWR9IGlkXG4gICAqIEBwYXJhbSB7VHJhY2tJZH0gdHJhY2tJZFxuICAgKiBAcGFyYW0ge251bWJlcn0gYml0cmF0ZSAtIGJwc1xuICAgKiBAcGFyYW0ge251bWJlcn0gW3J0dF0gLSBzXG4gICAqL1xuICBmdW5jdGlvbiBTZW5kZXJSZXBvcnQoaWQsIHRyYWNrSWQsIGJpdHJhdGUsIHJ0dCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZW5kZXJSZXBvcnQpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFNlbmRlclJlcG9ydC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNlbmRlclJlcG9ydCkpLmNhbGwodGhpcywgaWQsIHRyYWNrSWQsIGJpdHJhdGUpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBydHQ6IHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHJ0dFxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSB7QGxpbmsgU2VuZGVyUmVwb3J0fS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRyYWNrSWRcbiAgICogQHBhcmFtIHtSVENTdGF0c30gb2xkZXJTdGF0c1xuICAgKiBAcGFyYW0ge1JUQ1N0YXRzfSBuZXdlclN0YXRzXG4gICAqIEBwYXJhbSB7UlRDUmVtb3RlSW5ib3VuZFJ0cFN0cmVhbVN0YXRzfSBbbmV3ZXJSZW1vdGVTdGF0c11cbiAgICogQHJldHVybnMge1NlbmRlclJlcG9ydH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoU2VuZGVyUmVwb3J0LCBudWxsLCBbe1xuICAgIGtleTogJ29mJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb2YodHJhY2tJZCwgb2xkZXJTdGF0cywgbmV3ZXJTdGF0cywgbmV3ZXJSZW1vdGVTdGF0cykge1xuICAgICAgaWYgKG9sZGVyU3RhdHMuaWQgIT09IG5ld2VyU3RhdHMuaWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdSVENTdGF0cyBJRHMgbXVzdCBtYXRjaCcpO1xuICAgICAgfVxuICAgICAgdmFyIHNlY29uZHNFbGFwc2VkID0gKG5ld2VyU3RhdHMudGltZXN0YW1wIC0gb2xkZXJTdGF0cy50aW1lc3RhbXApIC8gMTAwMDtcbiAgICAgIHZhciBkZWx0YUJ5dGVzU2VudCA9IG5ld2VyU3RhdHMuYnl0ZXNTZW50IC0gb2xkZXJTdGF0cy5ieXRlc1NlbnQ7XG4gICAgICB2YXIgYml0cmF0ZSA9IHNlY29uZHNFbGFwc2VkID4gMCA/IGRlbHRhQnl0ZXNTZW50IC8gc2Vjb25kc0VsYXBzZWQgKiA4IDogMDtcbiAgICAgIHZhciBydHQgPSBuZXdlclJlbW90ZVN0YXRzICYmIHR5cGVvZiBuZXdlclJlbW90ZVN0YXRzLnJvdW5kVHJpcFRpbWUgPT09ICdudW1iZXInID8gbmV3ZXJSZW1vdGVTdGF0cy5yb3VuZFRyaXBUaW1lIC8gMTAwMCA6IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybiBuZXcgU2VuZGVyUmVwb3J0KG9sZGVyU3RhdHMuaWQsIHRyYWNrSWQsIGJpdHJhdGUsIHJ0dCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3VtbWFyaXplIHtAbGluayBTZW5kZXJSZXBvcnR9cyBieSBzdW1taW5nIGFuZCBhdmVyYWdpbmcgdGhlaXIgdmFsdWVzLlxuICAgICAqIEBwYXJhbSB7QXJyYXk8U2VuZGVyUmVwb3J0Pn0gcmVwb3J0c1xuICAgICAqIEByZXR1cm5zIHtTZW5kZXJTdW1tYXJ5fVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdzdW1tYXJpemUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdW1tYXJpemUocmVwb3J0cykge1xuICAgICAgdmFyIGJpdHJhdGUgPSBzdW0ocmVwb3J0cy5tYXAoZnVuY3Rpb24gKHJlcG9ydCkge1xuICAgICAgICByZXR1cm4gcmVwb3J0LmJpdHJhdGU7XG4gICAgICB9KSk7XG4gICAgICB2YXIgcnR0ID0gYXZlcmFnZShyZXBvcnRzLm1hcChmdW5jdGlvbiAocmVwb3J0KSB7XG4gICAgICAgIHJldHVybiByZXBvcnQucnR0O1xuICAgICAgfSkpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYml0cmF0ZTogYml0cmF0ZSxcbiAgICAgICAgcnR0OiBydHRcbiAgICAgIH07XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNlbmRlclJlcG9ydDtcbn0oU2VuZGVyT3JSZWNlaXZlclJlcG9ydCk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyUmVwb3J0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/senderreport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/senderreportfactory.js":
/*!********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/senderreportfactory.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SenderOrReceiverReportFactory = __webpack_require__(/*! ./senderorreceiverreportfactory */ \"./node_modules/twilio-video/es5/stats/senderorreceiverreportfactory.js\");\nvar SenderReport = __webpack_require__(/*! ./senderreport */ \"./node_modules/twilio-video/es5/stats/senderreport.js\");\n\n/**\n * @extends {SenderOrReceiverReportFactory}\n * @property {?SenderReport} lastReport\n */\n\nvar SenderReportFactory = function (_SenderOrReceiverRepo) {\n  _inherits(SenderReportFactory, _SenderOrReceiverRepo);\n\n  /**\n   * Construct a {@link SenderReportFactory}.\n   * @param {TrackId} trackId\n   * @param {RTCStats} initialStats\n   */\n  function SenderReportFactory(trackId, initialStats) {\n    _classCallCheck(this, SenderReportFactory);\n\n    var _this = _possibleConstructorReturn(this, (SenderReportFactory.__proto__ || Object.getPrototypeOf(SenderReportFactory)).call(this, initialStats.id, trackId, initialStats));\n\n    Object.defineProperties(_this, {\n      lastReport: {\n        enumerable: true,\n        value: null,\n        writable: true\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * @param {TrackId} trackId\n   * @param {RTCStats} newerStats\n   * @param {RTCRemoteInboundRtpStreamStats} [newerRemoteStats]\n   * @returns {SenderReport}\n   */\n\n\n  _createClass(SenderReportFactory, [{\n    key: 'next',\n    value: function next(trackId, newerStats, newerRemoteStats) {\n      var olderStats = this.lastStats;\n      this.lastStats = newerStats;\n      this.trackId = trackId;\n      var report = SenderReport.of(trackId, olderStats, newerStats, newerRemoteStats);\n      this.lastReport = report;\n      return report;\n    }\n  }]);\n\n  return SenderReportFactory;\n}(SenderOrReceiverReportFactory);\n\nmodule.exports = SenderReportFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zZW5kZXJyZXBvcnRmYWN0b3J5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvc2VuZGVycmVwb3J0ZmFjdG9yeS5qcz8zNTcwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgU2VuZGVyT3JSZWNlaXZlclJlcG9ydEZhY3RvcnkgPSByZXF1aXJlKCcuL3NlbmRlcm9ycmVjZWl2ZXJyZXBvcnRmYWN0b3J5Jyk7XG52YXIgU2VuZGVyUmVwb3J0ID0gcmVxdWlyZSgnLi9zZW5kZXJyZXBvcnQnKTtcblxuLyoqXG4gKiBAZXh0ZW5kcyB7U2VuZGVyT3JSZWNlaXZlclJlcG9ydEZhY3Rvcnl9XG4gKiBAcHJvcGVydHkgez9TZW5kZXJSZXBvcnR9IGxhc3RSZXBvcnRcbiAqL1xuXG52YXIgU2VuZGVyUmVwb3J0RmFjdG9yeSA9IGZ1bmN0aW9uIChfU2VuZGVyT3JSZWNlaXZlclJlcG8pIHtcbiAgX2luaGVyaXRzKFNlbmRlclJlcG9ydEZhY3RvcnksIF9TZW5kZXJPclJlY2VpdmVyUmVwbyk7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIHtAbGluayBTZW5kZXJSZXBvcnRGYWN0b3J5fS5cbiAgICogQHBhcmFtIHtUcmFja0lkfSB0cmFja0lkXG4gICAqIEBwYXJhbSB7UlRDU3RhdHN9IGluaXRpYWxTdGF0c1xuICAgKi9cbiAgZnVuY3Rpb24gU2VuZGVyUmVwb3J0RmFjdG9yeSh0cmFja0lkLCBpbml0aWFsU3RhdHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VuZGVyUmVwb3J0RmFjdG9yeSk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoU2VuZGVyUmVwb3J0RmFjdG9yeS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNlbmRlclJlcG9ydEZhY3RvcnkpKS5jYWxsKHRoaXMsIGluaXRpYWxTdGF0cy5pZCwgdHJhY2tJZCwgaW5pdGlhbFN0YXRzKSk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhfdGhpcywge1xuICAgICAgbGFzdFJlcG9ydDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtUcmFja0lkfSB0cmFja0lkXG4gICAqIEBwYXJhbSB7UlRDU3RhdHN9IG5ld2VyU3RhdHNcbiAgICogQHBhcmFtIHtSVENSZW1vdGVJbmJvdW5kUnRwU3RyZWFtU3RhdHN9IFtuZXdlclJlbW90ZVN0YXRzXVxuICAgKiBAcmV0dXJucyB7U2VuZGVyUmVwb3J0fVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhTZW5kZXJSZXBvcnRGYWN0b3J5LCBbe1xuICAgIGtleTogJ25leHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZXh0KHRyYWNrSWQsIG5ld2VyU3RhdHMsIG5ld2VyUmVtb3RlU3RhdHMpIHtcbiAgICAgIHZhciBvbGRlclN0YXRzID0gdGhpcy5sYXN0U3RhdHM7XG4gICAgICB0aGlzLmxhc3RTdGF0cyA9IG5ld2VyU3RhdHM7XG4gICAgICB0aGlzLnRyYWNrSWQgPSB0cmFja0lkO1xuICAgICAgdmFyIHJlcG9ydCA9IFNlbmRlclJlcG9ydC5vZih0cmFja0lkLCBvbGRlclN0YXRzLCBuZXdlclN0YXRzLCBuZXdlclJlbW90ZVN0YXRzKTtcbiAgICAgIHRoaXMubGFzdFJlcG9ydCA9IHJlcG9ydDtcbiAgICAgIHJldHVybiByZXBvcnQ7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNlbmRlclJlcG9ydEZhY3Rvcnk7XG59KFNlbmRlck9yUmVjZWl2ZXJSZXBvcnRGYWN0b3J5KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZW5kZXJSZXBvcnRGYWN0b3J5OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/senderreportfactory.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/statsreport.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/statsreport.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LocalAudioTrackStats = __webpack_require__(/*! ./localaudiotrackstats */ \"./node_modules/twilio-video/es5/stats/localaudiotrackstats.js\");\nvar LocalVideoTrackStats = __webpack_require__(/*! ./localvideotrackstats */ \"./node_modules/twilio-video/es5/stats/localvideotrackstats.js\");\nvar RemoteAudioTrackStats = __webpack_require__(/*! ./remoteaudiotrackstats */ \"./node_modules/twilio-video/es5/stats/remoteaudiotrackstats.js\");\nvar RemoteVideoTrackStats = __webpack_require__(/*! ./remotevideotrackstats */ \"./node_modules/twilio-video/es5/stats/remotevideotrackstats.js\");\n\n/**\n * Statistics report for an RTCPeerConnection.\n * @property {string} peerConnectionId - ID of the RTCPeerConnection\n * @property {Array<LocalAudioTrackStats>} localAudioTrackStats - List of {@link LocalAudioTrackStats}\n * @property {Array<LocalVideoTrackStats>} localVideoTrackStats - List of {@link LocalVideoTrackStats}\n * @property {Array<RemoteAudioTrackStats>} remoteAudioTrackStats - List of {@link RemoteAudioTrackStats}\n * @property {Array<RemoteVideoTrackStats>} remoteVideoTrackStats - List of {@link RemoteVideoTrackStats}\n */\n\nvar StatsReport =\n/**\n * @param {string} peerConnectionId - RTCPeerConnection ID\n * @param {StandardizedStatsResponse} statsResponse\n * @param {boolean} prepareForInsights - if report is being prepared to send to insights.\n */\nfunction StatsReport(peerConnectionId, statsResponse, prepareForInsights) {\n  _classCallCheck(this, StatsReport);\n\n  if (typeof peerConnectionId !== 'string') {\n    throw new Error('RTCPeerConnection id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    peerConnectionId: {\n      value: peerConnectionId,\n      enumerable: true\n    },\n    localAudioTrackStats: {\n      value: statsResponse.localAudioTrackStats.map(function (report) {\n        return new LocalAudioTrackStats(report.trackId, report, prepareForInsights);\n      }),\n      enumerable: true\n    },\n    localVideoTrackStats: {\n      value: statsResponse.localVideoTrackStats.map(function (report) {\n        return new LocalVideoTrackStats(report.trackId, report, prepareForInsights);\n      }),\n      enumerable: true\n    },\n    remoteAudioTrackStats: {\n      value: statsResponse.remoteAudioTrackStats.map(function (report) {\n        return new RemoteAudioTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    remoteVideoTrackStats: {\n      value: statsResponse.remoteVideoTrackStats.map(function (report) {\n        return new RemoteVideoTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = StatsReport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zdGF0c3JlcG9ydC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3N0YXRzL3N0YXRzcmVwb3J0LmpzP2ZkODkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgTG9jYWxBdWRpb1RyYWNrU3RhdHMgPSByZXF1aXJlKCcuL2xvY2FsYXVkaW90cmFja3N0YXRzJyk7XG52YXIgTG9jYWxWaWRlb1RyYWNrU3RhdHMgPSByZXF1aXJlKCcuL2xvY2FsdmlkZW90cmFja3N0YXRzJyk7XG52YXIgUmVtb3RlQXVkaW9UcmFja1N0YXRzID0gcmVxdWlyZSgnLi9yZW1vdGVhdWRpb3RyYWNrc3RhdHMnKTtcbnZhciBSZW1vdGVWaWRlb1RyYWNrU3RhdHMgPSByZXF1aXJlKCcuL3JlbW90ZXZpZGVvdHJhY2tzdGF0cycpO1xuXG4vKipcbiAqIFN0YXRpc3RpY3MgcmVwb3J0IGZvciBhbiBSVENQZWVyQ29ubmVjdGlvbi5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwZWVyQ29ubmVjdGlvbklkIC0gSUQgb2YgdGhlIFJUQ1BlZXJDb25uZWN0aW9uXG4gKiBAcHJvcGVydHkge0FycmF5PExvY2FsQXVkaW9UcmFja1N0YXRzPn0gbG9jYWxBdWRpb1RyYWNrU3RhdHMgLSBMaXN0IG9mIHtAbGluayBMb2NhbEF1ZGlvVHJhY2tTdGF0c31cbiAqIEBwcm9wZXJ0eSB7QXJyYXk8TG9jYWxWaWRlb1RyYWNrU3RhdHM+fSBsb2NhbFZpZGVvVHJhY2tTdGF0cyAtIExpc3Qgb2Yge0BsaW5rIExvY2FsVmlkZW9UcmFja1N0YXRzfVxuICogQHByb3BlcnR5IHtBcnJheTxSZW1vdGVBdWRpb1RyYWNrU3RhdHM+fSByZW1vdGVBdWRpb1RyYWNrU3RhdHMgLSBMaXN0IG9mIHtAbGluayBSZW1vdGVBdWRpb1RyYWNrU3RhdHN9XG4gKiBAcHJvcGVydHkge0FycmF5PFJlbW90ZVZpZGVvVHJhY2tTdGF0cz59IHJlbW90ZVZpZGVvVHJhY2tTdGF0cyAtIExpc3Qgb2Yge0BsaW5rIFJlbW90ZVZpZGVvVHJhY2tTdGF0c31cbiAqL1xuXG52YXIgU3RhdHNSZXBvcnQgPVxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gcGVlckNvbm5lY3Rpb25JZCAtIFJUQ1BlZXJDb25uZWN0aW9uIElEXG4gKiBAcGFyYW0ge1N0YW5kYXJkaXplZFN0YXRzUmVzcG9uc2V9IHN0YXRzUmVzcG9uc2VcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gcHJlcGFyZUZvckluc2lnaHRzIC0gaWYgcmVwb3J0IGlzIGJlaW5nIHByZXBhcmVkIHRvIHNlbmQgdG8gaW5zaWdodHMuXG4gKi9cbmZ1bmN0aW9uIFN0YXRzUmVwb3J0KHBlZXJDb25uZWN0aW9uSWQsIHN0YXRzUmVzcG9uc2UsIHByZXBhcmVGb3JJbnNpZ2h0cykge1xuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RhdHNSZXBvcnQpO1xuXG4gIGlmICh0eXBlb2YgcGVlckNvbm5lY3Rpb25JZCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1JUQ1BlZXJDb25uZWN0aW9uIGlkIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICBwZWVyQ29ubmVjdGlvbklkOiB7XG4gICAgICB2YWx1ZTogcGVlckNvbm5lY3Rpb25JZCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIGxvY2FsQXVkaW9UcmFja1N0YXRzOiB7XG4gICAgICB2YWx1ZTogc3RhdHNSZXNwb25zZS5sb2NhbEF1ZGlvVHJhY2tTdGF0cy5tYXAoZnVuY3Rpb24gKHJlcG9ydCkge1xuICAgICAgICByZXR1cm4gbmV3IExvY2FsQXVkaW9UcmFja1N0YXRzKHJlcG9ydC50cmFja0lkLCByZXBvcnQsIHByZXBhcmVGb3JJbnNpZ2h0cyk7XG4gICAgICB9KSxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIGxvY2FsVmlkZW9UcmFja1N0YXRzOiB7XG4gICAgICB2YWx1ZTogc3RhdHNSZXNwb25zZS5sb2NhbFZpZGVvVHJhY2tTdGF0cy5tYXAoZnVuY3Rpb24gKHJlcG9ydCkge1xuICAgICAgICByZXR1cm4gbmV3IExvY2FsVmlkZW9UcmFja1N0YXRzKHJlcG9ydC50cmFja0lkLCByZXBvcnQsIHByZXBhcmVGb3JJbnNpZ2h0cyk7XG4gICAgICB9KSxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHJlbW90ZUF1ZGlvVHJhY2tTdGF0czoge1xuICAgICAgdmFsdWU6IHN0YXRzUmVzcG9uc2UucmVtb3RlQXVkaW9UcmFja1N0YXRzLm1hcChmdW5jdGlvbiAocmVwb3J0KSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVtb3RlQXVkaW9UcmFja1N0YXRzKHJlcG9ydC50cmFja0lkLCByZXBvcnQpO1xuICAgICAgfSksXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICByZW1vdGVWaWRlb1RyYWNrU3RhdHM6IHtcbiAgICAgIHZhbHVlOiBzdGF0c1Jlc3BvbnNlLnJlbW90ZVZpZGVvVHJhY2tTdGF0cy5tYXAoZnVuY3Rpb24gKHJlcG9ydCkge1xuICAgICAgICByZXR1cm4gbmV3IFJlbW90ZVZpZGVvVHJhY2tTdGF0cyhyZXBvcnQudHJhY2tJZCwgcmVwb3J0KTtcbiAgICAgIH0pLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0YXRzUmVwb3J0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/statsreport.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/sum.js":
/*!****************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/sum.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * @param {Array<number|undefined>} xs\n * @returns {number}\n */\n\nfunction sum(xs) {\n  return xs.reduce(function (y, x) {\n    return typeof x === 'number' ? x + y : y;\n  }, 0);\n}\n\nmodule.exports = sum;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zdW0uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy9zdW0uanM/MjIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQHBhcmFtIHtBcnJheTxudW1iZXJ8dW5kZWZpbmVkPn0geHNcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cblxuZnVuY3Rpb24gc3VtKHhzKSB7XG4gIHJldHVybiB4cy5yZWR1Y2UoZnVuY3Rpb24gKHksIHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHggPT09ICdudW1iZXInID8geCArIHkgOiB5O1xuICB9LCAwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdW07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/sum.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/stats/trackstats.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/stats/trackstats.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Statistics for a {@link Track}.\n * @property {Track.ID} trackId - The {@link Track} ID\n * @property {Track.SID} trackSid - The {@link Track}'s SID when published in\n *  in a {@link Room}\n * @property {number} timestamp - A Unix timestamp in milliseconds indicating\n *   when the {@link TrackStats} were gathered\n * @property {string} ssrc - The {@link Track}'s SSRC when transmitted over the\n *   RTCPeerConnection\n * @property {?number} packetsLost - The number of packets lost\n * @property {?string} codec - The name of the codec used to encode the\n *   {@link Track}'s media\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TrackStats =\n/**\n * @param {string} trackId - {@link Track} ID\n * @param {StandardizedTrackStatsReport} statsReport\n */\nfunction TrackStats(trackId, statsReport) {\n  _classCallCheck(this, TrackStats);\n\n  if (typeof trackId !== 'string') {\n    throw new Error('Track id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    trackId: {\n      value: trackId,\n      enumerable: true\n    },\n    trackSid: {\n      value: statsReport.trackSid,\n      enumerable: true\n    },\n    timestamp: {\n      value: statsReport.timestamp,\n      enumerable: true\n    },\n    ssrc: {\n      value: statsReport.ssrc,\n      enumerable: true\n    },\n    packetsLost: {\n      value: typeof statsReport.packetsLost === 'number' ? statsReport.packetsLost : null,\n      enumerable: true\n    },\n    codec: {\n      value: typeof statsReport.codecName === 'string' ? statsReport.codecName : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = TrackStats;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS9zdGF0cy90cmFja3N0YXRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvc3RhdHMvdHJhY2tzdGF0cy5qcz9kMjIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTdGF0aXN0aWNzIGZvciBhIHtAbGluayBUcmFja30uXG4gKiBAcHJvcGVydHkge1RyYWNrLklEfSB0cmFja0lkIC0gVGhlIHtAbGluayBUcmFja30gSURcbiAqIEBwcm9wZXJ0eSB7VHJhY2suU0lEfSB0cmFja1NpZCAtIFRoZSB7QGxpbmsgVHJhY2t9J3MgU0lEIHdoZW4gcHVibGlzaGVkIGluXG4gKiAgaW4gYSB7QGxpbmsgUm9vbX1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB0aW1lc3RhbXAgLSBBIFVuaXggdGltZXN0YW1wIGluIG1pbGxpc2Vjb25kcyBpbmRpY2F0aW5nXG4gKiAgIHdoZW4gdGhlIHtAbGluayBUcmFja1N0YXRzfSB3ZXJlIGdhdGhlcmVkXG4gKiBAcHJvcGVydHkge3N0cmluZ30gc3NyYyAtIFRoZSB7QGxpbmsgVHJhY2t9J3MgU1NSQyB3aGVuIHRyYW5zbWl0dGVkIG92ZXIgdGhlXG4gKiAgIFJUQ1BlZXJDb25uZWN0aW9uXG4gKiBAcHJvcGVydHkgez9udW1iZXJ9IHBhY2tldHNMb3N0IC0gVGhlIG51bWJlciBvZiBwYWNrZXRzIGxvc3RcbiAqIEBwcm9wZXJ0eSB7P3N0cmluZ30gY29kZWMgLSBUaGUgbmFtZSBvZiB0aGUgY29kZWMgdXNlZCB0byBlbmNvZGUgdGhlXG4gKiAgIHtAbGluayBUcmFja30ncyBtZWRpYVxuICovXG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBUcmFja1N0YXRzID1cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHRyYWNrSWQgLSB7QGxpbmsgVHJhY2t9IElEXG4gKiBAcGFyYW0ge1N0YW5kYXJkaXplZFRyYWNrU3RhdHNSZXBvcnR9IHN0YXRzUmVwb3J0XG4gKi9cbmZ1bmN0aW9uIFRyYWNrU3RhdHModHJhY2tJZCwgc3RhdHNSZXBvcnQpIHtcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYWNrU3RhdHMpO1xuXG4gIGlmICh0eXBlb2YgdHJhY2tJZCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYWNrIGlkIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICB0cmFja0lkOiB7XG4gICAgICB2YWx1ZTogdHJhY2tJZCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHRyYWNrU2lkOiB7XG4gICAgICB2YWx1ZTogc3RhdHNSZXBvcnQudHJhY2tTaWQsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICB0aW1lc3RhbXA6IHtcbiAgICAgIHZhbHVlOiBzdGF0c1JlcG9ydC50aW1lc3RhbXAsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSxcbiAgICBzc3JjOiB7XG4gICAgICB2YWx1ZTogc3RhdHNSZXBvcnQuc3NyYyxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIHBhY2tldHNMb3N0OiB7XG4gICAgICB2YWx1ZTogdHlwZW9mIHN0YXRzUmVwb3J0LnBhY2tldHNMb3N0ID09PSAnbnVtYmVyJyA/IHN0YXRzUmVwb3J0LnBhY2tldHNMb3N0IDogbnVsbCxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9LFxuICAgIGNvZGVjOiB7XG4gICAgICB2YWx1ZTogdHlwZW9mIHN0YXRzUmVwb3J0LmNvZGVjTmFtZSA9PT0gJ3N0cmluZycgPyBzdGF0c1JlcG9ydC5jb2RlY05hbWUgOiBudWxsLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYWNrU3RhdHM7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/stats/trackstats.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/transceiver.js":
/*!******************************************************!*\
  !*** ./node_modules/twilio-video/es5/transceiver.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n/**\n * A {@link TrackTransceiver} represents either one or more local RTCRtpSenders\n * or RTCDataChannels, or a single RTCRtpReceiver or remote RTCDataChannel.\n * @extends EventEmitter\n * @property {Track.ID} id\n * @property {Track.kind} kind\n */\n\nvar TrackTransceiver = function (_EventEmitter) {\n  _inherits(TrackTransceiver, _EventEmitter);\n\n  /**\n   * Construct a {@link TrackTransceiver}.\n   * @param {Track.ID} id\n   * @param {Track.kind} kind\n   */\n  function TrackTransceiver(id, kind) {\n    _classCallCheck(this, TrackTransceiver);\n\n    var _this = _possibleConstructorReturn(this, (TrackTransceiver.__proto__ || Object.getPrototypeOf(TrackTransceiver)).call(this));\n\n    Object.defineProperties(_this, {\n      id: {\n        enumerable: true,\n        value: id\n      },\n      kind: {\n        enumerable: true,\n        value: kind\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Stop the {@link TrackTransceiver}.\n   * #emits TrackTransceiver#stopped\n   * @returns {void}\n   */\n\n\n  _createClass(TrackTransceiver, [{\n    key: 'stop',\n    value: function stop() {\n      this.emit('stopped');\n    }\n  }]);\n\n  return TrackTransceiver;\n}(EventEmitter);\n\n/**\n * The {@link TrackTransceiver} was stopped.\n * @event TrackTransceiver#stopped\n */\n\nmodule.exports = TrackTransceiver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS90cmFuc2NlaXZlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3RyYW5zY2VpdmVyLmpzPzI2MTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbi8qKlxuICogQSB7QGxpbmsgVHJhY2tUcmFuc2NlaXZlcn0gcmVwcmVzZW50cyBlaXRoZXIgb25lIG9yIG1vcmUgbG9jYWwgUlRDUnRwU2VuZGVyc1xuICogb3IgUlRDRGF0YUNoYW5uZWxzLCBvciBhIHNpbmdsZSBSVENSdHBSZWNlaXZlciBvciByZW1vdGUgUlRDRGF0YUNoYW5uZWwuXG4gKiBAZXh0ZW5kcyBFdmVudEVtaXR0ZXJcbiAqIEBwcm9wZXJ0eSB7VHJhY2suSUR9IGlkXG4gKiBAcHJvcGVydHkge1RyYWNrLmtpbmR9IGtpbmRcbiAqL1xuXG52YXIgVHJhY2tUcmFuc2NlaXZlciA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhUcmFja1RyYW5zY2VpdmVyLCBfRXZlbnRFbWl0dGVyKTtcblxuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFRyYWNrVHJhbnNjZWl2ZXJ9LlxuICAgKiBAcGFyYW0ge1RyYWNrLklEfSBpZFxuICAgKiBAcGFyYW0ge1RyYWNrLmtpbmR9IGtpbmRcbiAgICovXG4gIGZ1bmN0aW9uIFRyYWNrVHJhbnNjZWl2ZXIoaWQsIGtpbmQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhY2tUcmFuc2NlaXZlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoVHJhY2tUcmFuc2NlaXZlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFRyYWNrVHJhbnNjZWl2ZXIpKS5jYWxsKHRoaXMpKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKF90aGlzLCB7XG4gICAgICBpZDoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogaWRcbiAgICAgIH0sXG4gICAgICBraW5kOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBraW5kXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3AgdGhlIHtAbGluayBUcmFja1RyYW5zY2VpdmVyfS5cbiAgICogI2VtaXRzIFRyYWNrVHJhbnNjZWl2ZXIjc3RvcHBlZFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoVHJhY2tUcmFuc2NlaXZlciwgW3tcbiAgICBrZXk6ICdzdG9wJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCgpIHtcbiAgICAgIHRoaXMuZW1pdCgnc3RvcHBlZCcpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUcmFja1RyYW5zY2VpdmVyO1xufShFdmVudEVtaXR0ZXIpO1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgVHJhY2tUcmFuc2NlaXZlcn0gd2FzIHN0b3BwZWQuXG4gKiBAZXZlbnQgVHJhY2tUcmFuc2NlaXZlciNzdG9wcGVkXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBUcmFja1RyYW5zY2VpdmVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/transceiver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/twilioconnection.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/twilioconnection.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StateMachine = __webpack_require__(/*! ./statemachine */ \"./node_modules/twilio-video/es5/statemachine.js\");\n\nvar _require = __webpack_require__(/*! ./util */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    buildLogLevels = _require.buildLogLevels,\n    makeUUID = _require.makeUUID;\n\nvar Log = __webpack_require__(/*! ./util/log */ \"./node_modules/twilio-video/es5/util/log.js\");\nvar NetworkMonitor = __webpack_require__(/*! ./util/networkmonitor */ \"./node_modules/twilio-video/es5/util/networkmonitor.js\");\nvar Timeout = __webpack_require__(/*! ./util/timeout */ \"./node_modules/twilio-video/es5/util/timeout.js\");\n\nvar nInstances = 0;\n\n/*\n  TwilioConnection states\n  -----------------------\n\n       ------------------------------------------\n       |                                        |\n       |                                        v\n  +---------+       +--------------+       +----------+\n  |  early  | ----> |  connecting  | ----> |  closed  |\n  +---------+       +--------------+       +----------+\n    ^                     | ^ |                 ^ ^\n    | --------------------- | |                 | |\n    | | --------------------- |                 | |\n    | | | --------------------|------------------ |\n    | v | |                   v                   |\n  +----------+           +--------+               |\n  | waiting  | --------> |  open  | ---------------\n  +----------+           +--------+\n */\n\nvar states = {\n  closed: [],\n  connecting: ['closed', 'open', 'waiting'],\n  early: ['closed', 'connecting'],\n  open: ['closed'],\n  waiting: ['closed', 'connecting', 'early', 'open']\n};\n\nvar events = {\n  closed: 'close',\n  open: 'open',\n  waiting: 'waiting'\n};\n\nvar TCMP_VERSION = 2;\n\nvar DEFAULT_MAX_CONSECUTIVE_MISSED_HEARTBEATS = 3;\nvar DEFAULT_MAX_CONSECUTIVE_FAILED_HELLOS = 3;\nvar DEFAULT_MAX_REQUESTED_HEARTBEAT_TIMEOUT = 5000;\nvar DEFAULT_OPEN_TIMEOUT = 15000;\nvar DEFAULT_WELCOME_TIMEOUT = 5000;\nvar OUTGOING_HEARTBEAT_OFFSET = 200;\n\nvar WS_CLOSE_NORMAL = 1000;\nvar WS_CLOSE_WELCOME_TIMEOUT = 3000;\nvar WS_CLOSE_HEARTBEATS_MISSED = 3001;\nvar WS_CLOSE_HELLO_FAILED = 3002;\nvar WS_CLOSE_SEND_FAILED = 3003;\nvar WS_CLOSE_NETWORK_CHANGED = 3004;\nvar WS_CLOSE_BUSY_WAIT = 3005;\nvar WS_CLOSE_SERVER_BUSY = 3006;\nvar WS_CLOSE_OPEN_TIMEOUT = 3007;\n\nvar toplevel = global.window || global;\nvar WebSocket = toplevel.WebSocket ? toplevel.WebSocket : __webpack_require__(/*! ws */ \"./node_modules/twilio-video/src/ws.js\");\n\nvar CloseReason = {\n  BUSY: 'busy',\n  FAILED: 'failed',\n  LOCAL: 'local',\n  REMOTE: 'remote',\n  TIMEOUT: 'timeout'\n};\n\nvar wsCloseCodesToCloseReasons = new Map([[WS_CLOSE_WELCOME_TIMEOUT, CloseReason.TIMEOUT], [WS_CLOSE_HEARTBEATS_MISSED, CloseReason.TIMEOUT], [WS_CLOSE_HELLO_FAILED, CloseReason.FAILED], [WS_CLOSE_SEND_FAILED, CloseReason.FAILED], [WS_CLOSE_NETWORK_CHANGED, CloseReason.TIMEOUT], [WS_CLOSE_SERVER_BUSY, CloseReason.BUSY], [WS_CLOSE_OPEN_TIMEOUT, CloseReason.TIMEOUT]]);\n\n/**\n * A {@link TwilioConnection} represents a WebSocket connection\n * to a Twilio Connections Messaging Protocol (TCMP) server.\n * @fires TwilioConnection#close\n * @fires TwilioConnection#error\n * @fires TwilioConnection#message\n * @fires TwilioConnection#open\n * @fires TwilioConnection#waiting\n */\n\nvar TwilioConnection = function (_StateMachine) {\n  _inherits(TwilioConnection, _StateMachine);\n\n  /**\n   * Construct a {@link TwilioConnection}.\n   * @param {string} serverUrl - TCMP server url\n   * @param {TwilioConnectionOptions} options - {@link TwilioConnection} options\n   */\n  function TwilioConnection(serverUrl, options) {\n    _classCallCheck(this, TwilioConnection);\n\n    var _this = _possibleConstructorReturn(this, (TwilioConnection.__proto__ || Object.getPrototypeOf(TwilioConnection)).call(this, 'early', states));\n\n    options = Object.assign({\n      helloBody: null,\n      maxConsecutiveFailedHellos: DEFAULT_MAX_CONSECUTIVE_FAILED_HELLOS,\n      maxConsecutiveMissedHeartbeats: DEFAULT_MAX_CONSECUTIVE_MISSED_HEARTBEATS,\n      requestedHeartbeatTimeout: DEFAULT_MAX_REQUESTED_HEARTBEAT_TIMEOUT,\n      openTimeout: DEFAULT_OPEN_TIMEOUT,\n      welcomeTimeout: DEFAULT_WELCOME_TIMEOUT,\n      Log: Log,\n      WebSocket: WebSocket\n    }, options);\n\n    var logLevels = buildLogLevels(options.logLevel);\n    var log = new options.Log('default', _this, logLevels);\n\n    var networkMonitor = options.networkMonitor ? new NetworkMonitor(function () {\n      var type = networkMonitor.type;\n\n      var reason = 'Network changed' + (type ? ' to ' + type : '');\n      log.debug(reason);\n      _this._close({ code: WS_CLOSE_NETWORK_CHANGED, reason: reason });\n    }) : null;\n\n    Object.defineProperties(_this, {\n      _busyWaitTimeout: {\n        value: null,\n        writable: true\n      },\n      _consecutiveHeartbeatsMissed: {\n        value: 0,\n        writable: true\n      },\n      _cookie: {\n        value: null,\n        writable: true\n      },\n      _eventObserver: {\n        value: options.eventObserver\n      },\n      _heartbeatTimeout: {\n        value: null,\n        writable: true\n      },\n      _hellosLeft: {\n        value: options.maxConsecutiveFailedHellos,\n        writable: true\n      },\n      _instanceId: {\n        value: ++nInstances\n      },\n      _log: {\n        value: log\n      },\n      _messageQueue: {\n        value: []\n      },\n      _networkMonitor: {\n        value: networkMonitor\n      },\n      _options: {\n        value: options\n      },\n      _openTimeout: {\n        value: null,\n        writable: true\n      },\n      _sendHeartbeatTimeout: {\n        value: null,\n        writable: true\n      },\n      _serverUrl: {\n        value: serverUrl\n      },\n      _welcomeTimeout: {\n        value: null,\n        writable: true\n      },\n      _ws: {\n        value: null,\n        writable: true\n      }\n    });\n\n    _this.on('stateChanged', function (state) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (state in events) {\n        _this.emit.apply(_this, [events[state]].concat(args));\n      }\n      var event = { name: state };\n      if (state === 'closed') {\n        var reason = args[0];\n\n        event.payload = { reason: reason };\n      }\n      _this._eventObserver.emit('event', event);\n    });\n\n    _this._eventObserver.emit('event', { name: _this.state });\n    _this._connect();\n    return _this;\n  }\n\n  _createClass(TwilioConnection, [{\n    key: 'toString',\n    value: function toString() {\n      return '[TwilioConnection #' + this._instanceId + ': ' + this._ws.url + ']';\n    }\n\n    /**\n     * Close the {@link TwilioConnection}.\n     * @param {{code: number, reason: string}} event\n     * @private\n     */\n\n  }, {\n    key: '_close',\n    value: function _close(_ref) {\n      var code = _ref.code,\n          reason = _ref.reason;\n\n      if (this.state === 'closed') {\n        return;\n      }\n      if (this._openTimeout) {\n        this._openTimeout.clear();\n      }\n      if (this._welcomeTimeout) {\n        this._welcomeTimeout.clear();\n      }\n      if (this._heartbeatTimeout) {\n        this._heartbeatTimeout.clear();\n      }\n      if (this._sendHeartbeatTimeout) {\n        this._sendHeartbeatTimeout.clear();\n      }\n      if (this._networkMonitor) {\n        this._networkMonitor.stop();\n      }\n      if (this._busyWaitTimeout && code !== WS_CLOSE_BUSY_WAIT) {\n        this._busyWaitTimeout.clear();\n      }\n      this._messageQueue.splice(0);\n      var log = this._log;\n\n      if (code === WS_CLOSE_NORMAL) {\n        log.debug('Closed');\n        this.transition('closed', null, [CloseReason.LOCAL]);\n      } else {\n        log.warn('Closed: ' + code + ' - ' + reason);\n        if (code !== WS_CLOSE_BUSY_WAIT) {\n          this.transition('closed', null, [wsCloseCodesToCloseReasons.get(code) || CloseReason.REMOTE]);\n        }\n      }\n      var readyState = this._ws.readyState;\n      var WebSocket = this._options.WebSocket;\n\n\n      if (readyState !== WebSocket.CLOSING && readyState !== WebSocket.CLOSED) {\n        this._ws.close(code, reason);\n      }\n    }\n\n    /**\n     * Connect to the TCMP server.\n     * @private\n     */\n\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      var _this2 = this;\n\n      var log = this._log;\n      if (this.state === 'waiting') {\n        this.transition('early');\n      } else if (this.state !== 'early') {\n        log.warn('Unexpected state \"' + this.state + '\" for connecting to the' + ' TCMP server.');\n        return;\n      }\n      this._ws = new this._options.WebSocket(this._serverUrl);\n      var ws = this._ws;\n      log.debug('Created a new WebSocket:', ws);\n      ws.addEventListener('close', function (event) {\n        return _this2._close(event);\n      });\n\n      var openTimeout = this._options.openTimeout;\n      // Add a timeout for getting the onopen event on the WebSocket (15 sec). After that, attempt to reconnect only if this is not the first attempt.\n\n      this._openTimeout = new Timeout(function () {\n        var reason = 'Failed to open in ' + openTimeout + ' ms';\n        _this2._close({ code: WS_CLOSE_OPEN_TIMEOUT, reason: reason });\n      }, openTimeout);\n\n      ws.addEventListener('open', function () {\n        log.debug('WebSocket opened:', ws);\n        _this2._openTimeout.clear();\n        _this2._startHandshake();\n        if (_this2._networkMonitor) {\n          _this2._networkMonitor.start();\n        }\n      });\n\n      ws.addEventListener('message', function (message) {\n        log.debug('Incoming: ' + message.data);\n        try {\n          message = JSON.parse(message.data);\n        } catch (error) {\n          _this2.emit('error', error);\n          return;\n        }\n\n        switch (message.type) {\n          case 'bad':\n            _this2._handleBad(message);\n            break;\n          case 'busy':\n            _this2._handleBusy(message);\n            break;\n          case 'bye':\n            // Do nothing.\n            break;\n          case 'msg':\n            _this2._handleMessage(message);\n          // NOTE(mpatwardhan): Each incoming message should be treated as an incoming\n          // heartbeat intentionally falling through to 'heartbeat' case.\n          // eslint-disable-next-line no-fallthrough\n          case 'heartbeat':\n            _this2._handleHeartbeat();\n            break;\n          case 'welcome':\n            _this2._handleWelcome(message);\n            break;\n          default:\n            _this2._log.debug('Unknown message type: ' + message.type);\n            _this2.emit('error', new Error('Unknown message type: ' + message.type));\n            break;\n        }\n      });\n    }\n\n    /**\n     * Handle an incoming \"bad\" message.\n     * @param {{reason: string}} message\n     * @private\n     */\n\n  }, {\n    key: '_handleBad',\n    value: function _handleBad(_ref2) {\n      var reason = _ref2.reason;\n\n      var log = this._log;\n      if (!['connecting', 'open'].includes(this.state)) {\n        log.warn('Unexpected state \"' + this.state + '\" for handling a \"bad\" message' + ' from the TCMP server.');\n        return;\n      }\n      if (this.state === 'connecting') {\n        log.warn('Closing: ' + WS_CLOSE_HELLO_FAILED + ' - ' + reason);\n        this._close({ code: WS_CLOSE_HELLO_FAILED, reason: reason });\n        return;\n      }\n      log.debug('Error: ' + reason);\n      this.emit('error', new Error(reason));\n    }\n\n    /**\n     * Handle an incoming \"busy\" message.\n     * @param {{cookie: ?string, keepAlive: boolean, retryAfter: number}} message\n     * @private\n     */\n\n  }, {\n    key: '_handleBusy',\n    value: function _handleBusy(_ref3) {\n      var _this3 = this;\n\n      var cookie = _ref3.cookie,\n          keepAlive = _ref3.keepAlive,\n          retryAfter = _ref3.retryAfter;\n\n      var log = this._log;\n      if (!['connecting', 'waiting'].includes(this.state)) {\n        log.warn('Unexpected state \"' + this.state + '\" for handling a \"busy\" message' + ' from the TCMP server.');\n        return;\n      }\n      if (this._busyWaitTimeout) {\n        this._busyWaitTimeout.clear();\n      }\n      if (this._welcomeTimeout) {\n        this._welcomeTimeout.clear();\n      }\n      var reason = retryAfter < 0 ? 'Received terminal \"busy\" message' : 'Received \"busy\" message, retrying after ' + retryAfter + ' ms';\n\n      if (retryAfter < 0) {\n        log.warn('Closing: ' + WS_CLOSE_SERVER_BUSY + ' - ' + reason);\n        this._close({ code: WS_CLOSE_SERVER_BUSY, reason: reason });\n        return;\n      }\n      var maxConsecutiveFailedHellos = this._options.maxConsecutiveFailedHellos;\n\n      this._hellosLeft = maxConsecutiveFailedHellos;\n      this._cookie = cookie || null;\n\n      if (keepAlive) {\n        log.warn(reason);\n        this._busyWaitTimeout = new Timeout(function () {\n          return _this3._startHandshake();\n        }, retryAfter);\n      } else {\n        log.warn('Closing: ' + WS_CLOSE_BUSY_WAIT + ' - ' + reason);\n        this._close({ code: WS_CLOSE_BUSY_WAIT, reason: reason });\n        this._busyWaitTimeout = new Timeout(function () {\n          return _this3._connect();\n        }, retryAfter);\n      }\n\n      this.transition('waiting', null, [keepAlive, retryAfter]);\n    }\n\n    /**\n     * Handle an incoming \"heartbeat\" message.\n     * @private\n     */\n\n  }, {\n    key: '_handleHeartbeat',\n    value: function _handleHeartbeat() {\n      if (this.state !== 'open') {\n        this._log.warn('Unexpected state \"' + this.state + '\" for handling a \"heartbeat\"' + ' message from the TCMP server.');\n        return;\n      }\n      this._heartbeatTimeout.reset();\n    }\n\n    /**\n     * Handle a missed \"heartbeat\" message.\n     * @private\n     */\n\n  }, {\n    key: '_handleHeartbeatTimeout',\n    value: function _handleHeartbeatTimeout() {\n      if (this.state !== 'open') {\n        return;\n      }\n      var log = this._log;\n      var maxConsecutiveMissedHeartbeats = this._options.maxConsecutiveMissedHeartbeats;\n\n\n      log.debug('Consecutive heartbeats missed: ' + maxConsecutiveMissedHeartbeats);\n      var reason = 'Missed ' + maxConsecutiveMissedHeartbeats + ' \"heartbeat\" messages';\n      log.warn('Closing: ' + WS_CLOSE_HEARTBEATS_MISSED + ' - ' + reason);\n      this._close({ code: WS_CLOSE_HEARTBEATS_MISSED, reason: reason });\n    }\n\n    /**\n     * Handle an incoming \"msg\" message.\n     * @param {{body: object}} message\n     * @private\n     */\n\n  }, {\n    key: '_handleMessage',\n    value: function _handleMessage(_ref4) {\n      var body = _ref4.body;\n\n      if (this.state !== 'open') {\n        this._log.warn('Unexpected state \"' + this.state + '\" for handling a \"msg\" message' + ' from the TCMP server.');\n        return;\n      }\n      this.emit('message', body);\n    }\n\n    /**\n     * Handle an incoming \"welcome\" message.\n     * @param {{ negotiatedTimeout: number }} message\n     * @private\n     */\n\n  }, {\n    key: '_handleWelcome',\n    value: function _handleWelcome(_ref5) {\n      var _this4 = this;\n\n      var negotiatedTimeout = _ref5.negotiatedTimeout;\n\n      var log = this._log;\n\n      if (!['connecting', 'waiting'].includes(this.state)) {\n        log.warn('Unexpected state \"' + this.state + '\" for handling a \"welcome\"' + ' message from the TCMP server.');\n        return;\n      }\n\n      if (this.state === 'waiting') {\n        log.debug('Received \"welcome\" message, no need to retry connection.');\n        this._busyWaitTimeout.clear();\n      }\n\n      var maxConsecutiveMissedHeartbeats = this._options.maxConsecutiveMissedHeartbeats;\n\n      var heartbeatTimeout = negotiatedTimeout * maxConsecutiveMissedHeartbeats;\n      var outgoingHeartbeatTimeout = negotiatedTimeout - OUTGOING_HEARTBEAT_OFFSET;\n\n      this._welcomeTimeout.clear();\n      this._heartbeatTimeout = new Timeout(function () {\n        return _this4._handleHeartbeatTimeout();\n      }, heartbeatTimeout);\n      this._messageQueue.splice(0).forEach(function (message) {\n        return _this4._send(message);\n      });\n      this._sendHeartbeatTimeout = new Timeout(function () {\n        return _this4._sendHeartbeat();\n      }, outgoingHeartbeatTimeout);\n      this.transition('open');\n    }\n\n    /**\n     * Handle a missed \"welcome\" message.\n     * @private\n     */\n\n  }, {\n    key: '_handleWelcomeTimeout',\n    value: function _handleWelcomeTimeout() {\n      if (this.state !== 'connecting') {\n        return;\n      }\n      var log = this._log;\n\n      if (this._hellosLeft <= 0) {\n        var reason = 'All handshake attempts failed';\n        log.warn('Closing: ' + WS_CLOSE_WELCOME_TIMEOUT + ' - ' + reason);\n        this._close({ code: WS_CLOSE_WELCOME_TIMEOUT, reason: reason });\n        return;\n      }\n\n      var maxConsecutiveFailedHellos = this._options.maxConsecutiveFailedHellos;\n\n      log.warn('Handshake attempt ' + (maxConsecutiveFailedHellos - this._hellosLeft) + ' failed');\n      this._startHandshake();\n    }\n\n    /**\n     * Send a message to the TCMP server.\n     * @param {*} message\n     * @private\n     */\n\n  }, {\n    key: '_send',\n    value: function _send(message) {\n      var readyState = this._ws.readyState;\n      var WebSocket = this._options.WebSocket;\n\n      if (readyState === WebSocket.OPEN) {\n        var data = JSON.stringify(message);\n        this._log.debug('Outgoing: ' + data);\n        try {\n          this._ws.send(data);\n          if (this._sendHeartbeatTimeout) {\n            // Each outgoing message is to be treated as an outgoing heartbeat.\n            this._sendHeartbeatTimeout.reset();\n          }\n        } catch (error) {\n          var reason = 'Failed to send message';\n          this._log.warn('Closing: ' + WS_CLOSE_SEND_FAILED + ' - ' + reason);\n          this._close({ code: WS_CLOSE_SEND_FAILED, reason: reason });\n        }\n      }\n    }\n\n    /**\n     * Send a \"heartbeat\" message.\n     * @private\n     */\n\n  }, {\n    key: '_sendHeartbeat',\n    value: function _sendHeartbeat() {\n      if (this.state === 'closed') {\n        return;\n      }\n      this._send({ type: 'heartbeat' });\n    }\n\n    /**\n     * Send a \"hello\" message.\n     * @private\n     */\n\n  }, {\n    key: '_sendHello',\n    value: function _sendHello() {\n      var _options = this._options,\n          helloBody = _options.helloBody,\n          timeout = _options.requestedHeartbeatTimeout;\n\n      var hello = {\n        id: makeUUID(),\n        timeout: timeout,\n        type: 'hello',\n        version: TCMP_VERSION\n      };\n      if (this._cookie) {\n        hello.cookie = this._cookie;\n      }\n      if (helloBody) {\n        hello.body = helloBody;\n      }\n      this._send(hello);\n    }\n\n    /**\n     * Send or enqueue a message.\n     * @param {*} message\n     * @private\n     */\n\n  }, {\n    key: '_sendOrEnqueue',\n    value: function _sendOrEnqueue(message) {\n      var _this5 = this;\n\n      if (this.state === 'closed') {\n        return;\n      }\n      var sendOrEnqueue = this.state === 'open' ? function (message) {\n        return _this5._send(message);\n      } : function (message) {\n        return _this5._messageQueue.push(message);\n      };\n\n      sendOrEnqueue(message);\n    }\n\n    /**\n     * Start the TCMP handshake.\n     * @private\n     */\n\n  }, {\n    key: '_startHandshake',\n    value: function _startHandshake() {\n      var _this6 = this;\n\n      if (['early', 'waiting'].includes(this.state)) {\n        this.transition('connecting');\n      }\n      if (this.state !== 'connecting') {\n        return;\n      }\n      this._hellosLeft--;\n      this._sendHello();\n      var welcomeTimeout = this._options.welcomeTimeout;\n\n      this._welcomeTimeout = new Timeout(function () {\n        return _this6._handleWelcomeTimeout();\n      }, welcomeTimeout);\n    }\n\n    /**\n     * Close the {@link TwilioConnection}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      if (this.state === 'closed') {\n        return;\n      }\n      this._sendOrEnqueue({ type: 'bye' });\n      this._close({ code: WS_CLOSE_NORMAL, reason: 'Normal' });\n    }\n\n    /**\n     * Send a \"msg\" message.\n     * @param {*} body\n     * @returns {void}\n     */\n\n  }, {\n    key: 'sendMessage',\n    value: function sendMessage(body) {\n      this._sendOrEnqueue({ body: body, type: 'msg' });\n    }\n  }]);\n\n  return TwilioConnection;\n}(StateMachine);\n\n/**\n * A unique string depicting the reason for the {@link TwilioConnection} being closed.\n * @enum {string}\n */\n\n\nTwilioConnection.CloseReason = CloseReason;\n\n/**\n * A {@link TwilioConnection} was closed.\n * @event TwilioConnection#close\n * @param {CloseReason} reason - The reason for the {@link TwilioConnection} being closed\n */\n\n/**\n * A {@link TwilioConnection} received an error from the TCMP server.\n * @event TwilioConnection#error\n * @param {Error} error - The TCMP server error\n */\n\n/**\n * A {@link TwilioConnection} received a message from the TCMP server.\n * @event TwilioConnection#message\n * @param {*} body - Message body\n */\n\n/**\n * A {@link TwilioConnection} completed a hello/welcome handshake with the TCMP server.\n * @event TwilioConnection#open\n */\n\n/**\n * A {@link TwilioConnection} received a \"busy\" message from the TCMP server.\n * @event TwilioConnection#waiting\n * @param {boolean} keepAlive - true if the WebSocket connection is retained\n * @param {number} retryAfter - delay in milliseconds after which a retry is attempted\n */\n\n/**\n * {@link TwilioConnection} options\n * @typedef {object} TwilioConnectionOptions\n * @property {EventObserver} [eventObserver] - Optional event observer\n * @property {*} [helloBody=null] - Optional body for \"hello\" message\n * @property {LogLevel} [logLevel=warn] - Log level of the {@link TwilioConnection}\n * @property {number} [maxConsecutiveFailedHellos=3] - Max. number of consecutive failed \"hello\"s\n * @property {number} [maxConsecutiveMissedHeartbeats=3] - Max. number of (effective) consecutive \"heartbeat\" messages that can be missed\n * @property {number} [requestedHeartbeatTimeout=5000] - \"heartbeat\" timeout (ms) requested by the {@link TwilioConnection}\n * @property {number} [welcomeTimeout=5000] - Time (ms) to wait for the \"welcome\" message after sending the \"hello\" message\n */\n\nmodule.exports = TwilioConnection;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/twilioconnection.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/asyncvar.js":
/*!********************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/asyncvar.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    defer = _require.defer;\n\n/**\n * An {@link AsyncVar} is an \"asynchronous variable\" which may or may not\n * contain a value of some type T. You can put a value into the {@link AsyncVar}\n * with {@link AsyncVar#put}. Callers can take a value out of the\n * {@link AsyncVar} by queueing up with {@link AsyncVar#take}. N calls to\n * {@link AsyncVar#take} require N calls to {@link AsyncVar#put} to resolve, and\n * they resolve in order.\n */\n\n\nvar AsyncVar = function () {\n  /**\n   * Construct an {@link AsyncVar}.\n   */\n  function AsyncVar() {\n    _classCallCheck(this, AsyncVar);\n\n    Object.defineProperties(this, {\n      _deferreds: {\n        value: []\n      },\n      _hasValue: {\n        value: false,\n        writable: true\n      },\n      _value: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n   * Put a value into the {@link AsyncVar}.\n   * @param {T} value\n   * @returns {this}\n   */\n\n\n  _createClass(AsyncVar, [{\n    key: 'put',\n    value: function put(value) {\n      this._hasValue = true;\n      this._value = value;\n      var deferred = this._deferreds.shift();\n      if (deferred) {\n        deferred.resolve(value);\n      }\n      return this;\n    }\n\n    /**\n     * Take the value out of the {@link AsyncVar}.\n     * @returns {Promise<T>}\n     */\n\n  }, {\n    key: 'take',\n    value: function take() {\n      var _this = this;\n\n      if (this._hasValue && !this._deferreds.length) {\n        this._hasValue = false;\n        return Promise.resolve(this._value);\n      }\n      var deferred = defer();\n      this._deferreds.push(deferred);\n      return deferred.promise.then(function (value) {\n        _this._hasValue = false;\n        return value;\n      });\n    }\n  }]);\n\n  return AsyncVar;\n}();\n\nmodule.exports = AsyncVar;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2FzeW5jdmFyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC9hc3luY3Zhci5qcz8xMDdhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi8nKSxcbiAgICBkZWZlciA9IF9yZXF1aXJlLmRlZmVyO1xuXG4vKipcbiAqIEFuIHtAbGluayBBc3luY1Zhcn0gaXMgYW4gXCJhc3luY2hyb25vdXMgdmFyaWFibGVcIiB3aGljaCBtYXkgb3IgbWF5IG5vdFxuICogY29udGFpbiBhIHZhbHVlIG9mIHNvbWUgdHlwZSBULiBZb3UgY2FuIHB1dCBhIHZhbHVlIGludG8gdGhlIHtAbGluayBBc3luY1Zhcn1cbiAqIHdpdGgge0BsaW5rIEFzeW5jVmFyI3B1dH0uIENhbGxlcnMgY2FuIHRha2UgYSB2YWx1ZSBvdXQgb2YgdGhlXG4gKiB7QGxpbmsgQXN5bmNWYXJ9IGJ5IHF1ZXVlaW5nIHVwIHdpdGgge0BsaW5rIEFzeW5jVmFyI3Rha2V9LiBOIGNhbGxzIHRvXG4gKiB7QGxpbmsgQXN5bmNWYXIjdGFrZX0gcmVxdWlyZSBOIGNhbGxzIHRvIHtAbGluayBBc3luY1ZhciNwdXR9IHRvIHJlc29sdmUsIGFuZFxuICogdGhleSByZXNvbHZlIGluIG9yZGVyLlxuICovXG5cblxudmFyIEFzeW5jVmFyID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ29uc3RydWN0IGFuIHtAbGluayBBc3luY1Zhcn0uXG4gICAqL1xuICBmdW5jdGlvbiBBc3luY1ZhcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXN5bmNWYXIpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgX2RlZmVycmVkczoge1xuICAgICAgICB2YWx1ZTogW11cbiAgICAgIH0sXG4gICAgICBfaGFzVmFsdWU6IHtcbiAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIF92YWx1ZToge1xuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQdXQgYSB2YWx1ZSBpbnRvIHRoZSB7QGxpbmsgQXN5bmNWYXJ9LlxuICAgKiBAcGFyYW0ge1R9IHZhbHVlXG4gICAqIEByZXR1cm5zIHt0aGlzfVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhBc3luY1ZhciwgW3tcbiAgICBrZXk6ICdwdXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwdXQodmFsdWUpIHtcbiAgICAgIHRoaXMuX2hhc1ZhbHVlID0gdHJ1ZTtcbiAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgICB2YXIgZGVmZXJyZWQgPSB0aGlzLl9kZWZlcnJlZHMuc2hpZnQoKTtcbiAgICAgIGlmIChkZWZlcnJlZCkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRha2UgdGhlIHZhbHVlIG91dCBvZiB0aGUge0BsaW5rIEFzeW5jVmFyfS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUPn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndGFrZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRha2UoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5faGFzVmFsdWUgJiYgIXRoaXMuX2RlZmVycmVkcy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5faGFzVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl92YWx1ZSk7XG4gICAgICB9XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgdGhpcy5fZGVmZXJyZWRzLnB1c2goZGVmZXJyZWQpO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgX3RoaXMuX2hhc1ZhbHVlID0gZmFsc2U7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBBc3luY1Zhcjtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBBc3luY1ZhcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/asyncvar.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/cancelablepromise.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/cancelablepromise.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A Promise that can be canceled with {@link CancelablePromise#cancel}.\n * @extends Promise\n*/\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CancelablePromise = function () {\n  /**\n   * Construct a new {@link CancelablePromise}.\n   * @param {CancelablePromise.OnCreate} onCreate\n   * @param {CancelablePromise.OnCancel} onCancel\n  */ /**\n     * A function to be called on {@link CancelablePromise} creation\n     * @typedef {function} CancelablePromise.OnCreate\n     * @param {function(*)} resolve\n     * @param {function(*)} reject\n     * @param {function(): boolean} isCanceled\n     */ /**\n        * A function to be called when {@link CancelablePromise#cancel} is called\n        * @typedef {function} CancelablePromise.OnCancel\n        */\n  function CancelablePromise(onCreate, onCancel) {\n    var _this = this;\n\n    _classCallCheck(this, CancelablePromise);\n\n    /* istanbul ignore next */\n    Object.defineProperties(this, {\n      _isCancelable: {\n        writable: true,\n        value: true\n      },\n      _isCanceled: {\n        writable: true,\n        value: false\n      },\n      _onCancel: {\n        value: onCancel\n      }\n    });\n\n    Object.defineProperty(this, '_promise', {\n      value: new Promise(function (resolve, reject) {\n        onCreate(function (value) {\n          _this._isCancelable = false;\n          resolve(value);\n        }, function (reason) {\n          _this._isCancelable = false;\n          reject(reason);\n        }, function () {\n          return _this._isCanceled;\n        });\n      })\n    });\n  }\n\n  /**\n   * Create a synchronously-rejected {@link CancelablePromise}.\n   * @param {*} reason\n   * @returns {Promise<*>}\n   */\n\n\n  _createClass(CancelablePromise, [{\n    key: 'cancel',\n\n\n    /**\n     * Attempt to cancel the {@link CancelablePromise}.\n     * @returns {this}\n     */\n    value: function cancel() {\n      if (this._isCancelable) {\n        this._isCanceled = true;\n        this._onCancel();\n      }\n      return this;\n    }\n\n    /**\n     * @param {function} onRejected\n     * @returns {CancelablePromise}\n     */\n\n  }, {\n    key: 'catch',\n    value: function _catch() {\n      var args = [].slice.call(arguments);\n      var promise = this._promise;\n      return new CancelablePromise(function onCreate(resolve, reject) {\n        promise.catch.apply(promise, _toConsumableArray(args)).then(resolve, reject);\n      }, this._onCancel);\n    }\n\n    /**\n     * @param {?function} onResolved\n     * @param {function} [onRejected]\n     * @returns {CancelablePromise}\n     */\n\n  }, {\n    key: 'then',\n    value: function then() {\n      var args = [].slice.call(arguments);\n      var promise = this._promise;\n      return new CancelablePromise(function onCreate(resolve, reject) {\n        promise.then.apply(promise, _toConsumableArray(args)).then(resolve, reject);\n      }, this._onCancel);\n    }\n  }], [{\n    key: 'reject',\n    value: function reject(reason) {\n      return new CancelablePromise(function rejected(resolve, reject) {\n        reject(reason);\n      }, function onCancel() {\n        // Do nothing.\n      });\n    }\n\n    /**\n     * Create a synchronously-resolved {@link CancelablePromise}.\n     * @param {*|Promise<*>|Thenable<*>} result\n     * @returns {CancelablePromise<*>}\n     */\n\n  }, {\n    key: 'resolve',\n    value: function resolve(result) {\n      return new CancelablePromise(function resolved(resolve) {\n        resolve(result);\n      }, function onCancel() {\n        // Do nothing.\n      });\n    }\n  }]);\n\n  return CancelablePromise;\n}();\n\nmodule.exports = CancelablePromise;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2NhbmNlbGFibGVwcm9taXNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC9jYW5jZWxhYmxlcHJvbWlzZS5qcz9iMTgyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIFByb21pc2UgdGhhdCBjYW4gYmUgY2FuY2VsZWQgd2l0aCB7QGxpbmsgQ2FuY2VsYWJsZVByb21pc2UjY2FuY2VsfS5cbiAqIEBleHRlbmRzIFByb21pc2VcbiovXG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gZWxzZSB7IHJldHVybiBBcnJheS5mcm9tKGFycik7IH0gfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQ2FuY2VsYWJsZVByb21pc2UgPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSBuZXcge0BsaW5rIENhbmNlbGFibGVQcm9taXNlfS5cbiAgICogQHBhcmFtIHtDYW5jZWxhYmxlUHJvbWlzZS5PbkNyZWF0ZX0gb25DcmVhdGVcbiAgICogQHBhcmFtIHtDYW5jZWxhYmxlUHJvbWlzZS5PbkNhbmNlbH0gb25DYW5jZWxcbiAgKi8gLyoqXG4gICAgICogQSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgb24ge0BsaW5rIENhbmNlbGFibGVQcm9taXNlfSBjcmVhdGlvblxuICAgICAqIEB0eXBlZGVmIHtmdW5jdGlvbn0gQ2FuY2VsYWJsZVByb21pc2UuT25DcmVhdGVcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCopfSByZXNvbHZlXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbigqKX0gcmVqZWN0XG4gICAgICogQHBhcmFtIHtmdW5jdGlvbigpOiBib29sZWFufSBpc0NhbmNlbGVkXG4gICAgICovIC8qKlxuICAgICAgICAqIEEgZnVuY3Rpb24gdG8gYmUgY2FsbGVkIHdoZW4ge0BsaW5rIENhbmNlbGFibGVQcm9taXNlI2NhbmNlbH0gaXMgY2FsbGVkXG4gICAgICAgICogQHR5cGVkZWYge2Z1bmN0aW9ufSBDYW5jZWxhYmxlUHJvbWlzZS5PbkNhbmNlbFxuICAgICAgICAqL1xuICBmdW5jdGlvbiBDYW5jZWxhYmxlUHJvbWlzZShvbkNyZWF0ZSwgb25DYW5jZWwpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENhbmNlbGFibGVQcm9taXNlKTtcblxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgX2lzQ2FuY2VsYWJsZToge1xuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgIH0sXG4gICAgICBfaXNDYW5jZWxlZDoge1xuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICB9LFxuICAgICAgX29uQ2FuY2VsOiB7XG4gICAgICAgIHZhbHVlOiBvbkNhbmNlbFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdfcHJvbWlzZScsIHtcbiAgICAgIHZhbHVlOiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIG9uQ3JlYXRlKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIF90aGlzLl9pc0NhbmNlbGFibGUgPSBmYWxzZTtcbiAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICAgIF90aGlzLl9pc0NhbmNlbGFibGUgPSBmYWxzZTtcbiAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5faXNDYW5jZWxlZDtcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIHN5bmNocm9ub3VzbHktcmVqZWN0ZWQge0BsaW5rIENhbmNlbGFibGVQcm9taXNlfS5cbiAgICogQHBhcmFtIHsqfSByZWFzb25cbiAgICogQHJldHVybnMge1Byb21pc2U8Kj59XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKENhbmNlbGFibGVQcm9taXNlLCBbe1xuICAgIGtleTogJ2NhbmNlbCcsXG5cblxuICAgIC8qKlxuICAgICAqIEF0dGVtcHQgdG8gY2FuY2VsIHRoZSB7QGxpbmsgQ2FuY2VsYWJsZVByb21pc2V9LlxuICAgICAqIEByZXR1cm5zIHt0aGlzfVxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgICBpZiAodGhpcy5faXNDYW5jZWxhYmxlKSB7XG4gICAgICAgIHRoaXMuX2lzQ2FuY2VsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9vbkNhbmNlbCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gb25SZWplY3RlZFxuICAgICAqIEByZXR1cm5zIHtDYW5jZWxhYmxlUHJvbWlzZX1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnY2F0Y2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY2F0Y2goKSB7XG4gICAgICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcbiAgICAgIHZhciBwcm9taXNlID0gdGhpcy5fcHJvbWlzZTtcbiAgICAgIHJldHVybiBuZXcgQ2FuY2VsYWJsZVByb21pc2UoZnVuY3Rpb24gb25DcmVhdGUocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHByb21pc2UuY2F0Y2guYXBwbHkocHJvbWlzZSwgX3RvQ29uc3VtYWJsZUFycmF5KGFyZ3MpKS50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9LCB0aGlzLl9vbkNhbmNlbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/ZnVuY3Rpb259IG9uUmVzb2x2ZWRcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBbb25SZWplY3RlZF1cbiAgICAgKiBAcmV0dXJucyB7Q2FuY2VsYWJsZVByb21pc2V9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3RoZW4nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0aGVuKCkge1xuICAgICAgdmFyIGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgICB2YXIgcHJvbWlzZSA9IHRoaXMuX3Byb21pc2U7XG4gICAgICByZXR1cm4gbmV3IENhbmNlbGFibGVQcm9taXNlKGZ1bmN0aW9uIG9uQ3JlYXRlKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBwcm9taXNlLnRoZW4uYXBwbHkocHJvbWlzZSwgX3RvQ29uc3VtYWJsZUFycmF5KGFyZ3MpKS50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9LCB0aGlzLl9vbkNhbmNlbCk7XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6ICdyZWplY3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWplY3QocmVhc29uKSB7XG4gICAgICByZXR1cm4gbmV3IENhbmNlbGFibGVQcm9taXNlKGZ1bmN0aW9uIHJlamVjdGVkKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgIH0sIGZ1bmN0aW9uIG9uQ2FuY2VsKCkge1xuICAgICAgICAvLyBEbyBub3RoaW5nLlxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgc3luY2hyb25vdXNseS1yZXNvbHZlZCB7QGxpbmsgQ2FuY2VsYWJsZVByb21pc2V9LlxuICAgICAqIEBwYXJhbSB7KnxQcm9taXNlPCo+fFRoZW5hYmxlPCo+fSByZXN1bHRcbiAgICAgKiBAcmV0dXJucyB7Q2FuY2VsYWJsZVByb21pc2U8Kj59XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3Jlc29sdmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNvbHZlKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIG5ldyBDYW5jZWxhYmxlUHJvbWlzZShmdW5jdGlvbiByZXNvbHZlZChyZXNvbHZlKSB7XG4gICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgIH0sIGZ1bmN0aW9uIG9uQ2FuY2VsKCkge1xuICAgICAgICAvLyBEbyBub3RoaW5nLlxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhbmNlbGFibGVQcm9taXNlO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbGFibGVQcm9taXNlOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/cancelablepromise.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/constants.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports.DEFAULT_ENVIRONMENT = 'prod';\nmodule.exports.DEFAULT_REALM = 'us1';\nmodule.exports.DEFAULT_REGION = 'gll';\nmodule.exports.DEFAULT_LOG_LEVEL = 'warn';\nmodule.exports.WS_SERVER = function (environment, region) {\n  region = region === 'gll' ? 'global' : encodeURIComponent(region);\n  return environment === 'prod' ? 'wss://' + region + '.vss.twilio.com/signaling' : 'wss://' + region + '.vss.' + environment + '.twilio.com/signaling';\n};\nmodule.exports.PUBLISH_MAX_ATTEMPTS = 5;\nmodule.exports.PUBLISH_BACKOFF_JITTER = 10;\nmodule.exports.PUBLISH_BACKOFF_MS = 20;\n\n/**\n * Returns the appropriate indefinite article (\"a\" | \"an\").\n * @param {string} word - The word which determines whether \"a\" | \"an\" is returned\n * @returns {string} \"a\" if word's first letter is a vowel, \"an\" otherwise\n */\nfunction article(word) {\n  // NOTE(mmalavalli): This will not be accurate for words like \"hour\",\n  // which have consonants as their first character, but are pronounced like\n  // vowels. We can address this issue if the need arises.\n  return ['a', 'e', 'i', 'o', 'u'].includes(word.toLowerCase()[0]) ? 'an' : 'a';\n}\n\nmodule.exports.typeErrors = {\n  ILLEGAL_INVOKE: function ILLEGAL_INVOKE(name, context) {\n    return new TypeError('Illegal call to ' + name + ': ' + context);\n  },\n  INVALID_TYPE: function INVALID_TYPE(name, type) {\n    return new TypeError(name + ' must be ' + article(type) + ' ' + type);\n  },\n  INVALID_VALUE: function INVALID_VALUE(name, values) {\n    return new RangeError(name + ' must be one of ' + values.join(', '));\n  },\n  REQUIRED_ARGUMENT: function REQUIRED_ARGUMENT(name) {\n    return new TypeError(name + ' must be specified');\n  }\n};\n\nmodule.exports.DEFAULT_ICE_GATHERING_TIMEOUT_MS = 15000;\nmodule.exports.DEFAULT_SESSION_TIMEOUT_SEC = 30;\n\nmodule.exports.DEFAULT_NQ_LEVEL_LOCAL = 1;\nmodule.exports.DEFAULT_NQ_LEVEL_REMOTE = 0;\nmodule.exports.MAX_NQ_LEVEL = 3;\n\nmodule.exports.ICE_ACTIVITY_CHECK_PERIOD_MS = 1000;\nmodule.exports.ICE_INACTIVITY_THRESHOLD_MS = 3000;\n\nmodule.exports.iceRestartBackoffConfig = {\n  factor: 1.1,\n  initialDelay: 1,\n  maxDelay: module.exports.DEFAULT_SESSION_TIMEOUT_SEC * 1000,\n  randomisationFactor: 0.5\n};\n\nmodule.exports.reconnectBackoffConfig = {\n  factor: 1.5,\n  initialDelay: 80,\n  randomisationFactor: 0.5\n};\n\nmodule.exports.subscriptionMode = {\n  MODE_COLLABORATION: 'collaboration',\n  MODE_GRID: 'grid',\n  MODE_PRESENTATION: 'presentation'\n};\n\nmodule.exports.trackSwitchOffMode = {\n  MODE_DISABLED: 'disabled',\n  MODE_DETECTED: 'detected',\n  MODE_PREDICTED: 'predicted'\n};\n\nmodule.exports.trackPriority = {\n  PRIORITY_HIGH: 'high',\n  PRIORITY_LOW: 'low',\n  PRIORITY_STANDARD: 'standard'\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3V0aWwvY29uc3RhbnRzLmpzP2M3MDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cy5ERUZBVUxUX0VOVklST05NRU5UID0gJ3Byb2QnO1xubW9kdWxlLmV4cG9ydHMuREVGQVVMVF9SRUFMTSA9ICd1czEnO1xubW9kdWxlLmV4cG9ydHMuREVGQVVMVF9SRUdJT04gPSAnZ2xsJztcbm1vZHVsZS5leHBvcnRzLkRFRkFVTFRfTE9HX0xFVkVMID0gJ3dhcm4nO1xubW9kdWxlLmV4cG9ydHMuV1NfU0VSVkVSID0gZnVuY3Rpb24gKGVudmlyb25tZW50LCByZWdpb24pIHtcbiAgcmVnaW9uID0gcmVnaW9uID09PSAnZ2xsJyA/ICdnbG9iYWwnIDogZW5jb2RlVVJJQ29tcG9uZW50KHJlZ2lvbik7XG4gIHJldHVybiBlbnZpcm9ubWVudCA9PT0gJ3Byb2QnID8gJ3dzczovLycgKyByZWdpb24gKyAnLnZzcy50d2lsaW8uY29tL3NpZ25hbGluZycgOiAnd3NzOi8vJyArIHJlZ2lvbiArICcudnNzLicgKyBlbnZpcm9ubWVudCArICcudHdpbGlvLmNvbS9zaWduYWxpbmcnO1xufTtcbm1vZHVsZS5leHBvcnRzLlBVQkxJU0hfTUFYX0FUVEVNUFRTID0gNTtcbm1vZHVsZS5leHBvcnRzLlBVQkxJU0hfQkFDS09GRl9KSVRURVIgPSAxMDtcbm1vZHVsZS5leHBvcnRzLlBVQkxJU0hfQkFDS09GRl9NUyA9IDIwO1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGFwcHJvcHJpYXRlIGluZGVmaW5pdGUgYXJ0aWNsZSAoXCJhXCIgfCBcImFuXCIpLlxuICogQHBhcmFtIHtzdHJpbmd9IHdvcmQgLSBUaGUgd29yZCB3aGljaCBkZXRlcm1pbmVzIHdoZXRoZXIgXCJhXCIgfCBcImFuXCIgaXMgcmV0dXJuZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFwiYVwiIGlmIHdvcmQncyBmaXJzdCBsZXR0ZXIgaXMgYSB2b3dlbCwgXCJhblwiIG90aGVyd2lzZVxuICovXG5mdW5jdGlvbiBhcnRpY2xlKHdvcmQpIHtcbiAgLy8gTk9URShtbWFsYXZhbGxpKTogVGhpcyB3aWxsIG5vdCBiZSBhY2N1cmF0ZSBmb3Igd29yZHMgbGlrZSBcImhvdXJcIixcbiAgLy8gd2hpY2ggaGF2ZSBjb25zb25hbnRzIGFzIHRoZWlyIGZpcnN0IGNoYXJhY3RlciwgYnV0IGFyZSBwcm9ub3VuY2VkIGxpa2VcbiAgLy8gdm93ZWxzLiBXZSBjYW4gYWRkcmVzcyB0aGlzIGlzc3VlIGlmIHRoZSBuZWVkIGFyaXNlcy5cbiAgcmV0dXJuIFsnYScsICdlJywgJ2knLCAnbycsICd1J10uaW5jbHVkZXMod29yZC50b0xvd2VyQ2FzZSgpWzBdKSA/ICdhbicgOiAnYSc7XG59XG5cbm1vZHVsZS5leHBvcnRzLnR5cGVFcnJvcnMgPSB7XG4gIElMTEVHQUxfSU5WT0tFOiBmdW5jdGlvbiBJTExFR0FMX0lOVk9LRShuYW1lLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIG5ldyBUeXBlRXJyb3IoJ0lsbGVnYWwgY2FsbCB0byAnICsgbmFtZSArICc6ICcgKyBjb250ZXh0KTtcbiAgfSxcbiAgSU5WQUxJRF9UWVBFOiBmdW5jdGlvbiBJTlZBTElEX1RZUEUobmFtZSwgdHlwZSkge1xuICAgIHJldHVybiBuZXcgVHlwZUVycm9yKG5hbWUgKyAnIG11c3QgYmUgJyArIGFydGljbGUodHlwZSkgKyAnICcgKyB0eXBlKTtcbiAgfSxcbiAgSU5WQUxJRF9WQUxVRTogZnVuY3Rpb24gSU5WQUxJRF9WQUxVRShuYW1lLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gbmV3IFJhbmdlRXJyb3IobmFtZSArICcgbXVzdCBiZSBvbmUgb2YgJyArIHZhbHVlcy5qb2luKCcsICcpKTtcbiAgfSxcbiAgUkVRVUlSRURfQVJHVU1FTlQ6IGZ1bmN0aW9uIFJFUVVJUkVEX0FSR1VNRU5UKG5hbWUpIHtcbiAgICByZXR1cm4gbmV3IFR5cGVFcnJvcihuYW1lICsgJyBtdXN0IGJlIHNwZWNpZmllZCcpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5ERUZBVUxUX0lDRV9HQVRIRVJJTkdfVElNRU9VVF9NUyA9IDE1MDAwO1xubW9kdWxlLmV4cG9ydHMuREVGQVVMVF9TRVNTSU9OX1RJTUVPVVRfU0VDID0gMzA7XG5cbm1vZHVsZS5leHBvcnRzLkRFRkFVTFRfTlFfTEVWRUxfTE9DQUwgPSAxO1xubW9kdWxlLmV4cG9ydHMuREVGQVVMVF9OUV9MRVZFTF9SRU1PVEUgPSAwO1xubW9kdWxlLmV4cG9ydHMuTUFYX05RX0xFVkVMID0gMztcblxubW9kdWxlLmV4cG9ydHMuSUNFX0FDVElWSVRZX0NIRUNLX1BFUklPRF9NUyA9IDEwMDA7XG5tb2R1bGUuZXhwb3J0cy5JQ0VfSU5BQ1RJVklUWV9USFJFU0hPTERfTVMgPSAzMDAwO1xuXG5tb2R1bGUuZXhwb3J0cy5pY2VSZXN0YXJ0QmFja29mZkNvbmZpZyA9IHtcbiAgZmFjdG9yOiAxLjEsXG4gIGluaXRpYWxEZWxheTogMSxcbiAgbWF4RGVsYXk6IG1vZHVsZS5leHBvcnRzLkRFRkFVTFRfU0VTU0lPTl9USU1FT1VUX1NFQyAqIDEwMDAsXG4gIHJhbmRvbWlzYXRpb25GYWN0b3I6IDAuNVxufTtcblxubW9kdWxlLmV4cG9ydHMucmVjb25uZWN0QmFja29mZkNvbmZpZyA9IHtcbiAgZmFjdG9yOiAxLjUsXG4gIGluaXRpYWxEZWxheTogODAsXG4gIHJhbmRvbWlzYXRpb25GYWN0b3I6IDAuNVxufTtcblxubW9kdWxlLmV4cG9ydHMuc3Vic2NyaXB0aW9uTW9kZSA9IHtcbiAgTU9ERV9DT0xMQUJPUkFUSU9OOiAnY29sbGFib3JhdGlvbicsXG4gIE1PREVfR1JJRDogJ2dyaWQnLFxuICBNT0RFX1BSRVNFTlRBVElPTjogJ3ByZXNlbnRhdGlvbidcbn07XG5cbm1vZHVsZS5leHBvcnRzLnRyYWNrU3dpdGNoT2ZmTW9kZSA9IHtcbiAgTU9ERV9ESVNBQkxFRDogJ2Rpc2FibGVkJyxcbiAgTU9ERV9ERVRFQ1RFRDogJ2RldGVjdGVkJyxcbiAgTU9ERV9QUkVESUNURUQ6ICdwcmVkaWN0ZWQnXG59O1xuXG5tb2R1bGUuZXhwb3J0cy50cmFja1ByaW9yaXR5ID0ge1xuICBQUklPUklUWV9ISUdIOiAnaGlnaCcsXG4gIFBSSU9SSVRZX0xPVzogJ2xvdycsXG4gIFBSSU9SSVRZX1NUQU5EQVJEOiAnc3RhbmRhcmQnXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/constants.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/documentvisibilitymonitor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/documentvisibilitymonitor.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * The {@link DocumentVisibilityMonitor} monitors the visibility state of the DOM\n * and executes the attached listeners in phase order when the DOM is visible.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DocumentVisibilityMonitor = function () {\n  /**\n   * Constructor.\n   * @param {number} [nPhases=1] - the number of phases\n   */\n  function DocumentVisibilityMonitor() {\n    var _this = this;\n\n    var nPhases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    _classCallCheck(this, DocumentVisibilityMonitor);\n\n    Object.defineProperties(this, {\n      _listeners: {\n        value: []\n      },\n      _onVisibilityChange: {\n        value: function value() {\n          if (document.visibilityState === 'visible') {\n            _this._emitVisible();\n          }\n        }\n      }\n    });\n\n    for (var i = 0; i < nPhases; i++) {\n      this._listeners.push([]);\n    }\n  }\n\n  _createClass(DocumentVisibilityMonitor, [{\n    key: '_listenerCount',\n    value: function _listenerCount() {\n      return this._listeners.reduce(function (count, phaseListeners) {\n        return count + phaseListeners.length;\n      }, 0);\n    }\n\n    /**\n     * Call all the listeners. Makes sure that all listeners for a given phase\n     * are executed before calling the listeners of the next phase.\n     * @private\n     */\n\n  }, {\n    key: '_emitVisible',\n    value: function _emitVisible() {\n      var _this2 = this;\n\n      var promise = Promise.resolve();\n\n      var _loop = function _loop(phase) {\n        promise = promise.then(function () {\n          return _this2._emitVisiblePhase(phase);\n        });\n      };\n\n      for (var phase = 1; phase <= this._listeners.length; phase++) {\n        _loop(phase);\n      }\n      return promise;\n    }\n\n    /**\n     * Call all the listeners for a given phase.\n     * @private\n     */\n\n  }, {\n    key: '_emitVisiblePhase',\n    value: function _emitVisiblePhase(phase) {\n      var phaseListeners = this._listeners[phase - 1];\n      return Promise.all(phaseListeners.map(function (listener) {\n        var ret = listener();\n        return ret instanceof Promise ? ret : Promise.resolve(ret);\n      }));\n    }\n\n    /**\n     * Start listening to the DOM visibility state change.\n     * @private\n     */\n\n  }, {\n    key: '_start',\n    value: function _start() {\n      document.addEventListener('visibilitychange', this._onVisibilityChange);\n    }\n\n    /**\n     * Stop listening to the DOM visibility state change.\n     * @private\n     */\n\n  }, {\n    key: '_stop',\n    value: function _stop() {\n      document.removeEventListener('visibilitychange', this._onVisibilityChange);\n    }\n\n    /**\n     * Listen for the DOM to be visible at the given phase.\n     * @param {number} phase\n     * @param {function} listener\n     * @returns {this}\n     */\n\n  }, {\n    key: 'onVisible',\n    value: function onVisible(phase, listener) {\n      if (typeof phase !== 'number' || phase <= 0 || phase > this._listeners.length) {\n        throw new Error('invalid phase: ', phase);\n      }\n      var phaseListeners = this._listeners[phase - 1];\n      phaseListeners.push(listener);\n      if (this._listenerCount() === 1) {\n        this._start();\n      }\n      return this;\n    }\n\n    /**\n     * Stop listening for the DOM to be visible at the given phase.\n     * @param {number} phase\n     * @param {function} listener\n     * @returns {this}\n     */\n\n  }, {\n    key: 'offVisible',\n    value: function offVisible(phase, listener) {\n      if (typeof phase !== 'number' || phase <= 0 || phase > this._listeners.length) {\n        throw new Error('invalid phase: ', phase);\n      }\n\n      var phaseListeners = this._listeners[phase - 1];\n      var index = phaseListeners.indexOf(listener);\n      if (index !== -1) {\n        phaseListeners.splice(index, 1);\n        if (this._listenerCount() === 0) {\n          this._stop();\n        }\n      }\n      return this;\n    }\n  }]);\n\n  return DocumentVisibilityMonitor;\n}();\n\nmodule.exports = new DocumentVisibilityMonitor(2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2RvY3VtZW50dmlzaWJpbGl0eW1vbml0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2RvY3VtZW50dmlzaWJpbGl0eW1vbml0b3IuanM/NTAxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVGhlIHtAbGluayBEb2N1bWVudFZpc2liaWxpdHlNb25pdG9yfSBtb25pdG9ycyB0aGUgdmlzaWJpbGl0eSBzdGF0ZSBvZiB0aGUgRE9NXG4gKiBhbmQgZXhlY3V0ZXMgdGhlIGF0dGFjaGVkIGxpc3RlbmVycyBpbiBwaGFzZSBvcmRlciB3aGVuIHRoZSBET00gaXMgdmlzaWJsZS5cbiAqL1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgRG9jdW1lbnRWaXNpYmlsaXR5TW9uaXRvciA9IGZ1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW25QaGFzZXM9MV0gLSB0aGUgbnVtYmVyIG9mIHBoYXNlc1xuICAgKi9cbiAgZnVuY3Rpb24gRG9jdW1lbnRWaXNpYmlsaXR5TW9uaXRvcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIG5QaGFzZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDE7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG9jdW1lbnRWaXNpYmlsaXR5TW9uaXRvcik7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfbGlzdGVuZXJzOiB7XG4gICAgICAgIHZhbHVlOiBbXVxuICAgICAgfSxcbiAgICAgIF9vblZpc2liaWxpdHlDaGFuZ2U6IHtcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKCkge1xuICAgICAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICd2aXNpYmxlJykge1xuICAgICAgICAgICAgX3RoaXMuX2VtaXRWaXNpYmxlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5QaGFzZXM7IGkrKykge1xuICAgICAgdGhpcy5fbGlzdGVuZXJzLnB1c2goW10pO1xuICAgIH1cbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhEb2N1bWVudFZpc2liaWxpdHlNb25pdG9yLCBbe1xuICAgIGtleTogJ19saXN0ZW5lckNvdW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2xpc3RlbmVyQ291bnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbGlzdGVuZXJzLnJlZHVjZShmdW5jdGlvbiAoY291bnQsIHBoYXNlTGlzdGVuZXJzKSB7XG4gICAgICAgIHJldHVybiBjb3VudCArIHBoYXNlTGlzdGVuZXJzLmxlbmd0aDtcbiAgICAgIH0sIDApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENhbGwgYWxsIHRoZSBsaXN0ZW5lcnMuIE1ha2VzIHN1cmUgdGhhdCBhbGwgbGlzdGVuZXJzIGZvciBhIGdpdmVuIHBoYXNlXG4gICAgICogYXJlIGV4ZWN1dGVkIGJlZm9yZSBjYWxsaW5nIHRoZSBsaXN0ZW5lcnMgb2YgdGhlIG5leHQgcGhhc2UuXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnX2VtaXRWaXNpYmxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2VtaXRWaXNpYmxlKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG5cbiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKHBoYXNlKSB7XG4gICAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIuX2VtaXRWaXNpYmxlUGhhc2UocGhhc2UpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGZvciAodmFyIHBoYXNlID0gMTsgcGhhc2UgPD0gdGhpcy5fbGlzdGVuZXJzLmxlbmd0aDsgcGhhc2UrKykge1xuICAgICAgICBfbG9vcChwaGFzZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDYWxsIGFsbCB0aGUgbGlzdGVuZXJzIGZvciBhIGdpdmVuIHBoYXNlLlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ19lbWl0VmlzaWJsZVBoYXNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2VtaXRWaXNpYmxlUGhhc2UocGhhc2UpIHtcbiAgICAgIHZhciBwaGFzZUxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1twaGFzZSAtIDFdO1xuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHBoYXNlTGlzdGVuZXJzLm1hcChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgdmFyIHJldCA9IGxpc3RlbmVyKCk7XG4gICAgICAgIHJldHVybiByZXQgaW5zdGFuY2VvZiBQcm9taXNlID8gcmV0IDogUHJvbWlzZS5yZXNvbHZlKHJldCk7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RhcnQgbGlzdGVuaW5nIHRvIHRoZSBET00gdmlzaWJpbGl0eSBzdGF0ZSBjaGFuZ2UuXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnX3N0YXJ0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3N0YXJ0KCkge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHRoaXMuX29uVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RvcCBsaXN0ZW5pbmcgdG8gdGhlIERPTSB2aXNpYmlsaXR5IHN0YXRlIGNoYW5nZS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdfc3RvcCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9zdG9wKCkge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHRoaXMuX29uVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTGlzdGVuIGZvciB0aGUgRE9NIHRvIGJlIHZpc2libGUgYXQgdGhlIGdpdmVuIHBoYXNlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwaGFzZVxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uVmlzaWJsZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uVmlzaWJsZShwaGFzZSwgbGlzdGVuZXIpIHtcbiAgICAgIGlmICh0eXBlb2YgcGhhc2UgIT09ICdudW1iZXInIHx8IHBoYXNlIDw9IDAgfHwgcGhhc2UgPiB0aGlzLl9saXN0ZW5lcnMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwaGFzZTogJywgcGhhc2UpO1xuICAgICAgfVxuICAgICAgdmFyIHBoYXNlTGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzW3BoYXNlIC0gMV07XG4gICAgICBwaGFzZUxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICAgIGlmICh0aGlzLl9saXN0ZW5lckNvdW50KCkgPT09IDEpIHtcbiAgICAgICAgdGhpcy5fc3RhcnQoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0b3AgbGlzdGVuaW5nIGZvciB0aGUgRE9NIHRvIGJlIHZpc2libGUgYXQgdGhlIGdpdmVuIHBoYXNlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwaGFzZVxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogQHJldHVybnMge3RoaXN9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29mZlZpc2libGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvZmZWaXNpYmxlKHBoYXNlLCBsaXN0ZW5lcikge1xuICAgICAgaWYgKHR5cGVvZiBwaGFzZSAhPT0gJ251bWJlcicgfHwgcGhhc2UgPD0gMCB8fCBwaGFzZSA+IHRoaXMuX2xpc3RlbmVycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHBoYXNlOiAnLCBwaGFzZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwaGFzZUxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1twaGFzZSAtIDFdO1xuICAgICAgdmFyIGluZGV4ID0gcGhhc2VMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgIHBoYXNlTGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIGlmICh0aGlzLl9saXN0ZW5lckNvdW50KCkgPT09IDApIHtcbiAgICAgICAgICB0aGlzLl9zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBEb2N1bWVudFZpc2liaWxpdHlNb25pdG9yO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBEb2N1bWVudFZpc2liaWxpdHlNb25pdG9yKDIpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/documentvisibilitymonitor.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/eventobserver.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/eventobserver.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = __webpack_require__(/*! events */ \"./node_modules/events/events.js\"),\n    EventEmitter = _require.EventEmitter;\n\nvar _require2 = __webpack_require__(/*! ../twilioconnection */ \"./node_modules/twilio-video/es5/twilioconnection.js\"),\n    LOCAL = _require2.CloseReason.LOCAL;\n\nvar GROUPS = {\n  SIGNALING: 'signaling'\n};\n\nvar LEVELS = {\n  DEBUG: 'debug',\n  ERROR: 'error',\n  INFO: 'info',\n  WARNING: 'warning'\n};\n\nvar eventNamesToGroups = {\n  closed: GROUPS.SIGNALING,\n  connecting: GROUPS.SIGNALING,\n  early: GROUPS.SIGNALING,\n  open: GROUPS.SIGNALING,\n  waiting: GROUPS.SIGNALING\n};\n\nvar eventNamesToLevels = {\n  closed: function closed(payload) {\n    return payload.reason === LOCAL ? LEVELS.INFO : LEVELS.ERROR;\n  },\n\n  connecting: LEVELS.INFO,\n  early: LEVELS.INFO,\n  open: LEVELS.INFO,\n  waiting: LEVELS.WARNING\n};\n\n/**\n * EventObserver listens to SDK events and re-emits them on the\n * @link EventListener} with some additional information.\n * @extends EventEmitter\n * @emits EventObserver#event\n */\n\nvar EventObserver = function (_EventEmitter) {\n  _inherits(EventObserver, _EventEmitter);\n\n  /**\n   * Constructor.\n   * @param {number} connectTimestamp\n   * @param {EventListener} eventListener\n   */\n  function EventObserver(connectTimestamp) {\n    var eventListener = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, EventObserver);\n\n    var _this = _possibleConstructorReturn(this, (EventObserver.__proto__ || Object.getPrototypeOf(EventObserver)).call(this));\n\n    if (eventListener) {\n      _this.on('event', function (_ref) {\n        var name = _ref.name,\n            payload = _ref.payload;\n\n        var timestamp = Date.now();\n        var elapsedTime = timestamp - connectTimestamp;\n        var group = eventNamesToGroups[name];\n\n        var level = typeof eventNamesToLevels[name] === 'function' ? eventNamesToLevels[name](payload) : eventNamesToLevels[name];\n\n        var event = Object.assign(payload ? { payload: payload } : {}, {\n          elapsedTime: elapsedTime,\n          group: group,\n          level: level,\n          name: name,\n          timestamp: timestamp\n        });\n\n        eventListener.emit('event', event);\n      });\n    }\n    return _this;\n  }\n\n  return EventObserver;\n}(EventEmitter);\n\n/**\n * An SDK event.\n * @event EventObserver#event\n * @param {{name: string, payload: *}} event\n */\n\nmodule.exports = EventObserver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2V2ZW50b2JzZXJ2ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2V2ZW50b2JzZXJ2ZXIuanM/NTYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnZXZlbnRzJyksXG4gICAgRXZlbnRFbWl0dGVyID0gX3JlcXVpcmUuRXZlbnRFbWl0dGVyO1xuXG52YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgnLi4vdHdpbGlvY29ubmVjdGlvbicpLFxuICAgIExPQ0FMID0gX3JlcXVpcmUyLkNsb3NlUmVhc29uLkxPQ0FMO1xuXG52YXIgR1JPVVBTID0ge1xuICBTSUdOQUxJTkc6ICdzaWduYWxpbmcnXG59O1xuXG52YXIgTEVWRUxTID0ge1xuICBERUJVRzogJ2RlYnVnJyxcbiAgRVJST1I6ICdlcnJvcicsXG4gIElORk86ICdpbmZvJyxcbiAgV0FSTklORzogJ3dhcm5pbmcnXG59O1xuXG52YXIgZXZlbnROYW1lc1RvR3JvdXBzID0ge1xuICBjbG9zZWQ6IEdST1VQUy5TSUdOQUxJTkcsXG4gIGNvbm5lY3Rpbmc6IEdST1VQUy5TSUdOQUxJTkcsXG4gIGVhcmx5OiBHUk9VUFMuU0lHTkFMSU5HLFxuICBvcGVuOiBHUk9VUFMuU0lHTkFMSU5HLFxuICB3YWl0aW5nOiBHUk9VUFMuU0lHTkFMSU5HXG59O1xuXG52YXIgZXZlbnROYW1lc1RvTGV2ZWxzID0ge1xuICBjbG9zZWQ6IGZ1bmN0aW9uIGNsb3NlZChwYXlsb2FkKSB7XG4gICAgcmV0dXJuIHBheWxvYWQucmVhc29uID09PSBMT0NBTCA/IExFVkVMUy5JTkZPIDogTEVWRUxTLkVSUk9SO1xuICB9LFxuXG4gIGNvbm5lY3Rpbmc6IExFVkVMUy5JTkZPLFxuICBlYXJseTogTEVWRUxTLklORk8sXG4gIG9wZW46IExFVkVMUy5JTkZPLFxuICB3YWl0aW5nOiBMRVZFTFMuV0FSTklOR1xufTtcblxuLyoqXG4gKiBFdmVudE9ic2VydmVyIGxpc3RlbnMgdG8gU0RLIGV2ZW50cyBhbmQgcmUtZW1pdHMgdGhlbSBvbiB0aGVcbiAqIEBsaW5rIEV2ZW50TGlzdGVuZXJ9IHdpdGggc29tZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLlxuICogQGV4dGVuZHMgRXZlbnRFbWl0dGVyXG4gKiBAZW1pdHMgRXZlbnRPYnNlcnZlciNldmVudFxuICovXG5cbnZhciBFdmVudE9ic2VydmVyID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKEV2ZW50T2JzZXJ2ZXIsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3Rvci5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvbm5lY3RUaW1lc3RhbXBcbiAgICogQHBhcmFtIHtFdmVudExpc3RlbmVyfSBldmVudExpc3RlbmVyXG4gICAqL1xuICBmdW5jdGlvbiBFdmVudE9ic2VydmVyKGNvbm5lY3RUaW1lc3RhbXApIHtcbiAgICB2YXIgZXZlbnRMaXN0ZW5lciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbnVsbDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFdmVudE9ic2VydmVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChFdmVudE9ic2VydmVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRXZlbnRPYnNlcnZlcikpLmNhbGwodGhpcykpO1xuXG4gICAgaWYgKGV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIF90aGlzLm9uKCdldmVudCcsIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICAgIHZhciBuYW1lID0gX3JlZi5uYW1lLFxuICAgICAgICAgICAgcGF5bG9hZCA9IF9yZWYucGF5bG9hZDtcblxuICAgICAgICB2YXIgdGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdmFyIGVsYXBzZWRUaW1lID0gdGltZXN0YW1wIC0gY29ubmVjdFRpbWVzdGFtcDtcbiAgICAgICAgdmFyIGdyb3VwID0gZXZlbnROYW1lc1RvR3JvdXBzW25hbWVdO1xuXG4gICAgICAgIHZhciBsZXZlbCA9IHR5cGVvZiBldmVudE5hbWVzVG9MZXZlbHNbbmFtZV0gPT09ICdmdW5jdGlvbicgPyBldmVudE5hbWVzVG9MZXZlbHNbbmFtZV0ocGF5bG9hZCkgOiBldmVudE5hbWVzVG9MZXZlbHNbbmFtZV07XG5cbiAgICAgICAgdmFyIGV2ZW50ID0gT2JqZWN0LmFzc2lnbihwYXlsb2FkID8geyBwYXlsb2FkOiBwYXlsb2FkIH0gOiB7fSwge1xuICAgICAgICAgIGVsYXBzZWRUaW1lOiBlbGFwc2VkVGltZSxcbiAgICAgICAgICBncm91cDogZ3JvdXAsXG4gICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZXZlbnRMaXN0ZW5lci5lbWl0KCdldmVudCcsIGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICByZXR1cm4gRXZlbnRPYnNlcnZlcjtcbn0oRXZlbnRFbWl0dGVyKTtcblxuLyoqXG4gKiBBbiBTREsgZXZlbnQuXG4gKiBAZXZlbnQgRXZlbnRPYnNlcnZlciNldmVudFxuICogQHBhcmFtIHt7bmFtZTogc3RyaW5nLCBwYXlsb2FkOiAqfX0gZXZlbnRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50T2JzZXJ2ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/eventobserver.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/filter.js":
/*!******************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/filter.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Filter = function () {\n  function Filter(options) {\n    _classCallCheck(this, Filter);\n\n    options = Object.assign({\n      getKey: function defaultGetKey(a) {\n        return a;\n      },\n      getValue: function defaultGetValue(a) {\n        return a;\n      },\n      isLessThanOrEqualTo: function defaultIsLessThanOrEqualTo(a, b) {\n        return a <= b;\n      }\n    }, options);\n    Object.defineProperties(this, {\n      _getKey: {\n        value: options.getKey\n      },\n      _getValue: {\n        value: options.getValue\n      },\n      _isLessThanOrEqualTo: {\n        value: options.isLessThanOrEqualTo\n      },\n      _map: {\n        value: new Map()\n      }\n    });\n  }\n\n  _createClass(Filter, [{\n    key: 'toMap',\n    value: function toMap() {\n      return new Map(this._map);\n    }\n  }, {\n    key: 'updateAndFilter',\n    value: function updateAndFilter(entries) {\n      return entries.filter(this.update, this);\n    }\n  }, {\n    key: 'update',\n    value: function update(entry) {\n      var key = this._getKey(entry);\n      var value = this._getValue(entry);\n      if (this._map.has(key) && this._isLessThanOrEqualTo(value, this._map.get(key))) {\n        return false;\n      }\n      this._map.set(key, value);\n      return true;\n    }\n  }]);\n\n  return Filter;\n}();\n\nmodule.exports = Filter;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2ZpbHRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3V0aWwvZmlsdGVyLmpzPzlhZmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgRmlsdGVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGaWx0ZXIob3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGaWx0ZXIpO1xuXG4gICAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgZ2V0S2V5OiBmdW5jdGlvbiBkZWZhdWx0R2V0S2V5KGEpIHtcbiAgICAgICAgcmV0dXJuIGE7XG4gICAgICB9LFxuICAgICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGRlZmF1bHRHZXRWYWx1ZShhKSB7XG4gICAgICAgIHJldHVybiBhO1xuICAgICAgfSxcbiAgICAgIGlzTGVzc1RoYW5PckVxdWFsVG86IGZ1bmN0aW9uIGRlZmF1bHRJc0xlc3NUaGFuT3JFcXVhbFRvKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIGEgPD0gYjtcbiAgICAgIH1cbiAgICB9LCBvcHRpb25zKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfZ2V0S2V5OiB7XG4gICAgICAgIHZhbHVlOiBvcHRpb25zLmdldEtleVxuICAgICAgfSxcbiAgICAgIF9nZXRWYWx1ZToge1xuICAgICAgICB2YWx1ZTogb3B0aW9ucy5nZXRWYWx1ZVxuICAgICAgfSxcbiAgICAgIF9pc0xlc3NUaGFuT3JFcXVhbFRvOiB7XG4gICAgICAgIHZhbHVlOiBvcHRpb25zLmlzTGVzc1RoYW5PckVxdWFsVG9cbiAgICAgIH0sXG4gICAgICBfbWFwOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgTWFwKClcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhGaWx0ZXIsIFt7XG4gICAga2V5OiAndG9NYXAnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b01hcCgpIHtcbiAgICAgIHJldHVybiBuZXcgTWFwKHRoaXMuX21hcCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlQW5kRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQW5kRmlsdGVyKGVudHJpZXMpIHtcbiAgICAgIHJldHVybiBlbnRyaWVzLmZpbHRlcih0aGlzLnVwZGF0ZSwgdGhpcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGVudHJ5KSB7XG4gICAgICB2YXIga2V5ID0gdGhpcy5fZ2V0S2V5KGVudHJ5KTtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXMuX2dldFZhbHVlKGVudHJ5KTtcbiAgICAgIGlmICh0aGlzLl9tYXAuaGFzKGtleSkgJiYgdGhpcy5faXNMZXNzVGhhbk9yRXF1YWxUbyh2YWx1ZSwgdGhpcy5fbWFwLmdldChrZXkpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICB0aGlzLl9tYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEZpbHRlcjtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBGaWx0ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/filter.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar constants = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-video/es5/util/constants.js\");\nvar E = constants.typeErrors,\n    trackPriority = constants.trackPriority;\n\nvar util = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\");\n\n/**\n * Return the given {@link LocalTrack} or a new {@link LocalTrack} for the\n * given MediaStreamTrack.\n * @param {LocalTrack|MediaStreamTrack} track\n * @param {object} options\n * @returns {LocalTrack}\n * @throws {TypeError}\n */\nfunction asLocalTrack(track, options) {\n  if (track instanceof options.LocalAudioTrack || track instanceof options.LocalVideoTrack || track instanceof options.LocalDataTrack) {\n    return track;\n  }\n  if (track instanceof options.MediaStreamTrack) {\n    return track.kind === 'audio' ? new options.LocalAudioTrack(track, options) : new options.LocalVideoTrack(track, options);\n  }\n  /* eslint new-cap:0 */\n  throw E.INVALID_TYPE('track', 'LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n}\n\n/**\n * Create a new {@link LocalTrackPublication} for the given {@link LocalTrack}.\n * @param {LocalTrack} track\n * @param {LocalTrackPublicationSignaling} signaling\n * @param {function(track: LocalTrackPublication): void} unpublish\n * @param {object} options\n */\nfunction asLocalTrackPublication(track, signaling, unpublish, options) {\n  var LocalTrackPublication = {\n    audio: options.LocalAudioTrackPublication,\n    video: options.LocalVideoTrackPublication,\n    data: options.LocalDataTrackPublication\n  }[track.kind];\n  return new LocalTrackPublication(signaling, track, unpublish, options);\n}\n\n/**\n * Capitalize a word.\n * @param {string} word\n * @returns {string} capitalized\n */\nfunction capitalize(word) {\n  return word[0].toUpperCase() + word.slice(1);\n}\n\n/**\n * Log deprecation warnings for the given events of an EventEmitter.\n * @param {string} name\n * @param {EventEmitter} emitter\n * @param {Map<string, string>} events\n * @param {Log} log\n */\nfunction deprecateEvents(name, emitter, events, log) {\n  var warningsShown = new Set();\n  emitter.on('newListener', function newListener(event) {\n    if (events.has(event) && !warningsShown.has(event)) {\n      log.deprecated(name + '#' + event + ' has been deprecated and scheduled for removal in twilio-video.js@2.0.0.' + (events.get(event) ? ' Use ' + name + '#' + events.get(event) + ' instead.' : ''));\n      warningsShown.add(event);\n    }\n    if (warningsShown.size >= events.size) {\n      emitter.removeListener('newListener', newListener);\n    }\n  });\n}\n\n/**\n * Finds the items in list1 that are not in list2.\n * @param {Array<*>|Map<*>|Set<*>} list1\n * @param {Array<*>|Map<*>|Set<*>} list2\n * @returns {Set}\n */\nfunction difference(list1, list2) {\n  list1 = Array.isArray(list1) ? new Set(list1) : new Set(list1.values());\n  list2 = Array.isArray(list2) ? new Set(list2) : new Set(list2.values());\n\n  var difference = new Set();\n\n  list1.forEach(function (item) {\n    if (!list2.has(item)) {\n      difference.add(item);\n    }\n  });\n\n  return difference;\n}\n\n/**\n * Filter out the keys in an object with a given value.\n * @param {object} object - Object to be filtered\n * @param {*} [filterValue] - Value to be filtered out; If not specified, then\n *   filters out all keys which have an explicit value of \"undefined\"\n * @returns {object} - Filtered object\n */\nfunction filterObject(object, filterValue) {\n  return Object.keys(object).reduce(function (filtered, key) {\n    if (object[key] !== filterValue) {\n      filtered[key] = object[key];\n    }\n    return filtered;\n  }, {});\n}\n\n/**\n * Map a list to an array of arrays, and return the flattened result.\n * @param {Array<*>|Set<*>|Map<*>} list\n * @param {function(*): Array<*>} [mapFn]\n * @returns Array<*>\n */\nfunction flatMap(list, mapFn) {\n  var listArray = list instanceof Map || list instanceof Set ? Array.from(list.values()) : list;\n\n  mapFn = mapFn || function mapFn(item) {\n    return item;\n  };\n\n  return listArray.reduce(function (flattened, item) {\n    var mapped = mapFn(item);\n    return flattened.concat(mapped);\n  }, []);\n}\n\n/**\n * Get the user agent string, or return \"Unknown\".\n * @returns {string}\n */\nfunction getUserAgent() {\n  return typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent : 'Unknown';\n}\n\n/**\n * Create a unique identifier.\n * @returns {string}\n */\nfunction makeUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Ensure that the given function is called once per tick.\n * @param {function} fn - Function to be executed\n * @returns {function} - Schedules the given function to be called on the next tick\n */\nfunction oncePerTick(fn) {\n  var timeout = null;\n\n  function nextTick() {\n    timeout = null;\n    fn();\n  }\n\n  return function scheduleNextTick() {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(nextTick);\n  };\n}\n\nfunction promiseFromEvents(operation, eventEmitter, successEvent, failureEvent) {\n  return new Promise(function (resolve, reject) {\n    function onSuccess() {\n      var args = [].slice.call(arguments);\n      if (failureEvent) {\n        eventEmitter.removeListener(failureEvent, onFailure);\n      }\n      resolve.apply(undefined, _toConsumableArray(args));\n    }\n    function onFailure() {\n      var args = [].slice.call(arguments);\n      eventEmitter.removeListener(successEvent, onSuccess);\n      reject.apply(undefined, _toConsumableArray(args));\n    }\n    eventEmitter.once(successEvent, onSuccess);\n    if (failureEvent) {\n      eventEmitter.once(failureEvent, onFailure);\n    }\n    operation();\n  });\n}\n\n/**\n * Traverse down multiple nodes on an object and return null if\n * any link in the path is unavailable.\n * @param {Object} obj - Object to traverse\n * @param {String} path - Path to traverse. Period-separated.\n * @returns {Any|null}\n */\nfunction getOrNull(obj, path) {\n  return path.split('.').reduce(function (output, step) {\n    if (!output) {\n      return null;\n    }\n    return output[step];\n  }, obj);\n}\n\n/**\n * @typedef {object} Deferred\n * @property {Promise} promise\n * @property {function} reject\n * @property {function} resolve\n */\n\n/**\n * Create a {@link Deferred}.\n * @returns {Deferred}\n */\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\n/**\n * Copy a method from a `source` prototype onto a `wrapper` prototype. Invoking\n * the method on the `wrapper` prototype will invoke the corresponding method\n * on an instance accessed by `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @param {string} methodName\n * @returns {undefined}\n */\nfunction delegateMethod(source, wrapper, target, methodName) {\n  if (methodName in wrapper) {\n    // Skip any methods already set.\n    return;\n  } else if (methodName.match(/^on[a-z]+$/)) {\n    // Skip EventHandlers (these are handled in the constructor).\n    return;\n  }\n\n  var type = void 0;\n  try {\n    type = _typeof(source[methodName]);\n  } catch (error) {\n    // NOTE(mroberts): Attempting to check the type of non-function members\n    // on the prototype throws an error for some types.\n  }\n\n  if (type !== 'function') {\n    // Skip non-function members.\n    return;\n  }\n\n  /* eslint no-loop-func:0 */\n  wrapper[methodName] = function () {\n    var _target;\n\n    return (_target = this[target])[methodName].apply(_target, arguments);\n  };\n}\n\n/**\n * Copy methods from a `source` prototype onto a `wrapper` prototype. Invoking\n * the methods on the `wrapper` prototype will invoke the corresponding method\n * on an instance accessed by `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @returns {undefined}\n */\nfunction delegateMethods(source, wrapper, target) {\n  for (var methodName in source) {\n    delegateMethod(source, wrapper, target, methodName);\n  }\n}\n\n/**\n * Determine whether two values are deeply equal.\n * @param {*} val1\n * @param {*} val2\n * @returns {boolean}\n */\nfunction isDeepEqual(val1, val2) {\n  if (val1 === val2) {\n    return true;\n  }\n  if ((typeof val1 === 'undefined' ? 'undefined' : _typeof(val1)) !== (typeof val2 === 'undefined' ? 'undefined' : _typeof(val2))) {\n    return false;\n  }\n  if (val1 === null) {\n    return val2 === null;\n  }\n  if (val2 === null) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    return Array.isArray(val2) && val1.length === val2.length && val1.every(function (val, i) {\n      return isDeepEqual(val, val2[i]);\n    });\n  }\n  if ((typeof val1 === 'undefined' ? 'undefined' : _typeof(val1)) === 'object') {\n    var val1Keys = Object.keys(val1).sort();\n    var val2Keys = Object.keys(val2).sort();\n    return !Array.isArray(val2) && isDeepEqual(val1Keys, val2Keys) && val1Keys.every(function (key) {\n      return isDeepEqual(val1[key], val2[key]);\n    });\n  }\n  return false;\n}\n\n/**\n * Whether the given argument is a non-array object.\n * @param {*} object\n * @return {boolean}\n */\nfunction isNonArrayObject(object) {\n  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && !Array.isArray(object);\n}\n\n/**\n * For each property name on the `source` prototype, add getters and/or setters\n * to `wrapper` that proxy to `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @returns {undefined}\n */\nfunction proxyProperties(source, wrapper, target) {\n  Object.getOwnPropertyNames(source).forEach(function (propertyName) {\n    proxyProperty(source, wrapper, target, propertyName);\n  });\n}\n\n/**\n * For the property name on the `source` prototype, add a getter and/or setter\n * to `wrapper` that proxies to `target`.\n * @param {object} source\n * @param {object} wrapper\n * @param {string} target\n * @param {string} propertyName\n * @returns {undefined}\n */\nfunction proxyProperty(source, wrapper, target, propertyName) {\n  if (propertyName in wrapper) {\n    // Skip any properties already set.\n    return;\n  } else if (propertyName.match(/^on[a-z]+$/)) {\n    Object.defineProperty(wrapper, propertyName, {\n      value: null,\n      writable: true\n    });\n\n    target.addEventListener(propertyName.slice(2), function () {\n      wrapper.dispatchEvent.apply(wrapper, arguments);\n    });\n\n    return;\n  }\n\n  Object.defineProperty(wrapper, propertyName, {\n    enumerable: true,\n    get: function get() {\n      return target[propertyName];\n    }\n  });\n}\n\n/**\n * This is a function for turning a Promise into the kind referenced in the\n * Legacy Interface Extensions section of the WebRTC spec.\n * @param {Promise<*>} promise\n * @param {function<*>} onSuccess\n * @param {function<Error>} onFailure\n * @returns {Promise<undefined>}\n */\nfunction legacyPromise(promise, onSuccess, onFailure) {\n  if (onSuccess) {\n    return promise.then(function (result) {\n      onSuccess(result);\n    }, function (error) {\n      onFailure(error);\n    });\n  }\n  return promise;\n}\n\n/**\n * Build the {@link LogLevels} object.\n * @param {String|LogLevel} logLevel - Log level name or object\n * @returns {LogLevels}\n */\nfunction buildLogLevels(logLevel) {\n  if (typeof logLevel === 'string') {\n    return {\n      default: logLevel,\n      media: logLevel,\n      signaling: logLevel,\n      webrtc: logLevel\n    };\n  }\n  return logLevel;\n}\n\n/**\n * Get the {@link Track}'s derived class name\n * @param {Track} track\n * @param {?boolean} [local=undefined]\n * @returns {string}\n */\nfunction trackClass(track, local) {\n  local = local ? 'Local' : '';\n  return local + (track.kind || '').replace(/\\w{1}/, function (m) {\n    return m.toUpperCase();\n  }) + 'Track';\n}\n\n/**\n * Get the {@link TrackPublication}'s derived class name\n * @param {TrackPublication} publication\n * @param {?boolean} [local=undefined]\n * @returns {string}\n */\nfunction trackPublicationClass(publication, local) {\n  local = local ? 'Local' : '';\n  return local + (publication.kind || '').replace(/\\w{1}/, function (m) {\n    return m.toUpperCase();\n  }) + 'TrackPublication';\n}\n\n/**\n * Sets all underscore-prefixed properties on `object` non-enumerable.\n * @param {Object} object\n * @returns {void}\n */\nfunction hidePrivateProperties(object) {\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    if (name.startsWith('_')) {\n      hideProperty(object, name);\n    }\n  });\n}\n\n/**\n * Creates a new subclass which, in the constructor, sets all underscore-prefixed\n * properties and the given public properties non-enumerable. This is useful for\n * patching up classes like EventEmitter which may set properties like `_events`\n * and `domain`.\n * @param {Function} klass\n * @param {Array<string>} props\n * @returns {Function} subclass\n */\nfunction hidePrivateAndCertainPublicPropertiesInClass(klass, props) {\n  // NOTE(mroberts): We do this to avoid giving the class a name.\n  return function (_klass) {\n    _inherits(_class, _klass);\n\n    function _class() {\n      var _ref;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args)));\n\n      hidePrivateProperties(_this);\n      hidePublicProperties(_this, props);\n      return _this;\n    }\n\n    return _class;\n  }(klass);\n}\n\n/**\n * Hide a property of an object.\n * @param {object} object\n * @param {string} name\n */\nfunction hideProperty(object, name) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, name);\n  descriptor.enumerable = false;\n  Object.defineProperty(object, name, descriptor);\n}\n\n/**\n * Hide the given public properties of an object.\n * @param {object} object\n * @param {Array<string>} [props=[]]\n */\nfunction hidePublicProperties(object) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  props.forEach(function (name) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (object.hasOwnProperty(name)) {\n      hideProperty(object, name);\n    }\n  });\n}\n\n/**\n * Convert an Array of values to an Array of JSON values by calling\n * `valueToJSON` on each value.\n * @param {Array<*>} array\n * @returns {Array<*>}\n */\nfunction arrayToJSON(array) {\n  return array.map(valueToJSON);\n}\n\n/**\n * Convert a Set of values to an Array of JSON values by calling `valueToJSON`\n * on each value.\n * @param {Set<*>} set\n * @returns {Array<*>}\n */\nfunction setToJSON(set) {\n  return arrayToJSON([].concat(_toConsumableArray(set)));\n}\n\n/**\n * Convert a Map from strings to values to an object of JSON values by calling\n * `valueToJSON` on each value.\n * @param {Map<string, *>} map\n * @returns {object}\n */\nfunction mapToJSON(map) {\n  return [].concat(_toConsumableArray(map.entries())).reduce(function (json, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    return Object.assign(_defineProperty({}, key, valueToJSON(value)), json);\n  }, {});\n}\n\n/**\n * Convert an object to a JSON value by calling `valueToJSON` on its enumerable\n * keys.\n * @param {object} object\n * @returns {object}\n */\nfunction objectToJSON(object) {\n  return Object.entries(object).reduce(function (json, _ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        key = _ref5[0],\n        value = _ref5[1];\n\n    return Object.assign(_defineProperty({}, key, valueToJSON(value)), json);\n  }, {});\n}\n\n/**\n * Convert a value into a JSON value.\n * @param {*} value\n * @returns {*}\n */\nfunction valueToJSON(value) {\n  if (Array.isArray(value)) {\n    return arrayToJSON(value);\n  } else if (value instanceof Set) {\n    return setToJSON(value);\n  } else if (value instanceof Map) {\n    return mapToJSON(value);\n  } else if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n    return objectToJSON(value);\n  }\n  return value;\n}\n\n/**\n * Create the bandwidth profile payload included in an RSP connect message.\n * @param {BandwidthProfileOptions} bandwidthProfile\n * @returns {object}\n */\nfunction createBandwidthProfilePayload(bandwidthProfile) {\n  return createRSPPayload(bandwidthProfile, [{ prop: 'video', type: 'object', transform: createBandwidthProfileVideoPayload }]);\n}\n\n/**\n * Create the bandwidth profile video payload included in an RSP connect message.\n * @param {VideoBandwidthProfileOptions} bandwidthProfileVideo\n * @returns {object}\n */\nfunction createBandwidthProfileVideoPayload(bandwidthProfileVideo) {\n  return createRSPPayload(bandwidthProfileVideo, [{ prop: 'dominantSpeakerPriority', type: 'string', payloadProp: 'active_speaker_priority' }, { prop: 'maxSubscriptionBitrate', type: 'number', payloadProp: 'max_subscription_bandwidth' }, { prop: 'maxTracks', type: 'number', payloadProp: 'max_tracks' }, { prop: 'mode', type: 'string' }, { prop: 'renderDimensions', type: 'object', payloadProp: 'render_dimensions', transform: createRenderDimensionsPayload }, { prop: 'trackSwitchOffMode', type: 'string', payloadProp: 'track_switch_off' }]);\n}\n\n/**\n * Create the Media Signaling payload included in an RSP connect message.\n * @param {boolean} dominantSpeaker - whether to enable the Dominant Speaker\n *   protocol or not\n * @param {boolean} networkQuality - whether to enable the Network Quality\n *   protocol or not\n * @param {boolean} trackPriority - whether to enable the Track Priority\n *   protocol or not\n * @param {boolean} trackSwitchOff - whether to enable the Track Switch-Off\n *   protocol or not.\n * @returns {object}\n */\nfunction createMediaSignalingPayload(dominantSpeaker, networkQuality, trackPriority, trackSwitchOff) {\n  var transports = { transports: [{ type: 'data-channel' }] };\n  return Object.assign(dominantSpeaker\n  // eslint-disable-next-line\n  ? { active_speaker: transports } : {}, networkQuality\n  // eslint-disable-next-line\n  ? { network_quality: transports } : {}, trackPriority\n  // eslint-disable-next-line\n  ? { track_priority: transports } : {}, trackSwitchOff\n  // eslint-disable-next-line\n  ? { track_switch_off: transports } : {});\n}\n\n/**\n * Create {@link VideoTrack.Dimensions} RSP payload.\n * @param {VideoTrack.Dimensions} [dimensions]\n * @returns {object}\n */\nfunction createDimensionsPayload(dimensions) {\n  return createRSPPayload(dimensions, [{ prop: 'height', type: 'number' }, { prop: 'width', type: 'number' }]);\n}\n\n/**\n * Create {@link VideoRenderDimensions} RSP payload.\n * @param renderDimensions\n * @returns {object}\n */\nfunction createRenderDimensionsPayload(renderDimensions) {\n  var PRIORITY_HIGH = trackPriority.PRIORITY_HIGH,\n      PRIORITY_LOW = trackPriority.PRIORITY_LOW,\n      PRIORITY_STANDARD = trackPriority.PRIORITY_STANDARD;\n\n  return createRSPPayload(renderDimensions, [{ prop: PRIORITY_HIGH, type: 'object', transform: createDimensionsPayload }, { prop: PRIORITY_LOW, type: 'object', transform: createDimensionsPayload }, { prop: PRIORITY_STANDARD, type: 'object', transform: createDimensionsPayload }]);\n}\n\n/**\n * Create an RSP payload for the given object.\n * @param {object} object - object for which RSP payload is to be generated\n * @param {Array<object>} propConversions - conversion rules for object properties;\n *   they specify how object properties should be converted to their corresponding\n *   RSP payload properties\n * @returns {object}\n */\nfunction createRSPPayload(object, propConversions) {\n  return propConversions.reduce(function (payload, _ref6) {\n    var prop = _ref6.prop,\n        type = _ref6.type,\n        _ref6$payloadProp = _ref6.payloadProp,\n        payloadProp = _ref6$payloadProp === undefined ? prop : _ref6$payloadProp,\n        _ref6$transform = _ref6.transform,\n        transform = _ref6$transform === undefined ? function (x) {\n      return x;\n    } : _ref6$transform;\n\n    return _typeof(object[prop]) === type ? Object.assign(_defineProperty({}, payloadProp, transform(object[prop])), payload) : payload;\n  }, {});\n}\n\n/**\n * Create the subscribe payload included in an RSP connect/update message.\n * @param {boolean} automaticSubscription - whether to subscribe to all RemoteTracks\n * @returns {object}\n */\nfunction createSubscribePayload(automaticSubscription) {\n  return {\n    rules: [{\n      type: automaticSubscription ? 'include' : 'exclude',\n      all: true\n    }],\n    revision: 1\n  };\n}\n\n/**\n * Add random jitter to a given value in the range [-jitter, jitter].\n * @private\n * @param {number} value\n * @param {number} jitter\n * @returns {number} value + random(-jitter, +jitter)\n */\nfunction withJitter(value, jitter) {\n  var rand = Math.random();\n  return value - jitter + Math.floor(2 * jitter * rand + 0.5);\n}\n\n/**\n * Checks if the a number is in the range [min, max].\n * @private\n * @param {num} num\n * @param {number} min\n * @param {number} max\n * @return {boolean}\n */\nfunction inRange(num, min, max) {\n  return min <= num && num <= max;\n}\n\n/**\n * returns true if given MediaStreamTrack is a screen share track\n * @private\n * @param {MediaStreamTrack} track\n * @returns {boolean}\n */\nfunction isChromeScreenShareTrack(track) {\n  // NOTE(mpatwardhan): Chrome creates screen share tracks with label like: \"screen:69734272*\"\n  // we will check for label that starts with \"screen:D\" where D being a digit.\n  var isChrome = util.guessBrowser() === 'chrome';\n  return isChrome && track.kind === 'video' && track.label && (/^screen:[0-9]+/.test(track.label) || /^web-contents-media-stream:[0-9/]+/.test(track.label) || /^window:[0-9]+/.test(track.label));\n}\n\n/**\n * Returns a promise that resolve after timeoutMS have passed.\n * @param {number} timeoutMS - time to wait in milliseconds.\n * @returns {Promise<void>}\n */\nfunction waitForSometime() {\n  var timeoutMS = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeoutMS);\n  });\n}\n\n/**\n * Returns a promise that resolve after event is received\n * @returns {Promise<void>}\n */\nfunction waitForEvent(eventTarget, event) {\n  return new Promise(function (resolve) {\n    eventTarget.addEventListener(event, function onevent(e) {\n      eventTarget.removeEventListener(event, onevent);\n      resolve(e);\n    });\n  });\n}\n\nexports.constants = constants;\nexports.createBandwidthProfilePayload = createBandwidthProfilePayload;\nexports.createMediaSignalingPayload = createMediaSignalingPayload;\nexports.createSubscribePayload = createSubscribePayload;\nexports.asLocalTrack = asLocalTrack;\nexports.asLocalTrackPublication = asLocalTrackPublication;\nexports.capitalize = capitalize;\nexports.deprecateEvents = deprecateEvents;\nexports.difference = difference;\nexports.filterObject = filterObject;\nexports.flatMap = flatMap;\nexports.getUserAgent = getUserAgent;\nexports.hidePrivateProperties = hidePrivateProperties;\nexports.hidePrivateAndCertainPublicPropertiesInClass = hidePrivateAndCertainPublicPropertiesInClass;\nexports.isDeepEqual = isDeepEqual;\nexports.isNonArrayObject = isNonArrayObject;\nexports.inRange = inRange;\nexports.makeUUID = makeUUID;\nexports.oncePerTick = oncePerTick;\nexports.promiseFromEvents = promiseFromEvents;\nexports.getOrNull = getOrNull;\nexports.defer = defer;\nexports.delegateMethods = delegateMethods;\nexports.proxyProperties = proxyProperties;\nexports.legacyPromise = legacyPromise;\nexports.buildLogLevels = buildLogLevels;\nexports.trackClass = trackClass;\nexports.trackPublicationClass = trackPublicationClass;\nexports.valueToJSON = valueToJSON;\nexports.withJitter = withJitter;\nexports.isChromeScreenShareTrack = isChromeScreenShareTrack;\nexports.waitForSometime = waitForSometime;\nexports.waitForEvent = waitForEvent;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/insightspublisher/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/insightspublisher/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar _require = __webpack_require__(/*! .. */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    getUserAgent = _require.getUserAgent;\n\nvar MAX_RECONNECT_ATTEMPTS = 5;\nvar RECONNECT_INTERVAL_MS = 50;\nvar WS_CLOSE_NORMAL = 1000;\n\nvar toplevel = global.window || global;\nvar WebSocket = toplevel.WebSocket ? toplevel.WebSocket : __webpack_require__(/*! ws */ \"./node_modules/twilio-video/src/ws.js\");\nvar util = __webpack_require__(/*! ../../util */ \"./node_modules/twilio-video/es5/util/index.js\");\n\n/**\n * Publish events to the Insights gateway.\n * @extends EventEmitter\n * @emits InsightsPublisher#connected\n * @emits InsightsPublisher#disconnected\n * @emits InsightsPublisher#reconnecting\n */\n\nvar InsightsPublisher = function (_EventEmitter) {\n  _inherits(InsightsPublisher, _EventEmitter);\n\n  /**\n   * @param {string} token - Insights gateway token\n   * @param {string} sdkName - Name of the SDK using the {@link InsightsPublisher}\n   * @param {string} sdkVersion - Version of the SDK using the {@link InsightsPublisher}\n   * @param {string} environment - One of 'dev', 'stage' or 'prod'\n   * @param {string} realm - Region identifier\n   * @param {InsightsPublisherOptions} options - Override default behavior\n   */\n  function InsightsPublisher(token, sdkName, sdkVersion, environment, realm, options) {\n    _classCallCheck(this, InsightsPublisher);\n\n    var _this = _possibleConstructorReturn(this, (InsightsPublisher.__proto__ || Object.getPrototypeOf(InsightsPublisher)).call(this));\n\n    options = Object.assign({\n      gateway: createGateway(environment, realm) + '/v1/VideoEvents',\n      maxReconnectAttempts: MAX_RECONNECT_ATTEMPTS,\n      reconnectIntervalMs: RECONNECT_INTERVAL_MS,\n      userAgent: getUserAgent(),\n      WebSocket: WebSocket\n    }, options);\n\n    Object.defineProperties(_this, {\n      _connectTimestamp: {\n        value: 0,\n        writable: true\n      },\n      _eventQueue: {\n        value: []\n      },\n      _readyToConnect: {\n        value: util.defer()\n      },\n      _reconnectAttemptsLeft: {\n        value: options.maxReconnectAttempts,\n        writable: true\n      },\n      _ws: {\n        value: null,\n        writable: true\n      },\n      _WebSocket: {\n        value: options.WebSocket\n      }\n    });\n\n    _this._readyToConnect.promise.then(function (_ref) {\n      var roomSid = _ref.roomSid,\n          participantSid = _ref.participantSid;\n\n      var self = _this;\n      _this.on('disconnected', function maybeReconnect(error) {\n        self._session = null;\n        if (error && self._reconnectAttemptsLeft > 0) {\n          self.emit('reconnecting');\n          reconnect(self, token, sdkName, sdkVersion, roomSid, participantSid, options);\n          return;\n        }\n        self.removeListener('disconnected', maybeReconnect);\n      });\n      connect(_this, token, sdkName, sdkVersion, roomSid, participantSid, options);\n    }).catch(function () {\n      // ignore failures to connect\n    });\n    return _this;\n  }\n\n  /**\n   * Start connecting to the Insights gateway.\n   * @param {string} roomSid\n   * @param {string} participantSid\n   * @returns {void}\n   */\n\n\n  _createClass(InsightsPublisher, [{\n    key: 'connect',\n    value: function connect(roomSid, participantSid) {\n      this._readyToConnect.resolve({ roomSid: roomSid, participantSid: participantSid });\n    }\n\n    /**\n     * Publish an event to the Insights gateway.\n     * @private\n     * @param {*} event\n     */\n\n  }, {\n    key: '_publish',\n    value: function _publish(event) {\n      event.session = this._session;\n      this._ws.send(JSON.stringify(event));\n    }\n\n    /**\n     * Disconnect from the Insights gateway.\n     * @returns {boolean} true if called when connecting/open, false if not\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this._ws === null || this._ws.readyState === this._WebSocket.CLOSING || this._ws.readyState === this._WebSocket.CLOSED) {\n        return false;\n      }\n\n      try {\n        this._ws.close();\n      } catch (error) {\n        // Do nothing.\n      }\n      this.emit('disconnected');\n\n      return true;\n    }\n\n    /**\n     * Publish (or queue, if not connected) an event to the Insights gateway.\n     * @param {string} groupName - Event group name\n     * @param {string} eventName - Event name\n     * @param {object} payload - Event payload\n     * @returns {boolean} true if queued or published, false if disconnect() called\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(groupName, eventName, payload) {\n      if (this._ws !== null && (this._ws.readyState === this._WebSocket.CLOSING || this._ws.readyState === this._WebSocket.CLOSED)) {\n        return false;\n      }\n\n      var publishOrEnqueue = typeof this._session === 'string' ? this._publish.bind(this) : this._eventQueue.push.bind(this._eventQueue);\n\n      publishOrEnqueue({\n        group: groupName,\n        name: eventName,\n        payload: payload,\n        timestamp: Date.now(),\n        type: 'event',\n        version: 1\n      });\n\n      return true;\n    }\n  }]);\n\n  return InsightsPublisher;\n}(EventEmitter);\n\n/**\n * Start connecting to the Insights gateway.\n * @private\n * @param {InsightsPublisher} publisher\n * @param {string} name\n * @param {string} token\n * @param {string} sdkName\n * @param {string} sdkVersion\n * @param {string} roomSid\n * @param {string} participantSid\n * @param {InsightsPublisherOptions} options\n */\n\n\nfunction connect(publisher, token, sdkName, sdkVersion, roomSid, participantSid, options) {\n  publisher._connectTimestamp = Date.now();\n  publisher._reconnectAttemptsLeft--;\n  publisher._ws = new options.WebSocket(options.gateway);\n  var ws = publisher._ws;\n\n  ws.addEventListener('close', function (event) {\n    if (event.code === WS_CLOSE_NORMAL) {\n      publisher.emit('disconnected');\n      return;\n    }\n    publisher.emit('disconnected', new Error('WebSocket Error ' + event.code + ': ' + event.reason));\n  });\n\n  ws.addEventListener('message', function (message) {\n    handleConnectResponse(publisher, JSON.parse(message.data), options);\n  });\n\n  ws.addEventListener('open', function () {\n    var connectRequest = {\n      type: 'connect',\n      token: token,\n      version: 1\n    };\n\n    connectRequest.publisher = {\n      name: sdkName,\n      sdkVersion: sdkVersion,\n      userAgent: options.userAgent,\n      participantSid: participantSid,\n      roomSid: roomSid\n    };\n\n    ws.send(JSON.stringify(connectRequest));\n  });\n}\n\n/**\n * Create the Insights Websocket gateway URL.\n * @param {string} environment\n * @param {string} realm\n * @returns {string}\n */\nfunction createGateway(environment, realm) {\n  return environment === 'prod' ? 'wss://sdkgw.' + realm + '.twilio.com' : 'wss://sdkgw.' + environment + '-' + realm + '.twilio.com';\n}\n\n/**\n * Handle connect response from the Insights gateway.\n * @param {InsightsPublisher} publisher\n * @param {*} response\n * @param {InsightsPublisherOptions} options\n */\nfunction handleConnectResponse(publisher, response, options) {\n  switch (response.type) {\n    case 'connected':\n      publisher._session = response.session;\n      publisher._reconnectAttemptsLeft = options.maxReconnectAttempts;\n      publisher._eventQueue.splice(0).forEach(publisher._publish, publisher);\n      publisher.emit('connected');\n      break;\n    case 'error':\n      publisher._ws.close();\n      publisher.emit('disconnected', new Error(response.message));\n      break;\n  }\n}\n\n/**\n * Start re-connecting to the Insights gateway with an appropriate delay based\n * on InsightsPublisherOptions#reconnectIntervalMs.\n * @private\n * @param {InsightsPublisher} publisher\n * @param {string} token\n * @param {string} sdkName\n * @param {string} sdkVersion\n * @param {string} roomSid\n * @param {string} participantSid\n * @param {InsightsPublisherOptions} options\n */\nfunction reconnect(publisher, token, sdkName, sdkVersion, roomSid, participantSid, options) {\n  var connectInterval = Date.now() - publisher._connectTimestamp;\n  var timeToWait = options.reconnectIntervalMs - connectInterval;\n\n  if (timeToWait > 0) {\n    setTimeout(function () {\n      connect(publisher, token, sdkName, sdkVersion, roomSid, participantSid, options);\n    }, timeToWait);\n    return;\n  }\n\n  connect(publisher, token, sdkName, sdkVersion, roomSid, participantSid, options);\n}\n\n/**\n * The {@link InsightsPublisher} is connected to the gateway.\n * @event InsightsPublisher#connected\n */\n\n/**\n * The {@link InsightsPublisher} is disconnected from the gateway.\n * @event InsightsPublisher#disconnected\n * @param {Error} [error] - Optional error if disconnected unintentionally\n */\n\n/**\n * The {@link InsightsPublisher} is re-connecting to the gateway.\n * @event InsightsPublisher#reconnecting\n */\n\n/**\n * {@link InsightsPublisher} options.\n * @typedef {object} InsightsPublisherOptions\n * @property {string} [gateway=sdkgw.{environment}-{realm}.twilio.com] - Insights WebSocket gateway url\n * @property {number} [maxReconnectAttempts=5] - Max re-connect attempts\n * @property {number} [reconnectIntervalMs=50] - Re-connect interval in ms\n */\n\nmodule.exports = InsightsPublisher;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/insightspublisher/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/insightspublisher/null.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/insightspublisher/null.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// eslint-disable-next-line no-warning-comments\n// TODO(mroberts): This should be described as implementing some\n// InsightsPublisher interface.\n\n\n/**\n * Null Insights publisher.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InsightsPublisher = function () {\n  function InsightsPublisher() {\n    _classCallCheck(this, InsightsPublisher);\n\n    Object.defineProperties(this, {\n      _connected: {\n        writable: true,\n        value: true\n      }\n    });\n  }\n\n  /**\n   * Connect\n   * @returns {void}\n   */\n\n\n  _createClass(InsightsPublisher, [{\n    key: 'connect',\n    value: function connect() {}\n\n    /**\n     * Disconnect.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this._connected) {\n        this._connected = false;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Publish.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish() {\n      return this._connected;\n    }\n  }]);\n\n  return InsightsPublisher;\n}();\n\nmodule.exports = InsightsPublisher;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2luc2lnaHRzcHVibGlzaGVyL251bGwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2luc2lnaHRzcHVibGlzaGVyL251bGwuanM/YjA5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8td2FybmluZy1jb21tZW50c1xuLy8gVE9ETyhtcm9iZXJ0cyk6IFRoaXMgc2hvdWxkIGJlIGRlc2NyaWJlZCBhcyBpbXBsZW1lbnRpbmcgc29tZVxuLy8gSW5zaWdodHNQdWJsaXNoZXIgaW50ZXJmYWNlLlxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE51bGwgSW5zaWdodHMgcHVibGlzaGVyLlxuICovXG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBJbnNpZ2h0c1B1Ymxpc2hlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gSW5zaWdodHNQdWJsaXNoZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEluc2lnaHRzUHVibGlzaGVyKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgIF9jb25uZWN0ZWQ6IHtcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ29ubmVjdFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSW5zaWdodHNQdWJsaXNoZXIsIFt7XG4gICAga2V5OiAnY29ubmVjdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbm5lY3QoKSB7fVxuXG4gICAgLyoqXG4gICAgICogRGlzY29ubmVjdC5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGlzY29ubmVjdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7XG4gICAgICBpZiAodGhpcy5fY29ubmVjdGVkKSB7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQdWJsaXNoLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdwdWJsaXNoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHVibGlzaCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9jb25uZWN0ZWQ7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEluc2lnaHRzUHVibGlzaGVyO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEluc2lnaHRzUHVibGlzaGVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/insightspublisher/null.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/log.js":
/*!***************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/log.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint new-cap:0, no-console:0 */\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar constants = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-video/es5/util/constants.js\");\nvar DEFAULT_LOG_LEVEL = constants.DEFAULT_LOG_LEVEL;\nvar E = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-video/es5/util/constants.js\").typeErrors;\n\nvar deprecationWarningsByComponentConstructor = void 0;\n\nfunction getDeprecationWarnings(componentConstructor) {\n  deprecationWarningsByComponentConstructor = deprecationWarningsByComponentConstructor || new Map();\n  if (deprecationWarningsByComponentConstructor.has(componentConstructor)) {\n    return deprecationWarningsByComponentConstructor.get(componentConstructor);\n  }\n  var deprecationWarnings = new Set();\n  deprecationWarningsByComponentConstructor.set(componentConstructor, deprecationWarnings);\n  return deprecationWarnings;\n}\n\n/**\n * Selectively outputs messages to console.log based on specified minimum module\n * specific log levels.\n *\n * NOTE: The values in the logLevels object passed to the constructor is changed\n *       by subsequent calls to {@link Log#setLevels}.\n */\n\nvar Log = function () {\n  /**\n   * Construct a new {@link Log} object.\n   * @param {String} moduleName - Name of the logging module (webrtc/media/signaling)\n   * @param {object} component - Component owning this instance of {@link Log}\n   * @param {LogLevels} logLevels - Logging levels. See {@link LogLevels}\n   */\n  function Log(moduleName, component, logLevels) {\n    _classCallCheck(this, Log);\n\n    if (typeof moduleName !== 'string') {\n      throw E.INVALID_TYPE('moduleName', 'string');\n    }\n\n    if (!component) {\n      throw E.REQUIRED_ARGUMENT('component');\n    }\n\n    if ((typeof logLevels === 'undefined' ? 'undefined' : _typeof(logLevels)) !== 'object') {\n      logLevels = {};\n    }\n\n    validateLogLevels(logLevels);\n\n    /* istanbul ignore next */\n    Object.defineProperties(this, {\n      _component: {\n        value: component\n      },\n      _logLevels: {\n        value: logLevels\n      },\n      _warnings: {\n        value: new Set()\n      },\n      logLevel: {\n        get: function get() {\n          return Log.getLevelByName(logLevels[moduleName] || DEFAULT_LOG_LEVEL);\n        }\n      },\n      name: { get: component.toString.bind(component) }\n    });\n  }\n\n  /**\n   * Get the log level (number) by its name (string)\n   * @param {String} name - Name of the log level\n   * @returns {Number} Requested log level\n   * @throws {TwilioError} INVALID_LOG_LEVEL (32056)\n   * @public\n   */\n\n\n  _createClass(Log, [{\n    key: 'createLog',\n\n\n    /**\n     * Create a child {@link Log} instance with this._logLevels\n     * @param moduleName - Name of the logging module\n     * @param component - Component owning this instance of {@link Log}\n     * @returns {Log} this\n     */\n    value: function createLog(moduleName, component) {\n      return new Log(moduleName, component, this._logLevels);\n    }\n\n    /**\n     * Set new log levels.\n     * This changes the levels for all its ancestors,\n     * siblings, and children and descendants instances of {@link Log}.\n     * @param {LogLevels} levels - New log levels\n     * @throws {TwilioError} INVALID_ARGUMENT\n     * @returns {Log} this\n     */\n\n  }, {\n    key: 'setLevels',\n    value: function setLevels(levels) {\n      validateLogLevels(levels);\n      Object.assign(this._logLevels, levels);\n      return this;\n    }\n\n    /**\n     * Log a message using the console method appropriate for the specified logLevel\n     * @param {Number} logLevel - Log level of the message being logged\n     * @param {String} message - Message(s) to log\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'log',\n    value: function log(logLevel, message) {\n      var logSpec = Log._levels[logLevel];\n      // eslint-disable-next-line no-use-before-define\n      if (!logSpec) {\n        throw E.INVALID_VALUE('logLevel', LOG_LEVEL_VALUES);\n      }\n\n      if (this.logLevel <= logLevel) {\n        var levelName = logSpec.name;\n        var prefix = new Date().toISOString().split('T').concat(['|', levelName, 'in', this.name + ':']);\n        logSpec.logFn.apply(console, prefix.concat(message));\n      }\n\n      return this;\n    }\n\n    /**\n     * Log a debug message using console.log\n     * @param {...String} messages - Message(s) to pass to console.log\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'debug',\n    value: function debug() {\n      return this.log(Log.DEBUG, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a deprecation warning. Deprecation warnings are logged as warnings and\n     * they are only ever logged once.\n     * @param {String} deprecationWarning - The deprecation warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'deprecated',\n    value: function deprecated(deprecationWarning) {\n      var deprecationWarnings = getDeprecationWarnings(this._component.constructor);\n      if (deprecationWarnings.has(deprecationWarning)) {\n        return this;\n      }\n      deprecationWarnings.add(deprecationWarning);\n      return this.warn(deprecationWarning);\n    }\n\n    /**\n     * Log an info message using console.info\n     * @param {...String} messages - Message(s) to pass to console.info\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'info',\n    value: function info() {\n      return this.log(Log.INFO, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a warn message using console.warn\n     * @param {...String} messages - Message(s) to pass to console.warn\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warn',\n    value: function warn() {\n      return this.log(Log.WARN, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a warning once.\n     * @param {String} warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warnOnce',\n    value: function warnOnce(warning) {\n      if (this._warnings.has(warning)) {\n        return this;\n      }\n      this._warnings.add(warning);\n      return this.warn(warning);\n    }\n\n    /**\n     * Log an error message using console.error\n     * @param {...String} messages - Message(s) to pass to console.error\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'error',\n    value: function error() {\n      return this.log(Log.ERROR, [].slice.call(arguments));\n    }\n\n    /**\n     * Log an error message using console.error and throw an exception\n     * @param {TwilioError} error - Error to throw\n     * @param {String} customMessage - Custom message for the error\n     * @public\n     */\n\n  }, {\n    key: 'throw',\n    value: function _throw(error, customMessage) {\n      if (error.clone) {\n        error = error.clone(customMessage);\n      }\n\n      this.log(Log.ERROR, error);\n      throw error;\n    }\n  }], [{\n    key: 'getLevelByName',\n    value: function getLevelByName(name) {\n      if (!isNaN(name)) {\n        return parseInt(name, 10);\n      }\n      name = name.toUpperCase();\n      validateLogLevel(name);\n      return Log[name];\n    }\n  }]);\n\n  return Log;\n}();\n\n// Singleton Constants\n/* eslint key-spacing:0 */\n/* istanbul ignore next */\n\n\nObject.defineProperties(Log, {\n  DEBUG: { value: 0 },\n  INFO: { value: 1 },\n  WARN: { value: 2 },\n  ERROR: { value: 3 },\n  OFF: { value: 4 },\n  _levels: {\n    value: [{ name: 'DEBUG', logFn: console.log }, { name: 'INFO', logFn: console.info }, { name: 'WARN', logFn: console.warn }, { name: 'ERROR', logFn: console.error }, { name: 'OFF', logFn: function noop() {} }]\n  }\n});\n\nvar LOG_LEVELS_SET = {};\nvar LOG_LEVEL_VALUES = [];\n\nvar LOG_LEVEL_NAMES = Log._levels.map(function (level, i) {\n  LOG_LEVELS_SET[level.name] = true;\n  LOG_LEVEL_VALUES.push(i);\n  return level.name;\n});\n\nfunction validateLogLevel(level) {\n  if (!(level in LOG_LEVELS_SET)) {\n    throw E.INVALID_VALUE('level', LOG_LEVEL_NAMES);\n  }\n}\n\nfunction validateLogLevels(levels) {\n  Object.keys(levels).forEach(function (moduleName) {\n    validateLogLevel(levels[moduleName].toUpperCase());\n  });\n}\n\nmodule.exports = Log;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL2xvZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3V0aWwvbG9nLmpzPzRiNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5ldy1jYXA6MCwgbm8tY29uc29sZTowICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG52YXIgREVGQVVMVF9MT0dfTEVWRUwgPSBjb25zdGFudHMuREVGQVVMVF9MT0dfTEVWRUw7XG52YXIgRSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJykudHlwZUVycm9ycztcblxudmFyIGRlcHJlY2F0aW9uV2FybmluZ3NCeUNvbXBvbmVudENvbnN0cnVjdG9yID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBnZXREZXByZWNhdGlvbldhcm5pbmdzKGNvbXBvbmVudENvbnN0cnVjdG9yKSB7XG4gIGRlcHJlY2F0aW9uV2FybmluZ3NCeUNvbXBvbmVudENvbnN0cnVjdG9yID0gZGVwcmVjYXRpb25XYXJuaW5nc0J5Q29tcG9uZW50Q29uc3RydWN0b3IgfHwgbmV3IE1hcCgpO1xuICBpZiAoZGVwcmVjYXRpb25XYXJuaW5nc0J5Q29tcG9uZW50Q29uc3RydWN0b3IuaGFzKGNvbXBvbmVudENvbnN0cnVjdG9yKSkge1xuICAgIHJldHVybiBkZXByZWNhdGlvbldhcm5pbmdzQnlDb21wb25lbnRDb25zdHJ1Y3Rvci5nZXQoY29tcG9uZW50Q29uc3RydWN0b3IpO1xuICB9XG4gIHZhciBkZXByZWNhdGlvbldhcm5pbmdzID0gbmV3IFNldCgpO1xuICBkZXByZWNhdGlvbldhcm5pbmdzQnlDb21wb25lbnRDb25zdHJ1Y3Rvci5zZXQoY29tcG9uZW50Q29uc3RydWN0b3IsIGRlcHJlY2F0aW9uV2FybmluZ3MpO1xuICByZXR1cm4gZGVwcmVjYXRpb25XYXJuaW5ncztcbn1cblxuLyoqXG4gKiBTZWxlY3RpdmVseSBvdXRwdXRzIG1lc3NhZ2VzIHRvIGNvbnNvbGUubG9nIGJhc2VkIG9uIHNwZWNpZmllZCBtaW5pbXVtIG1vZHVsZVxuICogc3BlY2lmaWMgbG9nIGxldmVscy5cbiAqXG4gKiBOT1RFOiBUaGUgdmFsdWVzIGluIHRoZSBsb2dMZXZlbHMgb2JqZWN0IHBhc3NlZCB0byB0aGUgY29uc3RydWN0b3IgaXMgY2hhbmdlZFxuICogICAgICAgYnkgc3Vic2VxdWVudCBjYWxscyB0byB7QGxpbmsgTG9nI3NldExldmVsc30uXG4gKi9cblxudmFyIExvZyA9IGZ1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdCBhIG5ldyB7QGxpbmsgTG9nfSBvYmplY3QuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBtb2R1bGVOYW1lIC0gTmFtZSBvZiB0aGUgbG9nZ2luZyBtb2R1bGUgKHdlYnJ0Yy9tZWRpYS9zaWduYWxpbmcpXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBjb21wb25lbnQgLSBDb21wb25lbnQgb3duaW5nIHRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICogQHBhcmFtIHtMb2dMZXZlbHN9IGxvZ0xldmVscyAtIExvZ2dpbmcgbGV2ZWxzLiBTZWUge0BsaW5rIExvZ0xldmVsc31cbiAgICovXG4gIGZ1bmN0aW9uIExvZyhtb2R1bGVOYW1lLCBjb21wb25lbnQsIGxvZ0xldmVscykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2cpO1xuXG4gICAgaWYgKHR5cGVvZiBtb2R1bGVOYW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgRS5JTlZBTElEX1RZUEUoJ21vZHVsZU5hbWUnLCAnc3RyaW5nJyk7XG4gICAgfVxuXG4gICAgaWYgKCFjb21wb25lbnQpIHtcbiAgICAgIHRocm93IEUuUkVRVUlSRURfQVJHVU1FTlQoJ2NvbXBvbmVudCcpO1xuICAgIH1cblxuICAgIGlmICgodHlwZW9mIGxvZ0xldmVscyA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobG9nTGV2ZWxzKSkgIT09ICdvYmplY3QnKSB7XG4gICAgICBsb2dMZXZlbHMgPSB7fTtcbiAgICB9XG5cbiAgICB2YWxpZGF0ZUxvZ0xldmVscyhsb2dMZXZlbHMpO1xuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBfY29tcG9uZW50OiB7XG4gICAgICAgIHZhbHVlOiBjb21wb25lbnRcbiAgICAgIH0sXG4gICAgICBfbG9nTGV2ZWxzOiB7XG4gICAgICAgIHZhbHVlOiBsb2dMZXZlbHNcbiAgICAgIH0sXG4gICAgICBfd2FybmluZ3M6IHtcbiAgICAgICAgdmFsdWU6IG5ldyBTZXQoKVxuICAgICAgfSxcbiAgICAgIGxvZ0xldmVsOiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBMb2cuZ2V0TGV2ZWxCeU5hbWUobG9nTGV2ZWxzW21vZHVsZU5hbWVdIHx8IERFRkFVTFRfTE9HX0xFVkVMKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG5hbWU6IHsgZ2V0OiBjb21wb25lbnQudG9TdHJpbmcuYmluZChjb21wb25lbnQpIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGxvZyBsZXZlbCAobnVtYmVyKSBieSBpdHMgbmFtZSAoc3RyaW5nKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSAtIE5hbWUgb2YgdGhlIGxvZyBsZXZlbFxuICAgKiBAcmV0dXJucyB7TnVtYmVyfSBSZXF1ZXN0ZWQgbG9nIGxldmVsXG4gICAqIEB0aHJvd3Mge1R3aWxpb0Vycm9yfSBJTlZBTElEX0xPR19MRVZFTCAoMzIwNTYpXG4gICAqIEBwdWJsaWNcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoTG9nLCBbe1xuICAgIGtleTogJ2NyZWF0ZUxvZycsXG5cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNoaWxkIHtAbGluayBMb2d9IGluc3RhbmNlIHdpdGggdGhpcy5fbG9nTGV2ZWxzXG4gICAgICogQHBhcmFtIG1vZHVsZU5hbWUgLSBOYW1lIG9mIHRoZSBsb2dnaW5nIG1vZHVsZVxuICAgICAqIEBwYXJhbSBjb21wb25lbnQgLSBDb21wb25lbnQgb3duaW5nIHRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICAgKiBAcmV0dXJucyB7TG9nfSB0aGlzXG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUxvZyhtb2R1bGVOYW1lLCBjb21wb25lbnQpIHtcbiAgICAgIHJldHVybiBuZXcgTG9nKG1vZHVsZU5hbWUsIGNvbXBvbmVudCwgdGhpcy5fbG9nTGV2ZWxzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgbmV3IGxvZyBsZXZlbHMuXG4gICAgICogVGhpcyBjaGFuZ2VzIHRoZSBsZXZlbHMgZm9yIGFsbCBpdHMgYW5jZXN0b3JzLFxuICAgICAqIHNpYmxpbmdzLCBhbmQgY2hpbGRyZW4gYW5kIGRlc2NlbmRhbnRzIGluc3RhbmNlcyBvZiB7QGxpbmsgTG9nfS5cbiAgICAgKiBAcGFyYW0ge0xvZ0xldmVsc30gbGV2ZWxzIC0gTmV3IGxvZyBsZXZlbHNcbiAgICAgKiBAdGhyb3dzIHtUd2lsaW9FcnJvcn0gSU5WQUxJRF9BUkdVTUVOVFxuICAgICAqIEByZXR1cm5zIHtMb2d9IHRoaXNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc2V0TGV2ZWxzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0TGV2ZWxzKGxldmVscykge1xuICAgICAgdmFsaWRhdGVMb2dMZXZlbHMobGV2ZWxzKTtcbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5fbG9nTGV2ZWxzLCBsZXZlbHMpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9nIGEgbWVzc2FnZSB1c2luZyB0aGUgY29uc29sZSBtZXRob2QgYXBwcm9wcmlhdGUgZm9yIHRoZSBzcGVjaWZpZWQgbG9nTGV2ZWxcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbG9nTGV2ZWwgLSBMb2cgbGV2ZWwgb2YgdGhlIG1lc3NhZ2UgYmVpbmcgbG9nZ2VkXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgLSBNZXNzYWdlKHMpIHRvIGxvZ1xuICAgICAqIEByZXR1cm5zIHtMb2d9IFRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICAgKiBAcHVibGljXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2xvZycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvZyhsb2dMZXZlbCwgbWVzc2FnZSkge1xuICAgICAgdmFyIGxvZ1NwZWMgPSBMb2cuX2xldmVsc1tsb2dMZXZlbF07XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgIGlmICghbG9nU3BlYykge1xuICAgICAgICB0aHJvdyBFLklOVkFMSURfVkFMVUUoJ2xvZ0xldmVsJywgTE9HX0xFVkVMX1ZBTFVFUyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmxvZ0xldmVsIDw9IGxvZ0xldmVsKSB7XG4gICAgICAgIHZhciBsZXZlbE5hbWUgPSBsb2dTcGVjLm5hbWU7XG4gICAgICAgIHZhciBwcmVmaXggPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKS5jb25jYXQoWyd8JywgbGV2ZWxOYW1lLCAnaW4nLCB0aGlzLm5hbWUgKyAnOiddKTtcbiAgICAgICAgbG9nU3BlYy5sb2dGbi5hcHBseShjb25zb2xlLCBwcmVmaXguY29uY2F0KG1lc3NhZ2UpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9nIGEgZGVidWcgbWVzc2FnZSB1c2luZyBjb25zb2xlLmxvZ1xuICAgICAqIEBwYXJhbSB7Li4uU3RyaW5nfSBtZXNzYWdlcyAtIE1lc3NhZ2UocykgdG8gcGFzcyB0byBjb25zb2xlLmxvZ1xuICAgICAqIEByZXR1cm5zIHtMb2d9IFRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICAgKiBAcHVibGljXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlYnVnJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVidWcoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sb2coTG9nLkRFQlVHLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIExvZyBhIGRlcHJlY2F0aW9uIHdhcm5pbmcuIERlcHJlY2F0aW9uIHdhcm5pbmdzIGFyZSBsb2dnZWQgYXMgd2FybmluZ3MgYW5kXG4gICAgICogdGhleSBhcmUgb25seSBldmVyIGxvZ2dlZCBvbmNlLlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBkZXByZWNhdGlvbldhcm5pbmcgLSBUaGUgZGVwcmVjYXRpb24gd2FybmluZ1xuICAgICAqIEByZXR1cm5zIHtMb2d9IFRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICAgKiBAcHVibGljXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlcHJlY2F0ZWQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXByZWNhdGVkKGRlcHJlY2F0aW9uV2FybmluZykge1xuICAgICAgdmFyIGRlcHJlY2F0aW9uV2FybmluZ3MgPSBnZXREZXByZWNhdGlvbldhcm5pbmdzKHRoaXMuX2NvbXBvbmVudC5jb25zdHJ1Y3Rvcik7XG4gICAgICBpZiAoZGVwcmVjYXRpb25XYXJuaW5ncy5oYXMoZGVwcmVjYXRpb25XYXJuaW5nKSkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIGRlcHJlY2F0aW9uV2FybmluZ3MuYWRkKGRlcHJlY2F0aW9uV2FybmluZyk7XG4gICAgICByZXR1cm4gdGhpcy53YXJuKGRlcHJlY2F0aW9uV2FybmluZyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9nIGFuIGluZm8gbWVzc2FnZSB1c2luZyBjb25zb2xlLmluZm9cbiAgICAgKiBAcGFyYW0gey4uLlN0cmluZ30gbWVzc2FnZXMgLSBNZXNzYWdlKHMpIHRvIHBhc3MgdG8gY29uc29sZS5pbmZvXG4gICAgICogQHJldHVybnMge0xvZ30gVGhpcyBpbnN0YW5jZSBvZiB7QGxpbmsgTG9nfVxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaW5mbycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluZm8oKSB7XG4gICAgICByZXR1cm4gdGhpcy5sb2coTG9nLklORk8sIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9nIGEgd2FybiBtZXNzYWdlIHVzaW5nIGNvbnNvbGUud2FyblxuICAgICAqIEBwYXJhbSB7Li4uU3RyaW5nfSBtZXNzYWdlcyAtIE1lc3NhZ2UocykgdG8gcGFzcyB0byBjb25zb2xlLndhcm5cbiAgICAgKiBAcmV0dXJucyB7TG9nfSBUaGlzIGluc3RhbmNlIG9mIHtAbGluayBMb2d9XG4gICAgICogQHB1YmxpY1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICd3YXJuJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gd2FybigpIHtcbiAgICAgIHJldHVybiB0aGlzLmxvZyhMb2cuV0FSTiwgW10uc2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBMb2cgYSB3YXJuaW5nIG9uY2UuXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHdhcm5pbmdcbiAgICAgKiBAcmV0dXJucyB7TG9nfSBUaGlzIGluc3RhbmNlIG9mIHtAbGluayBMb2d9XG4gICAgICogQHB1YmxpY1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICd3YXJuT25jZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHdhcm5PbmNlKHdhcm5pbmcpIHtcbiAgICAgIGlmICh0aGlzLl93YXJuaW5ncy5oYXMod2FybmluZykpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICB0aGlzLl93YXJuaW5ncy5hZGQod2FybmluZyk7XG4gICAgICByZXR1cm4gdGhpcy53YXJuKHdhcm5pbmcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIExvZyBhbiBlcnJvciBtZXNzYWdlIHVzaW5nIGNvbnNvbGUuZXJyb3JcbiAgICAgKiBAcGFyYW0gey4uLlN0cmluZ30gbWVzc2FnZXMgLSBNZXNzYWdlKHMpIHRvIHBhc3MgdG8gY29uc29sZS5lcnJvclxuICAgICAqIEByZXR1cm5zIHtMb2d9IFRoaXMgaW5zdGFuY2Ugb2Yge0BsaW5rIExvZ31cbiAgICAgKiBAcHVibGljXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2Vycm9yJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXJyb3IoKSB7XG4gICAgICByZXR1cm4gdGhpcy5sb2coTG9nLkVSUk9SLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIExvZyBhbiBlcnJvciBtZXNzYWdlIHVzaW5nIGNvbnNvbGUuZXJyb3IgYW5kIHRocm93IGFuIGV4Y2VwdGlvblxuICAgICAqIEBwYXJhbSB7VHdpbGlvRXJyb3J9IGVycm9yIC0gRXJyb3IgdG8gdGhyb3dcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gY3VzdG9tTWVzc2FnZSAtIEN1c3RvbSBtZXNzYWdlIGZvciB0aGUgZXJyb3JcbiAgICAgKiBAcHVibGljXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3Rocm93JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3Rocm93KGVycm9yLCBjdXN0b21NZXNzYWdlKSB7XG4gICAgICBpZiAoZXJyb3IuY2xvbmUpIHtcbiAgICAgICAgZXJyb3IgPSBlcnJvci5jbG9uZShjdXN0b21NZXNzYWdlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5sb2coTG9nLkVSUk9SLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2dldExldmVsQnlOYW1lJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TGV2ZWxCeU5hbWUobmFtZSkge1xuICAgICAgaWYgKCFpc05hTihuYW1lKSkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQobmFtZSwgMTApO1xuICAgICAgfVxuICAgICAgbmFtZSA9IG5hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgIHZhbGlkYXRlTG9nTGV2ZWwobmFtZSk7XG4gICAgICByZXR1cm4gTG9nW25hbWVdO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2c7XG59KCk7XG5cbi8vIFNpbmdsZXRvbiBDb25zdGFudHNcbi8qIGVzbGludCBrZXktc3BhY2luZzowICovXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKExvZywge1xuICBERUJVRzogeyB2YWx1ZTogMCB9LFxuICBJTkZPOiB7IHZhbHVlOiAxIH0sXG4gIFdBUk46IHsgdmFsdWU6IDIgfSxcbiAgRVJST1I6IHsgdmFsdWU6IDMgfSxcbiAgT0ZGOiB7IHZhbHVlOiA0IH0sXG4gIF9sZXZlbHM6IHtcbiAgICB2YWx1ZTogW3sgbmFtZTogJ0RFQlVHJywgbG9nRm46IGNvbnNvbGUubG9nIH0sIHsgbmFtZTogJ0lORk8nLCBsb2dGbjogY29uc29sZS5pbmZvIH0sIHsgbmFtZTogJ1dBUk4nLCBsb2dGbjogY29uc29sZS53YXJuIH0sIHsgbmFtZTogJ0VSUk9SJywgbG9nRm46IGNvbnNvbGUuZXJyb3IgfSwgeyBuYW1lOiAnT0ZGJywgbG9nRm46IGZ1bmN0aW9uIG5vb3AoKSB7fSB9XVxuICB9XG59KTtcblxudmFyIExPR19MRVZFTFNfU0VUID0ge307XG52YXIgTE9HX0xFVkVMX1ZBTFVFUyA9IFtdO1xuXG52YXIgTE9HX0xFVkVMX05BTUVTID0gTG9nLl9sZXZlbHMubWFwKGZ1bmN0aW9uIChsZXZlbCwgaSkge1xuICBMT0dfTEVWRUxTX1NFVFtsZXZlbC5uYW1lXSA9IHRydWU7XG4gIExPR19MRVZFTF9WQUxVRVMucHVzaChpKTtcbiAgcmV0dXJuIGxldmVsLm5hbWU7XG59KTtcblxuZnVuY3Rpb24gdmFsaWRhdGVMb2dMZXZlbChsZXZlbCkge1xuICBpZiAoIShsZXZlbCBpbiBMT0dfTEVWRUxTX1NFVCkpIHtcbiAgICB0aHJvdyBFLklOVkFMSURfVkFMVUUoJ2xldmVsJywgTE9HX0xFVkVMX05BTUVTKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZUxvZ0xldmVscyhsZXZlbHMpIHtcbiAgT2JqZWN0LmtleXMobGV2ZWxzKS5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVOYW1lKSB7XG4gICAgdmFsaWRhdGVMb2dMZXZlbChsZXZlbHNbbW9kdWxlTmFtZV0udG9VcHBlckNhc2UoKSk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IExvZzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/log.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/networkmonitor.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/networkmonitor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Monitor the network connection status to detect interruptions and handoffs.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkMonitor = function () {\n  /**\n   * Construct a {@link NetworkMonitor}.\n   * @param {function} onNetworkChanged\n   * @param {*} [options]\n   */\n  function NetworkMonitor(onNetworkChanged, options) {\n    var _this = this;\n\n    _classCallCheck(this, NetworkMonitor);\n\n    options = Object.assign({\n      navigator: navigator,\n      window: window\n    }, options);\n\n    var nav = options.navigator;\n    var connection = nav.connection || { type: null };\n    var type = connection.type;\n\n    var _ref = connection.type ? {\n      _events: {\n        value: ['change', 'typechange']\n      },\n      _listener: {\n        value: function value() {\n          var networkChanged = type !== _this.type && _this.isOnline;\n          type = _this.type;\n          if (networkChanged) {\n            onNetworkChanged();\n          }\n        }\n      },\n      _target: {\n        value: connection\n      }\n    } : {\n      _events: {\n        value: ['online']\n      },\n      _listener: {\n        value: onNetworkChanged\n      },\n      _target: {\n        value: options.window\n      }\n    },\n        _events = _ref._events,\n        _listener = _ref._listener,\n        _target = _ref._target;\n\n    Object.defineProperties(this, {\n      isOnline: {\n        enumerable: true,\n        get: function get() {\n          return typeof nav.onLine === 'boolean' ? nav.onLine : true;\n        }\n      },\n      type: {\n        enumerable: true,\n        get: function get() {\n          return connection.type || null;\n        }\n      },\n      _listener: _listener,\n      _events: _events,\n      _target: _target\n    });\n  }\n\n  /**\n   * Start the {@link NetworkMonitor}.\n   */\n\n\n  _createClass(NetworkMonitor, [{\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this._events.forEach(function (event) {\n        _this2._target.addEventListener(event, _this2._listener);\n      });\n    }\n\n    /**\n     * Stop the {@link NetworkMonitor}.\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      this._events.forEach(function (event) {\n        _this3._target.removeEventListener(event, _this3._listener);\n      });\n    }\n  }]);\n\n  return NetworkMonitor;\n}();\n\nmodule.exports = NetworkMonitor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL25ldHdvcmttb25pdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC9uZXR3b3JrbW9uaXRvci5qcz83N2VlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb25pdG9yIHRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gc3RhdHVzIHRvIGRldGVjdCBpbnRlcnJ1cHRpb25zIGFuZCBoYW5kb2Zmcy5cbiAqL1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgTmV0d29ya01vbml0b3IgPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgYSB7QGxpbmsgTmV0d29ya01vbml0b3J9LlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBvbk5ldHdvcmtDaGFuZ2VkXG4gICAqIEBwYXJhbSB7Kn0gW29wdGlvbnNdXG4gICAqL1xuICBmdW5jdGlvbiBOZXR3b3JrTW9uaXRvcihvbk5ldHdvcmtDaGFuZ2VkLCBvcHRpb25zKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOZXR3b3JrTW9uaXRvcik7XG5cbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBuYXZpZ2F0b3I6IG5hdmlnYXRvcixcbiAgICAgIHdpbmRvdzogd2luZG93XG4gICAgfSwgb3B0aW9ucyk7XG5cbiAgICB2YXIgbmF2ID0gb3B0aW9ucy5uYXZpZ2F0b3I7XG4gICAgdmFyIGNvbm5lY3Rpb24gPSBuYXYuY29ubmVjdGlvbiB8fCB7IHR5cGU6IG51bGwgfTtcbiAgICB2YXIgdHlwZSA9IGNvbm5lY3Rpb24udHlwZTtcblxuICAgIHZhciBfcmVmID0gY29ubmVjdGlvbi50eXBlID8ge1xuICAgICAgX2V2ZW50czoge1xuICAgICAgICB2YWx1ZTogWydjaGFuZ2UnLCAndHlwZWNoYW5nZSddXG4gICAgICB9LFxuICAgICAgX2xpc3RlbmVyOiB7XG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgICAgICB2YXIgbmV0d29ya0NoYW5nZWQgPSB0eXBlICE9PSBfdGhpcy50eXBlICYmIF90aGlzLmlzT25saW5lO1xuICAgICAgICAgIHR5cGUgPSBfdGhpcy50eXBlO1xuICAgICAgICAgIGlmIChuZXR3b3JrQ2hhbmdlZCkge1xuICAgICAgICAgICAgb25OZXR3b3JrQ2hhbmdlZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIF90YXJnZXQ6IHtcbiAgICAgICAgdmFsdWU6IGNvbm5lY3Rpb25cbiAgICAgIH1cbiAgICB9IDoge1xuICAgICAgX2V2ZW50czoge1xuICAgICAgICB2YWx1ZTogWydvbmxpbmUnXVxuICAgICAgfSxcbiAgICAgIF9saXN0ZW5lcjoge1xuICAgICAgICB2YWx1ZTogb25OZXR3b3JrQ2hhbmdlZFxuICAgICAgfSxcbiAgICAgIF90YXJnZXQ6IHtcbiAgICAgICAgdmFsdWU6IG9wdGlvbnMud2luZG93XG4gICAgICB9XG4gICAgfSxcbiAgICAgICAgX2V2ZW50cyA9IF9yZWYuX2V2ZW50cyxcbiAgICAgICAgX2xpc3RlbmVyID0gX3JlZi5fbGlzdGVuZXIsXG4gICAgICAgIF90YXJnZXQgPSBfcmVmLl90YXJnZXQ7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBpc09ubGluZToge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIG5hdi5vbkxpbmUgPT09ICdib29sZWFuJyA/IG5hdi5vbkxpbmUgOiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdHlwZToge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbi50eXBlIHx8IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBfbGlzdGVuZXI6IF9saXN0ZW5lcixcbiAgICAgIF9ldmVudHM6IF9ldmVudHMsXG4gICAgICBfdGFyZ2V0OiBfdGFyZ2V0XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgdGhlIHtAbGluayBOZXR3b3JrTW9uaXRvcn0uXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKE5ldHdvcmtNb25pdG9yLCBbe1xuICAgIGtleTogJ3N0YXJ0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5fZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIF90aGlzMi5fdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIF90aGlzMi5fbGlzdGVuZXIpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RvcCB0aGUge0BsaW5rIE5ldHdvcmtNb25pdG9yfS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3RvcCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdGhpcy5fZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIF90aGlzMy5fdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIF90aGlzMy5fbGlzdGVuZXIpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE5ldHdvcmtNb25pdG9yO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5ldHdvcmtNb25pdG9yOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/networkmonitor.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar difference = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/index.js\").difference;\nvar flatMap = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/index.js\").flatMap;\nvar setSimulcastInMediaSection = __webpack_require__(/*! ./simulcast */ \"./node_modules/twilio-video/es5/util/sdp/simulcast.js\");\n\nvar ptToFixedBitrateAudioCodecName = {\n  0: 'PCMU',\n  8: 'PCMA'\n};\n\n/**\n * A payload type\n * @typedef {number} PT\n */\n\n/**\n * An {@link AudioCodec} or {@link VideoCodec}\n * @typedef {AudioCodec|VideoCodec} Codec\n */\n\n// NOTE(mmalavalli): This value is derived from the IETF spec\n// for JSEP, and it is used to convert a 'b=TIAS' value in bps\n// to a 'b=AS' value in kbps.\n// Spec: https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-21#section-5.9\nvar RTCP_BITRATE = 16000;\n\n/**\n * Construct a b= line string for the given max bitrate in bps. If the modifier\n * is 'AS', then the max bitrate will be converted to kbps using the formula\n * specified in the IETF spec for JSEP mentioned above.\n * @param {string} modifier - 'AS' | 'TIAS'\n * @param {?number} maxBitrate - Max outgoing bitrate (bps)\n * @returns {?string} - If \"maxBitrate\" is null, then returns null;\n *   otherwise return the constructed b= line string\n */\nfunction createBLine(modifier, maxBitrate) {\n  if (!maxBitrate) {\n    return null;\n  }\n  return '\\r\\nb=' + modifier + ':' + (modifier === 'AS' ? Math.round((maxBitrate + RTCP_BITRATE) / 950) : maxBitrate);\n}\n\n/**\n * Create a Codec Map for the given m= section.\n * @param {string} section - The given m= section\n * @returns {Map<Codec, Array<PT>>}\n */\nfunction createCodecMapForMediaSection(section) {\n  return Array.from(createPtToCodecName(section)).reduce(function (codecMap, pair) {\n    var pt = pair[0];\n    var codecName = pair[1];\n    var pts = codecMap.get(codecName) || [];\n    return codecMap.set(codecName, pts.concat(pt));\n  }, new Map());\n}\n\n/**\n * Create a Map of MIDs to m= sections for the given SDP.\n * @param {string} sdp\n * @returns {Map<string, string>}\n */\nfunction createMidToMediaSectionMap(sdp) {\n  return getMediaSections(sdp).reduce(function (midsToMediaSections, mediaSection) {\n    var mid = getMidForMediaSection(mediaSection);\n    return mid ? midsToMediaSections.set(mid, mediaSection) : midsToMediaSections;\n  }, new Map());\n}\n\n/**\n * Create a Map from PTs to codec names for the given m= section.\n * @param {string} mediaSection - The given m= section.\n * @returns {Map<PT, Codec>} ptToCodecName\n */\nfunction createPtToCodecName(mediaSection) {\n  return getPayloadTypesInMediaSection(mediaSection).reduce(function (ptToCodecName, pt) {\n    var rtpmapPattern = new RegExp('a=rtpmap:' + pt + ' ([^/]+)');\n    var matches = mediaSection.match(rtpmapPattern);\n    var codecName = matches ? matches[1].toLowerCase() : ptToFixedBitrateAudioCodecName[pt] ? ptToFixedBitrateAudioCodecName[pt].toLowerCase() : '';\n    return ptToCodecName.set(pt, codecName);\n  }, new Map());\n}\n\n/**\n * Get the associated fmtp attributes for the given Payload Type in an m= section.\n * @param {PT} pt\n * @param {string} mediaSection\n * @returns {?object}\n */\nfunction getFmtpAttributesForPt(pt, mediaSection) {\n  // In \"a=fmtp:<pt> <name>=<value>[;<name>=<value>]*\", the regex matches the codec\n  // profile parameters expressed as name/value pairs separated by \";\".\n  var fmtpRegex = new RegExp('^a=fmtp:' + pt + ' (.+)$', 'm');\n  var matches = mediaSection.match(fmtpRegex);\n  return matches && matches[1].split(';').reduce(function (attrs, nvPair) {\n    var _nvPair$split = nvPair.split('='),\n        _nvPair$split2 = _slicedToArray(_nvPair$split, 2),\n        name = _nvPair$split2[0],\n        value = _nvPair$split2[1];\n\n    attrs[name] = isNaN(value) ? value : parseInt(value, 10);\n    return attrs;\n  }, {});\n}\n\n/**\n * Get the MID for the given m= section.\n * @param {string} mediaSection\n * @return {?string}\n */\nfunction getMidForMediaSection(mediaSection) {\n  // In \"a=mid:<mid>\", the regex matches <mid>.\n  var midMatches = mediaSection.match(/^a=mid:(.+)$/m);\n  return midMatches && midMatches[1];\n}\n\n/**\n * Get the m= sections of a particular kind and direction from an sdp.\n * @param {string} sdp - SDP string\n * @param {string} [kind] - Pattern for matching kind\n * @param {string} [direction] - Pattern for matching direction\n * @returns {Array<string>} mediaSections\n */\nfunction getMediaSections(sdp, kind, direction) {\n  return sdp.replace(/\\r\\n\\r\\n$/, '\\r\\n').split('\\r\\nm=').slice(1).map(function (mediaSection) {\n    return 'm=' + mediaSection;\n  }).filter(function (mediaSection) {\n    var kindPattern = new RegExp('m=' + (kind || '.*'), 'gm');\n    var directionPattern = new RegExp('a=' + (direction || '.*'), 'gm');\n    return kindPattern.test(mediaSection) && directionPattern.test(mediaSection);\n  });\n}\n\n/**\n * Get the Codec Payload Types present in the first line of the given m= section\n * @param {string} section - The m= section\n * @returns {Array<PT>} Payload Types\n */\nfunction getPayloadTypesInMediaSection(section) {\n  var mLine = section.split('\\r\\n')[0];\n\n  // In \"m=<kind> <port> <proto> <payload_type_1> <payload_type_2> ... <payload_type_n>\",\n  // the regex matches <port> and the Payload Types.\n  var matches = mLine.match(/([0-9]+)/g);\n\n  // This should not happen, but in case there are no Payload Types in\n  // the m= line, return an empty array.\n  if (!matches) {\n    return [];\n  }\n\n  // Since only the Payload Types are needed, we discard the <port>.\n  return matches.slice(1).map(function (match) {\n    return parseInt(match, 10);\n  });\n}\n\n/**\n * Create the reordered Codec Payload Types based on the preferred Codec Names.\n * @param {Map<Codec, Array<PT>>} codecMap - Codec Map\n * @param {Array<Codec>} preferredCodecs - Preferred Codec Names\n * @returns {Array<PT>} Reordered Payload Types\n */\nfunction getReorderedPayloadTypes(codecMap, preferredCodecs) {\n  preferredCodecs = preferredCodecs.map(function (codecName) {\n    return codecName.toLowerCase();\n  });\n\n  var preferredPayloadTypes = flatMap(preferredCodecs, function (codecName) {\n    return codecMap.get(codecName) || [];\n  });\n\n  var remainingCodecs = difference(Array.from(codecMap.keys()), preferredCodecs);\n  var remainingPayloadTypes = flatMap(remainingCodecs, function (codecName) {\n    return codecMap.get(codecName);\n  });\n\n  return preferredPayloadTypes.concat(remainingPayloadTypes);\n}\n\n/**\n * Set the specified max bitrate in the given m= section.\n * @param {string} modifier - 'AS' | 'TIAS'\n * @param {?number} maxBitrate - Max outgoing bitrate (bps)\n * @param {string} section - m= section string\n * @returns {string} The updated m= section\n */\nfunction setBitrateInMediaSection(modifier, maxBitrate, section) {\n  var bLine = createBLine(modifier, maxBitrate) || '';\n  var bLinePattern = /\\r\\nb=(AS|TIAS):([0-9]+)/;\n  var bLineMatched = section.match(bLinePattern);\n\n  if (!bLineMatched) {\n    return section.replace(/(\\r\\n)?$/, bLine + '$1');\n  }\n\n  var maxBitrateMatched = parseInt(bLineMatched[2], 10);\n  maxBitrate = maxBitrate || Infinity;\n  bLine = createBLine(modifier, Math.min(maxBitrateMatched, maxBitrate));\n  return section.replace(bLinePattern, bLine);\n}\n\n/**\n * Set maximum bitrates to the media sections in a given sdp.\n * @param {string} sdp - sdp string\n * @param {string} modifier - 'AS' | 'TIAS\"\n * @param {?number} maxAudioBitrate - Max outgoing audio bitrate (bps), null\n *   if no limit is to be applied\n * @param {?number} maxVideoBitrate - Max outgoing video bitrate (bps), null\n *   if no limit is to be applied\n * @returns {string} - The updated sdp string\n */\nfunction setBitrateParameters(sdp, modifier, maxAudioBitrate, maxVideoBitrate) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (section) {\n    // Bitrate parameters should not be applied to m=application sections\n    // or to m=(audio|video) sections that do not receive media.\n    if (!/^m=(audio|video)/.test(section) || !/a=(recvonly|sendrecv)/.test(section)) {\n      return section;\n    }\n    var kind = section.match(/^m=(audio|video)/)[1];\n    var maxBitrate = kind === 'audio' ? maxAudioBitrate : maxVideoBitrate;\n    return setBitrateInMediaSection(modifier, maxBitrate, section);\n  })).join('\\r\\n');\n}\n\n/**\n * Set the given Codec Payload Types in the first line of the given m= section.\n * @param {Array<PT>} payloadTypes - Payload Types\n * @param {string} section - Given m= section\n * @returns {string} - Updated m= section\n */\nfunction setPayloadTypesInMediaSection(payloadTypes, section) {\n  var lines = section.split('\\r\\n');\n  var mLine = lines[0];\n  var otherLines = lines.slice(1);\n  mLine = mLine.replace(/([0-9]+\\s?)+$/, payloadTypes.join(' '));\n  return [mLine].concat(otherLines).join('\\r\\n');\n}\n\n/**\n * Return a new SDP string with the re-ordered codec preferences.\n * @param {string} sdp\n * @param {Array<AudioCodec>} preferredAudioCodecs - If empty, the existing order\n *   of audio codecs is preserved\n * @param {Array<VideoCodecSettings>} preferredVideoCodecs - If empty, the\n *   existing order of video codecs is preserved\n * @returns {string} Updated SDP string\n */\nfunction setCodecPreferences(sdp, preferredAudioCodecs, preferredVideoCodecs) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (section) {\n    // Codec preferences should not be applied to m=application sections.\n    if (!/^m=(audio|video)/.test(section)) {\n      return section;\n    }\n    var kind = section.match(/^m=(audio|video)/)[1];\n    var codecMap = createCodecMapForMediaSection(section);\n    var preferredCodecs = kind === 'audio' ? preferredAudioCodecs : preferredVideoCodecs.map(function (codec) {\n      return codec.codec;\n    });\n    var payloadTypes = getReorderedPayloadTypes(codecMap, preferredCodecs);\n    var newSection = setPayloadTypesInMediaSection(payloadTypes, section);\n\n    var pcmaPayloadTypes = codecMap.get('pcma') || [];\n    var pcmuPayloadTypes = codecMap.get('pcmu') || [];\n    var fixedBitratePayloadTypes = kind === 'audio' ? new Set(pcmaPayloadTypes.concat(pcmuPayloadTypes)) : new Set();\n\n    return fixedBitratePayloadTypes.has(payloadTypes[0]) ? newSection.replace(/\\r\\nb=(AS|TIAS):([0-9]+)/g, '') : newSection;\n  })).join('\\r\\n');\n}\n\n/**\n * Return a new SDP string with simulcast settings.\n * @param {string} sdp\n * @param {'planb' | 'unified'} sdpFormat\n * @param {Map<Track.ID, TrackAttributes>} trackIdsToAttributes\n * @returns {string} Updated SDP string\n */\nfunction setSimulcast(sdp, sdpFormat, trackIdsToAttributes) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (section) {\n    section = section.replace(/\\r\\n$/, '');\n    if (!/^m=video/.test(section)) {\n      return section;\n    }\n    var codecMap = createCodecMapForMediaSection(section);\n    var payloadTypes = getPayloadTypesInMediaSection(section);\n    var vp8PayloadTypes = new Set(codecMap.get('vp8') || []);\n\n    var hasVP8PayloadType = payloadTypes.some(function (payloadType) {\n      return vp8PayloadTypes.has(payloadType);\n    });\n    return hasVP8PayloadType ? setSimulcastInMediaSection(section, sdpFormat, trackIdsToAttributes) : section;\n  })).concat('').join('\\r\\n');\n}\n\n/**\n * Get the matching Payload Types in a unified plan local m= section for a particular remote codec.\n * @param {Codec} remoteCodec\n * @param {PT} remotePt\n * @param {Map<Codec, PT>} localCodecsToPts\n * @param {string} localSection\n * @param {string} remoteSection\n * @returns {Array<PT>}\n */\nfunction unifiedPlanGetMatchingLocalPayloadTypes(remoteCodec, remotePt, localCodecsToPts, localSection, remoteSection) {\n  // If there is at most one local Payload Type that matches the remote codec, retain it.\n  var matchingLocalPts = localCodecsToPts.get(remoteCodec) || [];\n  if (matchingLocalPts.length <= 1) {\n    return matchingLocalPts;\n  }\n\n  // If there are no fmtp attributes for the codec in the remote m= section,\n  // then we cannot get a match in the local m= section. In that case, retain\n  // all matching local Payload Types.\n  var remoteFmtpAttrs = getFmtpAttributesForPt(remotePt, remoteSection);\n  if (!remoteFmtpAttrs) {\n    return matchingLocalPts;\n  }\n\n  // Among the matched local Payload Types, find the one that matches the remote\n  // fmtp attributes.\n  var matchinglocalPt = matchingLocalPts.find(function (localPt) {\n    var localFmtpAttrs = getFmtpAttributesForPt(localPt, localSection);\n    return localFmtpAttrs && Object.keys(remoteFmtpAttrs).every(function (attr) {\n      return remoteFmtpAttrs[attr] === localFmtpAttrs[attr];\n    });\n  });\n\n  // If none of the matched local Payload Types also have matching fmtp attributes,\n  // then retain all of them, otherwise retain only the local Payload Type that\n  // matches the remote fmtp attributes.\n  return typeof matchinglocalPt === 'number' ? [matchinglocalPt] : matchingLocalPts;\n}\n\n/**\n * Filter codecs in a local unified plan m= section based on its equivalent remote m= section.\n * @param {string} localSection\n * @param {Map<string, string>} remoteMidsToMediaSections\n * @returns {string}\n */\nfunction unifiedPlanFilterCodecsInLocalMediaSection(localSection, remoteMidsToMediaSections) {\n  // Do nothing if the local m= section represents neither audio nor video.\n  if (!/^m=(audio|video)/.test(localSection)) {\n    return localSection;\n  }\n\n  // Do nothing if the local m= section does not have an equivalent remote m= section.\n  var localMid = getMidForMediaSection(localSection);\n  var remoteSection = localMid && remoteMidsToMediaSections.get(localMid);\n  if (!remoteSection) {\n    return localSection;\n  }\n\n  // Construct a Map of the remote Payload Types to their codec names.\n  var remotePtToCodecs = createPtToCodecName(remoteSection);\n  // Construct a Map of the local codec names to their Payload Types.\n  var localCodecsToPts = createCodecMapForMediaSection(localSection);\n  // Maintain a list of local non-rtx Payload Types to retain.\n  var localPts = flatMap(Array.from(remotePtToCodecs), function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        remotePt = _ref2[0],\n        remoteCodec = _ref2[1];\n\n    return remoteCodec !== 'rtx' ? unifiedPlanGetMatchingLocalPayloadTypes(remoteCodec, remotePt, localCodecsToPts, localSection, remoteSection) : [];\n  });\n\n  // For each local Payload Type that will be retained, retain their\n  // corresponding rtx Payload Type if present.\n  var localRtxPts = localCodecsToPts.get('rtx') || [];\n  // In \"a=fmtp:<rtxPt> apt=<apt>\", extract the codec PT <apt> associated with rtxPt.\n  localPts = localPts.concat(localRtxPts.filter(function (rtxPt) {\n    var fmtpAttrs = getFmtpAttributesForPt(rtxPt, localSection);\n    return fmtpAttrs && localPts.includes(fmtpAttrs.apt);\n  }));\n\n  // Filter out the below mentioned attribute lines in the local m= section that\n  // do not belong to one of the local Payload Types that are to be retained.\n  // 1. \"a=rtpmap:<pt> <codec>\"\n  // 2. \"a=rtcp-fb:<pt> <attr>[ <attr>]*\"\n  // 3. \"a=fmtp:<pt> <name>=<value>[;<name>=<value>]*\"\n  var lines = localSection.split('\\r\\n').filter(function (line) {\n    var ptMatches = line.match(/^a=(rtpmap|fmtp|rtcp-fb):(.+) .+$/);\n    var pt = ptMatches && ptMatches[2];\n    return !ptMatches || pt && localPts.includes(parseInt(pt, 10));\n  });\n\n  // Filter the list of Payload Types in the first line of the m= section.\n  var orderedLocalPts = getPayloadTypesInMediaSection(localSection).filter(function (pt) {\n    return localPts.includes(pt);\n  });\n  return setPayloadTypesInMediaSection(orderedLocalPts, lines.join('\\r\\n'));\n}\n\n/**\n * Filter local codecs based on the remote unified plan SDP.\n * @param {string} localSdp\n * @param {string} remoteSdp\n * @returns {string} - Updated local SDP\n */\nfunction unifiedPlanFilterLocalCodecs(localSdp, remoteSdp) {\n  var localMediaSections = getMediaSections(localSdp);\n  var localSession = localSdp.split('\\r\\nm=')[0];\n  var remoteMidsToMediaSections = createMidToMediaSectionMap(remoteSdp);\n  return [localSession].concat(localMediaSections.map(function (localSection) {\n    return unifiedPlanFilterCodecsInLocalMediaSection(localSection, remoteMidsToMediaSections);\n  })).join('\\r\\n');\n}\n\n/**\n * Return a new SDP string after reverting simulcast for non vp8 sections in remote sdp.\n * @param localSdp - simulcast enabled local sdp\n * @param localSdpWithoutSimulcast - local sdp before simulcast was set\n * @param remoteSdp - remote sdp\n * @return {string} Updated SDP string\n */\nfunction revertSimulcastForNonVP8MediaSections(localSdp, localSdpWithoutSimulcast, remoteSdp) {\n  var remoteMidToMediaSections = createMidToMediaSectionMap(remoteSdp);\n  var localMidToMediaSectionsWithoutSimulcast = createMidToMediaSectionMap(localSdpWithoutSimulcast);\n  var mediaSections = getMediaSections(localSdp);\n  var session = localSdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (section) {\n    section = section.replace(/\\r\\n$/, '');\n    if (!/^m=video/.test(section)) {\n      return section;\n    }\n    var midMatches = section.match(/^a=mid:(.+)$/m);\n    var mid = midMatches && midMatches[1];\n    if (!mid) {\n      return section;\n    }\n\n    var remoteSection = remoteMidToMediaSections.get(mid);\n    var remotePtToCodecs = createPtToCodecName(remoteSection);\n    var remotePayloadTypes = getPayloadTypesInMediaSection(remoteSection);\n\n    var isVP8ThePreferredCodec = remotePayloadTypes.length && remotePtToCodecs.get(remotePayloadTypes[0]) === 'vp8';\n    return isVP8ThePreferredCodec ? section : localMidToMediaSectionsWithoutSimulcast.get(mid).replace(/\\r\\n$/, '');\n  })).concat('').join('\\r\\n');\n}\n\n/**\n * Add or rewrite MSIDs for new m= sections in the given Unified Plan SDP with their\n * corresponding local MediaStreamTrack IDs. These can be different when previously\n * removed MediaStreamTracks are added back (or Track IDs may not be present in the\n * SDPs at all once browsers implement the latest WebRTC spec).\n * @param {string} sdp\n * @param {Map<string, Track.ID>} activeMidsToTrackIds\n * @param {Map<Track.Kind, Array<Track.ID>>} trackIdsByKind\n * @returns {string}\n */\nfunction unifiedPlanAddOrRewriteNewTrackIds(sdp, activeMidsToTrackIds, trackIdsByKind) {\n  // NOTE(mmalavalli): The m= sections for the new MediaStreamTracks are usually\n  // present after the m= sections for the existing MediaStreamTracks, in order\n  // of addition.\n  var newMidsToTrackIds = Array.from(trackIdsByKind).reduce(function (midsToTrackIds, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        kind = _ref4[0],\n        trackIds = _ref4[1];\n\n    var mediaSections = getMediaSections(sdp, kind, 'send(only|recv)');\n    var newMids = mediaSections.map(getMidForMediaSection).filter(function (mid) {\n      return !activeMidsToTrackIds.has(mid);\n    });\n    newMids.forEach(function (mid, i) {\n      return midsToTrackIds.set(mid, trackIds[i]);\n    });\n    return midsToTrackIds;\n  }, new Map());\n  return unifiedPlanAddOrRewriteTrackIds(sdp, newMidsToTrackIds);\n}\n\n/**\n * Add or rewrite MSIDs in the given Unified Plan SDP with their corresponding local\n * MediaStreamTrack IDs. These IDs need not be the same (or Track IDs may not be\n * present in the SDPs at all once browsers implement the latest WebRTC spec).\n * @param {string} sdp\n * @param {Map<string, Track.ID>} midsToTrackIds\n * @returns {string}\n */\nfunction unifiedPlanAddOrRewriteTrackIds(sdp, midsToTrackIds) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (mediaSection) {\n    // Do nothing if the m= section represents neither audio nor video.\n    if (!/^m=(audio|video)/.test(mediaSection)) {\n      return mediaSection;\n    }\n    // This shouldn't happen, but in case there is no MID for the m= section, do nothing.\n    var mid = getMidForMediaSection(mediaSection);\n    if (!mid) {\n      return mediaSection;\n    }\n    // In case there is no Track ID for the given MID in the map, do nothing.\n    var trackId = midsToTrackIds.get(mid);\n    if (!trackId) {\n      return mediaSection;\n    }\n    // This shouldn't happen, but in case there is no a=msid: line, do nothing.\n    var attributes = (mediaSection.match(/^a=msid:(.+)$/m) || [])[1];\n    if (!attributes) {\n      return mediaSection;\n    }\n    // If the a=msid: line contains the \"appdata\" field, then replace it with the Track ID,\n    // otherwise append the Track ID.\n\n    var _attributes$split = attributes.split(' '),\n        _attributes$split2 = _slicedToArray(_attributes$split, 2),\n        msid = _attributes$split2[0],\n        trackIdToRewrite = _attributes$split2[1];\n\n    var msidRegex = new RegExp('msid:' + msid + (trackIdToRewrite ? ' ' + trackIdToRewrite : '') + '$', 'gm');\n    return mediaSection.replace(msidRegex, 'msid:' + msid + ' ' + trackId);\n  })).join('\\r\\n');\n}\n\n/**\n * removes specified ssrc attributes from given sdp\n * @param {string} sdp\n * @returns {Array<string>} ssrcAttributesToRemove\n * @returns {string}\n */\nfunction removeSSRCAttributes(sdp, ssrcAttributesToRemove) {\n  return sdp.split('\\r\\n').filter(function (line) {\n    return !ssrcAttributesToRemove.find(function (srcAttribute) {\n      return new RegExp('a=ssrc:.*' + srcAttribute + ':', 'g').test(line);\n    });\n  }).join('\\r\\n');\n}\n\nexports.createCodecMapForMediaSection = createCodecMapForMediaSection;\nexports.createPtToCodecName = createPtToCodecName;\nexports.getMediaSections = getMediaSections;\nexports.revertSimulcastForNonVP8MediaSections = revertSimulcastForNonVP8MediaSections;\nexports.setBitrateParameters = setBitrateParameters;\nexports.setCodecPreferences = setCodecPreferences;\nexports.setSimulcast = setSimulcast;\nexports.unifiedPlanFilterLocalCodecs = unifiedPlanFilterLocalCodecs;\nexports.unifiedPlanAddOrRewriteNewTrackIds = unifiedPlanAddOrRewriteNewTrackIds;\nexports.unifiedPlanAddOrRewriteTrackIds = unifiedPlanAddOrRewriteTrackIds;\nexports.removeSSRCAttributes = removeSSRCAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/index.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/issue8329.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/issue8329.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar RTCSessionDescription = __webpack_require__(/*! @twilio/webrtc */ \"./node_modules/@twilio/webrtc/lib/index.js\").RTCSessionDescription;\n\nvar createPtToCodecName = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/util/sdp/index.js\").createPtToCodecName;\nvar getMediaSections = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/util/sdp/index.js\").getMediaSections;\n\n/**\n * An RTX payload type\n * @typedef {PT} RtxPT\n */\n\n/**\n * A non-RTX payload type\n * @typedef {PT} NonRtxPT\n */\n\n/**\n * A Set with at least one element\n * @typedef {Set} NonEmptySet\n */\n\n/**\n * Apply the workaround for Issue 8329 to an RTCSessionDescriptionInit.\n * @param {RTCSessionDescriptionInit} description\n * @returns {RTCSessionDescription} newDescription\n */\nfunction workaround(description) {\n  var descriptionInit = { type: description.type };\n  if (description.type !== 'rollback') {\n    descriptionInit.sdp = sdpWorkaround(description.sdp);\n  }\n  return new RTCSessionDescription(descriptionInit);\n}\n\n/**\n * @param {string} sdp\n * @returns {string} newSdp\n */\nfunction sdpWorkaround(sdp) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(mediaSectionWorkaround)).join('\\r\\n');\n}\n\n/**\n * @param {string} mediaSection\n * @returns {string} newMediaSection\n */\nfunction mediaSectionWorkaround(mediaSection) {\n  var ptToCodecName = createPtToCodecName(mediaSection);\n  mediaSection = deleteDuplicateRtxPts(mediaSection, ptToCodecName);\n  var codecNameToPts = createCodecNameToPts(ptToCodecName);\n  var rtxPts = codecNameToPts.get('rtx') || new Set();\n\n  var invalidRtxPts = new Set();\n  var rtxPtToAssociatedPt = createRtxPtToAssociatedPt(mediaSection, ptToCodecName, rtxPts, invalidRtxPts);\n  var associatedPtToRtxPt = createAssociatedPtToRtxPt(rtxPtToAssociatedPt, invalidRtxPts);\n\n  var unassociatedRtxPts = Array.from(invalidRtxPts);\n\n  // NOTE(mroberts): We normalize to lowercase.\n  var knownCodecNames = ['h264', 'vp8', 'vp9'];\n  var unassociatedPts = knownCodecNames.reduce(function (unassociatedPts, codecName) {\n    var pts = codecNameToPts.get(codecName) || new Set();\n    return Array.from(pts).reduce(function (unassociatedPts, pt) {\n      return associatedPtToRtxPt.has(pt) ? unassociatedPts : unassociatedPts.add(pt);\n    }, unassociatedPts);\n  }, new Set());\n\n  unassociatedPts.forEach(function (pt) {\n    if (unassociatedRtxPts.length) {\n      var rtxPt = unassociatedRtxPts.shift();\n      mediaSection = deleteFmtpAttributesForRtxPt(mediaSection, rtxPt);\n      mediaSection = addFmtpAttributeForRtxPt(mediaSection, rtxPt, pt);\n    }\n  });\n\n  unassociatedRtxPts.forEach(function (rtxPt) {\n    mediaSection = deleteFmtpAttributesForRtxPt(mediaSection, rtxPt);\n    mediaSection = deleteRtpmapAttributesForRtxPt(mediaSection, rtxPt);\n  });\n\n  return mediaSection;\n}\n\n/**\n * @param {string} mediaSection\n * @param {Map<PT, Codec>} ptToCodecName\n * @returns {string} newMediaSection\n */\nfunction deleteDuplicateRtxPts(mediaSection, ptToCodecName) {\n  // NOTE(syerrapragada): In some cases Chrome produces an offer/answer\n  // with duplicate \"rtx\" payload mapping in media section. When applied,\n  // Chrome rejects the SDP. We workaround this by deleting duplicate\n  // \"rtx\" mappings found in SDP.\n  return Array.from(ptToCodecName.keys()).reduce(function (section, pt) {\n    var rtpmapRegex = new RegExp('^a=rtpmap:' + pt + ' rtx.+$', 'gm');\n    return (section.match(rtpmapRegex) || []).slice(ptToCodecName.get(pt) === 'rtx' ? 1 : 0).reduce(function (section, rtpmap) {\n      var rtpmapRegex = new RegExp('\\r\\n' + rtpmap);\n      var fmtpmapRegex = new RegExp('\\r\\na=fmtp:' + pt + ' apt=[0-9]+');\n      return section.replace(rtpmapRegex, '').replace(fmtpmapRegex, '');\n    }, section);\n  }, mediaSection);\n}\n\n/**\n * @param {Map<PT, Codec>} ptToCodecName\n * @returns {Map<string, NonEmptySet<PT>>} codecNameToPts\n */\nfunction createCodecNameToPts(ptToCodecName) {\n  var codecNameToPts = new Map();\n  ptToCodecName.forEach(function (codecName, pt) {\n    var pts = codecNameToPts.get(codecName) || new Set();\n    return codecNameToPts.set(codecName, pts.add(pt));\n  });\n  return codecNameToPts;\n}\n\n/**\n * @param {string} mediaSection\n * @param {Map<PT, Codec>} ptToCodecName\n * @param {Set<RtxPT>} rtxPts\n * @param {Set<RtxPT>} invalidRtxPts\n * @returns {Map<RtxPT, NonRtxPT>} rtxPtToAssociatedPt\n */\nfunction createRtxPtToAssociatedPt(mediaSection, ptToCodecName, rtxPts, invalidRtxPts) {\n  return Array.from(rtxPts).reduce(function (rtxPtToAssociatedPt, rtxPt) {\n    var fmtpPattern = new RegExp('a=fmtp:' + rtxPt + ' apt=(\\\\d+)');\n    var matches = mediaSection.match(fmtpPattern);\n    if (!matches) {\n      invalidRtxPts.add(rtxPt);\n      return rtxPtToAssociatedPt;\n    }\n\n    var pt = Number.parseInt(matches[1]);\n    if (!ptToCodecName.has(pt)) {\n      // This is Issue 8329.\n      invalidRtxPts.add(rtxPt);\n      return rtxPtToAssociatedPt;\n    }\n\n    var codecName = ptToCodecName.get(pt);\n    if (codecName === 'rtx') {\n      // Strange\n      invalidRtxPts.add(rtxPt);\n      return rtxPtToAssociatedPt;\n    }\n\n    return rtxPtToAssociatedPt.set(rtxPt, pt);\n  }, new Map());\n}\n\n/**\n * @param {string} mediaSection\n * @param {Map<RtxPT, NonRtxPT>} rtxPtToAssociatedPt\n * @param {Set<RtxPT>} invalidRtxPts\n * @returns {Map<NonRtxPT, RtxPT>} associatedPtToRtxPt\n */\nfunction createAssociatedPtToRtxPt(rtxPtToAssociatedPt, invalidRtxPts) {\n  // First, we construct a Map<NonRtxPT, NonEmptySet<RtxPT>>.\n  var associatedPtToRtxPts = Array.from(rtxPtToAssociatedPt).reduce(function (associatedPtToRtxPts, pair) {\n    var rtxPt = pair[0];\n    var pt = pair[1];\n    var rtxPts = associatedPtToRtxPts.get(pt) || new Set();\n    return associatedPtToRtxPts.set(pt, rtxPts.add(rtxPt));\n  }, new Map());\n\n  // Then, we filter down to a Map<NonRtxPT, RtxPt>. Any RtxPTs that map to the\n  // same NonRtxPT are removed and added to invalidRtxPts.\n  return Array.from(associatedPtToRtxPts).reduce(function (associatedPtToRtxPt, pair) {\n    var pt = pair[0];\n    var rtxPts = Array.from(pair[1]);\n    if (rtxPts.length > 1) {\n      rtxPts.forEach(function (rtxPt) {\n        invalidRtxPts.add(rtxPt);\n      });\n      return associatedPtToRtxPt;\n    }\n    return associatedPtToRtxPt.set(pt, rtxPts[0]);\n  }, new Map());\n}\n\n/**\n * @param {string} mediaSection\n * @param {RtxPT} rtxPt\n * @returns {string} newMediaSection\n */\nfunction deleteFmtpAttributesForRtxPt(mediaSection, rtxPt) {\n  var pattern = new RegExp('a=fmtp:' + rtxPt + '.*\\r\\n', 'gm');\n  return mediaSection.replace(pattern, '');\n}\n\n/**\n * @param {string} mediaSection\n * @param {RtxPT} rtxPt\n * @returns {string} newMediaSection\n */\nfunction deleteRtpmapAttributesForRtxPt(mediaSection, rtxPt) {\n  var pattern = new RegExp('a=rtpmap:' + rtxPt + '.*\\r\\n', 'gm');\n  return mediaSection.replace(pattern, '');\n}\n\n/**\n * @param {string} mediaSection\n * @param {RtxPT} rtxPt\n * @param {NonRtxPT} pt\n * @returns {string} newMediaSection\n */\nfunction addFmtpAttributeForRtxPt(mediaSection, rtxPt, pt) {\n  return mediaSection.endsWith('\\r\\n') ? mediaSection + 'a=fmtp:' + rtxPt + ' apt=' + pt + '\\r\\n' : mediaSection + '\\r\\na=fmtp:' + rtxPt + ' apt=' + pt;\n}\n\nmodule.exports = workaround;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC9pc3N1ZTgzMjkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC9pc3N1ZTgzMjkuanM/NDRlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBSVENTZXNzaW9uRGVzY3JpcHRpb24gPSByZXF1aXJlKCdAdHdpbGlvL3dlYnJ0YycpLlJUQ1Nlc3Npb25EZXNjcmlwdGlvbjtcblxudmFyIGNyZWF0ZVB0VG9Db2RlY05hbWUgPSByZXF1aXJlKCcuLycpLmNyZWF0ZVB0VG9Db2RlY05hbWU7XG52YXIgZ2V0TWVkaWFTZWN0aW9ucyA9IHJlcXVpcmUoJy4vJykuZ2V0TWVkaWFTZWN0aW9ucztcblxuLyoqXG4gKiBBbiBSVFggcGF5bG9hZCB0eXBlXG4gKiBAdHlwZWRlZiB7UFR9IFJ0eFBUXG4gKi9cblxuLyoqXG4gKiBBIG5vbi1SVFggcGF5bG9hZCB0eXBlXG4gKiBAdHlwZWRlZiB7UFR9IE5vblJ0eFBUXG4gKi9cblxuLyoqXG4gKiBBIFNldCB3aXRoIGF0IGxlYXN0IG9uZSBlbGVtZW50XG4gKiBAdHlwZWRlZiB7U2V0fSBOb25FbXB0eVNldFxuICovXG5cbi8qKlxuICogQXBwbHkgdGhlIHdvcmthcm91bmQgZm9yIElzc3VlIDgzMjkgdG8gYW4gUlRDU2Vzc2lvbkRlc2NyaXB0aW9uSW5pdC5cbiAqIEBwYXJhbSB7UlRDU2Vzc2lvbkRlc2NyaXB0aW9uSW5pdH0gZGVzY3JpcHRpb25cbiAqIEByZXR1cm5zIHtSVENTZXNzaW9uRGVzY3JpcHRpb259IG5ld0Rlc2NyaXB0aW9uXG4gKi9cbmZ1bmN0aW9uIHdvcmthcm91bmQoZGVzY3JpcHRpb24pIHtcbiAgdmFyIGRlc2NyaXB0aW9uSW5pdCA9IHsgdHlwZTogZGVzY3JpcHRpb24udHlwZSB9O1xuICBpZiAoZGVzY3JpcHRpb24udHlwZSAhPT0gJ3JvbGxiYWNrJykge1xuICAgIGRlc2NyaXB0aW9uSW5pdC5zZHAgPSBzZHBXb3JrYXJvdW5kKGRlc2NyaXB0aW9uLnNkcCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBSVENTZXNzaW9uRGVzY3JpcHRpb24oZGVzY3JpcHRpb25Jbml0KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2RwXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBuZXdTZHBcbiAqL1xuZnVuY3Rpb24gc2RwV29ya2Fyb3VuZChzZHApIHtcbiAgdmFyIG1lZGlhU2VjdGlvbnMgPSBnZXRNZWRpYVNlY3Rpb25zKHNkcCk7XG4gIHZhciBzZXNzaW9uID0gc2RwLnNwbGl0KCdcXHJcXG5tPScpWzBdO1xuICByZXR1cm4gW3Nlc3Npb25dLmNvbmNhdChtZWRpYVNlY3Rpb25zLm1hcChtZWRpYVNlY3Rpb25Xb3JrYXJvdW5kKSkuam9pbignXFxyXFxuJyk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lZGlhU2VjdGlvblxuICogQHJldHVybnMge3N0cmluZ30gbmV3TWVkaWFTZWN0aW9uXG4gKi9cbmZ1bmN0aW9uIG1lZGlhU2VjdGlvbldvcmthcm91bmQobWVkaWFTZWN0aW9uKSB7XG4gIHZhciBwdFRvQ29kZWNOYW1lID0gY3JlYXRlUHRUb0NvZGVjTmFtZShtZWRpYVNlY3Rpb24pO1xuICBtZWRpYVNlY3Rpb24gPSBkZWxldGVEdXBsaWNhdGVSdHhQdHMobWVkaWFTZWN0aW9uLCBwdFRvQ29kZWNOYW1lKTtcbiAgdmFyIGNvZGVjTmFtZVRvUHRzID0gY3JlYXRlQ29kZWNOYW1lVG9QdHMocHRUb0NvZGVjTmFtZSk7XG4gIHZhciBydHhQdHMgPSBjb2RlY05hbWVUb1B0cy5nZXQoJ3J0eCcpIHx8IG5ldyBTZXQoKTtcblxuICB2YXIgaW52YWxpZFJ0eFB0cyA9IG5ldyBTZXQoKTtcbiAgdmFyIHJ0eFB0VG9Bc3NvY2lhdGVkUHQgPSBjcmVhdGVSdHhQdFRvQXNzb2NpYXRlZFB0KG1lZGlhU2VjdGlvbiwgcHRUb0NvZGVjTmFtZSwgcnR4UHRzLCBpbnZhbGlkUnR4UHRzKTtcbiAgdmFyIGFzc29jaWF0ZWRQdFRvUnR4UHQgPSBjcmVhdGVBc3NvY2lhdGVkUHRUb1J0eFB0KHJ0eFB0VG9Bc3NvY2lhdGVkUHQsIGludmFsaWRSdHhQdHMpO1xuXG4gIHZhciB1bmFzc29jaWF0ZWRSdHhQdHMgPSBBcnJheS5mcm9tKGludmFsaWRSdHhQdHMpO1xuXG4gIC8vIE5PVEUobXJvYmVydHMpOiBXZSBub3JtYWxpemUgdG8gbG93ZXJjYXNlLlxuICB2YXIga25vd25Db2RlY05hbWVzID0gWydoMjY0JywgJ3ZwOCcsICd2cDknXTtcbiAgdmFyIHVuYXNzb2NpYXRlZFB0cyA9IGtub3duQ29kZWNOYW1lcy5yZWR1Y2UoZnVuY3Rpb24gKHVuYXNzb2NpYXRlZFB0cywgY29kZWNOYW1lKSB7XG4gICAgdmFyIHB0cyA9IGNvZGVjTmFtZVRvUHRzLmdldChjb2RlY05hbWUpIHx8IG5ldyBTZXQoKTtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShwdHMpLnJlZHVjZShmdW5jdGlvbiAodW5hc3NvY2lhdGVkUHRzLCBwdCkge1xuICAgICAgcmV0dXJuIGFzc29jaWF0ZWRQdFRvUnR4UHQuaGFzKHB0KSA/IHVuYXNzb2NpYXRlZFB0cyA6IHVuYXNzb2NpYXRlZFB0cy5hZGQocHQpO1xuICAgIH0sIHVuYXNzb2NpYXRlZFB0cyk7XG4gIH0sIG5ldyBTZXQoKSk7XG5cbiAgdW5hc3NvY2lhdGVkUHRzLmZvckVhY2goZnVuY3Rpb24gKHB0KSB7XG4gICAgaWYgKHVuYXNzb2NpYXRlZFJ0eFB0cy5sZW5ndGgpIHtcbiAgICAgIHZhciBydHhQdCA9IHVuYXNzb2NpYXRlZFJ0eFB0cy5zaGlmdCgpO1xuICAgICAgbWVkaWFTZWN0aW9uID0gZGVsZXRlRm10cEF0dHJpYnV0ZXNGb3JSdHhQdChtZWRpYVNlY3Rpb24sIHJ0eFB0KTtcbiAgICAgIG1lZGlhU2VjdGlvbiA9IGFkZEZtdHBBdHRyaWJ1dGVGb3JSdHhQdChtZWRpYVNlY3Rpb24sIHJ0eFB0LCBwdCk7XG4gICAgfVxuICB9KTtcblxuICB1bmFzc29jaWF0ZWRSdHhQdHMuZm9yRWFjaChmdW5jdGlvbiAocnR4UHQpIHtcbiAgICBtZWRpYVNlY3Rpb24gPSBkZWxldGVGbXRwQXR0cmlidXRlc0ZvclJ0eFB0KG1lZGlhU2VjdGlvbiwgcnR4UHQpO1xuICAgIG1lZGlhU2VjdGlvbiA9IGRlbGV0ZVJ0cG1hcEF0dHJpYnV0ZXNGb3JSdHhQdChtZWRpYVNlY3Rpb24sIHJ0eFB0KTtcbiAgfSk7XG5cbiAgcmV0dXJuIG1lZGlhU2VjdGlvbjtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVkaWFTZWN0aW9uXG4gKiBAcGFyYW0ge01hcDxQVCwgQ29kZWM+fSBwdFRvQ29kZWNOYW1lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBuZXdNZWRpYVNlY3Rpb25cbiAqL1xuZnVuY3Rpb24gZGVsZXRlRHVwbGljYXRlUnR4UHRzKG1lZGlhU2VjdGlvbiwgcHRUb0NvZGVjTmFtZSkge1xuICAvLyBOT1RFKHN5ZXJyYXByYWdhZGEpOiBJbiBzb21lIGNhc2VzIENocm9tZSBwcm9kdWNlcyBhbiBvZmZlci9hbnN3ZXJcbiAgLy8gd2l0aCBkdXBsaWNhdGUgXCJydHhcIiBwYXlsb2FkIG1hcHBpbmcgaW4gbWVkaWEgc2VjdGlvbi4gV2hlbiBhcHBsaWVkLFxuICAvLyBDaHJvbWUgcmVqZWN0cyB0aGUgU0RQLiBXZSB3b3JrYXJvdW5kIHRoaXMgYnkgZGVsZXRpbmcgZHVwbGljYXRlXG4gIC8vIFwicnR4XCIgbWFwcGluZ3MgZm91bmQgaW4gU0RQLlxuICByZXR1cm4gQXJyYXkuZnJvbShwdFRvQ29kZWNOYW1lLmtleXMoKSkucmVkdWNlKGZ1bmN0aW9uIChzZWN0aW9uLCBwdCkge1xuICAgIHZhciBydHBtYXBSZWdleCA9IG5ldyBSZWdFeHAoJ15hPXJ0cG1hcDonICsgcHQgKyAnIHJ0eC4rJCcsICdnbScpO1xuICAgIHJldHVybiAoc2VjdGlvbi5tYXRjaChydHBtYXBSZWdleCkgfHwgW10pLnNsaWNlKHB0VG9Db2RlY05hbWUuZ2V0KHB0KSA9PT0gJ3J0eCcgPyAxIDogMCkucmVkdWNlKGZ1bmN0aW9uIChzZWN0aW9uLCBydHBtYXApIHtcbiAgICAgIHZhciBydHBtYXBSZWdleCA9IG5ldyBSZWdFeHAoJ1xcclxcbicgKyBydHBtYXApO1xuICAgICAgdmFyIGZtdHBtYXBSZWdleCA9IG5ldyBSZWdFeHAoJ1xcclxcbmE9Zm10cDonICsgcHQgKyAnIGFwdD1bMC05XSsnKTtcbiAgICAgIHJldHVybiBzZWN0aW9uLnJlcGxhY2UocnRwbWFwUmVnZXgsICcnKS5yZXBsYWNlKGZtdHBtYXBSZWdleCwgJycpO1xuICAgIH0sIHNlY3Rpb24pO1xuICB9LCBtZWRpYVNlY3Rpb24pO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7TWFwPFBULCBDb2RlYz59IHB0VG9Db2RlY05hbWVcbiAqIEByZXR1cm5zIHtNYXA8c3RyaW5nLCBOb25FbXB0eVNldDxQVD4+fSBjb2RlY05hbWVUb1B0c1xuICovXG5mdW5jdGlvbiBjcmVhdGVDb2RlY05hbWVUb1B0cyhwdFRvQ29kZWNOYW1lKSB7XG4gIHZhciBjb2RlY05hbWVUb1B0cyA9IG5ldyBNYXAoKTtcbiAgcHRUb0NvZGVjTmFtZS5mb3JFYWNoKGZ1bmN0aW9uIChjb2RlY05hbWUsIHB0KSB7XG4gICAgdmFyIHB0cyA9IGNvZGVjTmFtZVRvUHRzLmdldChjb2RlY05hbWUpIHx8IG5ldyBTZXQoKTtcbiAgICByZXR1cm4gY29kZWNOYW1lVG9QdHMuc2V0KGNvZGVjTmFtZSwgcHRzLmFkZChwdCkpO1xuICB9KTtcbiAgcmV0dXJuIGNvZGVjTmFtZVRvUHRzO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZWRpYVNlY3Rpb25cbiAqIEBwYXJhbSB7TWFwPFBULCBDb2RlYz59IHB0VG9Db2RlY05hbWVcbiAqIEBwYXJhbSB7U2V0PFJ0eFBUPn0gcnR4UHRzXG4gKiBAcGFyYW0ge1NldDxSdHhQVD59IGludmFsaWRSdHhQdHNcbiAqIEByZXR1cm5zIHtNYXA8UnR4UFQsIE5vblJ0eFBUPn0gcnR4UHRUb0Fzc29jaWF0ZWRQdFxuICovXG5mdW5jdGlvbiBjcmVhdGVSdHhQdFRvQXNzb2NpYXRlZFB0KG1lZGlhU2VjdGlvbiwgcHRUb0NvZGVjTmFtZSwgcnR4UHRzLCBpbnZhbGlkUnR4UHRzKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKHJ0eFB0cykucmVkdWNlKGZ1bmN0aW9uIChydHhQdFRvQXNzb2NpYXRlZFB0LCBydHhQdCkge1xuICAgIHZhciBmbXRwUGF0dGVybiA9IG5ldyBSZWdFeHAoJ2E9Zm10cDonICsgcnR4UHQgKyAnIGFwdD0oXFxcXGQrKScpO1xuICAgIHZhciBtYXRjaGVzID0gbWVkaWFTZWN0aW9uLm1hdGNoKGZtdHBQYXR0ZXJuKTtcbiAgICBpZiAoIW1hdGNoZXMpIHtcbiAgICAgIGludmFsaWRSdHhQdHMuYWRkKHJ0eFB0KTtcbiAgICAgIHJldHVybiBydHhQdFRvQXNzb2NpYXRlZFB0O1xuICAgIH1cblxuICAgIHZhciBwdCA9IE51bWJlci5wYXJzZUludChtYXRjaGVzWzFdKTtcbiAgICBpZiAoIXB0VG9Db2RlY05hbWUuaGFzKHB0KSkge1xuICAgICAgLy8gVGhpcyBpcyBJc3N1ZSA4MzI5LlxuICAgICAgaW52YWxpZFJ0eFB0cy5hZGQocnR4UHQpO1xuICAgICAgcmV0dXJuIHJ0eFB0VG9Bc3NvY2lhdGVkUHQ7XG4gICAgfVxuXG4gICAgdmFyIGNvZGVjTmFtZSA9IHB0VG9Db2RlY05hbWUuZ2V0KHB0KTtcbiAgICBpZiAoY29kZWNOYW1lID09PSAncnR4Jykge1xuICAgICAgLy8gU3RyYW5nZVxuICAgICAgaW52YWxpZFJ0eFB0cy5hZGQocnR4UHQpO1xuICAgICAgcmV0dXJuIHJ0eFB0VG9Bc3NvY2lhdGVkUHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJ0eFB0VG9Bc3NvY2lhdGVkUHQuc2V0KHJ0eFB0LCBwdCk7XG4gIH0sIG5ldyBNYXAoKSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lZGlhU2VjdGlvblxuICogQHBhcmFtIHtNYXA8UnR4UFQsIE5vblJ0eFBUPn0gcnR4UHRUb0Fzc29jaWF0ZWRQdFxuICogQHBhcmFtIHtTZXQ8UnR4UFQ+fSBpbnZhbGlkUnR4UHRzXG4gKiBAcmV0dXJucyB7TWFwPE5vblJ0eFBULCBSdHhQVD59IGFzc29jaWF0ZWRQdFRvUnR4UHRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQXNzb2NpYXRlZFB0VG9SdHhQdChydHhQdFRvQXNzb2NpYXRlZFB0LCBpbnZhbGlkUnR4UHRzKSB7XG4gIC8vIEZpcnN0LCB3ZSBjb25zdHJ1Y3QgYSBNYXA8Tm9uUnR4UFQsIE5vbkVtcHR5U2V0PFJ0eFBUPj4uXG4gIHZhciBhc3NvY2lhdGVkUHRUb1J0eFB0cyA9IEFycmF5LmZyb20ocnR4UHRUb0Fzc29jaWF0ZWRQdCkucmVkdWNlKGZ1bmN0aW9uIChhc3NvY2lhdGVkUHRUb1J0eFB0cywgcGFpcikge1xuICAgIHZhciBydHhQdCA9IHBhaXJbMF07XG4gICAgdmFyIHB0ID0gcGFpclsxXTtcbiAgICB2YXIgcnR4UHRzID0gYXNzb2NpYXRlZFB0VG9SdHhQdHMuZ2V0KHB0KSB8fCBuZXcgU2V0KCk7XG4gICAgcmV0dXJuIGFzc29jaWF0ZWRQdFRvUnR4UHRzLnNldChwdCwgcnR4UHRzLmFkZChydHhQdCkpO1xuICB9LCBuZXcgTWFwKCkpO1xuXG4gIC8vIFRoZW4sIHdlIGZpbHRlciBkb3duIHRvIGEgTWFwPE5vblJ0eFBULCBSdHhQdD4uIEFueSBSdHhQVHMgdGhhdCBtYXAgdG8gdGhlXG4gIC8vIHNhbWUgTm9uUnR4UFQgYXJlIHJlbW92ZWQgYW5kIGFkZGVkIHRvIGludmFsaWRSdHhQdHMuXG4gIHJldHVybiBBcnJheS5mcm9tKGFzc29jaWF0ZWRQdFRvUnR4UHRzKS5yZWR1Y2UoZnVuY3Rpb24gKGFzc29jaWF0ZWRQdFRvUnR4UHQsIHBhaXIpIHtcbiAgICB2YXIgcHQgPSBwYWlyWzBdO1xuICAgIHZhciBydHhQdHMgPSBBcnJheS5mcm9tKHBhaXJbMV0pO1xuICAgIGlmIChydHhQdHMubGVuZ3RoID4gMSkge1xuICAgICAgcnR4UHRzLmZvckVhY2goZnVuY3Rpb24gKHJ0eFB0KSB7XG4gICAgICAgIGludmFsaWRSdHhQdHMuYWRkKHJ0eFB0KTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGFzc29jaWF0ZWRQdFRvUnR4UHQ7XG4gICAgfVxuICAgIHJldHVybiBhc3NvY2lhdGVkUHRUb1J0eFB0LnNldChwdCwgcnR4UHRzWzBdKTtcbiAgfSwgbmV3IE1hcCgpKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVkaWFTZWN0aW9uXG4gKiBAcGFyYW0ge1J0eFBUfSBydHhQdFxuICogQHJldHVybnMge3N0cmluZ30gbmV3TWVkaWFTZWN0aW9uXG4gKi9cbmZ1bmN0aW9uIGRlbGV0ZUZtdHBBdHRyaWJ1dGVzRm9yUnR4UHQobWVkaWFTZWN0aW9uLCBydHhQdCkge1xuICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ2E9Zm10cDonICsgcnR4UHQgKyAnLipcXHJcXG4nLCAnZ20nKTtcbiAgcmV0dXJuIG1lZGlhU2VjdGlvbi5yZXBsYWNlKHBhdHRlcm4sICcnKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVkaWFTZWN0aW9uXG4gKiBAcGFyYW0ge1J0eFBUfSBydHhQdFxuICogQHJldHVybnMge3N0cmluZ30gbmV3TWVkaWFTZWN0aW9uXG4gKi9cbmZ1bmN0aW9uIGRlbGV0ZVJ0cG1hcEF0dHJpYnV0ZXNGb3JSdHhQdChtZWRpYVNlY3Rpb24sIHJ0eFB0KSB7XG4gIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgnYT1ydHBtYXA6JyArIHJ0eFB0ICsgJy4qXFxyXFxuJywgJ2dtJyk7XG4gIHJldHVybiBtZWRpYVNlY3Rpb24ucmVwbGFjZShwYXR0ZXJuLCAnJyk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lZGlhU2VjdGlvblxuICogQHBhcmFtIHtSdHhQVH0gcnR4UHRcbiAqIEBwYXJhbSB7Tm9uUnR4UFR9IHB0XG4gKiBAcmV0dXJucyB7c3RyaW5nfSBuZXdNZWRpYVNlY3Rpb25cbiAqL1xuZnVuY3Rpb24gYWRkRm10cEF0dHJpYnV0ZUZvclJ0eFB0KG1lZGlhU2VjdGlvbiwgcnR4UHQsIHB0KSB7XG4gIHJldHVybiBtZWRpYVNlY3Rpb24uZW5kc1dpdGgoJ1xcclxcbicpID8gbWVkaWFTZWN0aW9uICsgJ2E9Zm10cDonICsgcnR4UHQgKyAnIGFwdD0nICsgcHQgKyAnXFxyXFxuJyA6IG1lZGlhU2VjdGlvbiArICdcXHJcXG5hPWZtdHA6JyArIHJ0eFB0ICsgJyBhcHQ9JyArIHB0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdvcmthcm91bmQ7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/issue8329.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/simulcast.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/simulcast.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar difference = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/index.js\").difference;\nvar flatMap = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/index.js\").flatMap;\n\n/**\n * Create a random {@link SSRC}.\n * @returns {SSRC}\n */\nfunction createSSRC() {\n  var ssrcMax = 0xffffffff;\n  return String(Math.floor(Math.random() * ssrcMax));\n}\n\n/**\n * @property {string} cName\n * @property {boolean} isSimulcastEnabled\n * @property {Map<RtxSSRC, PrimarySSRC>} rtxPairs\n * @property {Set<PrimarySSRC>} primarySSRCs\n * @property {string} streamId\n * @property {Track.ID} trackId\n */\n\nvar TrackAttributes = function () {\n  /**\n   * Construct a {@link MediaStreamTrack} attribute store.\n   * @param {Track.ID} trackId - The MediaStreamTrack ID\n   * @param {MediaStreamID} streamId - The MediaStream ID\n   * @param {string} cName - The MediaStream cname\n   */\n  function TrackAttributes(trackId, streamId, cName) {\n    _classCallCheck(this, TrackAttributes);\n\n    Object.defineProperties(this, {\n      cName: {\n        enumerable: true,\n        value: cName\n      },\n      isSimulcastEnabled: {\n        enumerable: true,\n        value: false,\n        writable: true\n      },\n      primarySSRCs: {\n        enumerable: true,\n        value: new Set()\n      },\n      rtxPairs: {\n        enumerable: true,\n        value: new Map()\n      },\n      streamId: {\n        enumerable: true,\n        value: streamId\n      },\n      trackId: {\n        enumerable: true,\n        value: trackId\n      }\n    });\n  }\n\n  /**\n   * Add {@link SimSSRC}s to the {@link TrackAttributes}.\n   * @returns {void}\n   */\n\n\n  _createClass(TrackAttributes, [{\n    key: 'addSimulcastSSRCs',\n    value: function addSimulcastSSRCs() {\n      if (this.isSimulcastEnabled) {\n        return;\n      }\n      var simulcastSSRCs = [createSSRC(), createSSRC()];\n      simulcastSSRCs.forEach(function (ssrc) {\n        this.primarySSRCs.add(ssrc);\n      }, this);\n\n      if (this.rtxPairs.size) {\n        simulcastSSRCs.forEach(function (ssrc) {\n          this.rtxPairs.set(createSSRC(), ssrc);\n        }, this);\n      }\n    }\n\n    /**\n     * Add the given {@link PrimarySSRC} or {@link RtxSSRC} to the {@link TrackAttributes}\n     * and update the \"isSimulcastEnabled\" flag if it is also a {@link SimSSRC}.\n     * @param {SSRC} ssrc - The {@link SSRC} to be added\n     * @param {?PrimarySSRC} primarySSRC - The {@link PrimarySSRC}; if the given\n     *   {@link SSRC} itself is the {@link PrimarySSRC}, then this is set to null\n     * @param {boolean} isSimSSRC - true if the given {@link SSRC} is a\n     *   {@link SimSSRC}; false otherwise\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addSSRC',\n    value: function addSSRC(ssrc, primarySSRC, isSimSSRC) {\n      if (primarySSRC) {\n        this.rtxPairs.set(ssrc, primarySSRC);\n      } else {\n        this.primarySSRCs.add(ssrc);\n      }\n      this.isSimulcastEnabled = this.isSimulcastEnabled || isSimSSRC;\n    }\n\n    /**\n     * Construct the SDP lines for the {@link TrackAttributes}.\n     * @param {boolean} [excludeRtx=false]\n     * @returns {Array<string>} Array of SDP lines\n     */\n\n  }, {\n    key: 'toSdpLines',\n    value: function toSdpLines(excludeRtx) {\n      var _this = this;\n\n      var rtxPairs = excludeRtx ? [] : Array.from(this.rtxPairs.entries()).map(function (rtxPair) {\n        return rtxPair.reverse();\n      });\n\n      var simSSRCs = Array.from(this.primarySSRCs.values());\n      var ssrcs = rtxPairs.length ? flatMap(rtxPairs) : simSSRCs;\n\n      var attrLines = flatMap(ssrcs, function (ssrc) {\n        return ['a=ssrc:' + ssrc + ' cname:' + _this.cName, 'a=ssrc:' + ssrc + ' msid:' + _this.streamId + ' ' + _this.trackId];\n      });\n      var rtxPairLines = rtxPairs.map(function (rtxPair) {\n        return 'a=ssrc-group:FID ' + rtxPair.join(' ');\n      });\n      var simGroupLines = ['a=ssrc-group:SIM ' + simSSRCs.join(' ')];\n\n      return rtxPairLines.concat(attrLines).concat(simGroupLines);\n    }\n  }]);\n\n  return TrackAttributes;\n}();\n\n/**\n * Get the matches for a given RegEx pattern.\n * @param {string} section - SDP media section\n * @param {string} pattern - RegEx pattern\n * @returns {Array<Array<string>>} - Array of pattern matches\n */\n\n\nfunction getMatches(section, pattern) {\n  var matches = section.match(new RegExp(pattern, 'gm')) || [];\n  return matches.map(function (match) {\n    var matches = match.match(new RegExp(pattern)) || [];\n    return matches.slice(1);\n  });\n}\n\n/**\n * Get the {@link SimSSRC}s that belong to a simulcast group.\n * @param {string} section - SDP media section\n * @returns {Set<SimSSRC>} Set of simulcast {@link SSRC}s\n */\nfunction getSimulcastSSRCs(section) {\n  var simGroupPattern = '^a=ssrc-group:SIM ([0-9]+) ([0-9]+) ([0-9]+)$';\n  return new Set(flatMap(getMatches(section, simGroupPattern)));\n}\n\n/**\n * Get the value of the given attribute for an SSRC.\n * @param {string} section - SDP media section\n * @param {SSRC} ssrc - {@link SSRC} whose attribute's value is to be determinded\n * @param {string} attribute - {@link SSRC} attribute name\n * @param {string} - {@link SSRC} attribute value\n */\nfunction getSSRCAttribute(section, ssrc, attribute) {\n  var pattern = 'a=ssrc:' + ssrc + ' ' + attribute + ':(.+)';\n  return section.match(new RegExp(pattern))[1];\n}\n\n/**\n * Create a Map of {@link PrimarySSRC}s and their {@link RtxSSRC}s.\n * @param {string} section - SDP media section\n * @returns {Map<RtxSSRC, PrimarySSRC>} - Map of {@link RtxSSRC}s and their\n *   corresponding {@link PrimarySSRC}s\n */\nfunction getSSRCRtxPairs(section) {\n  var rtxPairPattern = '^a=ssrc-group:FID ([0-9]+) ([0-9]+)$';\n  return new Map(getMatches(section, rtxPairPattern).map(function (pair) {\n    return pair.reverse();\n  }));\n}\n\n/**\n * Create SSRC attribute tuples.\n * @param {string} section\n * @param {'planb' | 'unified'} sdpFormat\n * @returns {Array<[SSRC, MediaStreamID, Track.ID]>}\n */\nfunction createSSRCAttributeTuples(section, sdpFormat) {\n  return {\n    planb: createPlanBSSRCAttributeTuples,\n    unified: createUnifiedPlanSSRCAttributeTuples\n  }[sdpFormat](section);\n}\n\n/**\n * Create \"plan-b\" SSRC attribute tuples.\n * @param {string} section\n * @returns {Array<[SSRC, MediaStreamID, Track.ID]>}\n */\nfunction createPlanBSSRCAttributeTuples(section) {\n  return getMatches(section, '^a=ssrc:([0-9]+) msid:([^\\\\s]+) ([^\\\\s]+)$');\n}\n\n/**\n * Create \"unified-plan\" SSRC attribute tuples.\n * @param {string} section\n * @returns {Array<[SSRC, MediaStreamID, Track.ID]>}\n */\nfunction createUnifiedPlanSSRCAttributeTuples(section) {\n  var _flatMap = flatMap(getMatches(section, '^a=msid:(.+) (.+)$')),\n      _flatMap2 = _slicedToArray(_flatMap, 2),\n      streamId = _flatMap2[0],\n      trackId = _flatMap2[1];\n\n  var ssrcs = flatMap(getMatches(section, '^a=ssrc:(.+) cname:.+$'));\n  return ssrcs.map(function (ssrc) {\n    return [ssrc, streamId, trackId];\n  });\n}\n\n/**\n * Create a Map of MediaStreamTrack IDs and their {@link TrackAttributes}.\n * @param {string} section - SDP media section\n * @param {'planb' | 'unified'} sdpFormat\n * @returns {Map<Track.ID, TrackAttributes>}\n */\nfunction createTrackIdsToAttributes(section, sdpFormat) {\n  var simSSRCs = getSimulcastSSRCs(section);\n  var rtxPairs = getSSRCRtxPairs(section);\n  var ssrcAttrTuples = createSSRCAttributeTuples(section, sdpFormat);\n\n  return ssrcAttrTuples.reduce(function (trackIdsToSSRCs, tuple) {\n    var ssrc = tuple[0];\n    var streamId = tuple[1];\n    var trackId = tuple[2];\n\n    var trackAttributes = trackIdsToSSRCs.get(trackId) || new TrackAttributes(trackId, streamId, getSSRCAttribute(section, ssrc, 'cname'));\n\n    var primarySSRC = rtxPairs.get(ssrc) || null;\n    trackAttributes.addSSRC(ssrc, primarySSRC, simSSRCs.has(ssrc));\n    return trackIdsToSSRCs.set(trackId, trackAttributes);\n  }, new Map());\n}\n\n/**\n * Apply simulcast settings to the given SDP media section.\n * @param {string} section - SDP media section\n * @param {'planb' | 'unified'} sdpFormat\n * @param {Map<Track.ID, TrackAttributes>} trackIdsToAttributes - Existing\n *   map which will be updated for new MediaStreamTrack IDs\n * @returns {string} - The transformed SDP media section\n */\nfunction setSimulcastInMediaSection(section, sdpFormat, trackIdsToAttributes) {\n  var newTrackIdsToAttributes = createTrackIdsToAttributes(section, sdpFormat);\n  var newTrackIds = Array.from(newTrackIdsToAttributes.keys());\n  var trackIds = Array.from(trackIdsToAttributes.keys());\n  var trackIdsToAdd = difference(newTrackIds, trackIds);\n  var trackIdsToIgnore = difference(trackIds, newTrackIds);\n\n  // Update \"trackIdsToAttributes\" with TrackAttributes for new\n  // MediaStreamTrack IDs.\n  var trackAttributesToAdd = flatMap(trackIdsToAdd, function (trackId) {\n    return newTrackIdsToAttributes.get(trackId);\n  });\n  trackAttributesToAdd.forEach(function (trackAttributes) {\n    trackAttributes.addSimulcastSSRCs();\n    trackIdsToAttributes.set(trackAttributes.trackId, trackAttributes);\n  });\n\n  // Get the SDP lines of the relevant MediaStreamTrack IDs from\n  // \"trackIdsToAttributes\".\n  trackIds = Array.from(trackIdsToAttributes.keys());\n  var relevantTrackIds = difference(trackIds, trackIdsToIgnore);\n  var relevantTrackAttributes = flatMap(relevantTrackIds, function (trackId) {\n    return trackIdsToAttributes.get(trackId);\n  });\n  var excludeRtx = !section.match(/a=rtpmap:[0-9]+ rtx/);\n  var relevantSdpLines = flatMap(relevantTrackAttributes, function (trackAttributes) {\n    return trackAttributes.toSdpLines(excludeRtx);\n  });\n\n  // Add the simulcast SSRC SDP lines to the media section. The Set ensures\n  // that the duplicates of the SSRC SDP lines that are in both \"section\" and\n  // \"relevantSdpLines\" are removed.\n  var sectionLines = flatMap(new Set(section.split('\\r\\n').concat(relevantSdpLines)));\n\n  var xGoogleFlagConference = 'a=x-google-flag:conference';\n  if (!section.match(xGoogleFlagConference)) {\n    sectionLines.push(xGoogleFlagConference);\n  }\n\n  return sectionLines.join('\\r\\n');\n}\n\n/**\n * String representing a MediaStream ID.\n * @typedef {string} MediaStreamID\n */\n\n/**\n * String representing the SSRC of a MediaStreamTrack.\n * @typedef {string} SSRC\n */\n\n/**\n * Primary SSRC.\n * @typedef {SSRC} PrimarySSRC\n */\n\n/**\n * Retransmission SSRC.\n * @typedef {SSRC} RtxSSRC\n */\n\n/**\n * Simulcast SSRC.\n * @typedef {SSRC} SimSSRC\n */\n\nmodule.exports = setSimulcastInMediaSection;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/simulcast.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/trackmatcher/identity.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/trackmatcher/identity.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * An {@link IdentityTrackMatcher} matches RTCTrackEvents with their respective\n * MediaStreamTrack IDs.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IdentityTrackMatcher = function () {\n  function IdentityTrackMatcher() {\n    _classCallCheck(this, IdentityTrackMatcher);\n  }\n\n  _createClass(IdentityTrackMatcher, [{\n    key: 'match',\n\n    /**\n    * Match a given MediaStreamTrack with its ID.\n    * @param {RTCTrackEvent} event\n    * @returns {Track.ID}\n    */\n    value: function match(event) {\n      return event.track.id;\n    }\n\n    /**\n    * Update the {@link IdentityTrackMatcher} with a new SDP.\n    * @param {string} sdp\n    */\n\n  }, {\n    key: 'update',\n    value: function update() {}\n  }]);\n\n  return IdentityTrackMatcher;\n}();\n\nmodule.exports = IdentityTrackMatcher;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC90cmFja21hdGNoZXIvaWRlbnRpdHkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC90cmFja21hdGNoZXIvaWRlbnRpdHkuanM/YjczNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQW4ge0BsaW5rIElkZW50aXR5VHJhY2tNYXRjaGVyfSBtYXRjaGVzIFJUQ1RyYWNrRXZlbnRzIHdpdGggdGhlaXIgcmVzcGVjdGl2ZVxuICogTWVkaWFTdHJlYW1UcmFjayBJRHMuXG4gKi9cblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIElkZW50aXR5VHJhY2tNYXRjaGVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBJZGVudGl0eVRyYWNrTWF0Y2hlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSWRlbnRpdHlUcmFja01hdGNoZXIpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKElkZW50aXR5VHJhY2tNYXRjaGVyLCBbe1xuICAgIGtleTogJ21hdGNoJyxcblxuICAgIC8qKlxuICAgICogTWF0Y2ggYSBnaXZlbiBNZWRpYVN0cmVhbVRyYWNrIHdpdGggaXRzIElELlxuICAgICogQHBhcmFtIHtSVENUcmFja0V2ZW50fSBldmVudFxuICAgICogQHJldHVybnMge1RyYWNrLklEfVxuICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1hdGNoKGV2ZW50KSB7XG4gICAgICByZXR1cm4gZXZlbnQudHJhY2suaWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBVcGRhdGUgdGhlIHtAbGluayBJZGVudGl0eVRyYWNrTWF0Y2hlcn0gd2l0aCBhIG5ldyBTRFAuXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gc2RwXG4gICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkge31cbiAgfV0pO1xuXG4gIHJldHVybiBJZGVudGl0eVRyYWNrTWF0Y2hlcjtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBJZGVudGl0eVRyYWNrTWF0Y2hlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/trackmatcher/identity.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/trackmatcher/mid.js":
/*!********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/trackmatcher/mid.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar getMediaSections = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/sdp/index.js\").getMediaSections;\n\n/**\n * An {@link MIDTrackMatcher} matches an RTCTrackEvent with a MediaStreamTrack\n * ID based on the MID of the underlying RTCRtpTransceiver.\n */\n\nvar MIDTrackMatcher = function () {\n  /**\n   * Construct an {@link MIDTrackMatcher}.\n   */\n  function MIDTrackMatcher() {\n    _classCallCheck(this, MIDTrackMatcher);\n\n    Object.defineProperties(this, {\n      _midsToTrackIds: {\n        value: new Map(),\n        writable: true\n      }\n    });\n  }\n\n  /**\n   * Match a given MediaStreamTrack with its ID.\n   * @param {RTCTrackEvent} event\n   * @returns {?Track.ID}\n   */\n\n\n  _createClass(MIDTrackMatcher, [{\n    key: 'match',\n    value: function match(event) {\n      return this._midsToTrackIds.get(event.transceiver.mid) || null;\n    }\n\n    /**\n     * Update the {@link MIDTrackMatcher} with a new SDP.\n     * @param {string} sdp\n     */\n\n  }, {\n    key: 'update',\n    value: function update(sdp) {\n      var sections = getMediaSections(sdp, '(audio|video)');\n      this._midsToTrackIds = sections.reduce(function (midsToTrackIds, section) {\n        var midMatches = section.match(/^a=mid:(.+)$/m) || [];\n        var trackIdMatches = section.match(/^a=msid:.+ (.+)$/m) || [];\n        var mid = midMatches[1];\n        var trackId = trackIdMatches[1];\n        return mid && trackId ? midsToTrackIds.set(mid, trackId) : midsToTrackIds;\n      }, this._midsToTrackIds);\n    }\n  }]);\n\n  return MIDTrackMatcher;\n}();\n\nmodule.exports = MIDTrackMatcher;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC90cmFja21hdGNoZXIvbWlkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC9zZHAvdHJhY2ttYXRjaGVyL21pZC5qcz8wMGM3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIGdldE1lZGlhU2VjdGlvbnMgPSByZXF1aXJlKCcuLi8nKS5nZXRNZWRpYVNlY3Rpb25zO1xuXG4vKipcbiAqIEFuIHtAbGluayBNSURUcmFja01hdGNoZXJ9IG1hdGNoZXMgYW4gUlRDVHJhY2tFdmVudCB3aXRoIGEgTWVkaWFTdHJlYW1UcmFja1xuICogSUQgYmFzZWQgb24gdGhlIE1JRCBvZiB0aGUgdW5kZXJseWluZyBSVENSdHBUcmFuc2NlaXZlci5cbiAqL1xuXG52YXIgTUlEVHJhY2tNYXRjaGVyID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ29uc3RydWN0IGFuIHtAbGluayBNSURUcmFja01hdGNoZXJ9LlxuICAgKi9cbiAgZnVuY3Rpb24gTUlEVHJhY2tNYXRjaGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNSURUcmFja01hdGNoZXIpO1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgX21pZHNUb1RyYWNrSWRzOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgTWFwKCksXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogTWF0Y2ggYSBnaXZlbiBNZWRpYVN0cmVhbVRyYWNrIHdpdGggaXRzIElELlxuICAgKiBAcGFyYW0ge1JUQ1RyYWNrRXZlbnR9IGV2ZW50XG4gICAqIEByZXR1cm5zIHs/VHJhY2suSUR9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKE1JRFRyYWNrTWF0Y2hlciwgW3tcbiAgICBrZXk6ICdtYXRjaCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1hdGNoKGV2ZW50KSB7XG4gICAgICByZXR1cm4gdGhpcy5fbWlkc1RvVHJhY2tJZHMuZ2V0KGV2ZW50LnRyYW5zY2VpdmVyLm1pZCkgfHwgbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHtAbGluayBNSURUcmFja01hdGNoZXJ9IHdpdGggYSBuZXcgU0RQLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZHBcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKHNkcCkge1xuICAgICAgdmFyIHNlY3Rpb25zID0gZ2V0TWVkaWFTZWN0aW9ucyhzZHAsICcoYXVkaW98dmlkZW8pJyk7XG4gICAgICB0aGlzLl9taWRzVG9UcmFja0lkcyA9IHNlY3Rpb25zLnJlZHVjZShmdW5jdGlvbiAobWlkc1RvVHJhY2tJZHMsIHNlY3Rpb24pIHtcbiAgICAgICAgdmFyIG1pZE1hdGNoZXMgPSBzZWN0aW9uLm1hdGNoKC9eYT1taWQ6KC4rKSQvbSkgfHwgW107XG4gICAgICAgIHZhciB0cmFja0lkTWF0Y2hlcyA9IHNlY3Rpb24ubWF0Y2goL15hPW1zaWQ6LisgKC4rKSQvbSkgfHwgW107XG4gICAgICAgIHZhciBtaWQgPSBtaWRNYXRjaGVzWzFdO1xuICAgICAgICB2YXIgdHJhY2tJZCA9IHRyYWNrSWRNYXRjaGVzWzFdO1xuICAgICAgICByZXR1cm4gbWlkICYmIHRyYWNrSWQgPyBtaWRzVG9UcmFja0lkcy5zZXQobWlkLCB0cmFja0lkKSA6IG1pZHNUb1RyYWNrSWRzO1xuICAgICAgfSwgdGhpcy5fbWlkc1RvVHJhY2tJZHMpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNSURUcmFja01hdGNoZXI7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gTUlEVHJhY2tNYXRjaGVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/trackmatcher/mid.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/sdp/trackmatcher/ordered.js":
/*!************************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/sdp/trackmatcher/ordered.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar util = __webpack_require__(/*! ../../ */ \"./node_modules/twilio-video/es5/util/index.js\");\nvar getMediaSections = __webpack_require__(/*! ../ */ \"./node_modules/twilio-video/es5/util/sdp/index.js\").getMediaSections;\n\n// NOTE(mroberts): OrderedTrackMatcher is meant to solve the problem identified in\n//\n//   https://bugs.webkit.org/show_bug.cgi?id=174519\n//\n// Namely that, without MIDs, we cannot \"correctly\" identify MediaStreamTracks\n// in Safari's current WebRTC implementation. So, this module tries to hack\n// around this by making a possibly dangerous assumption: \"track\" events will\n// be raised for MediaStreamTracks of a particular kind in the same order that\n// those kinds' MSIDs appear in the SDP. By calling `update` with an\n// RTCPeerConnection's `remoteDescription` and then invoking `match`, we ought\n// to be able to dequeue MediaStreamTrack IDs in the correct order to be\n// assigned to \"track\" events.\n\n/**\n * @interface MatchedAndUnmatched\n * @property {Set<Track.ID>} matched\n * @property {Set<Track.ID>} unmatched\n */\n\n/**\n * Create a new instance of {@link MatchedAndUnmatched}.\n * @returns {MatchedAndUnmatched}\n */\nfunction create() {\n  return {\n    matched: new Set(),\n    unmatched: new Set()\n  };\n}\n\n/**\n * Attempt to match a MediaStreamTrack ID.\n * @param {MatchedAndUnmatched} mAndM\n * @returns {?Track.ID} id\n */\nfunction _match(mAndM) {\n  var unmatched = Array.from(mAndM.unmatched);\n  if (!unmatched.length) {\n    return null;\n  }\n  var id = unmatched[0];\n  mAndM.matched.add(id);\n  mAndM.unmatched.delete(id);\n  return id;\n}\n\n/**\n * Update a {@link MatchedAndUnmatched}'s MediaStreamTrack IDs.\n * @param {MatchedAndUnmatched} mAndM\n * @param {Set<Track.ID>} ids\n * @returns {void}\n */\nfunction _update(mAndM, ids) {\n  ids = new Set(ids);\n  var removedMatchedIds = util.difference(mAndM.matched, ids);\n  removedMatchedIds.forEach(mAndM.matched.delete, mAndM.matched);\n  mAndM.unmatched = util.difference(ids, mAndM.matched);\n}\n\n/**\n * Parse MediaStreamTrack IDs of a particular kind from an SDP.\n * @param {string} kind\n * @param {string} sdp\n * @returns {Set<Track.ID>} ids\n */\nfunction parse(kind, sdp) {\n  var mediaSections = getMediaSections(sdp, kind);\n  var pattern = 'msid: ?(.+) +(.+) ?$';\n  return new Set(util.flatMap(mediaSections, function (mediaSection) {\n    return mediaSection.match(new RegExp(pattern, 'mg')) || [];\n  }).map(function (msid) {\n    return msid.match(new RegExp(pattern))[2];\n  }));\n}\n\n/**\n * A {@link OrderedTrackMatcher} is used to match RTCTrackEvents.\n * @property {MatchedAndUnmatched} audio\n * @property {MatchedAndUnmatched} video\n */\n\nvar OrderedTrackMatcher = function () {\n  function OrderedTrackMatcher() {\n    _classCallCheck(this, OrderedTrackMatcher);\n\n    if (!(this instanceof OrderedTrackMatcher)) {\n      return new OrderedTrackMatcher();\n    }\n    Object.defineProperties(this, {\n      audio: {\n        enumerable: true,\n        value: create()\n      },\n      video: {\n        enumerable: true,\n        value: create()\n      }\n    });\n  }\n\n  /**\n   * Attempt to match a new MediaStreamTrack ID.\n   * @param {RTCTrackEvent} event\n   * @returns {?Track.ID} id\n   */\n\n\n  _createClass(OrderedTrackMatcher, [{\n    key: 'match',\n    value: function match(event) {\n      return _match(this[event.track.kind]);\n    }\n\n    /**\n     * Update the {@link OrderedTrackMatcher} with a new SDP.\n     * @param {string} sdp\n     * @returns {void}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(sdp) {\n      ['audio', 'video'].forEach(function (kind) {\n        _update(this[kind], parse(kind, sdp));\n      }, this);\n    }\n  }]);\n\n  return OrderedTrackMatcher;\n}();\n\nmodule.exports = OrderedTrackMatcher;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3NkcC90cmFja21hdGNoZXIvb3JkZXJlZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vZXM1L3V0aWwvc2RwL3RyYWNrbWF0Y2hlci9vcmRlcmVkLmpzPzU2NDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgdXRpbCA9IHJlcXVpcmUoJy4uLy4uLycpO1xudmFyIGdldE1lZGlhU2VjdGlvbnMgPSByZXF1aXJlKCcuLi8nKS5nZXRNZWRpYVNlY3Rpb25zO1xuXG4vLyBOT1RFKG1yb2JlcnRzKTogT3JkZXJlZFRyYWNrTWF0Y2hlciBpcyBtZWFudCB0byBzb2x2ZSB0aGUgcHJvYmxlbSBpZGVudGlmaWVkIGluXG4vL1xuLy8gICBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc0NTE5XG4vL1xuLy8gTmFtZWx5IHRoYXQsIHdpdGhvdXQgTUlEcywgd2UgY2Fubm90IFwiY29ycmVjdGx5XCIgaWRlbnRpZnkgTWVkaWFTdHJlYW1UcmFja3Ncbi8vIGluIFNhZmFyaSdzIGN1cnJlbnQgV2ViUlRDIGltcGxlbWVudGF0aW9uLiBTbywgdGhpcyBtb2R1bGUgdHJpZXMgdG8gaGFja1xuLy8gYXJvdW5kIHRoaXMgYnkgbWFraW5nIGEgcG9zc2libHkgZGFuZ2Vyb3VzIGFzc3VtcHRpb246IFwidHJhY2tcIiBldmVudHMgd2lsbFxuLy8gYmUgcmFpc2VkIGZvciBNZWRpYVN0cmVhbVRyYWNrcyBvZiBhIHBhcnRpY3VsYXIga2luZCBpbiB0aGUgc2FtZSBvcmRlciB0aGF0XG4vLyB0aG9zZSBraW5kcycgTVNJRHMgYXBwZWFyIGluIHRoZSBTRFAuIEJ5IGNhbGxpbmcgYHVwZGF0ZWAgd2l0aCBhblxuLy8gUlRDUGVlckNvbm5lY3Rpb24ncyBgcmVtb3RlRGVzY3JpcHRpb25gIGFuZCB0aGVuIGludm9raW5nIGBtYXRjaGAsIHdlIG91Z2h0XG4vLyB0byBiZSBhYmxlIHRvIGRlcXVldWUgTWVkaWFTdHJlYW1UcmFjayBJRHMgaW4gdGhlIGNvcnJlY3Qgb3JkZXIgdG8gYmVcbi8vIGFzc2lnbmVkIHRvIFwidHJhY2tcIiBldmVudHMuXG5cbi8qKlxuICogQGludGVyZmFjZSBNYXRjaGVkQW5kVW5tYXRjaGVkXG4gKiBAcHJvcGVydHkge1NldDxUcmFjay5JRD59IG1hdGNoZWRcbiAqIEBwcm9wZXJ0eSB7U2V0PFRyYWNrLklEPn0gdW5tYXRjaGVkXG4gKi9cblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2Yge0BsaW5rIE1hdGNoZWRBbmRVbm1hdGNoZWR9LlxuICogQHJldHVybnMge01hdGNoZWRBbmRVbm1hdGNoZWR9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgcmV0dXJuIHtcbiAgICBtYXRjaGVkOiBuZXcgU2V0KCksXG4gICAgdW5tYXRjaGVkOiBuZXcgU2V0KClcbiAgfTtcbn1cblxuLyoqXG4gKiBBdHRlbXB0IHRvIG1hdGNoIGEgTWVkaWFTdHJlYW1UcmFjayBJRC5cbiAqIEBwYXJhbSB7TWF0Y2hlZEFuZFVubWF0Y2hlZH0gbUFuZE1cbiAqIEByZXR1cm5zIHs/VHJhY2suSUR9IGlkXG4gKi9cbmZ1bmN0aW9uIF9tYXRjaChtQW5kTSkge1xuICB2YXIgdW5tYXRjaGVkID0gQXJyYXkuZnJvbShtQW5kTS51bm1hdGNoZWQpO1xuICBpZiAoIXVubWF0Y2hlZC5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2YXIgaWQgPSB1bm1hdGNoZWRbMF07XG4gIG1BbmRNLm1hdGNoZWQuYWRkKGlkKTtcbiAgbUFuZE0udW5tYXRjaGVkLmRlbGV0ZShpZCk7XG4gIHJldHVybiBpZDtcbn1cblxuLyoqXG4gKiBVcGRhdGUgYSB7QGxpbmsgTWF0Y2hlZEFuZFVubWF0Y2hlZH0ncyBNZWRpYVN0cmVhbVRyYWNrIElEcy5cbiAqIEBwYXJhbSB7TWF0Y2hlZEFuZFVubWF0Y2hlZH0gbUFuZE1cbiAqIEBwYXJhbSB7U2V0PFRyYWNrLklEPn0gaWRzXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gX3VwZGF0ZShtQW5kTSwgaWRzKSB7XG4gIGlkcyA9IG5ldyBTZXQoaWRzKTtcbiAgdmFyIHJlbW92ZWRNYXRjaGVkSWRzID0gdXRpbC5kaWZmZXJlbmNlKG1BbmRNLm1hdGNoZWQsIGlkcyk7XG4gIHJlbW92ZWRNYXRjaGVkSWRzLmZvckVhY2gobUFuZE0ubWF0Y2hlZC5kZWxldGUsIG1BbmRNLm1hdGNoZWQpO1xuICBtQW5kTS51bm1hdGNoZWQgPSB1dGlsLmRpZmZlcmVuY2UoaWRzLCBtQW5kTS5tYXRjaGVkKTtcbn1cblxuLyoqXG4gKiBQYXJzZSBNZWRpYVN0cmVhbVRyYWNrIElEcyBvZiBhIHBhcnRpY3VsYXIga2luZCBmcm9tIGFuIFNEUC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBraW5kXG4gKiBAcGFyYW0ge3N0cmluZ30gc2RwXG4gKiBAcmV0dXJucyB7U2V0PFRyYWNrLklEPn0gaWRzXG4gKi9cbmZ1bmN0aW9uIHBhcnNlKGtpbmQsIHNkcCkge1xuICB2YXIgbWVkaWFTZWN0aW9ucyA9IGdldE1lZGlhU2VjdGlvbnMoc2RwLCBraW5kKTtcbiAgdmFyIHBhdHRlcm4gPSAnbXNpZDogPyguKykgKyguKykgPyQnO1xuICByZXR1cm4gbmV3IFNldCh1dGlsLmZsYXRNYXAobWVkaWFTZWN0aW9ucywgZnVuY3Rpb24gKG1lZGlhU2VjdGlvbikge1xuICAgIHJldHVybiBtZWRpYVNlY3Rpb24ubWF0Y2gobmV3IFJlZ0V4cChwYXR0ZXJuLCAnbWcnKSkgfHwgW107XG4gIH0pLm1hcChmdW5jdGlvbiAobXNpZCkge1xuICAgIHJldHVybiBtc2lkLm1hdGNoKG5ldyBSZWdFeHAocGF0dGVybikpWzJdO1xuICB9KSk7XG59XG5cbi8qKlxuICogQSB7QGxpbmsgT3JkZXJlZFRyYWNrTWF0Y2hlcn0gaXMgdXNlZCB0byBtYXRjaCBSVENUcmFja0V2ZW50cy5cbiAqIEBwcm9wZXJ0eSB7TWF0Y2hlZEFuZFVubWF0Y2hlZH0gYXVkaW9cbiAqIEBwcm9wZXJ0eSB7TWF0Y2hlZEFuZFVubWF0Y2hlZH0gdmlkZW9cbiAqL1xuXG52YXIgT3JkZXJlZFRyYWNrTWF0Y2hlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gT3JkZXJlZFRyYWNrTWF0Y2hlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgT3JkZXJlZFRyYWNrTWF0Y2hlcik7XG5cbiAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgT3JkZXJlZFRyYWNrTWF0Y2hlcikpIHtcbiAgICAgIHJldHVybiBuZXcgT3JkZXJlZFRyYWNrTWF0Y2hlcigpO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgICBhdWRpbzoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogY3JlYXRlKClcbiAgICAgIH0sXG4gICAgICB2aWRlbzoge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogY3JlYXRlKClcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBdHRlbXB0IHRvIG1hdGNoIGEgbmV3IE1lZGlhU3RyZWFtVHJhY2sgSUQuXG4gICAqIEBwYXJhbSB7UlRDVHJhY2tFdmVudH0gZXZlbnRcbiAgICogQHJldHVybnMgez9UcmFjay5JRH0gaWRcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoT3JkZXJlZFRyYWNrTWF0Y2hlciwgW3tcbiAgICBrZXk6ICdtYXRjaCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1hdGNoKGV2ZW50KSB7XG4gICAgICByZXR1cm4gX21hdGNoKHRoaXNbZXZlbnQudHJhY2sua2luZF0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUge0BsaW5rIE9yZGVyZWRUcmFja01hdGNoZXJ9IHdpdGggYSBuZXcgU0RQLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZHBcbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKHNkcCkge1xuICAgICAgWydhdWRpbycsICd2aWRlbyddLmZvckVhY2goZnVuY3Rpb24gKGtpbmQpIHtcbiAgICAgICAgX3VwZGF0ZSh0aGlzW2tpbmRdLCBwYXJzZShraW5kLCBzZHApKTtcbiAgICAgIH0sIHRoaXMpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBPcmRlcmVkVHJhY2tNYXRjaGVyO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9yZGVyZWRUcmFja01hdGNoZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/sdp/trackmatcher/ordered.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/support.js":
/*!*******************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/support.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals chrome, navigator */\n\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nvar _require = __webpack_require__(/*! @twilio/webrtc/lib/util */ \"./node_modules/@twilio/webrtc/lib/util/index.js\"),\n    guessBrowser = _require.guessBrowser,\n    isWebRTCSupported = _require.support;\n\nvar SUPPORTED_CHROME_BASED_BROWSERS = ['edg', 'edge', 'electron', 'headlesschrome'];\n\n/**\n * Check whether the current browser is non-Chromium Edge.\n * @param {string} browser\n * @returns {boolean}\n */\nfunction isNonChromiumEdge(browser) {\n  return browser === 'chrome' && /Edge/.test(navigator.userAgent) && (typeof chrome === 'undefined' || typeof chrome.runtime === 'undefined');\n}\n\n/**\n * Get the name of the rebranded Chromium browser, if any. Re-branded Chrome's user\n * agent has the following format:\n * <source>/<version> (<os>) <engine>/<version> (<engine_name>) Chrome/<version> [Mobile] Safari/<version>\n * @param browser\n * @returns {?string} Name of the rebranded Chrome browser, or null if the browser\n *   is either not Chrome or vanilla Chrome.\n */\nfunction rebrandedChromeBrowser(browser) {\n  // If the browser is not Chrome based, then it is not a rebranded Chrome browser.\n  if (browser !== 'chrome') {\n    return null;\n  }\n\n  // Latest desktop Brave browser has a \"brave\" property in navigator.\n  if ('brave' in navigator) {\n    return 'brave';\n  }\n\n  // Remove the \"(.+)\" entries from the user agent thereby retaining only the\n  // <name>[/<version>] entries.\n  var nameAndVersions = navigator.userAgent.replace(/\\([^)]+\\)(\\s)?/g, '');\n\n  // Extract the potential browser <name>s by ignoring the first two names, which\n  // point to <source> and <engine>.\n  var matches = nameAndVersions.match(/[^\\s]+/g) || [];\n\n  var _matches$map = matches.map(function (nameAndVersion) {\n    return nameAndVersion.split('/')[0].toLowerCase();\n  }),\n      _matches$map2 = _toArray(_matches$map),\n      browserNames = _matches$map2.slice(2);\n\n  // Extract the <name> that is not expected to be present in the vanilla Chrome\n  // browser, which indicates the rebranded name (ex: \"edg[e]\", \"electron\"). If null,\n  // then this is a vanilla Chrome browser.\n\n\n  return browserNames.find(function (name) {\n    return !['chrome', 'mobile', 'safari'].includes(name);\n  }) || null;\n}\n\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\nfunction isSupported() {\n  var browser = guessBrowser();\n  var rebrandedChrome = rebrandedChromeBrowser(browser);\n  return !!browser && isWebRTCSupported() && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome)) && !isNonChromiumEdge(browser);\n}\n\nmodule.exports = isSupported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3N1cHBvcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3N1cHBvcnQuanM/Yjc4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIGNocm9tZSwgbmF2aWdhdG9yICovXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF90b0FycmF5KGFycikgeyByZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpID8gYXJyIDogQXJyYXkuZnJvbShhcnIpOyB9XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ0B0d2lsaW8vd2VicnRjL2xpYi91dGlsJyksXG4gICAgZ3Vlc3NCcm93c2VyID0gX3JlcXVpcmUuZ3Vlc3NCcm93c2VyLFxuICAgIGlzV2ViUlRDU3VwcG9ydGVkID0gX3JlcXVpcmUuc3VwcG9ydDtcblxudmFyIFNVUFBPUlRFRF9DSFJPTUVfQkFTRURfQlJPV1NFUlMgPSBbJ2VkZycsICdlZGdlJywgJ2VsZWN0cm9uJywgJ2hlYWRsZXNzY2hyb21lJ107XG5cbi8qKlxuICogQ2hlY2sgd2hldGhlciB0aGUgY3VycmVudCBicm93c2VyIGlzIG5vbi1DaHJvbWl1bSBFZGdlLlxuICogQHBhcmFtIHtzdHJpbmd9IGJyb3dzZXJcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc05vbkNocm9taXVtRWRnZShicm93c2VyKSB7XG4gIHJldHVybiBicm93c2VyID09PSAnY2hyb21lJyAmJiAvRWRnZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAodHlwZW9mIGNocm9tZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIGNocm9tZS5ydW50aW1lID09PSAndW5kZWZpbmVkJyk7XG59XG5cbi8qKlxuICogR2V0IHRoZSBuYW1lIG9mIHRoZSByZWJyYW5kZWQgQ2hyb21pdW0gYnJvd3NlciwgaWYgYW55LiBSZS1icmFuZGVkIENocm9tZSdzIHVzZXJcbiAqIGFnZW50IGhhcyB0aGUgZm9sbG93aW5nIGZvcm1hdDpcbiAqIDxzb3VyY2U+Lzx2ZXJzaW9uPiAoPG9zPikgPGVuZ2luZT4vPHZlcnNpb24+ICg8ZW5naW5lX25hbWU+KSBDaHJvbWUvPHZlcnNpb24+IFtNb2JpbGVdIFNhZmFyaS88dmVyc2lvbj5cbiAqIEBwYXJhbSBicm93c2VyXG4gKiBAcmV0dXJucyB7P3N0cmluZ30gTmFtZSBvZiB0aGUgcmVicmFuZGVkIENocm9tZSBicm93c2VyLCBvciBudWxsIGlmIHRoZSBicm93c2VyXG4gKiAgIGlzIGVpdGhlciBub3QgQ2hyb21lIG9yIHZhbmlsbGEgQ2hyb21lLlxuICovXG5mdW5jdGlvbiByZWJyYW5kZWRDaHJvbWVCcm93c2VyKGJyb3dzZXIpIHtcbiAgLy8gSWYgdGhlIGJyb3dzZXIgaXMgbm90IENocm9tZSBiYXNlZCwgdGhlbiBpdCBpcyBub3QgYSByZWJyYW5kZWQgQ2hyb21lIGJyb3dzZXIuXG4gIGlmIChicm93c2VyICE9PSAnY2hyb21lJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLy8gTGF0ZXN0IGRlc2t0b3AgQnJhdmUgYnJvd3NlciBoYXMgYSBcImJyYXZlXCIgcHJvcGVydHkgaW4gbmF2aWdhdG9yLlxuICBpZiAoJ2JyYXZlJyBpbiBuYXZpZ2F0b3IpIHtcbiAgICByZXR1cm4gJ2JyYXZlJztcbiAgfVxuXG4gIC8vIFJlbW92ZSB0aGUgXCIoLispXCIgZW50cmllcyBmcm9tIHRoZSB1c2VyIGFnZW50IHRoZXJlYnkgcmV0YWluaW5nIG9ubHkgdGhlXG4gIC8vIDxuYW1lPlsvPHZlcnNpb24+XSBlbnRyaWVzLlxuICB2YXIgbmFtZUFuZFZlcnNpb25zID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5yZXBsYWNlKC9cXChbXildK1xcKShcXHMpPy9nLCAnJyk7XG5cbiAgLy8gRXh0cmFjdCB0aGUgcG90ZW50aWFsIGJyb3dzZXIgPG5hbWU+cyBieSBpZ25vcmluZyB0aGUgZmlyc3QgdHdvIG5hbWVzLCB3aGljaFxuICAvLyBwb2ludCB0byA8c291cmNlPiBhbmQgPGVuZ2luZT4uXG4gIHZhciBtYXRjaGVzID0gbmFtZUFuZFZlcnNpb25zLm1hdGNoKC9bXlxcc10rL2cpIHx8IFtdO1xuXG4gIHZhciBfbWF0Y2hlcyRtYXAgPSBtYXRjaGVzLm1hcChmdW5jdGlvbiAobmFtZUFuZFZlcnNpb24pIHtcbiAgICByZXR1cm4gbmFtZUFuZFZlcnNpb24uc3BsaXQoJy8nKVswXS50b0xvd2VyQ2FzZSgpO1xuICB9KSxcbiAgICAgIF9tYXRjaGVzJG1hcDIgPSBfdG9BcnJheShfbWF0Y2hlcyRtYXApLFxuICAgICAgYnJvd3Nlck5hbWVzID0gX21hdGNoZXMkbWFwMi5zbGljZSgyKTtcblxuICAvLyBFeHRyYWN0IHRoZSA8bmFtZT4gdGhhdCBpcyBub3QgZXhwZWN0ZWQgdG8gYmUgcHJlc2VudCBpbiB0aGUgdmFuaWxsYSBDaHJvbWVcbiAgLy8gYnJvd3Nlciwgd2hpY2ggaW5kaWNhdGVzIHRoZSByZWJyYW5kZWQgbmFtZSAoZXg6IFwiZWRnW2VdXCIsIFwiZWxlY3Ryb25cIikuIElmIG51bGwsXG4gIC8vIHRoZW4gdGhpcyBpcyBhIHZhbmlsbGEgQ2hyb21lIGJyb3dzZXIuXG5cblxuICByZXR1cm4gYnJvd3Nlck5hbWVzLmZpbmQoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gIVsnY2hyb21lJywgJ21vYmlsZScsICdzYWZhcmknXS5pbmNsdWRlcyhuYW1lKTtcbiAgfSkgfHwgbnVsbDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgY3VycmVudCBicm93c2VyIGlzIG9mZmljaWFsbHkgc3VwcG9ydGVkIGJ5IHR3aWxpby12aWRlby5qcy5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc1N1cHBvcnRlZCgpIHtcbiAgdmFyIGJyb3dzZXIgPSBndWVzc0Jyb3dzZXIoKTtcbiAgdmFyIHJlYnJhbmRlZENocm9tZSA9IHJlYnJhbmRlZENocm9tZUJyb3dzZXIoYnJvd3Nlcik7XG4gIHJldHVybiAhIWJyb3dzZXIgJiYgaXNXZWJSVENTdXBwb3J0ZWQoKSAmJiAoIXJlYnJhbmRlZENocm9tZSB8fCBTVVBQT1JURURfQ0hST01FX0JBU0VEX0JST1dTRVJTLmluY2x1ZGVzKHJlYnJhbmRlZENocm9tZSkpICYmICFpc05vbkNocm9taXVtRWRnZShicm93c2VyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1N1cHBvcnRlZDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/support.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/timeout.js":
/*!*******************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/timeout.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A {@link Timeout} represents a resettable and clearable timeout.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Timeout = function () {\n  /**\n   * Construct a {@link Timeout}.\n   * @param {function} fn - Function to call\n   * @param {number} delay - Delay in milliseconds\n   * @param {boolean} [autoStart=true] - If true, then start the {@link Timeout}.\n   */\n  function Timeout(fn, delay) {\n    var autoStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    _classCallCheck(this, Timeout);\n\n    Object.defineProperties(this, {\n      _delay: {\n        value: delay,\n        writable: true\n      },\n      _fn: {\n        value: fn\n      },\n      _timeout: {\n        value: null,\n        writable: true\n      }\n    });\n\n    if (autoStart) {\n      this.start();\n    }\n  }\n\n  /**\n   * The {@link Timeout} delay in milliseconds.\n   * @property {number}\n   */\n\n\n  _createClass(Timeout, [{\n    key: 'setDelay',\n\n\n    /**\n     * Update the {@link Timeout} delay.\n     * @param {number} delay\n     * @returns {void}\n     */\n    value: function setDelay(delay) {\n      this._delay = delay;\n    }\n\n    /**\n     * Start the {@link Timeout}, if not already started.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this = this;\n\n      if (!this.isSet) {\n        this._timeout = setTimeout(function () {\n          var fn = _this._fn;\n          _this.clear();\n          fn();\n        }, this._delay);\n      }\n    }\n\n    /**\n     * Clear the {@link Timeout}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n\n    /**\n     * Reset the {@link Timeout}.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.clear();\n      this.start();\n    }\n  }, {\n    key: 'delay',\n    get: function get() {\n      return this._delay;\n    }\n\n    /**\n     * Whether the {@link Timeout} is set.\n     * @property {boolean}\n     */\n\n  }, {\n    key: 'isSet',\n    get: function get() {\n      return !!this._timeout;\n    }\n  }]);\n\n  return Timeout;\n}();\n\nmodule.exports = Timeout;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3RpbWVvdXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3RpbWVvdXQuanM/NjM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSB7QGxpbmsgVGltZW91dH0gcmVwcmVzZW50cyBhIHJlc2V0dGFibGUgYW5kIGNsZWFyYWJsZSB0aW1lb3V0LlxuICovXG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBUaW1lb3V0ID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ29uc3RydWN0IGEge0BsaW5rIFRpbWVvdXR9LlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmbiAtIEZ1bmN0aW9uIHRvIGNhbGxcbiAgICogQHBhcmFtIHtudW1iZXJ9IGRlbGF5IC0gRGVsYXkgaW4gbWlsbGlzZWNvbmRzXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2F1dG9TdGFydD10cnVlXSAtIElmIHRydWUsIHRoZW4gc3RhcnQgdGhlIHtAbGluayBUaW1lb3V0fS5cbiAgICovXG4gIGZ1bmN0aW9uIFRpbWVvdXQoZm4sIGRlbGF5KSB7XG4gICAgdmFyIGF1dG9TdGFydCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUaW1lb3V0KTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgIF9kZWxheToge1xuICAgICAgICB2YWx1ZTogZGVsYXksXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgX2ZuOiB7XG4gICAgICAgIHZhbHVlOiBmblxuICAgICAgfSxcbiAgICAgIF90aW1lb3V0OiB7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKGF1dG9TdGFydCkge1xuICAgICAgdGhpcy5zdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUge0BsaW5rIFRpbWVvdXR9IGRlbGF5IGluIG1pbGxpc2Vjb25kcy5cbiAgICogQHByb3BlcnR5IHtudW1iZXJ9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKFRpbWVvdXQsIFt7XG4gICAga2V5OiAnc2V0RGVsYXknLFxuXG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHtAbGluayBUaW1lb3V0fSBkZWxheS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGVsYXlcbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgKi9cbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0RGVsYXkoZGVsYXkpIHtcbiAgICAgIHRoaXMuX2RlbGF5ID0gZGVsYXk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RhcnQgdGhlIHtAbGluayBUaW1lb3V0fSwgaWYgbm90IGFscmVhZHkgc3RhcnRlZC5cbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3RhcnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydCgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5pc1NldCkge1xuICAgICAgICB0aGlzLl90aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIGZuID0gX3RoaXMuX2ZuO1xuICAgICAgICAgIF90aGlzLmNsZWFyKCk7XG4gICAgICAgICAgZm4oKTtcbiAgICAgICAgfSwgdGhpcy5fZGVsYXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsZWFyIHRoZSB7QGxpbmsgVGltZW91dH0uXG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2NsZWFyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCk7XG4gICAgICB0aGlzLl90aW1lb3V0ID0gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXNldCB0aGUge0BsaW5rIFRpbWVvdXR9LlxuICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZXNldCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgdGhpcy5jbGVhcigpO1xuICAgICAgdGhpcy5zdGFydCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlbGF5JyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9kZWxheTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSB7QGxpbmsgVGltZW91dH0gaXMgc2V0LlxuICAgICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaXNTZXQnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuICEhdGhpcy5fdGltZW91dDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVGltZW91dDtcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBUaW1lb3V0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/timeout.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/twilio-video-errors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/twilio-video-errors.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// NOTE: Do not edit this file. This code is auto-generated. Contact the\n// Twilio SDK Team for more information.\n\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TwilioError = __webpack_require__(/*! ./twilioerror */ \"./node_modules/twilio-video/es5/util/twilioerror.js\");\nvar TwilioErrorByCode = {};\n\n/**\n * Create a {@link TwilioError} for a given code and message.\n * @private\n * @param {number} [code] - Error code\n * @param {string} [message] - Error message\n * @returns {TwilioError}\n */\nexports.createTwilioError = function createTwilioError(code, message) {\n  code = typeof code === 'number' ? code : 0;\n  message = typeof message === 'string' && message ? message : 'Unknown error';\n  return TwilioErrorByCode[code] ? new TwilioErrorByCode[code]() : new TwilioError(code, message);\n};\n\n/**\n * @class AccessTokenInvalidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room is invalid.\n * @extends TwilioError\n * @property {number} code - 20101\n * @property {string} message - 'Invalid Access Token'\n */\n\nvar AccessTokenInvalidError = function (_TwilioError) {\n  _inherits(AccessTokenInvalidError, _TwilioError);\n\n  function AccessTokenInvalidError() {\n    _classCallCheck(this, AccessTokenInvalidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenInvalidError.__proto__ || Object.getPrototypeOf(AccessTokenInvalidError)).call(this, 20101, 'Invalid Access Token'));\n  }\n\n  return AccessTokenInvalidError;\n}(TwilioError);\n\nexports.AccessTokenInvalidError = AccessTokenInvalidError;\nObject.defineProperty(TwilioErrorByCode, 20101, { value: AccessTokenInvalidError });\n\n/**\n * @class AccessTokenHeaderInvalidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room has an invalid header.\n * @extends TwilioError\n * @property {number} code - 20102\n * @property {string} message - 'Invalid Access Token header'\n */\n\nvar AccessTokenHeaderInvalidError = function (_TwilioError2) {\n  _inherits(AccessTokenHeaderInvalidError, _TwilioError2);\n\n  function AccessTokenHeaderInvalidError() {\n    _classCallCheck(this, AccessTokenHeaderInvalidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenHeaderInvalidError.__proto__ || Object.getPrototypeOf(AccessTokenHeaderInvalidError)).call(this, 20102, 'Invalid Access Token header'));\n  }\n\n  return AccessTokenHeaderInvalidError;\n}(TwilioError);\n\nexports.AccessTokenHeaderInvalidError = AccessTokenHeaderInvalidError;\nObject.defineProperty(TwilioErrorByCode, 20102, { value: AccessTokenHeaderInvalidError });\n\n/**\n * @class AccessTokenIssuerInvalidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room contains an invalid issuer or subject.\n * @extends TwilioError\n * @property {number} code - 20103\n * @property {string} message - 'Invalid Access Token issuer/subject'\n */\n\nvar AccessTokenIssuerInvalidError = function (_TwilioError3) {\n  _inherits(AccessTokenIssuerInvalidError, _TwilioError3);\n\n  function AccessTokenIssuerInvalidError() {\n    _classCallCheck(this, AccessTokenIssuerInvalidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenIssuerInvalidError.__proto__ || Object.getPrototypeOf(AccessTokenIssuerInvalidError)).call(this, 20103, 'Invalid Access Token issuer/subject'));\n  }\n\n  return AccessTokenIssuerInvalidError;\n}(TwilioError);\n\nexports.AccessTokenIssuerInvalidError = AccessTokenIssuerInvalidError;\nObject.defineProperty(TwilioErrorByCode, 20103, { value: AccessTokenIssuerInvalidError });\n\n/**\n * @class AccessTokenExpiredError\n * @classdesc Raised whenever the AccessToken used for connecting, or reconnecting to a Room has expired.\n * @extends TwilioError\n * @property {number} code - 20104\n * @property {string} message - 'Access Token expired or expiration date invalid'\n */\n\nvar AccessTokenExpiredError = function (_TwilioError4) {\n  _inherits(AccessTokenExpiredError, _TwilioError4);\n\n  function AccessTokenExpiredError() {\n    _classCallCheck(this, AccessTokenExpiredError);\n\n    return _possibleConstructorReturn(this, (AccessTokenExpiredError.__proto__ || Object.getPrototypeOf(AccessTokenExpiredError)).call(this, 20104, 'Access Token expired or expiration date invalid'));\n  }\n\n  return AccessTokenExpiredError;\n}(TwilioError);\n\nexports.AccessTokenExpiredError = AccessTokenExpiredError;\nObject.defineProperty(TwilioErrorByCode, 20104, { value: AccessTokenExpiredError });\n\n/**\n * @class AccessTokenNotYetValidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room is not yet valid.\n * @extends TwilioError\n * @property {number} code - 20105\n * @property {string} message - 'Access Token not yet valid'\n */\n\nvar AccessTokenNotYetValidError = function (_TwilioError5) {\n  _inherits(AccessTokenNotYetValidError, _TwilioError5);\n\n  function AccessTokenNotYetValidError() {\n    _classCallCheck(this, AccessTokenNotYetValidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenNotYetValidError.__proto__ || Object.getPrototypeOf(AccessTokenNotYetValidError)).call(this, 20105, 'Access Token not yet valid'));\n  }\n\n  return AccessTokenNotYetValidError;\n}(TwilioError);\n\nexports.AccessTokenNotYetValidError = AccessTokenNotYetValidError;\nObject.defineProperty(TwilioErrorByCode, 20105, { value: AccessTokenNotYetValidError });\n\n/**\n * @class AccessTokenGrantsInvalidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room has invalid grants.\n * @extends TwilioError\n * @property {number} code - 20106\n * @property {string} message - 'Invalid Access Token grants'\n */\n\nvar AccessTokenGrantsInvalidError = function (_TwilioError6) {\n  _inherits(AccessTokenGrantsInvalidError, _TwilioError6);\n\n  function AccessTokenGrantsInvalidError() {\n    _classCallCheck(this, AccessTokenGrantsInvalidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenGrantsInvalidError.__proto__ || Object.getPrototypeOf(AccessTokenGrantsInvalidError)).call(this, 20106, 'Invalid Access Token grants'));\n  }\n\n  return AccessTokenGrantsInvalidError;\n}(TwilioError);\n\nexports.AccessTokenGrantsInvalidError = AccessTokenGrantsInvalidError;\nObject.defineProperty(TwilioErrorByCode, 20106, { value: AccessTokenGrantsInvalidError });\n\n/**\n * @class AccessTokenSignatureInvalidError\n * @classdesc Raised whenever the AccessToken used for connecting to a Room has an invalid signature.\n * @extends TwilioError\n * @property {number} code - 20107\n * @property {string} message - 'Invalid Access Token signature'\n */\n\nvar AccessTokenSignatureInvalidError = function (_TwilioError7) {\n  _inherits(AccessTokenSignatureInvalidError, _TwilioError7);\n\n  function AccessTokenSignatureInvalidError() {\n    _classCallCheck(this, AccessTokenSignatureInvalidError);\n\n    return _possibleConstructorReturn(this, (AccessTokenSignatureInvalidError.__proto__ || Object.getPrototypeOf(AccessTokenSignatureInvalidError)).call(this, 20107, 'Invalid Access Token signature'));\n  }\n\n  return AccessTokenSignatureInvalidError;\n}(TwilioError);\n\nexports.AccessTokenSignatureInvalidError = AccessTokenSignatureInvalidError;\nObject.defineProperty(TwilioErrorByCode, 20107, { value: AccessTokenSignatureInvalidError });\n\n/**\n * @class SignalingConnectionError\n * @classdesc Raised whenever a signaling connection error occurs that is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53000\n * @property {string} message - 'Signaling connection error'\n */\n\nvar SignalingConnectionError = function (_TwilioError8) {\n  _inherits(SignalingConnectionError, _TwilioError8);\n\n  function SignalingConnectionError() {\n    _classCallCheck(this, SignalingConnectionError);\n\n    return _possibleConstructorReturn(this, (SignalingConnectionError.__proto__ || Object.getPrototypeOf(SignalingConnectionError)).call(this, 53000, 'Signaling connection error'));\n  }\n\n  return SignalingConnectionError;\n}(TwilioError);\n\nexports.SignalingConnectionError = SignalingConnectionError;\nObject.defineProperty(TwilioErrorByCode, 53000, { value: SignalingConnectionError });\n\n/**\n * @class SignalingConnectionDisconnectedError\n * @classdesc Raised whenever the signaling connection is unexpectedly disconnected.\n * @extends TwilioError\n * @property {number} code - 53001\n * @property {string} message - 'Signaling connection disconnected'\n */\n\nvar SignalingConnectionDisconnectedError = function (_TwilioError9) {\n  _inherits(SignalingConnectionDisconnectedError, _TwilioError9);\n\n  function SignalingConnectionDisconnectedError() {\n    _classCallCheck(this, SignalingConnectionDisconnectedError);\n\n    return _possibleConstructorReturn(this, (SignalingConnectionDisconnectedError.__proto__ || Object.getPrototypeOf(SignalingConnectionDisconnectedError)).call(this, 53001, 'Signaling connection disconnected'));\n  }\n\n  return SignalingConnectionDisconnectedError;\n}(TwilioError);\n\nexports.SignalingConnectionDisconnectedError = SignalingConnectionDisconnectedError;\nObject.defineProperty(TwilioErrorByCode, 53001, { value: SignalingConnectionDisconnectedError });\n\n/**\n * @class SignalingConnectionTimeoutError\n * @classdesc Raised when connection liveliness checks fail, or when the signaling session expires.\n * @extends TwilioError\n * @property {number} code - 53002\n * @property {string} message - 'Signaling connection timed out'\n */\n\nvar SignalingConnectionTimeoutError = function (_TwilioError10) {\n  _inherits(SignalingConnectionTimeoutError, _TwilioError10);\n\n  function SignalingConnectionTimeoutError() {\n    _classCallCheck(this, SignalingConnectionTimeoutError);\n\n    return _possibleConstructorReturn(this, (SignalingConnectionTimeoutError.__proto__ || Object.getPrototypeOf(SignalingConnectionTimeoutError)).call(this, 53002, 'Signaling connection timed out'));\n  }\n\n  return SignalingConnectionTimeoutError;\n}(TwilioError);\n\nexports.SignalingConnectionTimeoutError = SignalingConnectionTimeoutError;\nObject.defineProperty(TwilioErrorByCode, 53002, { value: SignalingConnectionTimeoutError });\n\n/**\n * @class SignalingIncomingMessageInvalidError\n * @classdesc Raised whenever the Client receives a message from the Server that the Client cannot handle.\n * @extends TwilioError\n * @property {number} code - 53003\n * @property {string} message - 'Client received an invalid signaling message'\n */\n\nvar SignalingIncomingMessageInvalidError = function (_TwilioError11) {\n  _inherits(SignalingIncomingMessageInvalidError, _TwilioError11);\n\n  function SignalingIncomingMessageInvalidError() {\n    _classCallCheck(this, SignalingIncomingMessageInvalidError);\n\n    return _possibleConstructorReturn(this, (SignalingIncomingMessageInvalidError.__proto__ || Object.getPrototypeOf(SignalingIncomingMessageInvalidError)).call(this, 53003, 'Client received an invalid signaling message'));\n  }\n\n  return SignalingIncomingMessageInvalidError;\n}(TwilioError);\n\nexports.SignalingIncomingMessageInvalidError = SignalingIncomingMessageInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53003, { value: SignalingIncomingMessageInvalidError });\n\n/**\n * @class SignalingOutgoingMessageInvalidError\n * @classdesc Raised whenever the Client sends a message to the Server that the Server cannot handle.\n * @extends TwilioError\n * @property {number} code - 53004\n * @property {string} message - 'Client sent an invalid signaling message'\n */\n\nvar SignalingOutgoingMessageInvalidError = function (_TwilioError12) {\n  _inherits(SignalingOutgoingMessageInvalidError, _TwilioError12);\n\n  function SignalingOutgoingMessageInvalidError() {\n    _classCallCheck(this, SignalingOutgoingMessageInvalidError);\n\n    return _possibleConstructorReturn(this, (SignalingOutgoingMessageInvalidError.__proto__ || Object.getPrototypeOf(SignalingOutgoingMessageInvalidError)).call(this, 53004, 'Client sent an invalid signaling message'));\n  }\n\n  return SignalingOutgoingMessageInvalidError;\n}(TwilioError);\n\nexports.SignalingOutgoingMessageInvalidError = SignalingOutgoingMessageInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53004, { value: SignalingOutgoingMessageInvalidError });\n\n/**\n * @class SignalingServerBusyError\n * @classdesc Raised when the server is too busy to accept new clients.\n * @extends TwilioError\n * @property {number} code - 53006\n * @property {string} message - 'Video server is busy'\n */\n\nvar SignalingServerBusyError = function (_TwilioError13) {\n  _inherits(SignalingServerBusyError, _TwilioError13);\n\n  function SignalingServerBusyError() {\n    _classCallCheck(this, SignalingServerBusyError);\n\n    return _possibleConstructorReturn(this, (SignalingServerBusyError.__proto__ || Object.getPrototypeOf(SignalingServerBusyError)).call(this, 53006, 'Video server is busy'));\n  }\n\n  return SignalingServerBusyError;\n}(TwilioError);\n\nexports.SignalingServerBusyError = SignalingServerBusyError;\nObject.defineProperty(TwilioErrorByCode, 53006, { value: SignalingServerBusyError });\n\n/**\n * @class RoomNameInvalidError\n * @classdesc Raised whenever a Room name is invalid, and the scenario is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53100\n * @property {string} message - 'Room name is invalid'\n */\n\nvar RoomNameInvalidError = function (_TwilioError14) {\n  _inherits(RoomNameInvalidError, _TwilioError14);\n\n  function RoomNameInvalidError() {\n    _classCallCheck(this, RoomNameInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomNameInvalidError.__proto__ || Object.getPrototypeOf(RoomNameInvalidError)).call(this, 53100, 'Room name is invalid'));\n  }\n\n  return RoomNameInvalidError;\n}(TwilioError);\n\nexports.RoomNameInvalidError = RoomNameInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53100, { value: RoomNameInvalidError });\n\n/**\n * @class RoomNameTooLongError\n * @classdesc Raised whenever a Room name is too long.\n * @extends TwilioError\n * @property {number} code - 53101\n * @property {string} message - 'Room name is too long'\n */\n\nvar RoomNameTooLongError = function (_TwilioError15) {\n  _inherits(RoomNameTooLongError, _TwilioError15);\n\n  function RoomNameTooLongError() {\n    _classCallCheck(this, RoomNameTooLongError);\n\n    return _possibleConstructorReturn(this, (RoomNameTooLongError.__proto__ || Object.getPrototypeOf(RoomNameTooLongError)).call(this, 53101, 'Room name is too long'));\n  }\n\n  return RoomNameTooLongError;\n}(TwilioError);\n\nexports.RoomNameTooLongError = RoomNameTooLongError;\nObject.defineProperty(TwilioErrorByCode, 53101, { value: RoomNameTooLongError });\n\n/**\n * @class RoomNameCharsInvalidError\n * @classdesc Raised whenever a Room name contains invalid characters.\n * @extends TwilioError\n * @property {number} code - 53102\n * @property {string} message - 'Room name contains invalid characters'\n */\n\nvar RoomNameCharsInvalidError = function (_TwilioError16) {\n  _inherits(RoomNameCharsInvalidError, _TwilioError16);\n\n  function RoomNameCharsInvalidError() {\n    _classCallCheck(this, RoomNameCharsInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomNameCharsInvalidError.__proto__ || Object.getPrototypeOf(RoomNameCharsInvalidError)).call(this, 53102, 'Room name contains invalid characters'));\n  }\n\n  return RoomNameCharsInvalidError;\n}(TwilioError);\n\nexports.RoomNameCharsInvalidError = RoomNameCharsInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53102, { value: RoomNameCharsInvalidError });\n\n/**\n * @class RoomCreateFailedError\n * @classdesc Raised whenever the Server is unable to create a Room.\n * @extends TwilioError\n * @property {number} code - 53103\n * @property {string} message - 'Unable to create Room'\n */\n\nvar RoomCreateFailedError = function (_TwilioError17) {\n  _inherits(RoomCreateFailedError, _TwilioError17);\n\n  function RoomCreateFailedError() {\n    _classCallCheck(this, RoomCreateFailedError);\n\n    return _possibleConstructorReturn(this, (RoomCreateFailedError.__proto__ || Object.getPrototypeOf(RoomCreateFailedError)).call(this, 53103, 'Unable to create Room'));\n  }\n\n  return RoomCreateFailedError;\n}(TwilioError);\n\nexports.RoomCreateFailedError = RoomCreateFailedError;\nObject.defineProperty(TwilioErrorByCode, 53103, { value: RoomCreateFailedError });\n\n/**\n * @class RoomConnectFailedError\n * @classdesc Raised whenever a Client is unable to connect to a Room, and the scenario is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53104\n * @property {string} message - 'Unable to connect to Room'\n */\n\nvar RoomConnectFailedError = function (_TwilioError18) {\n  _inherits(RoomConnectFailedError, _TwilioError18);\n\n  function RoomConnectFailedError() {\n    _classCallCheck(this, RoomConnectFailedError);\n\n    return _possibleConstructorReturn(this, (RoomConnectFailedError.__proto__ || Object.getPrototypeOf(RoomConnectFailedError)).call(this, 53104, 'Unable to connect to Room'));\n  }\n\n  return RoomConnectFailedError;\n}(TwilioError);\n\nexports.RoomConnectFailedError = RoomConnectFailedError;\nObject.defineProperty(TwilioErrorByCode, 53104, { value: RoomConnectFailedError });\n\n/**\n * @class RoomMaxParticipantsExceededError\n * @classdesc Raised whenever a Client is unable to connect to a Room because the Room contains too many Participants.\n * @extends TwilioError\n * @property {number} code - 53105\n * @property {string} message - 'Room contains too many Participants'\n */\n\nvar RoomMaxParticipantsExceededError = function (_TwilioError19) {\n  _inherits(RoomMaxParticipantsExceededError, _TwilioError19);\n\n  function RoomMaxParticipantsExceededError() {\n    _classCallCheck(this, RoomMaxParticipantsExceededError);\n\n    return _possibleConstructorReturn(this, (RoomMaxParticipantsExceededError.__proto__ || Object.getPrototypeOf(RoomMaxParticipantsExceededError)).call(this, 53105, 'Room contains too many Participants'));\n  }\n\n  return RoomMaxParticipantsExceededError;\n}(TwilioError);\n\nexports.RoomMaxParticipantsExceededError = RoomMaxParticipantsExceededError;\nObject.defineProperty(TwilioErrorByCode, 53105, { value: RoomMaxParticipantsExceededError });\n\n/**\n * @class RoomNotFoundError\n * @classdesc Raised whenever attempting operation on a non-existent Room.\n * @extends TwilioError\n * @property {number} code - 53106\n * @property {string} message - 'Room not found'\n */\n\nvar RoomNotFoundError = function (_TwilioError20) {\n  _inherits(RoomNotFoundError, _TwilioError20);\n\n  function RoomNotFoundError() {\n    _classCallCheck(this, RoomNotFoundError);\n\n    return _possibleConstructorReturn(this, (RoomNotFoundError.__proto__ || Object.getPrototypeOf(RoomNotFoundError)).call(this, 53106, 'Room not found'));\n  }\n\n  return RoomNotFoundError;\n}(TwilioError);\n\nexports.RoomNotFoundError = RoomNotFoundError;\nObject.defineProperty(TwilioErrorByCode, 53106, { value: RoomNotFoundError });\n\n/**\n * @class RoomMaxParticipantsOutOfRangeError\n * @classdesc Raised in the REST API when MaxParticipants is set out of range.\n * @extends TwilioError\n * @property {number} code - 53107\n * @property {string} message - 'MaxParticipants is out of range'\n */\n\nvar RoomMaxParticipantsOutOfRangeError = function (_TwilioError21) {\n  _inherits(RoomMaxParticipantsOutOfRangeError, _TwilioError21);\n\n  function RoomMaxParticipantsOutOfRangeError() {\n    _classCallCheck(this, RoomMaxParticipantsOutOfRangeError);\n\n    return _possibleConstructorReturn(this, (RoomMaxParticipantsOutOfRangeError.__proto__ || Object.getPrototypeOf(RoomMaxParticipantsOutOfRangeError)).call(this, 53107, 'MaxParticipants is out of range'));\n  }\n\n  return RoomMaxParticipantsOutOfRangeError;\n}(TwilioError);\n\nexports.RoomMaxParticipantsOutOfRangeError = RoomMaxParticipantsOutOfRangeError;\nObject.defineProperty(TwilioErrorByCode, 53107, { value: RoomMaxParticipantsOutOfRangeError });\n\n/**\n * @class RoomTypeInvalidError\n * @classdesc Raised in the REST API when the user attempts to create a Room with an invalid RoomType\n * @extends TwilioError\n * @property {number} code - 53108\n * @property {string} message - 'RoomType is not valid'\n */\n\nvar RoomTypeInvalidError = function (_TwilioError22) {\n  _inherits(RoomTypeInvalidError, _TwilioError22);\n\n  function RoomTypeInvalidError() {\n    _classCallCheck(this, RoomTypeInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomTypeInvalidError.__proto__ || Object.getPrototypeOf(RoomTypeInvalidError)).call(this, 53108, 'RoomType is not valid'));\n  }\n\n  return RoomTypeInvalidError;\n}(TwilioError);\n\nexports.RoomTypeInvalidError = RoomTypeInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53108, { value: RoomTypeInvalidError });\n\n/**\n * @class RoomTimeoutOutOfRangeError\n * @classdesc Raised in the REST API when Timeout is set out of range.\n * @extends TwilioError\n * @property {number} code - 53109\n * @property {string} message - 'Timeout is out of range'\n */\n\nvar RoomTimeoutOutOfRangeError = function (_TwilioError23) {\n  _inherits(RoomTimeoutOutOfRangeError, _TwilioError23);\n\n  function RoomTimeoutOutOfRangeError() {\n    _classCallCheck(this, RoomTimeoutOutOfRangeError);\n\n    return _possibleConstructorReturn(this, (RoomTimeoutOutOfRangeError.__proto__ || Object.getPrototypeOf(RoomTimeoutOutOfRangeError)).call(this, 53109, 'Timeout is out of range'));\n  }\n\n  return RoomTimeoutOutOfRangeError;\n}(TwilioError);\n\nexports.RoomTimeoutOutOfRangeError = RoomTimeoutOutOfRangeError;\nObject.defineProperty(TwilioErrorByCode, 53109, { value: RoomTimeoutOutOfRangeError });\n\n/**\n * @class RoomStatusCallbackMethodInvalidError\n * @classdesc Raised in the REST API when StatusCallbackMethod is set to an invalid value.\n * @extends TwilioError\n * @property {number} code - 53110\n * @property {string} message - 'StatusCallbackMethod is invalid'\n */\n\nvar RoomStatusCallbackMethodInvalidError = function (_TwilioError24) {\n  _inherits(RoomStatusCallbackMethodInvalidError, _TwilioError24);\n\n  function RoomStatusCallbackMethodInvalidError() {\n    _classCallCheck(this, RoomStatusCallbackMethodInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomStatusCallbackMethodInvalidError.__proto__ || Object.getPrototypeOf(RoomStatusCallbackMethodInvalidError)).call(this, 53110, 'StatusCallbackMethod is invalid'));\n  }\n\n  return RoomStatusCallbackMethodInvalidError;\n}(TwilioError);\n\nexports.RoomStatusCallbackMethodInvalidError = RoomStatusCallbackMethodInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53110, { value: RoomStatusCallbackMethodInvalidError });\n\n/**\n * @class RoomStatusCallbackInvalidError\n * @classdesc Raised in the REST API when StatusCallback is not a valid URL or the url is too long.\n * @extends TwilioError\n * @property {number} code - 53111\n * @property {string} message - 'StatusCallback is invalid'\n */\n\nvar RoomStatusCallbackInvalidError = function (_TwilioError25) {\n  _inherits(RoomStatusCallbackInvalidError, _TwilioError25);\n\n  function RoomStatusCallbackInvalidError() {\n    _classCallCheck(this, RoomStatusCallbackInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomStatusCallbackInvalidError.__proto__ || Object.getPrototypeOf(RoomStatusCallbackInvalidError)).call(this, 53111, 'StatusCallback is invalid'));\n  }\n\n  return RoomStatusCallbackInvalidError;\n}(TwilioError);\n\nexports.RoomStatusCallbackInvalidError = RoomStatusCallbackInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53111, { value: RoomStatusCallbackInvalidError });\n\n/**\n * @class RoomStatusInvalidError\n * @classdesc Raised in the REST API when Status is not valid or the Room is not in-progress.\n * @extends TwilioError\n * @property {number} code - 53112\n * @property {string} message - 'Status is invalid'\n */\n\nvar RoomStatusInvalidError = function (_TwilioError26) {\n  _inherits(RoomStatusInvalidError, _TwilioError26);\n\n  function RoomStatusInvalidError() {\n    _classCallCheck(this, RoomStatusInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomStatusInvalidError.__proto__ || Object.getPrototypeOf(RoomStatusInvalidError)).call(this, 53112, 'Status is invalid'));\n  }\n\n  return RoomStatusInvalidError;\n}(TwilioError);\n\nexports.RoomStatusInvalidError = RoomStatusInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53112, { value: RoomStatusInvalidError });\n\n/**\n * @class RoomRoomExistsError\n * @classdesc Raised in the REST API when the Room creation fails because a Room exists with the same name.\n * @extends TwilioError\n * @property {number} code - 53113\n * @property {string} message - 'Room exists'\n */\n\nvar RoomRoomExistsError = function (_TwilioError27) {\n  _inherits(RoomRoomExistsError, _TwilioError27);\n\n  function RoomRoomExistsError() {\n    _classCallCheck(this, RoomRoomExistsError);\n\n    return _possibleConstructorReturn(this, (RoomRoomExistsError.__proto__ || Object.getPrototypeOf(RoomRoomExistsError)).call(this, 53113, 'Room exists'));\n  }\n\n  return RoomRoomExistsError;\n}(TwilioError);\n\nexports.RoomRoomExistsError = RoomRoomExistsError;\nObject.defineProperty(TwilioErrorByCode, 53113, { value: RoomRoomExistsError });\n\n/**\n * @class RoomInvalidParametersError\n * @classdesc Raised in the REST API when one or more Room creation parameter is incompatible with the Room type.\n * @extends TwilioError\n * @property {number} code - 53114\n * @property {string} message - 'Room creation parameter(s) incompatible with the Room type'\n */\n\nvar RoomInvalidParametersError = function (_TwilioError28) {\n  _inherits(RoomInvalidParametersError, _TwilioError28);\n\n  function RoomInvalidParametersError() {\n    _classCallCheck(this, RoomInvalidParametersError);\n\n    return _possibleConstructorReturn(this, (RoomInvalidParametersError.__proto__ || Object.getPrototypeOf(RoomInvalidParametersError)).call(this, 53114, 'Room creation parameter(s) incompatible with the Room type'));\n  }\n\n  return RoomInvalidParametersError;\n}(TwilioError);\n\nexports.RoomInvalidParametersError = RoomInvalidParametersError;\nObject.defineProperty(TwilioErrorByCode, 53114, { value: RoomInvalidParametersError });\n\n/**\n * @class RoomMediaRegionInvalidError\n * @classdesc Raised in the REST API when MediaRegion is set to an invalid value.\n * @extends TwilioError\n * @property {number} code - 53115\n * @property {string} message - 'MediaRegion is invalid'\n */\n\nvar RoomMediaRegionInvalidError = function (_TwilioError29) {\n  _inherits(RoomMediaRegionInvalidError, _TwilioError29);\n\n  function RoomMediaRegionInvalidError() {\n    _classCallCheck(this, RoomMediaRegionInvalidError);\n\n    return _possibleConstructorReturn(this, (RoomMediaRegionInvalidError.__proto__ || Object.getPrototypeOf(RoomMediaRegionInvalidError)).call(this, 53115, 'MediaRegion is invalid'));\n  }\n\n  return RoomMediaRegionInvalidError;\n}(TwilioError);\n\nexports.RoomMediaRegionInvalidError = RoomMediaRegionInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53115, { value: RoomMediaRegionInvalidError });\n\n/**\n * @class RoomMediaRegionUnavailableError\n * @classdesc Raised in the REST API when MediaRegion is set to a valid value but no media servers are available.\n * @extends TwilioError\n * @property {number} code - 53116\n * @property {string} message - 'There are no media servers available in the MediaRegion'\n */\n\nvar RoomMediaRegionUnavailableError = function (_TwilioError30) {\n  _inherits(RoomMediaRegionUnavailableError, _TwilioError30);\n\n  function RoomMediaRegionUnavailableError() {\n    _classCallCheck(this, RoomMediaRegionUnavailableError);\n\n    return _possibleConstructorReturn(this, (RoomMediaRegionUnavailableError.__proto__ || Object.getPrototypeOf(RoomMediaRegionUnavailableError)).call(this, 53116, 'There are no media servers available in the MediaRegion'));\n  }\n\n  return RoomMediaRegionUnavailableError;\n}(TwilioError);\n\nexports.RoomMediaRegionUnavailableError = RoomMediaRegionUnavailableError;\nObject.defineProperty(TwilioErrorByCode, 53116, { value: RoomMediaRegionUnavailableError });\n\n/**\n * @class RoomSubscriptionOperationNotSupportedError\n * @classdesc Raised whenever the subscription operation requested is not supported for the Room type.\n * @extends TwilioError\n * @property {number} code - 53117\n * @property {string} message - 'The subscription operation requested is not supported for the Room type'\n */\n\nvar RoomSubscriptionOperationNotSupportedError = function (_TwilioError31) {\n  _inherits(RoomSubscriptionOperationNotSupportedError, _TwilioError31);\n\n  function RoomSubscriptionOperationNotSupportedError() {\n    _classCallCheck(this, RoomSubscriptionOperationNotSupportedError);\n\n    return _possibleConstructorReturn(this, (RoomSubscriptionOperationNotSupportedError.__proto__ || Object.getPrototypeOf(RoomSubscriptionOperationNotSupportedError)).call(this, 53117, 'The subscription operation requested is not supported for the Room type'));\n  }\n\n  return RoomSubscriptionOperationNotSupportedError;\n}(TwilioError);\n\nexports.RoomSubscriptionOperationNotSupportedError = RoomSubscriptionOperationNotSupportedError;\nObject.defineProperty(TwilioErrorByCode, 53117, { value: RoomSubscriptionOperationNotSupportedError });\n\n/**\n * @class RoomCompletedError\n * @classdesc Raised whenever a Room is completed via the REST API.\n * @extends TwilioError\n * @property {number} code - 53118\n * @property {string} message - 'Room completed'\n */\n\nvar RoomCompletedError = function (_TwilioError32) {\n  _inherits(RoomCompletedError, _TwilioError32);\n\n  function RoomCompletedError() {\n    _classCallCheck(this, RoomCompletedError);\n\n    return _possibleConstructorReturn(this, (RoomCompletedError.__proto__ || Object.getPrototypeOf(RoomCompletedError)).call(this, 53118, 'Room completed'));\n  }\n\n  return RoomCompletedError;\n}(TwilioError);\n\nexports.RoomCompletedError = RoomCompletedError;\nObject.defineProperty(TwilioErrorByCode, 53118, { value: RoomCompletedError });\n\n/**\n * @class ParticipantIdentityInvalidError\n * @classdesc Raised whenever a Participant identity is invalid, and the scenario is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53200\n * @property {string} message - 'Participant identity is invalid'\n */\n\nvar ParticipantIdentityInvalidError = function (_TwilioError33) {\n  _inherits(ParticipantIdentityInvalidError, _TwilioError33);\n\n  function ParticipantIdentityInvalidError() {\n    _classCallCheck(this, ParticipantIdentityInvalidError);\n\n    return _possibleConstructorReturn(this, (ParticipantIdentityInvalidError.__proto__ || Object.getPrototypeOf(ParticipantIdentityInvalidError)).call(this, 53200, 'Participant identity is invalid'));\n  }\n\n  return ParticipantIdentityInvalidError;\n}(TwilioError);\n\nexports.ParticipantIdentityInvalidError = ParticipantIdentityInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53200, { value: ParticipantIdentityInvalidError });\n\n/**\n * @class ParticipantIdentityTooLongError\n * @classdesc Raised whenever a Participant identity is too long.\n * @extends TwilioError\n * @property {number} code - 53201\n * @property {string} message - 'Participant identity is too long'\n */\n\nvar ParticipantIdentityTooLongError = function (_TwilioError34) {\n  _inherits(ParticipantIdentityTooLongError, _TwilioError34);\n\n  function ParticipantIdentityTooLongError() {\n    _classCallCheck(this, ParticipantIdentityTooLongError);\n\n    return _possibleConstructorReturn(this, (ParticipantIdentityTooLongError.__proto__ || Object.getPrototypeOf(ParticipantIdentityTooLongError)).call(this, 53201, 'Participant identity is too long'));\n  }\n\n  return ParticipantIdentityTooLongError;\n}(TwilioError);\n\nexports.ParticipantIdentityTooLongError = ParticipantIdentityTooLongError;\nObject.defineProperty(TwilioErrorByCode, 53201, { value: ParticipantIdentityTooLongError });\n\n/**\n * @class ParticipantIdentityCharsInvalidError\n * @classdesc Raised whenever a Participant identity contains invalid characters.\n * @extends TwilioError\n * @property {number} code - 53202\n * @property {string} message - 'Participant identity contains invalid characters'\n */\n\nvar ParticipantIdentityCharsInvalidError = function (_TwilioError35) {\n  _inherits(ParticipantIdentityCharsInvalidError, _TwilioError35);\n\n  function ParticipantIdentityCharsInvalidError() {\n    _classCallCheck(this, ParticipantIdentityCharsInvalidError);\n\n    return _possibleConstructorReturn(this, (ParticipantIdentityCharsInvalidError.__proto__ || Object.getPrototypeOf(ParticipantIdentityCharsInvalidError)).call(this, 53202, 'Participant identity contains invalid characters'));\n  }\n\n  return ParticipantIdentityCharsInvalidError;\n}(TwilioError);\n\nexports.ParticipantIdentityCharsInvalidError = ParticipantIdentityCharsInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53202, { value: ParticipantIdentityCharsInvalidError });\n\n/**\n * @class ParticipantMaxTracksExceededError\n * @classdesc Raised whenever a Participant has too many Tracks.\n * @extends TwilioError\n * @property {number} code - 53203\n * @property {string} message - 'Participant has too many Tracks'\n */\n\nvar ParticipantMaxTracksExceededError = function (_TwilioError36) {\n  _inherits(ParticipantMaxTracksExceededError, _TwilioError36);\n\n  function ParticipantMaxTracksExceededError() {\n    _classCallCheck(this, ParticipantMaxTracksExceededError);\n\n    return _possibleConstructorReturn(this, (ParticipantMaxTracksExceededError.__proto__ || Object.getPrototypeOf(ParticipantMaxTracksExceededError)).call(this, 53203, 'Participant has too many Tracks'));\n  }\n\n  return ParticipantMaxTracksExceededError;\n}(TwilioError);\n\nexports.ParticipantMaxTracksExceededError = ParticipantMaxTracksExceededError;\nObject.defineProperty(TwilioErrorByCode, 53203, { value: ParticipantMaxTracksExceededError });\n\n/**\n * @class ParticipantNotFoundError\n * @classdesc Raised whenever attempting an operation on a non-existent Participant.\n * @extends TwilioError\n * @property {number} code - 53204\n * @property {string} message - 'Participant not found'\n */\n\nvar ParticipantNotFoundError = function (_TwilioError37) {\n  _inherits(ParticipantNotFoundError, _TwilioError37);\n\n  function ParticipantNotFoundError() {\n    _classCallCheck(this, ParticipantNotFoundError);\n\n    return _possibleConstructorReturn(this, (ParticipantNotFoundError.__proto__ || Object.getPrototypeOf(ParticipantNotFoundError)).call(this, 53204, 'Participant not found'));\n  }\n\n  return ParticipantNotFoundError;\n}(TwilioError);\n\nexports.ParticipantNotFoundError = ParticipantNotFoundError;\nObject.defineProperty(TwilioErrorByCode, 53204, { value: ParticipantNotFoundError });\n\n/**\n * @class ParticipantDuplicateIdentityError\n * @classdesc Raised by the server to the existing Participant when a new Participant joins a Room with the same identity as the existing Participant.\n * @extends TwilioError\n * @property {number} code - 53205\n * @property {string} message - 'Participant disconnected because of duplicate identity'\n */\n\nvar ParticipantDuplicateIdentityError = function (_TwilioError38) {\n  _inherits(ParticipantDuplicateIdentityError, _TwilioError38);\n\n  function ParticipantDuplicateIdentityError() {\n    _classCallCheck(this, ParticipantDuplicateIdentityError);\n\n    return _possibleConstructorReturn(this, (ParticipantDuplicateIdentityError.__proto__ || Object.getPrototypeOf(ParticipantDuplicateIdentityError)).call(this, 53205, 'Participant disconnected because of duplicate identity'));\n  }\n\n  return ParticipantDuplicateIdentityError;\n}(TwilioError);\n\nexports.ParticipantDuplicateIdentityError = ParticipantDuplicateIdentityError;\nObject.defineProperty(TwilioErrorByCode, 53205, { value: ParticipantDuplicateIdentityError });\n\n/**\n * @class TrackInvalidError\n * @classdesc Raised whenever a Track is invalid, and the scenario is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53300\n * @property {string} message - 'Track is invalid'\n */\n\nvar TrackInvalidError = function (_TwilioError39) {\n  _inherits(TrackInvalidError, _TwilioError39);\n\n  function TrackInvalidError() {\n    _classCallCheck(this, TrackInvalidError);\n\n    return _possibleConstructorReturn(this, (TrackInvalidError.__proto__ || Object.getPrototypeOf(TrackInvalidError)).call(this, 53300, 'Track is invalid'));\n  }\n\n  return TrackInvalidError;\n}(TwilioError);\n\nexports.TrackInvalidError = TrackInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53300, { value: TrackInvalidError });\n\n/**\n * @class TrackNameInvalidError\n * @classdesc Raised whenever a Track name is invalid, and the scenario is not covered by a more specific error code.\n * @extends TwilioError\n * @property {number} code - 53301\n * @property {string} message - 'Track name is invalid'\n */\n\nvar TrackNameInvalidError = function (_TwilioError40) {\n  _inherits(TrackNameInvalidError, _TwilioError40);\n\n  function TrackNameInvalidError() {\n    _classCallCheck(this, TrackNameInvalidError);\n\n    return _possibleConstructorReturn(this, (TrackNameInvalidError.__proto__ || Object.getPrototypeOf(TrackNameInvalidError)).call(this, 53301, 'Track name is invalid'));\n  }\n\n  return TrackNameInvalidError;\n}(TwilioError);\n\nexports.TrackNameInvalidError = TrackNameInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53301, { value: TrackNameInvalidError });\n\n/**\n * @class TrackNameTooLongError\n * @classdesc Raised whenever a Track name is too long.\n * @extends TwilioError\n * @property {number} code - 53302\n * @property {string} message - 'Track name is too long'\n */\n\nvar TrackNameTooLongError = function (_TwilioError41) {\n  _inherits(TrackNameTooLongError, _TwilioError41);\n\n  function TrackNameTooLongError() {\n    _classCallCheck(this, TrackNameTooLongError);\n\n    return _possibleConstructorReturn(this, (TrackNameTooLongError.__proto__ || Object.getPrototypeOf(TrackNameTooLongError)).call(this, 53302, 'Track name is too long'));\n  }\n\n  return TrackNameTooLongError;\n}(TwilioError);\n\nexports.TrackNameTooLongError = TrackNameTooLongError;\nObject.defineProperty(TwilioErrorByCode, 53302, { value: TrackNameTooLongError });\n\n/**\n * @class TrackNameCharsInvalidError\n * @classdesc Raised whenever a Track name contains invalid characters.\n * @extends TwilioError\n * @property {number} code - 53303\n * @property {string} message - 'Track name contains invalid characters'\n */\n\nvar TrackNameCharsInvalidError = function (_TwilioError42) {\n  _inherits(TrackNameCharsInvalidError, _TwilioError42);\n\n  function TrackNameCharsInvalidError() {\n    _classCallCheck(this, TrackNameCharsInvalidError);\n\n    return _possibleConstructorReturn(this, (TrackNameCharsInvalidError.__proto__ || Object.getPrototypeOf(TrackNameCharsInvalidError)).call(this, 53303, 'Track name contains invalid characters'));\n  }\n\n  return TrackNameCharsInvalidError;\n}(TwilioError);\n\nexports.TrackNameCharsInvalidError = TrackNameCharsInvalidError;\nObject.defineProperty(TwilioErrorByCode, 53303, { value: TrackNameCharsInvalidError });\n\n/**\n * @class TrackNameIsDuplicatedError\n * @classdesc Raised whenever a Participant is currently publishing a Track with the same name.\n * @extends TwilioError\n * @property {number} code - 53304\n * @property {string} message - 'Track name is duplicated'\n */\n\nvar TrackNameIsDuplicatedError = function (_TwilioError43) {\n  _inherits(TrackNameIsDuplicatedError, _TwilioError43);\n\n  function TrackNameIsDuplicatedError() {\n    _classCallCheck(this, TrackNameIsDuplicatedError);\n\n    return _possibleConstructorReturn(this, (TrackNameIsDuplicatedError.__proto__ || Object.getPrototypeOf(TrackNameIsDuplicatedError)).call(this, 53304, 'Track name is duplicated'));\n  }\n\n  return TrackNameIsDuplicatedError;\n}(TwilioError);\n\nexports.TrackNameIsDuplicatedError = TrackNameIsDuplicatedError;\nObject.defineProperty(TwilioErrorByCode, 53304, { value: TrackNameIsDuplicatedError });\n\n/**\n * @class TrackServerTrackCapacityReachedError\n * @classdesc The server does not have enough resources available to create a new Track.\n * @extends TwilioError\n * @property {number} code - 53305\n * @property {string} message - 'The server has reached capacity and cannot fulfill this request'\n */\n\nvar TrackServerTrackCapacityReachedError = function (_TwilioError44) {\n  _inherits(TrackServerTrackCapacityReachedError, _TwilioError44);\n\n  function TrackServerTrackCapacityReachedError() {\n    _classCallCheck(this, TrackServerTrackCapacityReachedError);\n\n    return _possibleConstructorReturn(this, (TrackServerTrackCapacityReachedError.__proto__ || Object.getPrototypeOf(TrackServerTrackCapacityReachedError)).call(this, 53305, 'The server has reached capacity and cannot fulfill this request'));\n  }\n\n  return TrackServerTrackCapacityReachedError;\n}(TwilioError);\n\nexports.TrackServerTrackCapacityReachedError = TrackServerTrackCapacityReachedError;\nObject.defineProperty(TwilioErrorByCode, 53305, { value: TrackServerTrackCapacityReachedError });\n\n/**\n * @class MediaClientLocalDescFailedError\n * @classdesc Raised whenever a Client is unable to create or apply a local media description.\n * @extends TwilioError\n * @property {number} code - 53400\n * @property {string} message - 'Client is unable to create or apply a local media description'\n */\n\nvar MediaClientLocalDescFailedError = function (_TwilioError45) {\n  _inherits(MediaClientLocalDescFailedError, _TwilioError45);\n\n  function MediaClientLocalDescFailedError() {\n    _classCallCheck(this, MediaClientLocalDescFailedError);\n\n    return _possibleConstructorReturn(this, (MediaClientLocalDescFailedError.__proto__ || Object.getPrototypeOf(MediaClientLocalDescFailedError)).call(this, 53400, 'Client is unable to create or apply a local media description'));\n  }\n\n  return MediaClientLocalDescFailedError;\n}(TwilioError);\n\nexports.MediaClientLocalDescFailedError = MediaClientLocalDescFailedError;\nObject.defineProperty(TwilioErrorByCode, 53400, { value: MediaClientLocalDescFailedError });\n\n/**\n * @class MediaServerLocalDescFailedError\n * @classdesc Raised whenever the Server is unable to create or apply a local media description.\n * @extends TwilioError\n * @property {number} code - 53401\n * @property {string} message - 'Server is unable to create or apply a local media description'\n */\n\nvar MediaServerLocalDescFailedError = function (_TwilioError46) {\n  _inherits(MediaServerLocalDescFailedError, _TwilioError46);\n\n  function MediaServerLocalDescFailedError() {\n    _classCallCheck(this, MediaServerLocalDescFailedError);\n\n    return _possibleConstructorReturn(this, (MediaServerLocalDescFailedError.__proto__ || Object.getPrototypeOf(MediaServerLocalDescFailedError)).call(this, 53401, 'Server is unable to create or apply a local media description'));\n  }\n\n  return MediaServerLocalDescFailedError;\n}(TwilioError);\n\nexports.MediaServerLocalDescFailedError = MediaServerLocalDescFailedError;\nObject.defineProperty(TwilioErrorByCode, 53401, { value: MediaServerLocalDescFailedError });\n\n/**\n * @class MediaClientRemoteDescFailedError\n * @classdesc Raised whenever the Client receives a remote media description but is unable to apply it.\n * @extends TwilioError\n * @property {number} code - 53402\n * @property {string} message - 'Client is unable to apply a remote media description'\n */\n\nvar MediaClientRemoteDescFailedError = function (_TwilioError47) {\n  _inherits(MediaClientRemoteDescFailedError, _TwilioError47);\n\n  function MediaClientRemoteDescFailedError() {\n    _classCallCheck(this, MediaClientRemoteDescFailedError);\n\n    return _possibleConstructorReturn(this, (MediaClientRemoteDescFailedError.__proto__ || Object.getPrototypeOf(MediaClientRemoteDescFailedError)).call(this, 53402, 'Client is unable to apply a remote media description'));\n  }\n\n  return MediaClientRemoteDescFailedError;\n}(TwilioError);\n\nexports.MediaClientRemoteDescFailedError = MediaClientRemoteDescFailedError;\nObject.defineProperty(TwilioErrorByCode, 53402, { value: MediaClientRemoteDescFailedError });\n\n/**\n * @class MediaServerRemoteDescFailedError\n * @classdesc Raised whenever the Server receives a remote media description but is unable to apply it.\n * @extends TwilioError\n * @property {number} code - 53403\n * @property {string} message - 'Server is unable to apply a remote media description'\n */\n\nvar MediaServerRemoteDescFailedError = function (_TwilioError48) {\n  _inherits(MediaServerRemoteDescFailedError, _TwilioError48);\n\n  function MediaServerRemoteDescFailedError() {\n    _classCallCheck(this, MediaServerRemoteDescFailedError);\n\n    return _possibleConstructorReturn(this, (MediaServerRemoteDescFailedError.__proto__ || Object.getPrototypeOf(MediaServerRemoteDescFailedError)).call(this, 53403, 'Server is unable to apply a remote media description'));\n  }\n\n  return MediaServerRemoteDescFailedError;\n}(TwilioError);\n\nexports.MediaServerRemoteDescFailedError = MediaServerRemoteDescFailedError;\nObject.defineProperty(TwilioErrorByCode, 53403, { value: MediaServerRemoteDescFailedError });\n\n/**\n * @class MediaNoSupportedCodecError\n * @classdesc Raised whenever the intersection of codecs supported by the Client and the Server (or, in peer-to-peer, the Client and another Participant) is empty.\n * @extends TwilioError\n * @property {number} code - 53404\n * @property {string} message - 'No supported codec'\n */\n\nvar MediaNoSupportedCodecError = function (_TwilioError49) {\n  _inherits(MediaNoSupportedCodecError, _TwilioError49);\n\n  function MediaNoSupportedCodecError() {\n    _classCallCheck(this, MediaNoSupportedCodecError);\n\n    return _possibleConstructorReturn(this, (MediaNoSupportedCodecError.__proto__ || Object.getPrototypeOf(MediaNoSupportedCodecError)).call(this, 53404, 'No supported codec'));\n  }\n\n  return MediaNoSupportedCodecError;\n}(TwilioError);\n\nexports.MediaNoSupportedCodecError = MediaNoSupportedCodecError;\nObject.defineProperty(TwilioErrorByCode, 53404, { value: MediaNoSupportedCodecError });\n\n/**\n * @class MediaConnectionError\n * @classdesc Raised by the Client or Server whenever a media connection fails or raised by the Client whenever it detects that media has stopped flowing.\n * @extends TwilioError\n * @property {number} code - 53405\n * @property {string} message - 'Media connection failed or Media activity ceased'\n */\n\nvar MediaConnectionError = function (_TwilioError50) {\n  _inherits(MediaConnectionError, _TwilioError50);\n\n  function MediaConnectionError() {\n    _classCallCheck(this, MediaConnectionError);\n\n    return _possibleConstructorReturn(this, (MediaConnectionError.__proto__ || Object.getPrototypeOf(MediaConnectionError)).call(this, 53405, 'Media connection failed or Media activity ceased'));\n  }\n\n  return MediaConnectionError;\n}(TwilioError);\n\nexports.MediaConnectionError = MediaConnectionError;\nObject.defineProperty(TwilioErrorByCode, 53405, { value: MediaConnectionError });\n\n/**\n * @class MediaDTLSTransportFailedError\n * @classdesc There was a problem while negotiating with the remote DTLS peer. Therefore the Participant will not be able to publish or subscribe to Tracks.\n * @extends TwilioError\n * @property {number} code - 53407\n * @property {string} message - 'Media connection failed due to DTLS handshake failure'\n */\n\nvar MediaDTLSTransportFailedError = function (_TwilioError51) {\n  _inherits(MediaDTLSTransportFailedError, _TwilioError51);\n\n  function MediaDTLSTransportFailedError() {\n    _classCallCheck(this, MediaDTLSTransportFailedError);\n\n    return _possibleConstructorReturn(this, (MediaDTLSTransportFailedError.__proto__ || Object.getPrototypeOf(MediaDTLSTransportFailedError)).call(this, 53407, 'Media connection failed due to DTLS handshake failure'));\n  }\n\n  return MediaDTLSTransportFailedError;\n}(TwilioError);\n\nexports.MediaDTLSTransportFailedError = MediaDTLSTransportFailedError;\nObject.defineProperty(TwilioErrorByCode, 53407, { value: MediaDTLSTransportFailedError });\n\n/**\n * @class ConfigurationAcquireFailedError\n * @classdesc Raised whenever the Client is unable to acquire configuration information from the Server.\n * @extends TwilioError\n * @property {number} code - 53500\n * @property {string} message - 'Unable to acquire configuration'\n */\n\nvar ConfigurationAcquireFailedError = function (_TwilioError52) {\n  _inherits(ConfigurationAcquireFailedError, _TwilioError52);\n\n  function ConfigurationAcquireFailedError() {\n    _classCallCheck(this, ConfigurationAcquireFailedError);\n\n    return _possibleConstructorReturn(this, (ConfigurationAcquireFailedError.__proto__ || Object.getPrototypeOf(ConfigurationAcquireFailedError)).call(this, 53500, 'Unable to acquire configuration'));\n  }\n\n  return ConfigurationAcquireFailedError;\n}(TwilioError);\n\nexports.ConfigurationAcquireFailedError = ConfigurationAcquireFailedError;\nObject.defineProperty(TwilioErrorByCode, 53500, { value: ConfigurationAcquireFailedError });\n\n/**\n * @class ConfigurationAcquireTurnFailedError\n * @classdesc Raised whenever the Server is unable to return TURN credentials to the Client\n * @extends TwilioError\n * @property {number} code - 53501\n * @property {string} message - 'Unable to acquire TURN credentials'\n */\n\nvar ConfigurationAcquireTurnFailedError = function (_TwilioError53) {\n  _inherits(ConfigurationAcquireTurnFailedError, _TwilioError53);\n\n  function ConfigurationAcquireTurnFailedError() {\n    _classCallCheck(this, ConfigurationAcquireTurnFailedError);\n\n    return _possibleConstructorReturn(this, (ConfigurationAcquireTurnFailedError.__proto__ || Object.getPrototypeOf(ConfigurationAcquireTurnFailedError)).call(this, 53501, 'Unable to acquire TURN credentials'));\n  }\n\n  return ConfigurationAcquireTurnFailedError;\n}(TwilioError);\n\nexports.ConfigurationAcquireTurnFailedError = ConfigurationAcquireTurnFailedError;\nObject.defineProperty(TwilioErrorByCode, 53501, { value: ConfigurationAcquireTurnFailedError });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/twilio-video-errors.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/twilioerror.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/twilioerror.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * @extends Error\n * @property {number} code - Error code\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TwilioError = function (_Error) {\n  _inherits(TwilioError, _Error);\n\n  /**\n   * Creates a new {@link TwilioError}\n   * @param {number} code - Error code\n   * @param {string} [message] - Error message\n   * @param {string} [fileName] - Name of the script file where error was generated\n   * @param {number} [lineNumber] - Line number of the script file where error was generated\n   */\n  function TwilioError(code) {\n    var _ref;\n\n    _classCallCheck(this, TwilioError);\n\n    var args = [].slice.call(arguments, 1);\n\n    var _this = _possibleConstructorReturn(this, (_ref = TwilioError.__proto__ || Object.getPrototypeOf(TwilioError)).call.apply(_ref, [this].concat(_toConsumableArray(args))));\n\n    var error = Error.apply(_this, args);\n    error.name = 'TwilioError';\n\n    Object.defineProperty(_this, 'code', {\n      value: code,\n      enumerable: true\n    });\n\n    Object.getOwnPropertyNames(error).forEach(function (prop) {\n      Object.defineProperty(this, prop, {\n        value: error[prop],\n        enumerable: true\n      });\n    }, _this);\n    return _this;\n  }\n\n  /**\n   * Returns human readable string describing the error.\n   * @returns {string}\n   */\n\n\n  _createClass(TwilioError, [{\n    key: 'toString',\n    value: function toString() {\n      var message = this.message ? ': ' + this.message : '';\n      return this.name + ' ' + this.code + message;\n    }\n  }]);\n\n  return TwilioError;\n}(Error);\n\nmodule.exports = TwilioError;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3R3aWxpb2Vycm9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC90d2lsaW9lcnJvci5qcz80ODBiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQHByb3BlcnR5IHtudW1iZXJ9IGNvZGUgLSBFcnJvciBjb2RlXG4gKi9cblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFR3aWxpb0Vycm9yID0gZnVuY3Rpb24gKF9FcnJvcikge1xuICBfaW5oZXJpdHMoVHdpbGlvRXJyb3IsIF9FcnJvcik7XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcge0BsaW5rIFR3aWxpb0Vycm9yfVxuICAgKiBAcGFyYW0ge251bWJlcn0gY29kZSAtIEVycm9yIGNvZGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IFttZXNzYWdlXSAtIEVycm9yIG1lc3NhZ2VcbiAgICogQHBhcmFtIHtzdHJpbmd9IFtmaWxlTmFtZV0gLSBOYW1lIG9mIHRoZSBzY3JpcHQgZmlsZSB3aGVyZSBlcnJvciB3YXMgZ2VuZXJhdGVkXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbbGluZU51bWJlcl0gLSBMaW5lIG51bWJlciBvZiB0aGUgc2NyaXB0IGZpbGUgd2hlcmUgZXJyb3Igd2FzIGdlbmVyYXRlZFxuICAgKi9cbiAgZnVuY3Rpb24gVHdpbGlvRXJyb3IoY29kZSkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFR3aWxpb0Vycm9yKTtcblxuICAgIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9yZWYgPSBUd2lsaW9FcnJvci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFR3aWxpb0Vycm9yKSkuY2FsbC5hcHBseShfcmVmLCBbdGhpc10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShhcmdzKSkpKTtcblxuICAgIHZhciBlcnJvciA9IEVycm9yLmFwcGx5KF90aGlzLCBhcmdzKTtcbiAgICBlcnJvci5uYW1lID0gJ1R3aWxpb0Vycm9yJztcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpcywgJ2NvZGUnLCB7XG4gICAgICB2YWx1ZTogY29kZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9KTtcblxuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGVycm9yKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgcHJvcCwge1xuICAgICAgICB2YWx1ZTogZXJyb3JbcHJvcF0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH0sIF90aGlzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBodW1hbiByZWFkYWJsZSBzdHJpbmcgZGVzY3JpYmluZyB0aGUgZXJyb3IuXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKFR3aWxpb0Vycm9yLCBbe1xuICAgIGtleTogJ3RvU3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICB2YXIgbWVzc2FnZSA9IHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJztcbiAgICAgIHJldHVybiB0aGlzLm5hbWUgKyAnICcgKyB0aGlzLmNvZGUgKyBtZXNzYWdlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUd2lsaW9FcnJvcjtcbn0oRXJyb3IpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFR3aWxpb0Vycm9yOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/twilioerror.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/util/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/twilio-video/es5/util/validate.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _require = __webpack_require__(/*! ./ */ \"./node_modules/twilio-video/es5/util/index.js\"),\n    isNonArrayObject = _require.isNonArrayObject;\n\nvar _require2 = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-video/es5/util/constants.js\"),\n    E = _require2.typeErrors,\n    subscriptionMode = _require2.subscriptionMode,\n    trackPriority = _require2.trackPriority,\n    trackSwitchOffMode = _require2.trackSwitchOffMode;\n\n/**\n * Validate the {@link BandwidthProfileOptions} object.\n * @param {BandwidthProfileOptions} bandwidthProfile\n * @returns {?Error} - null if valid, Error if not.\n */\n\n\nfunction validateBandwidthProfile(bandwidthProfile) {\n  var error = validateObject(bandwidthProfile, 'options.bandwidthProfile');\n  if (!bandwidthProfile || error) {\n    return error;\n  }\n  error = validateObject(bandwidthProfile.video, 'options.bandwidthProfile.video', [{ prop: 'dominantSpeakerPriority', values: Object.values(trackPriority) }, { prop: 'maxSubscriptionBitrate', type: 'number' }, { prop: 'maxTracks', type: 'number' }, { prop: 'mode', values: Object.values(subscriptionMode) }, { prop: 'trackSwitchOffMode', values: Object.values(trackSwitchOffMode) }]);\n  return error || (bandwidthProfile.video ? validateRenderDimensions(bandwidthProfile.video.renderDimensions) : null);\n}\n\n/**\n * Throw if the given track is not a {@link LocalAudioTrack}, a\n * {@link LocalVideoTrack} or a MediaStreamTrack.\n * @param {*} track\n * @param {object} options\n */\nfunction validateLocalTrack(track, options) {\n  if (!(track instanceof options.LocalAudioTrack || track instanceof options.LocalDataTrack || track instanceof options.LocalVideoTrack || track instanceof options.MediaStreamTrack)) {\n    /* eslint new-cap:0 */\n    throw E.INVALID_TYPE('track', 'LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n  }\n}\n\n/**\n * Validate an object. An object is valid if it is undefined or a non-null, non-array\n * object whose properties satisfy the specified data-type or value-range requirements.\n * @param {object} object - the object to be validated\n * @param {string} name - the object name to be used to build the error message, if invalid\n * @param {Array<object>} [propChecks] - optional data-type or value-range requirements\n *   for the object's properties\n * @returns {?Error} - null if object is valid, Error if not\n */\nfunction validateObject(object, name) {\n  var propChecks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  // NOTE(mmalavalli): We determine that an undefined object is valid because this\n  // means the parent object does not contain this object as a property, which is\n  // a valid scenario.\n  if (typeof object === 'undefined') {\n    return null;\n  }\n  // NOTE(mmalavalli): We determine that if the object is null, or an Array, or\n  // any other non-object type, then it is invalid.\n  if (object === null || !isNonArrayObject(object)) {\n    return E.INVALID_TYPE(name, 'object');\n  }\n  // NOTE(mmalavalli): We determine that the object is invalid if at least one of\n  // its properties does not satisfy its data-type or value-range requirement.\n  return propChecks.reduce(function (error, _ref) {\n    var prop = _ref.prop,\n        type = _ref.type,\n        values = _ref.values;\n\n    if (error || !(prop in object)) {\n      return error;\n    }\n    var value = object[prop];\n    if (type && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== type) {\n      return E.INVALID_TYPE(name + '.' + prop, type);\n    }\n    if (type === 'number' && isNaN(value)) {\n      return E.INVALID_TYPE(name + '.' + prop, type);\n    }\n    if (Array.isArray(values) && !values.includes(value)) {\n      return E.INVALID_VALUE(name + '.' + prop, values);\n    }\n    return error;\n  }, null);\n}\n\n/**\n * Validate the {@link VideoRenderDimensions} object.\n * @param {VideoRenderDimensions} renderDimensions\n * @returns {?Error} - null if valid, Error if not.\n */\nfunction validateRenderDimensions(renderDimensions) {\n  var name = 'options.bandwidthProfile.video.renderDimensions';\n  var error = validateObject(renderDimensions, name);\n  return renderDimensions ? error || Object.values(trackPriority).reduce(function (error, prop) {\n    return error || validateObject(renderDimensions[prop], name + '.' + prop, [{ prop: 'height', type: 'number' }, { prop: 'width', type: 'number' }]);\n  }, null) : error;\n}\n\nexports.validateBandwidthProfile = validateBandwidthProfile;\nexports.validateLocalTrack = validateLocalTrack;\nexports.validateObject = validateObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS91dGlsL3ZhbGlkYXRlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvdXRpbC92YWxpZGF0ZS5qcz8zN2IzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuLycpLFxuICAgIGlzTm9uQXJyYXlPYmplY3QgPSBfcmVxdWlyZS5pc05vbkFycmF5T2JqZWN0O1xuXG52YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKSxcbiAgICBFID0gX3JlcXVpcmUyLnR5cGVFcnJvcnMsXG4gICAgc3Vic2NyaXB0aW9uTW9kZSA9IF9yZXF1aXJlMi5zdWJzY3JpcHRpb25Nb2RlLFxuICAgIHRyYWNrUHJpb3JpdHkgPSBfcmVxdWlyZTIudHJhY2tQcmlvcml0eSxcbiAgICB0cmFja1N3aXRjaE9mZk1vZGUgPSBfcmVxdWlyZTIudHJhY2tTd2l0Y2hPZmZNb2RlO1xuXG4vKipcbiAqIFZhbGlkYXRlIHRoZSB7QGxpbmsgQmFuZHdpZHRoUHJvZmlsZU9wdGlvbnN9IG9iamVjdC5cbiAqIEBwYXJhbSB7QmFuZHdpZHRoUHJvZmlsZU9wdGlvbnN9IGJhbmR3aWR0aFByb2ZpbGVcbiAqIEByZXR1cm5zIHs/RXJyb3J9IC0gbnVsbCBpZiB2YWxpZCwgRXJyb3IgaWYgbm90LlxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVCYW5kd2lkdGhQcm9maWxlKGJhbmR3aWR0aFByb2ZpbGUpIHtcbiAgdmFyIGVycm9yID0gdmFsaWRhdGVPYmplY3QoYmFuZHdpZHRoUHJvZmlsZSwgJ29wdGlvbnMuYmFuZHdpZHRoUHJvZmlsZScpO1xuICBpZiAoIWJhbmR3aWR0aFByb2ZpbGUgfHwgZXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3I7XG4gIH1cbiAgZXJyb3IgPSB2YWxpZGF0ZU9iamVjdChiYW5kd2lkdGhQcm9maWxlLnZpZGVvLCAnb3B0aW9ucy5iYW5kd2lkdGhQcm9maWxlLnZpZGVvJywgW3sgcHJvcDogJ2RvbWluYW50U3BlYWtlclByaW9yaXR5JywgdmFsdWVzOiBPYmplY3QudmFsdWVzKHRyYWNrUHJpb3JpdHkpIH0sIHsgcHJvcDogJ21heFN1YnNjcmlwdGlvbkJpdHJhdGUnLCB0eXBlOiAnbnVtYmVyJyB9LCB7IHByb3A6ICdtYXhUcmFja3MnLCB0eXBlOiAnbnVtYmVyJyB9LCB7IHByb3A6ICdtb2RlJywgdmFsdWVzOiBPYmplY3QudmFsdWVzKHN1YnNjcmlwdGlvbk1vZGUpIH0sIHsgcHJvcDogJ3RyYWNrU3dpdGNoT2ZmTW9kZScsIHZhbHVlczogT2JqZWN0LnZhbHVlcyh0cmFja1N3aXRjaE9mZk1vZGUpIH1dKTtcbiAgcmV0dXJuIGVycm9yIHx8IChiYW5kd2lkdGhQcm9maWxlLnZpZGVvID8gdmFsaWRhdGVSZW5kZXJEaW1lbnNpb25zKGJhbmR3aWR0aFByb2ZpbGUudmlkZW8ucmVuZGVyRGltZW5zaW9ucykgOiBudWxsKTtcbn1cblxuLyoqXG4gKiBUaHJvdyBpZiB0aGUgZ2l2ZW4gdHJhY2sgaXMgbm90IGEge0BsaW5rIExvY2FsQXVkaW9UcmFja30sIGFcbiAqIHtAbGluayBMb2NhbFZpZGVvVHJhY2t9IG9yIGEgTWVkaWFTdHJlYW1UcmFjay5cbiAqIEBwYXJhbSB7Kn0gdHJhY2tcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlTG9jYWxUcmFjayh0cmFjaywgb3B0aW9ucykge1xuICBpZiAoISh0cmFjayBpbnN0YW5jZW9mIG9wdGlvbnMuTG9jYWxBdWRpb1RyYWNrIHx8IHRyYWNrIGluc3RhbmNlb2Ygb3B0aW9ucy5Mb2NhbERhdGFUcmFjayB8fCB0cmFjayBpbnN0YW5jZW9mIG9wdGlvbnMuTG9jYWxWaWRlb1RyYWNrIHx8IHRyYWNrIGluc3RhbmNlb2Ygb3B0aW9ucy5NZWRpYVN0cmVhbVRyYWNrKSkge1xuICAgIC8qIGVzbGludCBuZXctY2FwOjAgKi9cbiAgICB0aHJvdyBFLklOVkFMSURfVFlQRSgndHJhY2snLCAnTG9jYWxBdWRpb1RyYWNrLCBMb2NhbFZpZGVvVHJhY2ssIExvY2FsRGF0YVRyYWNrLCBvciBNZWRpYVN0cmVhbVRyYWNrJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBhbiBvYmplY3QuIEFuIG9iamVjdCBpcyB2YWxpZCBpZiBpdCBpcyB1bmRlZmluZWQgb3IgYSBub24tbnVsbCwgbm9uLWFycmF5XG4gKiBvYmplY3Qgd2hvc2UgcHJvcGVydGllcyBzYXRpc2Z5IHRoZSBzcGVjaWZpZWQgZGF0YS10eXBlIG9yIHZhbHVlLXJhbmdlIHJlcXVpcmVtZW50cy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmplY3QgLSB0aGUgb2JqZWN0IHRvIGJlIHZhbGlkYXRlZFxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSB0aGUgb2JqZWN0IG5hbWUgdG8gYmUgdXNlZCB0byBidWlsZCB0aGUgZXJyb3IgbWVzc2FnZSwgaWYgaW52YWxpZFxuICogQHBhcmFtIHtBcnJheTxvYmplY3Q+fSBbcHJvcENoZWNrc10gLSBvcHRpb25hbCBkYXRhLXR5cGUgb3IgdmFsdWUtcmFuZ2UgcmVxdWlyZW1lbnRzXG4gKiAgIGZvciB0aGUgb2JqZWN0J3MgcHJvcGVydGllc1xuICogQHJldHVybnMgez9FcnJvcn0gLSBudWxsIGlmIG9iamVjdCBpcyB2YWxpZCwgRXJyb3IgaWYgbm90XG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlT2JqZWN0KG9iamVjdCwgbmFtZSkge1xuICB2YXIgcHJvcENoZWNrcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogW107XG5cbiAgLy8gTk9URShtbWFsYXZhbGxpKTogV2UgZGV0ZXJtaW5lIHRoYXQgYW4gdW5kZWZpbmVkIG9iamVjdCBpcyB2YWxpZCBiZWNhdXNlIHRoaXNcbiAgLy8gbWVhbnMgdGhlIHBhcmVudCBvYmplY3QgZG9lcyBub3QgY29udGFpbiB0aGlzIG9iamVjdCBhcyBhIHByb3BlcnR5LCB3aGljaCBpc1xuICAvLyBhIHZhbGlkIHNjZW5hcmlvLlxuICBpZiAodHlwZW9mIG9iamVjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyBOT1RFKG1tYWxhdmFsbGkpOiBXZSBkZXRlcm1pbmUgdGhhdCBpZiB0aGUgb2JqZWN0IGlzIG51bGwsIG9yIGFuIEFycmF5LCBvclxuICAvLyBhbnkgb3RoZXIgbm9uLW9iamVjdCB0eXBlLCB0aGVuIGl0IGlzIGludmFsaWQuXG4gIGlmIChvYmplY3QgPT09IG51bGwgfHwgIWlzTm9uQXJyYXlPYmplY3Qob2JqZWN0KSkge1xuICAgIHJldHVybiBFLklOVkFMSURfVFlQRShuYW1lLCAnb2JqZWN0Jyk7XG4gIH1cbiAgLy8gTk9URShtbWFsYXZhbGxpKTogV2UgZGV0ZXJtaW5lIHRoYXQgdGhlIG9iamVjdCBpcyBpbnZhbGlkIGlmIGF0IGxlYXN0IG9uZSBvZlxuICAvLyBpdHMgcHJvcGVydGllcyBkb2VzIG5vdCBzYXRpc2Z5IGl0cyBkYXRhLXR5cGUgb3IgdmFsdWUtcmFuZ2UgcmVxdWlyZW1lbnQuXG4gIHJldHVybiBwcm9wQ2hlY2tzLnJlZHVjZShmdW5jdGlvbiAoZXJyb3IsIF9yZWYpIHtcbiAgICB2YXIgcHJvcCA9IF9yZWYucHJvcCxcbiAgICAgICAgdHlwZSA9IF9yZWYudHlwZSxcbiAgICAgICAgdmFsdWVzID0gX3JlZi52YWx1ZXM7XG5cbiAgICBpZiAoZXJyb3IgfHwgIShwcm9wIGluIG9iamVjdCkpIHtcbiAgICAgIHJldHVybiBlcnJvcjtcbiAgICB9XG4gICAgdmFyIHZhbHVlID0gb2JqZWN0W3Byb3BdO1xuICAgIGlmICh0eXBlICYmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbHVlKSkgIT09IHR5cGUpIHtcbiAgICAgIHJldHVybiBFLklOVkFMSURfVFlQRShuYW1lICsgJy4nICsgcHJvcCwgdHlwZSk7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBFLklOVkFMSURfVFlQRShuYW1lICsgJy4nICsgcHJvcCwgdHlwZSk7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlcykgJiYgIXZhbHVlcy5pbmNsdWRlcyh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBFLklOVkFMSURfVkFMVUUobmFtZSArICcuJyArIHByb3AsIHZhbHVlcyk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbiAgfSwgbnVsbCk7XG59XG5cbi8qKlxuICogVmFsaWRhdGUgdGhlIHtAbGluayBWaWRlb1JlbmRlckRpbWVuc2lvbnN9IG9iamVjdC5cbiAqIEBwYXJhbSB7VmlkZW9SZW5kZXJEaW1lbnNpb25zfSByZW5kZXJEaW1lbnNpb25zXG4gKiBAcmV0dXJucyB7P0Vycm9yfSAtIG51bGwgaWYgdmFsaWQsIEVycm9yIGlmIG5vdC5cbiAqL1xuZnVuY3Rpb24gdmFsaWRhdGVSZW5kZXJEaW1lbnNpb25zKHJlbmRlckRpbWVuc2lvbnMpIHtcbiAgdmFyIG5hbWUgPSAnb3B0aW9ucy5iYW5kd2lkdGhQcm9maWxlLnZpZGVvLnJlbmRlckRpbWVuc2lvbnMnO1xuICB2YXIgZXJyb3IgPSB2YWxpZGF0ZU9iamVjdChyZW5kZXJEaW1lbnNpb25zLCBuYW1lKTtcbiAgcmV0dXJuIHJlbmRlckRpbWVuc2lvbnMgPyBlcnJvciB8fCBPYmplY3QudmFsdWVzKHRyYWNrUHJpb3JpdHkpLnJlZHVjZShmdW5jdGlvbiAoZXJyb3IsIHByb3ApIHtcbiAgICByZXR1cm4gZXJyb3IgfHwgdmFsaWRhdGVPYmplY3QocmVuZGVyRGltZW5zaW9uc1twcm9wXSwgbmFtZSArICcuJyArIHByb3AsIFt7IHByb3A6ICdoZWlnaHQnLCB0eXBlOiAnbnVtYmVyJyB9LCB7IHByb3A6ICd3aWR0aCcsIHR5cGU6ICdudW1iZXInIH1dKTtcbiAgfSwgbnVsbCkgOiBlcnJvcjtcbn1cblxuZXhwb3J0cy52YWxpZGF0ZUJhbmR3aWR0aFByb2ZpbGUgPSB2YWxpZGF0ZUJhbmR3aWR0aFByb2ZpbGU7XG5leHBvcnRzLnZhbGlkYXRlTG9jYWxUcmFjayA9IHZhbGlkYXRlTG9jYWxUcmFjaztcbmV4cG9ydHMudmFsaWRhdGVPYmplY3QgPSB2YWxpZGF0ZU9iamVjdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/util/validate.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/webaudio/audiocontext.js":
/*!****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/webaudio/audiocontext.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* globals webkitAudioContext, AudioContext */\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NativeAudioContext = typeof AudioContext !== 'undefined' ? AudioContext : typeof webkitAudioContext !== 'undefined' ? webkitAudioContext : null;\n\n/**\n * @interface AudioContextFactoryOptions\n * @property {AudioContext} [AudioContext] - The AudioContext constructor\n */\n\n/**\n * {@link AudioContextFactory} ensures we construct at most one AudioContext\n * at a time, and that it is eventually closed when we no longer need it.\n * @property {AudioContextFactory} AudioContextFactory - The\n *   {@link AudioContextFactory} constructor\n */\n\nvar AudioContextFactory = function () {\n  /**\n   * @param {AudioContextFactoryOptions} [options]\n   */\n  function AudioContextFactory(options) {\n    _classCallCheck(this, AudioContextFactory);\n\n    options = Object.assign({\n      AudioContext: NativeAudioContext\n    }, options);\n    Object.defineProperties(this, {\n      _AudioContext: {\n        value: options.AudioContext\n      },\n      _audioContext: {\n        value: null,\n        writable: true\n      },\n      _holders: {\n        value: new Set()\n      },\n      AudioContextFactory: {\n        enumerable: true,\n        value: AudioContextFactory\n      }\n    });\n  }\n\n  /**\n   * Each call to {@link AudioContextFactory#getOrCreate} should be paired with a\n   * call to {@link AudioContextFactory#release}. Calling this increments an\n   * internal reference count.\n   * @param {*} holder - The object to hold a reference to the AudioContext\n   * @returns {?AudioContext}\n   */\n\n\n  _createClass(AudioContextFactory, [{\n    key: 'getOrCreate',\n    value: function getOrCreate(holder) {\n      if (!this._holders.has(holder)) {\n        this._holders.add(holder);\n        if (this._AudioContext && !this._audioContext) {\n          try {\n            this._audioContext = new this._AudioContext();\n          } catch (error) {\n            // Do nothing;\n          }\n        }\n      }\n      return this._audioContext;\n    }\n\n    /**\n     * Decrement the internal reference count. If it reaches zero, close and destroy\n     * the AudioContext.\n     * @param {*} holder - The object that held a reference to the AudioContext\n     * @returns {void}\n     */\n\n  }, {\n    key: 'release',\n    value: function release(holder) {\n      if (this._holders.has(holder)) {\n        this._holders.delete(holder);\n        if (!this._holders.size && this._audioContext) {\n          this._audioContext.close();\n          this._audioContext = null;\n        }\n      }\n    }\n  }]);\n\n  return AudioContextFactory;\n}();\n\nmodule.exports = new AudioContextFactory();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS93ZWJhdWRpby9hdWRpb2NvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS93ZWJhdWRpby9hdWRpb2NvbnRleHQuanM/ZmZlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIHdlYmtpdEF1ZGlvQ29udGV4dCwgQXVkaW9Db250ZXh0ICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBOYXRpdmVBdWRpb0NvbnRleHQgPSB0eXBlb2YgQXVkaW9Db250ZXh0ICE9PSAndW5kZWZpbmVkJyA/IEF1ZGlvQ29udGV4dCA6IHR5cGVvZiB3ZWJraXRBdWRpb0NvbnRleHQgIT09ICd1bmRlZmluZWQnID8gd2Via2l0QXVkaW9Db250ZXh0IDogbnVsbDtcblxuLyoqXG4gKiBAaW50ZXJmYWNlIEF1ZGlvQ29udGV4dEZhY3RvcnlPcHRpb25zXG4gKiBAcHJvcGVydHkge0F1ZGlvQ29udGV4dH0gW0F1ZGlvQ29udGV4dF0gLSBUaGUgQXVkaW9Db250ZXh0IGNvbnN0cnVjdG9yXG4gKi9cblxuLyoqXG4gKiB7QGxpbmsgQXVkaW9Db250ZXh0RmFjdG9yeX0gZW5zdXJlcyB3ZSBjb25zdHJ1Y3QgYXQgbW9zdCBvbmUgQXVkaW9Db250ZXh0XG4gKiBhdCBhIHRpbWUsIGFuZCB0aGF0IGl0IGlzIGV2ZW50dWFsbHkgY2xvc2VkIHdoZW4gd2Ugbm8gbG9uZ2VyIG5lZWQgaXQuXG4gKiBAcHJvcGVydHkge0F1ZGlvQ29udGV4dEZhY3Rvcnl9IEF1ZGlvQ29udGV4dEZhY3RvcnkgLSBUaGVcbiAqICAge0BsaW5rIEF1ZGlvQ29udGV4dEZhY3Rvcnl9IGNvbnN0cnVjdG9yXG4gKi9cblxudmFyIEF1ZGlvQ29udGV4dEZhY3RvcnkgPSBmdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0F1ZGlvQ29udGV4dEZhY3RvcnlPcHRpb25zfSBbb3B0aW9uc11cbiAgICovXG4gIGZ1bmN0aW9uIEF1ZGlvQ29udGV4dEZhY3Rvcnkob3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBdWRpb0NvbnRleHRGYWN0b3J5KTtcblxuICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgIEF1ZGlvQ29udGV4dDogTmF0aXZlQXVkaW9Db250ZXh0XG4gICAgfSwgb3B0aW9ucyk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgX0F1ZGlvQ29udGV4dDoge1xuICAgICAgICB2YWx1ZTogb3B0aW9ucy5BdWRpb0NvbnRleHRcbiAgICAgIH0sXG4gICAgICBfYXVkaW9Db250ZXh0OiB7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIF9ob2xkZXJzOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgU2V0KClcbiAgICAgIH0sXG4gICAgICBBdWRpb0NvbnRleHRGYWN0b3J5OiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBBdWRpb0NvbnRleHRGYWN0b3J5XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogRWFjaCBjYWxsIHRvIHtAbGluayBBdWRpb0NvbnRleHRGYWN0b3J5I2dldE9yQ3JlYXRlfSBzaG91bGQgYmUgcGFpcmVkIHdpdGggYVxuICAgKiBjYWxsIHRvIHtAbGluayBBdWRpb0NvbnRleHRGYWN0b3J5I3JlbGVhc2V9LiBDYWxsaW5nIHRoaXMgaW5jcmVtZW50cyBhblxuICAgKiBpbnRlcm5hbCByZWZlcmVuY2UgY291bnQuXG4gICAqIEBwYXJhbSB7Kn0gaG9sZGVyIC0gVGhlIG9iamVjdCB0byBob2xkIGEgcmVmZXJlbmNlIHRvIHRoZSBBdWRpb0NvbnRleHRcbiAgICogQHJldHVybnMgez9BdWRpb0NvbnRleHR9XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKEF1ZGlvQ29udGV4dEZhY3RvcnksIFt7XG4gICAga2V5OiAnZ2V0T3JDcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRPckNyZWF0ZShob2xkZXIpIHtcbiAgICAgIGlmICghdGhpcy5faG9sZGVycy5oYXMoaG9sZGVyKSkge1xuICAgICAgICB0aGlzLl9ob2xkZXJzLmFkZChob2xkZXIpO1xuICAgICAgICBpZiAodGhpcy5fQXVkaW9Db250ZXh0ICYmICF0aGlzLl9hdWRpb0NvbnRleHQpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5fYXVkaW9Db250ZXh0ID0gbmV3IHRoaXMuX0F1ZGlvQ29udGV4dCgpO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAvLyBEbyBub3RoaW5nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX2F1ZGlvQ29udGV4dDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZWNyZW1lbnQgdGhlIGludGVybmFsIHJlZmVyZW5jZSBjb3VudC4gSWYgaXQgcmVhY2hlcyB6ZXJvLCBjbG9zZSBhbmQgZGVzdHJveVxuICAgICAqIHRoZSBBdWRpb0NvbnRleHQuXG4gICAgICogQHBhcmFtIHsqfSBob2xkZXIgLSBUaGUgb2JqZWN0IHRoYXQgaGVsZCBhIHJlZmVyZW5jZSB0byB0aGUgQXVkaW9Db250ZXh0XG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3JlbGVhc2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWxlYXNlKGhvbGRlcikge1xuICAgICAgaWYgKHRoaXMuX2hvbGRlcnMuaGFzKGhvbGRlcikpIHtcbiAgICAgICAgdGhpcy5faG9sZGVycy5kZWxldGUoaG9sZGVyKTtcbiAgICAgICAgaWYgKCF0aGlzLl9ob2xkZXJzLnNpemUgJiYgdGhpcy5fYXVkaW9Db250ZXh0KSB7XG4gICAgICAgICAgdGhpcy5fYXVkaW9Db250ZXh0LmNsb3NlKCk7XG4gICAgICAgICAgdGhpcy5fYXVkaW9Db250ZXh0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBBdWRpb0NvbnRleHRGYWN0b3J5O1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBBdWRpb0NvbnRleHRGYWN0b3J5KCk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/webaudio/audiocontext.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/webaudio/detectsilence.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-video/es5/webaudio/detectsilence.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Return a Promise that resolves after `timeout` milliseconds.\n * @param {?number} [timeout=0]\n * @returns {Promise<void>}\n */\n\nfunction delay(timeout) {\n  timeout = typeof timeout === 'number' ? timeout : 0;\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n}\n\n/**\n * Attempt to detect silence. The Promise returned by this function returns\n * false as soon as audio is detected or true after `timeout` milliseconds.\n * @param {AudioContext} audioContext\n * @param {MediaStream} stream\n * @param {?number} [timeout=250]\n * @returns {Promise<boolean>}\n */\nfunction detectSilence(audioContext, stream, timeout) {\n  timeout = typeof timeout === 'number' ? timeout : 250;\n\n  var source = audioContext.createMediaStreamSource(stream);\n  var analyser = audioContext.createAnalyser();\n  analyser.fftSize = 2048;\n  source.connect(analyser);\n\n  var samples = new Uint8Array(analyser.fftSize);\n\n  var timeoutDidFire = false;\n  setTimeout(function () {\n    timeoutDidFire = true;\n  }, timeout);\n\n  /**\n   * We can't use async/await yet, so I need to factor this out.\n   * @returns {Promise<boolean>}\n   */\n  function doDetectSilence() {\n    if (timeoutDidFire) {\n      return Promise.resolve(true);\n    }\n    analyser.getByteTimeDomainData(samples);\n    // NOTE(mpatwardhan): An audio MediaStreamTrack can be silent either due to all samples\n    // being equal to 128 or all samples being equal to 0.\n    return samples.some(function (sample) {\n      return sample !== 128 && sample !== 0;\n    }) ? Promise.resolve(false) : delay().then(doDetectSilence);\n  }\n\n  return doDetectSilence().then(function (isSilent) {\n    source.disconnect();\n    return isSilent;\n  }, function (error) {\n    source.disconnect();\n    throw error;\n  });\n}\n\nmodule.exports = detectSilence;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS93ZWJhdWRpby9kZXRlY3RzaWxlbmNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvd2ViYXVkaW8vZGV0ZWN0c2lsZW5jZS5qcz80Y2NlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBSZXR1cm4gYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgYWZ0ZXIgYHRpbWVvdXRgIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSB7P251bWJlcn0gW3RpbWVvdXQ9MF1cbiAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICovXG5cbmZ1bmN0aW9uIGRlbGF5KHRpbWVvdXQpIHtcbiAgdGltZW91dCA9IHR5cGVvZiB0aW1lb3V0ID09PSAnbnVtYmVyJyA/IHRpbWVvdXQgOiAwO1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lb3V0KTtcbiAgfSk7XG59XG5cbi8qKlxuICogQXR0ZW1wdCB0byBkZXRlY3Qgc2lsZW5jZS4gVGhlIFByb21pc2UgcmV0dXJuZWQgYnkgdGhpcyBmdW5jdGlvbiByZXR1cm5zXG4gKiBmYWxzZSBhcyBzb29uIGFzIGF1ZGlvIGlzIGRldGVjdGVkIG9yIHRydWUgYWZ0ZXIgYHRpbWVvdXRgIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSB7QXVkaW9Db250ZXh0fSBhdWRpb0NvbnRleHRcbiAqIEBwYXJhbSB7TWVkaWFTdHJlYW19IHN0cmVhbVxuICogQHBhcmFtIHs/bnVtYmVyfSBbdGltZW91dD0yNTBdXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cbiAqL1xuZnVuY3Rpb24gZGV0ZWN0U2lsZW5jZShhdWRpb0NvbnRleHQsIHN0cmVhbSwgdGltZW91dCkge1xuICB0aW1lb3V0ID0gdHlwZW9mIHRpbWVvdXQgPT09ICdudW1iZXInID8gdGltZW91dCA6IDI1MDtcblxuICB2YXIgc291cmNlID0gYXVkaW9Db250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKHN0cmVhbSk7XG4gIHZhciBhbmFseXNlciA9IGF1ZGlvQ29udGV4dC5jcmVhdGVBbmFseXNlcigpO1xuICBhbmFseXNlci5mZnRTaXplID0gMjA0ODtcbiAgc291cmNlLmNvbm5lY3QoYW5hbHlzZXIpO1xuXG4gIHZhciBzYW1wbGVzID0gbmV3IFVpbnQ4QXJyYXkoYW5hbHlzZXIuZmZ0U2l6ZSk7XG5cbiAgdmFyIHRpbWVvdXREaWRGaXJlID0gZmFsc2U7XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIHRpbWVvdXREaWRGaXJlID0gdHJ1ZTtcbiAgfSwgdGltZW91dCk7XG5cbiAgLyoqXG4gICAqIFdlIGNhbid0IHVzZSBhc3luYy9hd2FpdCB5ZXQsIHNvIEkgbmVlZCB0byBmYWN0b3IgdGhpcyBvdXQuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgZnVuY3Rpb24gZG9EZXRlY3RTaWxlbmNlKCkge1xuICAgIGlmICh0aW1lb3V0RGlkRmlyZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0cnVlKTtcbiAgICB9XG4gICAgYW5hbHlzZXIuZ2V0Qnl0ZVRpbWVEb21haW5EYXRhKHNhbXBsZXMpO1xuICAgIC8vIE5PVEUobXBhdHdhcmRoYW4pOiBBbiBhdWRpbyBNZWRpYVN0cmVhbVRyYWNrIGNhbiBiZSBzaWxlbnQgZWl0aGVyIGR1ZSB0byBhbGwgc2FtcGxlc1xuICAgIC8vIGJlaW5nIGVxdWFsIHRvIDEyOCBvciBhbGwgc2FtcGxlcyBiZWluZyBlcXVhbCB0byAwLlxuICAgIHJldHVybiBzYW1wbGVzLnNvbWUoZnVuY3Rpb24gKHNhbXBsZSkge1xuICAgICAgcmV0dXJuIHNhbXBsZSAhPT0gMTI4ICYmIHNhbXBsZSAhPT0gMDtcbiAgICB9KSA/IFByb21pc2UucmVzb2x2ZShmYWxzZSkgOiBkZWxheSgpLnRoZW4oZG9EZXRlY3RTaWxlbmNlKTtcbiAgfVxuXG4gIHJldHVybiBkb0RldGVjdFNpbGVuY2UoKS50aGVuKGZ1bmN0aW9uIChpc1NpbGVudCkge1xuICAgIHNvdXJjZS5kaXNjb25uZWN0KCk7XG4gICAgcmV0dXJuIGlzU2lsZW50O1xuICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICBzb3VyY2UuZGlzY29ubmVjdCgpO1xuICAgIHRocm93IGVycm9yO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZXRlY3RTaWxlbmNlOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/webaudio/detectsilence.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/es5/webaudio/workaround180748.js":
/*!********************************************************************!*\
  !*** ./node_modules/twilio-video/es5/webaudio/workaround180748.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar detectSilence = __webpack_require__(/*! ./detectsilence */ \"./node_modules/twilio-video/es5/webaudio/detectsilence.js\");\n\n/**\n * This function attempts to workaround WebKit Bug 180748. It does so by\n *\n *   1. Calling `getUserMedia`, and\n *   2. Checking to see if the resulting MediaStream is silent.\n *   3. If so, repeat Step 1; otherwise, return the MediaStream.\n *\n * The function only repeats up to `n` times, and it only waits `timeout`\n * milliseconds when detecting silence. Assuming `getUserMedia` is\n * instantaneous, in the best case, this function returns a Promise that\n * resolves immediately; in the worst case, this function returns a Promise that\n * resolves in `n` * `timeout` milliseconds.\n *\n * @param {Log} log\n * @param {function(MediaStreamConstraints): Promise<MediaStream>} getUserMedia\n * @param {MediaStreamConstraints} constraints\n * @param {number} [n=3]\n * @param {number} [timeout=250]\n * @returns Promise<MediaStream>\n */\nfunction workaround(log, getUserMedia, constraints, n, timeout) {\n  n = typeof n === 'number' ? n : 3;\n  var retry = 0;\n\n  // NOTE(mroberts): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  var AudioContextFactory = __webpack_require__(/*! ./audiocontext */ \"./node_modules/twilio-video/es5/webaudio/audiocontext.js\");\n  var holder = {};\n  var audioContext = AudioContextFactory.getOrCreate(holder);\n\n  /**\n   * We can't use async/await yet, so I need to factor this out.\n   * @returns {Promise<MediaStream>}\n   */\n  function doWorkaround() {\n    return getUserMedia(constraints).then(function (stream) {\n      var isSilentPromise = constraints.audio ? detectSilence(audioContext, stream, timeout).catch(function (err) {\n        log.warn('Encountered an error while detecting silence', err);\n        return true;\n      }) : Promise.resolve(false);\n      return isSilentPromise.then(function (isSilent) {\n        if (!isSilent) {\n          log.info('Got a non-silent audio MediaStreamTrack; returning it.');\n          return stream;\n        } else if (n <= 0) {\n          log.warn('Got a silent audio MediaStreamTrack. Normally we would try \\\nto get a new one, but we\\'ve run out of retries; returning it anyway.');\n          return stream;\n        }\n        log.warn('Got a silent audio MediaStreamTrack. Stopping all MediaStreamTracks and calling getUserMedia again. This is retry #' + ++retry + '.');\n        stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n        n--;\n        return doWorkaround();\n      });\n    });\n  }\n\n  return doWorkaround().then(function (stream) {\n    AudioContextFactory.release(holder);\n    return stream;\n  }, function (error) {\n    AudioContextFactory.release(holder);\n    throw error;\n  });\n}\n\nmodule.exports = workaround;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL2VzNS93ZWJhdWRpby93b3JrYXJvdW5kMTgwNzQ4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R3aWxpby12aWRlby9lczUvd2ViYXVkaW8vd29ya2Fyb3VuZDE4MDc0OC5qcz83MTVlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGRldGVjdFNpbGVuY2UgPSByZXF1aXJlKCcuL2RldGVjdHNpbGVuY2UnKTtcblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGF0dGVtcHRzIHRvIHdvcmthcm91bmQgV2ViS2l0IEJ1ZyAxODA3NDguIEl0IGRvZXMgc28gYnlcbiAqXG4gKiAgIDEuIENhbGxpbmcgYGdldFVzZXJNZWRpYWAsIGFuZFxuICogICAyLiBDaGVja2luZyB0byBzZWUgaWYgdGhlIHJlc3VsdGluZyBNZWRpYVN0cmVhbSBpcyBzaWxlbnQuXG4gKiAgIDMuIElmIHNvLCByZXBlYXQgU3RlcCAxOyBvdGhlcndpc2UsIHJldHVybiB0aGUgTWVkaWFTdHJlYW0uXG4gKlxuICogVGhlIGZ1bmN0aW9uIG9ubHkgcmVwZWF0cyB1cCB0byBgbmAgdGltZXMsIGFuZCBpdCBvbmx5IHdhaXRzIGB0aW1lb3V0YFxuICogbWlsbGlzZWNvbmRzIHdoZW4gZGV0ZWN0aW5nIHNpbGVuY2UuIEFzc3VtaW5nIGBnZXRVc2VyTWVkaWFgIGlzXG4gKiBpbnN0YW50YW5lb3VzLCBpbiB0aGUgYmVzdCBjYXNlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgYSBQcm9taXNlIHRoYXRcbiAqIHJlc29sdmVzIGltbWVkaWF0ZWx5OyBpbiB0aGUgd29yc3QgY2FzZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIGEgUHJvbWlzZSB0aGF0XG4gKiByZXNvbHZlcyBpbiBgbmAgKiBgdGltZW91dGAgbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7TG9nfSBsb2dcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oTWVkaWFTdHJlYW1Db25zdHJhaW50cyk6IFByb21pc2U8TWVkaWFTdHJlYW0+fSBnZXRVc2VyTWVkaWFcbiAqIEBwYXJhbSB7TWVkaWFTdHJlYW1Db25zdHJhaW50c30gY29uc3RyYWludHNcbiAqIEBwYXJhbSB7bnVtYmVyfSBbbj0zXVxuICogQHBhcmFtIHtudW1iZXJ9IFt0aW1lb3V0PTI1MF1cbiAqIEByZXR1cm5zIFByb21pc2U8TWVkaWFTdHJlYW0+XG4gKi9cbmZ1bmN0aW9uIHdvcmthcm91bmQobG9nLCBnZXRVc2VyTWVkaWEsIGNvbnN0cmFpbnRzLCBuLCB0aW1lb3V0KSB7XG4gIG4gPSB0eXBlb2YgbiA9PT0gJ251bWJlcicgPyBuIDogMztcbiAgdmFyIHJldHJ5ID0gMDtcblxuICAvLyBOT1RFKG1yb2JlcnRzKTogV2UgaGF2ZSB0byBkZWxheSByZXF1aXJlLWluZyBBdWRpb0NvbnRleHRGYWN0b3J5LCBiZWNhdXNlXG4gIC8vIGl0IGV4cG9ydHMgYSBkZWZhdWx0IGluc3RhbmNlIHdob3NlIGNvbnN0cnVjdG9yIGNhbGxzIE9iamVjdC5hc3NpZ24uXG4gIHZhciBBdWRpb0NvbnRleHRGYWN0b3J5ID0gcmVxdWlyZSgnLi9hdWRpb2NvbnRleHQnKTtcbiAgdmFyIGhvbGRlciA9IHt9O1xuICB2YXIgYXVkaW9Db250ZXh0ID0gQXVkaW9Db250ZXh0RmFjdG9yeS5nZXRPckNyZWF0ZShob2xkZXIpO1xuXG4gIC8qKlxuICAgKiBXZSBjYW4ndCB1c2UgYXN5bmMvYXdhaXQgeWV0LCBzbyBJIG5lZWQgdG8gZmFjdG9yIHRoaXMgb3V0LlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNZWRpYVN0cmVhbT59XG4gICAqL1xuICBmdW5jdGlvbiBkb1dvcmthcm91bmQoKSB7XG4gICAgcmV0dXJuIGdldFVzZXJNZWRpYShjb25zdHJhaW50cykudGhlbihmdW5jdGlvbiAoc3RyZWFtKSB7XG4gICAgICB2YXIgaXNTaWxlbnRQcm9taXNlID0gY29uc3RyYWludHMuYXVkaW8gPyBkZXRlY3RTaWxlbmNlKGF1ZGlvQ29udGV4dCwgc3RyZWFtLCB0aW1lb3V0KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGxvZy53YXJuKCdFbmNvdW50ZXJlZCBhbiBlcnJvciB3aGlsZSBkZXRlY3Rpbmcgc2lsZW5jZScsIGVycik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSkgOiBQcm9taXNlLnJlc29sdmUoZmFsc2UpO1xuICAgICAgcmV0dXJuIGlzU2lsZW50UHJvbWlzZS50aGVuKGZ1bmN0aW9uIChpc1NpbGVudCkge1xuICAgICAgICBpZiAoIWlzU2lsZW50KSB7XG4gICAgICAgICAgbG9nLmluZm8oJ0dvdCBhIG5vbi1zaWxlbnQgYXVkaW8gTWVkaWFTdHJlYW1UcmFjazsgcmV0dXJuaW5nIGl0LicpO1xuICAgICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICAgIH0gZWxzZSBpZiAobiA8PSAwKSB7XG4gICAgICAgICAgbG9nLndhcm4oJ0dvdCBhIHNpbGVudCBhdWRpbyBNZWRpYVN0cmVhbVRyYWNrLiBOb3JtYWxseSB3ZSB3b3VsZCB0cnkgXFxcbnRvIGdldCBhIG5ldyBvbmUsIGJ1dCB3ZVxcJ3ZlIHJ1biBvdXQgb2YgcmV0cmllczsgcmV0dXJuaW5nIGl0IGFueXdheS4nKTtcbiAgICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgICAgICB9XG4gICAgICAgIGxvZy53YXJuKCdHb3QgYSBzaWxlbnQgYXVkaW8gTWVkaWFTdHJlYW1UcmFjay4gU3RvcHBpbmcgYWxsIE1lZGlhU3RyZWFtVHJhY2tzIGFuZCBjYWxsaW5nIGdldFVzZXJNZWRpYSBhZ2Fpbi4gVGhpcyBpcyByZXRyeSAjJyArICsrcmV0cnkgKyAnLicpO1xuICAgICAgICBzdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaChmdW5jdGlvbiAodHJhY2spIHtcbiAgICAgICAgICByZXR1cm4gdHJhY2suc3RvcCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgbi0tO1xuICAgICAgICByZXR1cm4gZG9Xb3JrYXJvdW5kKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBkb1dvcmthcm91bmQoKS50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICBBdWRpb0NvbnRleHRGYWN0b3J5LnJlbGVhc2UoaG9sZGVyKTtcbiAgICByZXR1cm4gc3RyZWFtO1xuICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICBBdWRpb0NvbnRleHRGYWN0b3J5LnJlbGVhc2UoaG9sZGVyKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd29ya2Fyb3VuZDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/es5/webaudio/workaround180748.js\n");

/***/ }),

/***/ "./node_modules/twilio-video/package.json":
/*!************************************************!*\
  !*** ./node_modules/twilio-video/package.json ***!
  \************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, browser, bugs, bundleDependencies, contributors, dependencies, deprecated, description, devDependencies, engines, homepage, keywords, license, main, name, repository, scripts, title, version, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"_from\\\":\\\"twilio-video@^2.7.0\\\",\\\"_id\\\":\\\"twilio-video@2.7.0\\\",\\\"_inBundle\\\":false,\\\"_integrity\\\":\\\"sha512-juAMupRjBGh1pqVvE9CwpMGoGyJOlmJbzG2C3TstK1bAcHDLFUvFkBlNwL+ubIUTipX0nrrxzVfcQrEI3wWHqA==\\\",\\\"_location\\\":\\\"/twilio-video\\\",\\\"_phantomChildren\\\":{\\\"async-limiter\\\":\\\"1.0.1\\\",\\\"safe-buffer\\\":\\\"5.1.2\\\",\\\"ultron\\\":\\\"1.1.1\\\"},\\\"_requested\\\":{\\\"type\\\":\\\"range\\\",\\\"registry\\\":true,\\\"raw\\\":\\\"twilio-video@^2.7.0\\\",\\\"name\\\":\\\"twilio-video\\\",\\\"escapedName\\\":\\\"twilio-video\\\",\\\"rawSpec\\\":\\\"^2.7.0\\\",\\\"saveSpec\\\":null,\\\"fetchSpec\\\":\\\"^2.7.0\\\"},\\\"_requiredBy\\\":[\\\"/\\\"],\\\"_resolved\\\":\\\"https://registry.npmjs.org/twilio-video/-/twilio-video-2.7.0.tgz\\\",\\\"_shasum\\\":\\\"29d20d9cd08a903e13b9f004214be3312bd086f4\\\",\\\"_spec\\\":\\\"twilio-video@^2.7.0\\\",\\\"_where\\\":\\\"C:\\\\\\\\Users\\\\\\\\Administrateur\\\\\\\\Desktop\\\\\\\\HACK-Healthy\\\\\\\\client\\\",\\\"author\\\":{\\\"name\\\":\\\"Mark Andrus Roberts\\\",\\\"email\\\":\\\"mroberts@twilio.com\\\"},\\\"browser\\\":{\\\"ws\\\":\\\"./src/ws.js\\\",\\\"xmlhttprequest\\\":\\\"./src/xmlhttprequest.js\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/twilio/twilio-video.js/issues\\\"},\\\"bundleDependencies\\\":false,\\\"contributors\\\":[{\\\"name\\\":\\\"Ryan Rowland\\\",\\\"email\\\":\\\"rrowland@twilio.com\\\"},{\\\"name\\\":\\\"Manjesh Malavalli\\\",\\\"email\\\":\\\"mmalavalli@twilio.com\\\"},{\\\"name\\\":\\\"Makarand Patwardhan\\\",\\\"email\\\":\\\"mpatwardhan@twilio.com\\\"}],\\\"dependencies\\\":{\\\"@twilio/webrtc\\\":\\\"4.3.1\\\",\\\"backoff\\\":\\\"^2.5.0\\\",\\\"ws\\\":\\\"^3.3.1\\\",\\\"xmlhttprequest\\\":\\\"^1.8.0\\\"},\\\"deprecated\\\":false,\\\"description\\\":\\\"Twilio Video JavaScript Library\\\",\\\"devDependencies\\\":{\\\"@types/express\\\":\\\"^4.11.0\\\",\\\"@types/node\\\":\\\"^8.5.1\\\",\\\"@types/selenium-webdriver\\\":\\\"^3.0.8\\\",\\\"@types/ws\\\":\\\"^3.2.1\\\",\\\"babel-cli\\\":\\\"^6.26.0\\\",\\\"babel-preset-es2015\\\":\\\"^6.24.1\\\",\\\"browserify\\\":\\\"^14.3.0\\\",\\\"cheerio\\\":\\\"^0.22.0\\\",\\\"chromedriver\\\":\\\"^2.28.0\\\",\\\"cors\\\":\\\"^2.8.5\\\",\\\"electron\\\":\\\"^5.0.13\\\",\\\"envify\\\":\\\"^4.0.0\\\",\\\"eslint\\\":\\\"^6.2.1\\\",\\\"eslint-config-standard\\\":\\\"^14.0.0\\\",\\\"eslint-plugin-import\\\":\\\"^2.18.2\\\",\\\"eslint-plugin-node\\\":\\\"^9.1.0\\\",\\\"eslint-plugin-promise\\\":\\\"^4.2.1\\\",\\\"eslint-plugin-standard\\\":\\\"^4.0.1\\\",\\\"express\\\":\\\"^4.16.2\\\",\\\"geckodriver\\\":\\\"1.4.0\\\",\\\"ink-docstrap\\\":\\\"^1.3.2\\\",\\\"inquirer\\\":\\\"^7.0.0\\\",\\\"is-docker\\\":\\\"^2.0.0\\\",\\\"istanbul\\\":\\\"^0.4.5\\\",\\\"jsdoc\\\":\\\"^3.5.5\\\",\\\"json-loader\\\":\\\"^0.5.7\\\",\\\"karma\\\":\\\"^5.0.2\\\",\\\"karma-browserify\\\":\\\"^7.0.0\\\",\\\"karma-chrome-launcher\\\":\\\"^2.0.0\\\",\\\"karma-edgium-launcher\\\":\\\"^4.0.0-0\\\",\\\"karma-electron\\\":\\\"^6.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^1.3.0\\\",\\\"karma-htmlfile-reporter\\\":\\\"^0.3.8\\\",\\\"karma-junit-reporter\\\":\\\"^1.2.0\\\",\\\"karma-mocha\\\":\\\"^1.3.0\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-spec-reporter\\\":\\\"0.0.32\\\",\\\"mocha\\\":\\\"^3.2.0\\\",\\\"npm-run-all\\\":\\\"^4.0.2\\\",\\\"puppeteer\\\":\\\"^1.20.0\\\",\\\"requirejs\\\":\\\"^2.3.3\\\",\\\"rimraf\\\":\\\"^2.6.1\\\",\\\"selenium-webdriver\\\":\\\"3.3.0\\\",\\\"simple-git\\\":\\\"^1.126.0\\\",\\\"sinon\\\":\\\"^4.0.1\\\",\\\"ts-node\\\":\\\"4.0.1\\\",\\\"tslint\\\":\\\"5.8.0\\\",\\\"twilio\\\":\\\"^2.11.1\\\",\\\"twilio-release-tool\\\":\\\"^1.0.0\\\",\\\"typescript\\\":\\\"2.6.2\\\",\\\"uglify-js\\\":\\\"^2.8.22\\\",\\\"vinyl-fs\\\":\\\"^2.4.4\\\",\\\"vinyl-source-stream\\\":\\\"^1.1.0\\\",\\\"watchify\\\":\\\"^3.11.1\\\",\\\"webrtc-adapter\\\":\\\"^4.1.1\\\"},\\\"engines\\\":{\\\"node\\\":\\\">=0.12\\\"},\\\"homepage\\\":\\\"https://twilio.com\\\",\\\"keywords\\\":[\\\"twilio\\\",\\\"webrtc\\\",\\\"library\\\",\\\"javascript\\\",\\\"video\\\",\\\"rooms\\\"],\\\"license\\\":\\\"BSD-3-Clause\\\",\\\"main\\\":\\\"./es5/index.js\\\",\\\"name\\\":\\\"twilio-video\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/twilio/twilio-video.js.git\\\"},\\\"scripts\\\":{\\\"build\\\":\\\"npm-run-all clean lint docs cover test:integration build:es5 build:js build:min.js test:umd\\\",\\\"build:es5\\\":\\\"rimraf ./es5 && babel lib -d es5\\\",\\\"build:js\\\":\\\"node ./scripts/build.js ./src/twilio-video.js ./LICENSE.md ./dist/twilio-video.js\\\",\\\"build:min.js\\\":\\\"uglifyjs ./dist/twilio-video.js -o ./dist/twilio-video.min.js --comments \\\\\\\"/^! twilio-video.js/\\\\\\\" -b beautify=false,ascii_only=true\\\",\\\"build:quick\\\":\\\"npm-run-all clean lint docs build:es5 build:js build:min.js\\\",\\\"clean\\\":\\\"rimraf ./coverage ./es5 ./dist\\\",\\\"cover\\\":\\\"istanbul cover node_modules/mocha/bin/_mocha -- ./test/unit/index.js\\\",\\\"docs\\\":\\\"node ./scripts/docs.js ./dist/docs\\\",\\\"lint\\\":\\\"eslint ./lib ./test/*.js ./docker/**/*.js ./test/framework/*.js ./test/lib/*.js ./test/integration/** ./test/unit/**\\\",\\\"test\\\":\\\"npm-run-all test:unit test:integration\\\",\\\"test:crossbrowser\\\":\\\"npm-run-all test:crossbrowser:*\\\",\\\"test:crossbrowser:build\\\":\\\"npm-run-all test:crossbrowser:build:*\\\",\\\"test:crossbrowser:build:browser\\\":\\\"cd ./test/crossbrowser && browserify lib/crossbrowser/src/browser/index.js > src/browser/index.js\\\",\\\"test:crossbrowser:build:clean\\\":\\\"rimraf ./test/crossbrowser/lib ./test/crossbrowser/src/browser/index.js\\\",\\\"test:crossbrowser:build:lint\\\":\\\"cd ./test/crossbrowser && tslint --project tsconfig.json\\\",\\\"test:crossbrowser:build:tsc\\\":\\\"cd ./test/crossbrowser && tsc\\\",\\\"test:crossbrowser:test\\\":\\\"cd ./test/crossbrowser && mocha --compilers ts:ts-node/register test/integration/spec/**/*.ts\\\",\\\"test:framework\\\":\\\"npm-run-all test:framework:angular test:framework:no-framework test:framework:react\\\",\\\"test:framework:angular\\\":\\\"npm-run-all test:framework:angular:*\\\",\\\"test:framework:angular:install\\\":\\\"cd ./test/framework/twilio-video-angular && rimraf ./node_modules package-lock.json && npm install\\\",\\\"test:framework:angular:run\\\":\\\"mocha ./test/framework/twilio-video-angular.js\\\",\\\"test:framework:no-framework\\\":\\\"npm-run-all test:framework:no-framework:*\\\",\\\"test:framework:no-framework:run\\\":\\\"mocha ./test/framework/twilio-video-no-framework.js\\\",\\\"test:framework:react\\\":\\\"npm-run-all test:framework:react:*\\\",\\\"test:framework:react:build\\\":\\\"cd ./test/framework/twilio-video-react && npm run build\\\",\\\"test:framework:react:install\\\":\\\"cd ./test/framework/twilio-video-react && rimraf ./node_modules package-lock.json && npm install\\\",\\\"test:framework:react:run\\\":\\\"mocha ./test/framework/twilio-video-react.js\\\",\\\"test:framework:react:test\\\":\\\"node ./scripts/framework.js twilio-video-react\\\",\\\"test:integration\\\":\\\"node ./scripts/karma.js karma/integration.conf.js\\\",\\\"test:integration:adapter\\\":\\\"node ./scripts/karma.js karma/integration.adapter.conf.js\\\",\\\"test:sdkdriver\\\":\\\"npm-run-all test:sdkdriver:*\\\",\\\"test:sdkdriver:build\\\":\\\"npm-run-all test:sdkdriver:build:*\\\",\\\"test:sdkdriver:build:clean\\\":\\\"rimraf ./test/lib/sdkdriver/lib ./test/lib/sdkdriver/test/integration/browser/index.js\\\",\\\"test:sdkdriver:build:lint\\\":\\\"cd ./test/lib/sdkdriver && tslint --project tsconfig.json\\\",\\\"test:sdkdriver:build:tsc\\\":\\\"cd ./test/lib/sdkdriver && tsc --rootDir src\\\",\\\"test:sdkdriver:test\\\":\\\"npm-run-all test:sdkdriver:test:*\\\",\\\"test:sdkdriver:test:integration\\\":\\\"npm-run-all test:sdkdriver:test:integration:*\\\",\\\"test:sdkdriver:test:integration:browser\\\":\\\"cd ./test/lib/sdkdriver/test/integration && browserify browser/browser.js > browser/index.js\\\",\\\"test:sdkdriver:test:integration:run\\\":\\\"cd ./test/lib/sdkdriver && mocha --compilers ts:ts-node/register test/integration/spec/**/*.ts\\\",\\\"test:sdkdriver:test:unit\\\":\\\"cd ./test/lib/sdkdriver && mocha --compilers ts:ts-node/register test/unit/spec/**/*.ts\\\",\\\"test:umd\\\":\\\"mocha ./test/umd/index.js\\\",\\\"test:unit\\\":\\\"mocha ./test/unit/index.js\\\"},\\\"title\\\":\\\"Twilio Video\\\",\\\"version\\\":\\\"2.7.0\\\"}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/package.json\n");

/***/ }),

/***/ "./node_modules/twilio-video/src/ws.js":
/*!*********************************************!*\
  !*** ./node_modules/twilio-video/src/ws.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = WebSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdpbGlvLXZpZGVvL3NyYy93cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90d2lsaW8tdmlkZW8vc3JjL3dzLmpzP2JkYTAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBXZWJTb2NrZXQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/twilio-video/src/ws.js\n");

/***/ }),

/***/ "./node_modules/util/node_modules/inherits/inherits_browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzPzI4YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICBjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59IGVsc2Uge1xuICAvLyBvbGQgc2Nob29sIHNoaW0gZm9yIG9sZCBicm93c2Vyc1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlXG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKVxuICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/util/node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvaXNCdWZmZXJCcm93c2VyLmpzP2Q2MGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0J1ZmZlcihhcmcpIHtcbiAgcmV0dXJuIGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBhcmcuY29weSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcuZmlsbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/util/support/isBufferBrowser.js\n");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = Object({\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/util/util.js\n");

/***/ })

}]);